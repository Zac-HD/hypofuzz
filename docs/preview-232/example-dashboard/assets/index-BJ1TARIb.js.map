{"version":3,"file":"index-BJ1TARIb.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.js","../../node_modules/react/jsx-runtime.js","../../src/utils/prototypes.tsx","../../node_modules/react/cjs/react-compiler-runtime.production.js","../../node_modules/react/compiler-runtime.js","../../src/components/Notification.tsx","../../src/context/NotificationProvider.tsx","../../src/hooks/useIsMobile.ts","../../src/components/Toggle.tsx","../../src/tyche/FilterContext.tsx","../../src/utils/tooltip.tsx","../../src/utils/utils.ts","../../src/tyche/NominalChart.tsx","../../src/components/Collapsible.tsx","../../src/tyche/TycheSection.tsx","../../src/tyche/Features.tsx","../../src/tyche/Filters.tsx","../../node_modules/highlight.js/es/languages/python.js","../../src/components/Pagination.tsx","../../src/tyche/Representation.tsx","../../src/tyche/MosaicChart.tsx","../../src/tyche/Samples.tsx","../../src/tyche/Tyche.tsx","../../src/types/dashboard.ts","../../src/types/test.ts","../../src/utils/fuzzjson.ts","../../src/context/DataProvider.tsx","../../src/Layout.tsx","../../src/components/Table.tsx","../../src/utils/api.ts","../../src/pages/CollectionStatus.tsx","../../src/pages/NotFound.tsx","../../node_modules/highlight.js/es/languages/diff.js","../../src/components/TestPatches.tsx","../../src/pages/Patches.tsx","../../src/components/graph/Axis.tsx","../../src/components/graph/DataLines.tsx","../../src/components/graph/types.ts","../../src/hooks/useSetting.ts","../../src/components/graph/useScales.ts","../../src/components/graph/useZoom.ts","../../src/components/graph/CoverageGraph.tsx","../../src/components/TestStatusPill.tsx","../../src/components/Tooltip.tsx","../../src/utils/testStats.tsx","../../src/pages/Test.tsx","../../src/components/TestTable.tsx","../../src/pages/Tests.tsx","../../src/components/RangeSlider.tsx","../../src/pages/Workers.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export {}\n\ndeclare global {\n  interface Array<T> {\n    /**\n     * Similar to Array.sort, but uses a per-item key function, like python's list.sort(key=lambda x: x.id).\n     */\n    sortKey<K extends any[] | string | number>(key: (item: T) => K): T[]\n  }\n}\n\nif (!Array.prototype.sortKey) {\n  Array.prototype.sortKey = function <T, K extends any[] | string | number>(\n    key: (item: T) => K,\n  ): T[] {\n    return this.sort((a, b) => {\n      const keyA = key(a)\n      const keyB = key(b)\n\n      if (Array.isArray(keyA) && Array.isArray(keyB)) {\n        for (let i = 0; i < Math.min(keyA.length, keyB.length); i++) {\n          if (keyA[i] < keyB[i]) return -1\n          if (keyA[i] > keyB[i]) return 1\n        }\n        return 0\n      }\n      if (keyA < keyB) return -1\n      if (keyA > keyB) return 1\n      return 0\n    })\n  }\n}\n","/**\n * @license React\n * react-compiler-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals =\n  require(\"react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nexports.c = function (size) {\n  return ReactSharedInternals.H.useMemoCache(size);\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-compiler-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-compiler-runtime.development.js');\n}\n","import { faXmark } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode, useEffect, useState } from \"react\"\n\ninterface NotificationProps {\n  message: string | ReactNode\n  onDismiss: () => void\n  isVisible: boolean\n}\n\nexport function Notification({ message, onDismiss, isVisible }: NotificationProps) {\n  const [shouldRender, setShouldRender] = useState(isVisible)\n\n  useEffect(() => {\n    if (isVisible) {\n      setShouldRender(true)\n      return\n    } else {\n      // Delay unmounting to allow exit animation\n      const timer = setTimeout(() => {\n        setShouldRender(false)\n      }, 300)\n\n      return () => clearTimeout(timer)\n    }\n  }, [isVisible])\n\n  if (!shouldRender) {\n    return null\n  }\n\n  return (\n    <div\n      className={`notification ${isVisible ? \"notification--visible\" : \"notification--hidden\"}`}\n      onClick={onDismiss}\n    >\n      <div className=\"notification__content\">{message}</div>\n      <button\n        className=\"notification__close\"\n        onClick={e => {\n          e.stopPropagation()\n          onDismiss()\n        }}\n        aria-label=\"Close notification\"\n      >\n        <FontAwesomeIcon icon={faXmark} />\n      </button>\n    </div>\n  )\n}\n","import React, { createContext, ReactNode, useContext, useRef, useState } from \"react\"\nimport { Notification } from \"src/components/Notification\"\n\ninterface NotificationData {\n  id: number\n  message: ReactNode\n  duration: number | null\n}\n\ninterface NotificationContextType {\n  addNotification: (message: ReactNode, duration: number | null) => number\n  updateNotification: (id: number, message: ReactNode, duration: number | null) => void\n  dismissNotification: (id: number) => void\n}\n\nconst NotificationContext = createContext<NotificationContextType | null>(null)\n\ninterface NotificationProviderProps {\n  children: React.ReactNode\n}\n\nexport function NotificationProvider({ children }: NotificationProviderProps) {\n  const [notifications, setNotifications] = useState<NotificationData[]>([])\n  const timers = useRef<Map<number, number>>(new Map())\n  const idCounter = useRef(0)\n\n  const dismissNotification = (id: number) => {\n    clearTimeout(timers.current.get(id)!)\n    timers.current.delete(id)\n\n    setNotifications(prev => prev.filter(n => n.id !== id))\n  }\n\n  const addNotification = (message: ReactNode, duration: number | null) => {\n    const id = ++idCounter.current\n    const notification: NotificationData = { id, message, duration }\n\n    setNotifications(prev => [...prev, notification])\n\n    if (duration !== null) {\n      const timer = setTimeout(() => {\n        dismissNotification(id)\n      }, duration)\n      timers.current.set(id, timer)\n    }\n\n    return id\n  }\n\n  const updateNotification = (\n    id: number,\n    message: ReactNode,\n    duration: number | null,\n  ) => {\n    setNotifications(prev =>\n      prev.map(notification =>\n        notification.id === id ? { ...notification, message, duration } : notification,\n      ),\n    )\n\n    if (duration !== null) {\n      clearTimeout(timers.current.get(id)!)\n      const timer = setTimeout(() => {\n        dismissNotification(id)\n      }, duration)\n      timers.current.set(id, timer)\n    }\n  }\n\n  return (\n    <NotificationContext.Provider\n      value={{ addNotification, updateNotification, dismissNotification }}\n    >\n      {children}\n      <div className=\"notifications\">\n        {notifications.map((notification, index) => (\n          <div\n            key={notification.id}\n            className=\"notification-wrapper\"\n            style={{ top: `${20 + index * 80}px` }}\n          >\n            <Notification\n              message={notification.message}\n              isVisible={true}\n              onDismiss={() => dismissNotification(notification.id)}\n            />\n          </div>\n        ))}\n      </div>\n    </NotificationContext.Provider>\n  )\n}\n\nexport function useNotification() {\n  const context = useContext(NotificationContext)\n  if (!context) {\n    throw new Error(\"useNotification must be used within a NotificationProvider\")\n  }\n  return context\n}\n","import { useEffect, useState } from \"react\"\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = useState(false)\n\n  useEffect(() => {\n    function checkIfMobile() {\n      setIsMobile(window.matchMedia(\"(max-width: 768px)\").matches)\n    }\n    checkIfMobile()\n    window.addEventListener(\"resize\", checkIfMobile)\n    return () => window.removeEventListener(\"resize\", checkIfMobile)\n  }, [])\n\n  return isMobile\n}\n","import { Set } from \"immutable\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\n\ninterface Option<T> {\n  value: T\n  content: React.ReactNode\n  mobileContent?: React.ReactNode\n}\n\ninterface Props<T> {\n  value: T\n  onChange: (value: T) => void\n  options: Option<T>[]\n  disabled?: boolean\n}\n\nexport function Toggle<T>({ value, onChange, options, disabled = false }: Props<T>) {\n  const isMobile = useIsMobile()\n  // option values must be unique\n  console.assert(Set(options.map(o => o.value)).size === options.length)\n\n  return (\n    <div className={`toggle ${disabled ? \"toggle--disabled\" : \"\"}`}>\n      {options.map(option => (\n        <button\n          key={String(option.value)}\n          className={`toggle__button${value === option.value ? \" toggle__button--active\" : \"\"} ${disabled ? \"toggle__button--disabled\" : \"\"}`}\n          onClick={() => {\n            if (disabled) {\n              return\n            }\n            if (options.length == 2 && value === option.value) {\n              const otherValue = options.find(o => o.value !== option.value)!.value\n              onChange(otherValue)\n            } else {\n              onChange(option.value)\n            }\n          }}\n        >\n          {isMobile ? (option.mobileContent ?? option.content) : option.content}\n        </button>\n      ))}\n    </div>\n  )\n}\n","import { createContext, ReactNode, useContext, useState } from \"react\"\nimport { Observation } from \"src/types/dashboard\"\n\nexport type ObservationCategory = \"covering\" | \"rolling\"\n\nexport class Filter {\n  createdAt: number\n\n  constructor(\n    // display value for the left half (key) of a \"current filters\" tag\n    public readonly name: string,\n    // display value for the right half (value) of a \"current filters\" tag\n    public readonly valueName: string,\n    public readonly predicate: (observation: Observation) => boolean,\n    public readonly key: string,\n    public readonly extraData?: any,\n  ) {\n    this.createdAt = Date.now()\n  }\n}\n\ntype Filters = Map<string, Filter[]>\n\ninterface FilterContextType {\n  filters: Filters\n  setFilters: (filters: Filters) => void\n  removeFilter: (key: string) => void\n  observationCategory: ObservationCategory\n  setObservationCategory: (observationCategory: ObservationCategory) => void\n}\n\nconst FilterContext = createContext<FilterContextType | undefined>(undefined)\n\nexport function FilterProvider({ children }: { children: ReactNode }) {\n  const [filtersByObsType, setFiltersByKey] = useState<\n    Map<ObservationCategory, Filters>\n  >(\n    new Map([\n      [\"covering\", new Map()],\n      [\"rolling\", new Map()],\n    ]),\n  )\n  const [observationCategory, setObservationCategory] =\n    useState<ObservationCategory>(\"covering\")\n\n  const filters =\n    filtersByObsType.get(observationCategory) || new Map<string, Filter[]>()\n  const setFilters = (newFilters: Filters) => {\n    setFiltersByKey(prev => {\n      const newMap = new Map(prev)\n      newMap.set(observationCategory, newFilters)\n      return newMap\n    })\n  }\n\n  const removeFilter = (key: string) => {\n    const newFilters = new Map(filters)\n    const keyFilters = newFilters.get(key) || []\n    const filteredFilters = keyFilters.filter(f => f.key !== key)\n\n    if (filteredFilters.length === 0) {\n      newFilters.delete(key)\n    } else {\n      newFilters.set(key, filteredFilters)\n    }\n\n    setFilters(newFilters)\n  }\n\n  const value: FilterContextType = {\n    filters,\n    setFilters,\n    removeFilter,\n    observationCategory,\n    setObservationCategory,\n  }\n\n  return <FilterContext.Provider value={value}>{children}</FilterContext.Provider>\n}\n\nexport function useFilters() {\n  const context = useContext(FilterContext)\n  if (context === undefined) {\n    throw new Error(\"useFilters must be used within a FilterProvider\")\n  }\n  return context\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { useLocation } from \"react-router-dom\"\n\ninterface TooltipState {\n  visible: boolean\n  content: string\n  x: number\n  y: number\n  // the concept of a \"tooltip owner\" simplifies investigation if anything goes wrong. For instance,\n  // I got into an infinite render loop when multiple components used tooltips. This ended up being\n  // because of an over-aggressive useEffect for cleanup, but I at first thought it was due to conflicting\n  // components.\n  //\n  // And also the concept of an owner probably genuinely removes a class of bugs - but that's not why I\n  // added it initially.\n  owner: string | null\n}\n\ninterface TooltipContextType {\n  showTooltip: (content: string, x: number, y: number, owner: string) => void\n  hideTooltip: (owner: string) => void\n  moveTooltip: (x: number, y: number, owner: string) => void\n  visible: boolean\n}\n\nconst TooltipContext = createContext<TooltipContextType | null>(null)\n\nfunction TooltipPortal({ state }: { state: TooltipState }) {\n  if (!state.visible) return null\n\n  return createPortal(\n    <div\n      className=\"cursor-tooltip\"\n      style={{\n        position: \"fixed\",\n        left: `${state.x + 10}px`,\n        top: `${state.y - 28}px`,\n        display: \"block\",\n        pointerEvents: \"none\", // prevent tooltip from interfering with mouse events\n        zIndex: 9999,\n      }}\n      dangerouslySetInnerHTML={{ __html: state.content }}\n    />,\n    document.body,\n  )\n}\n\nexport function TooltipProvider({ children }: { children: React.ReactNode }) {\n  const location = useLocation()\n  const [tooltipState, setTooltipState] = useState<TooltipState>({\n    visible: false,\n    content: \"\",\n    x: 0,\n    y: 0,\n    owner: null,\n  })\n\n  // Navigation avoids firing onmouseleave events, leaving dangling tooltips.\n  // Hide any tooltips when navigating to a new page.\n  useEffect(() => {\n    setTooltipState(prev => ({\n      ...prev,\n      visible: false,\n      owner: null,\n    }))\n  }, [location.pathname])\n\n  const showTooltip = (content: string, x: number, y: number, owner: string) => {\n    setTooltipState({\n      visible: true,\n      content,\n      x,\n      y,\n      owner,\n    })\n  }\n\n  const hideTooltip = (owner: string) => {\n    setTooltipState(prev => {\n      if (prev.owner === owner) {\n        return {\n          ...prev,\n          visible: false,\n          owner: null,\n        }\n      }\n      return prev\n    })\n  }\n\n  const moveTooltip = (x: number, y: number, owner: string) => {\n    setTooltipState(prev => {\n      if (prev.visible && prev.owner === owner && (prev.x !== x || prev.y !== y)) {\n        return {\n          ...prev,\n          x,\n          y,\n        }\n      }\n      return prev\n    })\n  }\n\n  const contextValue: TooltipContextType = {\n    showTooltip,\n    hideTooltip,\n    moveTooltip,\n    visible: tooltipState.visible,\n  }\n\n  return (\n    <TooltipContext.Provider value={contextValue}>\n      {children}\n      <TooltipPortal state={tooltipState} />\n    </TooltipContext.Provider>\n  )\n}\n\nexport function useTooltip() {\n  const context = useContext(TooltipContext)\n  if (!context) {\n    throw new Error(\"useTooltip must be used within a TooltipProvider\")\n  }\n  return context\n}\n","import hljs from \"highlight.js/lib/core\"\n\n// a small taste of home in this wild land\nexport function sum(values: Iterable<number>, start: number = 0): number {\n  return Array.from(values).reduce((total, val) => total + val, start)\n}\n\nexport function reHighlight(\n  containerRef: React.RefObject<HTMLElement | null>,\n  force: boolean = false,\n) {\n  if (!containerRef.current) {\n    return\n  }\n\n  if (force) {\n    containerRef.current.querySelectorAll(\"code\").forEach(element => {\n      element.removeAttribute(\"data-highlighted\")\n    })\n  }\n\n  containerRef.current\n    .querySelectorAll(\"code:not([data-highlighted='yes'])\")\n    .forEach(element => {\n      hljs.highlightElement(element as HTMLElement)\n    })\n}\n\nexport function max<T>(array: T[], key: (value: T) => number): T | null\nexport function max(array: number[]): number | null\nexport function max<T>(\n  array: T[] | number[],\n  key?: (value: T) => number,\n): T | number | null {\n  if (key) {\n    let maxElement: T | null = null\n    let maxValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const element = array[i] as T\n      const value = key(element)\n\n      if (value != null && (maxValue === null || value > maxValue)) {\n        maxValue = value\n        maxElement = element\n      }\n    }\n\n    return maxElement\n  } else {\n    let maxValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i] as number\n\n      if (value != null && (maxValue === null || value > maxValue)) {\n        maxValue = value\n      }\n    }\n\n    return maxValue\n  }\n}\n\nexport function min<T>(array: T[], key: (value: T) => number): T | null\nexport function min(array: number[]): number | null\nexport function min<T>(\n  array: T[] | number[],\n  key?: (value: T) => number,\n): T | number | null {\n  if (key) {\n    let minElement: T | null = null\n    let minValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const element = array[i] as T\n      const value = key(element)\n\n      if (value != null && (minValue === null || value < minValue)) {\n        minValue = value\n        minElement = element\n      }\n    }\n\n    return minElement\n  } else {\n    let minValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i] as number\n\n      if (value != null && (minValue === null || value < minValue)) {\n        minValue = value\n      }\n    }\n\n    return minValue\n  }\n}\n\nexport function mapsEqual(m1: Map<any, any>, m2: Map<any, any>): boolean {\n  return (\n    m1.size === m2.size &&\n    Array.from(m1.keys()).every(key => m1.get(key) === m2.get(key))\n  )\n}\n\nexport function setsEqual(s1: Set<any>, s2: Set<any>): boolean {\n  return s1.size === s2.size && Array.from(s1).every(key => s2.has(key))\n}\n\n// https://github.com/d3/d3-array/blob/be0ae0d2b36ab91b833294ad2cfc5d5905acbd0f/src/bisector.js#L22\nexport function bisectLeft(arr: any[], x: number, key?: (x: any) => number): number {\n  let low = 0\n  let high = arr.length\n  while (low < high) {\n    const mid = (low + high) >>> 1\n    if (key ? key(arr[mid]) < x : arr[mid] < x) {\n      low = mid + 1\n    } else {\n      high = mid\n    }\n  }\n  return low\n}\n\nexport function bisectRight(arr: any[], x: number, key?: (x: any) => number): number {\n  let low = 0\n  let high = arr.length\n  while (low < high) {\n    const mid = (low + high) >>> 1\n    if (key ? key(arr[mid]) <= x : arr[mid] <= x) {\n      low = mid + 1\n    } else {\n      high = mid\n    }\n  }\n  return low\n}\n\n// Dedicated container for text measurement - created once and reused\nlet measureContainer: HTMLElement | null = null\n\nfunction getMeasureContainer(): HTMLElement {\n  if (!measureContainer) {\n    measureContainer = document.createElement(\"div\")\n    measureContainer.style.cssText = `\n      position: absolute;\n      visibility: hidden;\n      white-space: nowrap;\n      top: -9999px;\n      left: -9999px;\n      pointer-events: none;\n      z-index: -1;\n    `\n    document.body.appendChild(measureContainer)\n  }\n  return measureContainer\n}\n\nexport function measureText(\n  text: string,\n  className: string = \"\",\n): { width: number; height: number } {\n  const container = getMeasureContainer()\n\n  // reset to passed values\n  container.className = className\n  container.textContent = text\n\n  const rect = container.getBoundingClientRect()\n  return { width: rect.width, height: rect.height }\n}\n\nexport function navigateOnClick(\n  event: MouseEvent | React.MouseEvent,\n  url: string,\n  navigate: (path: string) => void,\n): void {\n  // support cmd for onclick\n  if (event.metaKey || event.ctrlKey) {\n    // ideally react router would have a utility to resolve a path to the\n    // url that the router would navgiate to for that path. useHref does the\n    // trick, but that's a hook, which restricts where it can be used.\n    //\n    // It's not worth spending more time trying to figure this out when hardcoding\n    // works well.\n    const usingHashRouter = import.meta.env.VITE_ROUTER_TYPE === \"hash\"\n    const location = window.location\n    const resolvedUrl = usingHashRouter\n      ? `${location.origin}${location.pathname}#${url}`\n      : `${location.origin}${url}`\n\n    window.open(resolvedUrl, \"_blank\")\n  } else {\n    navigate(url)\n  }\n}\n\nexport function readableNodeid(nodeid: string): string {\n  return nodeid.split(\"::\").pop() || nodeid\n}\n\nexport function commonPrefix(strings: string[], delimiter: string = \"/\"): string {\n  if (!strings || strings.length < 2) {\n    return \"\"\n  }\n\n  const segments = strings.map(s => s.split(delimiter))\n  const minLen = Math.min(...segments.map(s => s.length))\n\n  const prefix: string[] = []\n  for (let i = 0; i < minLen; i++) {\n    const seg = segments[0][i]\n    const allMatch = segments.every(parts => parts[i] === seg)\n    if (!allMatch) {\n      break\n    }\n    prefix.push(seg)\n  }\n\n  if (prefix.length === 0) {\n    return \"\"\n  }\n\n  const joined = prefix.join(delimiter)\n  const withDelim = joined ? joined + delimiter : \"\"\n  if (withDelim && strings.every(s => s.startsWith(withDelim))) {\n    return withDelim\n  }\n  return \"\"\n}\n","import { faGear } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { axisBottom as d3_axisBottom, axisLeft as d3_axisLeft } from \"d3-axis\"\nimport {\n  scaleBand as d3_scaleBand,\n  scaleLinear as d3_scaleLinear,\n  scaleOrdinal as d3_scaleOrdinal,\n} from \"d3-scale\"\nimport { select as d3_select } from \"d3-selection\"\nimport { Set } from \"immutable\"\nimport { useEffect, useRef } from \"react\"\nimport { Filter, useFilters } from \"src/tyche/FilterContext\"\nimport { TYCHE_COLOR } from \"src/tyche/Tyche\"\nimport { NOT_PRESENT_STRING, PRESENT_STRING } from \"src/tyche/Tyche\"\nimport { Observation } from \"src/types/dashboard\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { max, sum } from \"src/utils/utils\"\n\nconst d3 = {\n  select: d3_select,\n  scaleLinear: d3_scaleLinear,\n  scaleOrdinal: d3_scaleOrdinal,\n  scaleBand: d3_scaleBand,\n  axisBottom: d3_axisBottom,\n  axisLeft: d3_axisLeft,\n}\n\nexport abstract class Feature {\n  abstract isSystem: boolean\n\n  constructor(\n    public key: string,\n    public name: string,\n  ) {}\n\n  getValue(observation: Observation): any {\n    return observation.features.get(this.name)\n  }\n}\n\nexport class UserFeature extends Feature {\n  isSystem = false\n}\n\nexport class SystemFeature extends Feature {\n  isSystem = true\n\n  constructor(\n    public override key: string,\n    public override name: string,\n    public value: (observation: Observation) => any,\n  ) {\n    super(key, name)\n  }\n\n  override getValue(observation: Observation): any {\n    return this.value(observation)\n  }\n}\n\ntype NominalChartProps = {\n  feature: Feature\n  observations: { raw: Observation[]; filtered: Observation[] }\n}\n\nconst HORIZONTAL_BAR_FEATURE_CUTOFF = 5\nconst SELECTION_STROKE_WIDTH = 2.5\n\nexport function NominalChart({ feature, observations }: NominalChartProps) {\n  const parentRef = useRef<HTMLDivElement>(null)\n  const svgRef = useRef<SVGSVGElement>(null)\n  const { filters, setFilters } = useFilters()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n\n  function getSelectedValues() {\n    const nominalFilters = filters.get(feature.key) || []\n    if (nominalFilters.length === 0) {\n      return Set<string>()\n    }\n\n    console.assert(nominalFilters.length === 1)\n    const filter = nominalFilters[0]\n    return Set(filter.extraData.selectedValues)\n  }\n\n  const selectedValues = getSelectedValues()\n  const filteredObservations = {\n    raw: observations.raw.filter(obs => obs.status !== \"gave_up\"),\n    filtered: observations.filtered.filter(obs => obs.status !== \"gave_up\"),\n  }\n\n  const onValueClick = (value: string) => {\n    let newSelection = Set<string>()\n\n    // If clicking the same value that's already selected alone, deselect it\n    if (selectedValues.equals(Set([value]))) {\n      newSelection = Set()\n    } else {\n      // Otherwise, select just this value\n      newSelection = Set([value])\n    }\n\n    let valueName\n    if (newSelection.size === 1) {\n      valueName = newSelection.first()!\n    } else {\n      valueName = newSelection.map(value => `${value}`).join(\" or \")\n    }\n\n    const nominalFilters = []\n    if (newSelection.size > 0) {\n      nominalFilters.push(\n        new Filter(\n          feature.name,\n          valueName,\n          (obs: Observation) => {\n            return newSelection.some(value => {\n              return value === feature.getValue(obs)\n            })\n          },\n          `nominal-${feature.key}`,\n          {\n            selectedValues: newSelection,\n          },\n        ),\n      )\n    }\n\n    const newFilters = new Map(filters)\n    newFilters.set(feature.key, nominalFilters)\n    setFilters(newFilters)\n  }\n\n  useEffect(() => {\n    if (filteredObservations.filtered.length == 0) {\n      return\n    }\n\n    const distinctRawValues = Set<string>(\n      filteredObservations.raw.map(obs => feature.getValue(obs)),\n    )\n    // value: count\n    let data = new Map<string, number>()\n\n    for (const observation of filteredObservations.filtered) {\n      const value = feature.getValue(observation)\n      data.set(value, (data.get(value) || 0) + 1)\n    }\n    const total = sum(Array.from(data.values()))\n\n    data = new Map(\n      [...data.entries()].sortKey(([value, _count]) => {\n        if (value === PRESENT_STRING) return 0\n        if (value === NOT_PRESENT_STRING) return 1\n        return value\n      }),\n    )\n\n    d3.select(svgRef.current).selectAll(\"*\").remove()\n\n    const width = parentRef.current!.clientWidth\n    const height = distinctRawValues.size < HORIZONTAL_BAR_FEATURE_CUTOFF ? 85 : 170\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n\n    const showTooltipHandler = function (event: MouseEvent, d: [string, number]) {\n      const [label, count] = d\n      showTooltip(\n        `${feature.name}<br>${label}: ${count}`,\n        event.clientX,\n        event.clientY,\n        \"tyche-nominal\",\n      )\n    }\n\n    // use a horizontally-stacked bar chart for 1-4 different feature labels,\n    // and a standard histogram otherwise.\n    //\n    // use the number of distinct values in the unfiltered observations, so we\n    // don't change up the display type on the user when they're drilling down.\n    if (distinctRawValues.size < HORIZONTAL_BAR_FEATURE_CUTOFF) {\n      const margin = { top: 0, right: 15, bottom: 20, left: 10 }\n      const innerWidth = width - margin.left - margin.right\n      const innerHeight = height - margin.top - margin.bottom\n\n      const x = d3.scaleLinear().domain([0, 1]).range([0, innerWidth])\n\n      let colorScale: (feature: string) => string\n      if (data.has(PRESENT_STRING) || data.has(NOT_PRESENT_STRING)) {\n        colorScale = (feature: string) => {\n          if (feature === PRESENT_STRING) return TYCHE_COLOR.SUCCESS\n          if (feature === NOT_PRESENT_STRING) return TYCHE_COLOR.ERROR\n          return TYCHE_COLOR.PRIMARY\n        }\n      } else {\n        colorScale = d3\n          .scaleOrdinal<string>()\n          // use raw values so the coloring doesn't change as we drill down\n          .domain(distinctRawValues)\n          .range([\n            TYCHE_COLOR.PRIMARY,\n            TYCHE_COLOR.ACCENT,\n            TYCHE_COLOR.ACCENT2,\n            TYCHE_COLOR.ACCENT3,\n            TYCHE_COLOR.ACCENT4,\n          ])\n      }\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n      let xAccumulator = 0\n      const barHeight = innerHeight - margin.bottom\n\n      data.forEach((count, value) => {\n        const barWidth = (count / total) * innerWidth\n        const isSelected = selectedValues.has(value)\n\n        // outer rect\n        g.append(\"rect\")\n          .attr(\"x\", xAccumulator)\n          .attr(\"y\", 0)\n          .attr(\"width\", barWidth)\n          .attr(\"height\", barHeight)\n          .attr(\"fill\", colorScale(value))\n          .style(\"cursor\", \"pointer\")\n          .on(\"click\", () => onValueClick(value))\n          .on(\"mouseover\", event => {\n            showTooltipHandler(event, [value, count])\n          })\n          .on(\"mousemove\", event =>\n            moveTooltip(event.clientX, event.clientY, \"tyche-nominal\"),\n          )\n          .on(\"mouseleave\", () => hideTooltip(\"tyche-nominal\"))\n\n        // inner rect (for inset white border when selected)\n        if (isSelected) {\n          g.append(\"rect\")\n            .attr(\"x\", xAccumulator + SELECTION_STROKE_WIDTH)\n            .attr(\"y\", SELECTION_STROKE_WIDTH)\n            .attr(\"width\", barWidth - 2 * SELECTION_STROKE_WIDTH)\n            .attr(\"height\", barHeight - 2 * SELECTION_STROKE_WIDTH)\n            .attr(\"fill\", colorScale(value))\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-width\", SELECTION_STROKE_WIDTH)\n            .style(\"pointer-events\", \"none\") // let outer rect handle all of the clicks\n        }\n\n        g.append(\"text\")\n          .attr(\"x\", xAccumulator + barWidth / 2)\n          .attr(\"y\", barHeight / 2)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dominant-baseline\", \"central\")\n          .attr(\"fill\", \"white\")\n          .text(value)\n          .style(\"font-size\", \"14px\")\n          .style(\"font-weight\", \"bold\")\n        xAccumulator += barWidth\n      })\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0,${barHeight})`)\n        .call(d3.axisBottom(x).tickFormat(d => `${Math.round(Number(d) * 100)}%`))\n\n      g.append(\"text\")\n        .attr(\"x\", innerWidth / 2)\n        .attr(\"y\", barHeight + 35)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"% of observations\")\n        .style(\"font-size\", \"13px\")\n    } else {\n      // add some margin inset for the graph proper so the axes don't get cut off\n      const margin = { top: 5, right: 5, bottom: 30, left: 10 }\n      const innerWidth = width - margin.left - margin.right\n      const innerHeight = height - margin.top - margin.bottom\n\n      const x = d3\n        .scaleBand()\n        .domain(Array.from(data.keys()))\n        .range([0, innerWidth])\n        .padding(0.2)\n\n      const y = d3\n        .scaleLinear()\n        .domain([0, max(Array.from(data.values())) || 0])\n        .range([innerHeight, 0])\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n      g.selectAll(\".bar\")\n        .data(Array.from(data.entries()))\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", ([value, _count]) => x(value) || 0)\n        .attr(\"y\", ([_value, count]) => y(count))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", ([_value, count]) => innerHeight - y(count))\n        .attr(\"fill\", TYCHE_COLOR.PRIMARY)\n        .style(\"cursor\", \"pointer\")\n        .on(\"click\", function (event, [value, _count]) {\n          onValueClick(value)\n        })\n        .on(\"mouseover\", function (event, d) {\n          showTooltipHandler(event, d)\n        })\n        .on(\"mousemove\", event =>\n          moveTooltip(event.clientX, event.clientY, \"tyche-nominal\"),\n        )\n        .on(\"mouseleave\", () => hideTooltip(\"tyche-nominal\"))\n\n      g.selectAll(\".inner-bar\")\n        .data(\n          Array.from(data.entries()).filter(([value, _count]) =>\n            selectedValues.has(value),\n          ),\n        )\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"inner-bar\")\n        .attr(\"x\", ([value, _count]) => (x(value) || 0) + SELECTION_STROKE_WIDTH)\n        .attr(\"y\", ([_value, count]) => y(count) + SELECTION_STROKE_WIDTH)\n        .attr(\"width\", x.bandwidth() - 2 * SELECTION_STROKE_WIDTH)\n        .attr(\n          \"height\",\n          ([_value, count]) => innerHeight - y(count) - 2 * SELECTION_STROKE_WIDTH,\n        )\n        .attr(\"fill\", TYCHE_COLOR.PRIMARY)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", SELECTION_STROKE_WIDTH)\n        .style(\"pointer-events\", \"none\")\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"transform\", \"rotate(-45)\")\n        .style(\"text-anchor\", \"end\")\n\n      g.append(\"g\").call(\n        d3\n          .axisLeft(y)\n          .ticks(7)\n          .tickFormat(d => Math.round(Number(d)).toString()),\n      )\n\n      g.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -30)\n        .attr(\"x\", -innerHeight / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Count\")\n        .style(\"font-size\", \"12px\")\n    }\n  }, [\n    filteredObservations,\n    feature,\n    hideTooltip,\n    moveTooltip,\n    onValueClick,\n    selectedValues,\n    showTooltip,\n  ])\n\n  if (filteredObservations.filtered.length == 0) {\n    return null\n  }\n\n  return (\n    <div>\n      <div className=\"tyche__nominal__feature\">\n        {feature.isSystem && (\n          <span className=\"tooltip\">\n            <FontAwesomeIcon icon={faGear} className=\"tyche__nominal__feature__icon\" />\n            <span className=\"tooltip__text\">\n              This feature is generated automatically for all tests\n            </span>\n          </span>\n        )}\n        <span className=\"tyche__nominal__feature__text\">{feature.name}</span>\n      </div>\n      <div ref={parentRef} className=\"tyche__nominal__chart\">\n        <svg ref={svgRef} style={{ width: \"100%\" }}></svg>\n      </div>\n    </div>\n  )\n}\n","import { faCaretDown, faCaretRight } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode, useState } from \"react\"\n\ninterface CollapsibleProps {\n  title: ReactNode\n  children: ReactNode\n  defaultState?: \"open\" | \"closed\"\n  onStateChange?: (state: \"open\" | \"closed\") => void\n  className?: string\n  headerClass?: string\n  contentClass?: string\n}\n\nexport function Collapsible({\n  title,\n  children,\n  defaultState = \"open\",\n  onStateChange,\n  headerClass = \"\",\n  contentClass = \"\",\n}: CollapsibleProps) {\n  const [state, setState] = useState(defaultState)\n\n  const toggleState = () => {\n    const newState = state === \"open\" ? \"closed\" : \"open\"\n    setState(newState)\n    onStateChange?.(newState)\n  }\n\n  return (\n    <div>\n      <div className={`collapsible__header ${headerClass}`} onClick={toggleState}>\n        <span className=\"collapsible__toggle\">\n          {state === \"open\" ? (\n            <FontAwesomeIcon icon={faCaretDown} />\n          ) : (\n            <FontAwesomeIcon icon={faCaretRight} />\n          )}\n        </span>\n        {title}\n      </div>\n\n      {state === \"open\" && <div className={`${contentClass}`}>{children}</div>}\n    </div>\n  )\n}\n","import { ReactNode } from \"react\"\nimport { Collapsible } from \"src/components/Collapsible\"\n\ninterface TycheSectionProps {\n  title: string\n  children: ReactNode\n  defaultState?: \"open\" | \"closed\"\n  onStateChange?: (state: \"open\" | \"closed\") => void\n}\n\nexport function TycheSection({\n  title,\n  children,\n  defaultState = \"open\",\n  onStateChange,\n}: TycheSectionProps) {\n  return (\n    <div className=\"tyche__section\">\n      <Collapsible\n        title={title}\n        defaultState={defaultState}\n        onStateChange={onStateChange}\n        headerClass=\"tyche__section__header\"\n        contentClass=\"tyche__section__content\"\n      >\n        {children}\n      </Collapsible>\n    </div>\n  )\n}\n","import { ObservationCategory } from \"src/tyche/FilterContext\"\nimport { NominalChart, SystemFeature, UserFeature } from \"src/tyche/NominalChart\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\n// use a private name to avoid collisions with user features.\nconst STABILITY_FEATURE_KEY = \"__hypofuzz_stability\"\n\nexport function Features({\n  observations,\n  observationCategory,\n}: {\n  observations: { raw: Observation[]; filtered: Observation[] }\n  observationCategory: ObservationCategory\n}) {\n  const featureNames = new Set<string>()\n\n  observations.raw.forEach(obs => {\n    for (const key of obs.features.keys()) {\n      if (key.startsWith(\"Retried draw from\")) {\n        continue\n      }\n      featureNames.add(key)\n    }\n  })\n\n  const features = Array.from(featureNames).map(\n    feature => new UserFeature(feature, feature),\n  )\n  // we currently only add covering observations if they are stable, and don't re-check for\n  // stability after. Skip here to avoid showing a boring graph full of \"stable\" for the\n  // covering observation view.\n  //\n  // We should also enable this for covering if/when we have more interesting data to show.\n  if (observationCategory == \"rolling\") {\n    features.push(\n      new SystemFeature(\n        STABILITY_FEATURE_KEY,\n        \"Stability\",\n        observation => observation.stability ?? \"unknown\",\n      ),\n    )\n  }\n\n  if (features.length === 0) {\n    return null\n  }\n\n  // if all the nominal charts would be empty, don't show the Features header.\n  // we'll probably want to refactor this (and the entire tyche setup) to make\n  // nominal charts etc first-class classes which expose \"filtered observations\",\n  // so we can have a single source of truth for stuff like this.\n  if (!observations.filtered.some(obs => obs.status !== \"gave_up\")) {\n    return null\n  }\n\n  return (\n    <TycheSection title=\"Features\">\n      {/* sort for stable display order */}\n      {Array.from(features)\n        .sortKey(feature => feature.name)\n        .map(feature => (\n          <NominalChart feature={feature} observations={observations} />\n        ))}\n    </TycheSection>\n  )\n}\n","import { faXmark } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useFilters } from \"src/tyche/FilterContext\"\n\nexport function Filters() {\n  const { filters, removeFilter } = useFilters()\n\n  const allFilters = Array.from(filters.values())\n    .flat()\n    .sortKey(filter => filter.createdAt)\n\n  if (allFilters.length === 0) {\n    return null\n  }\n\n  return (\n    <div className=\"tyche__filters\">\n      <div className=\"tyche__filters__title\">Filters</div>\n      {allFilters.map(filter => (\n        <div key={filter.key} className=\"tyche__filters__filter\">\n          <div className=\"tyche__filters__filter__name\">\n            <div\n              className=\"tyche__filters__filter__remove\"\n              onClick={() => removeFilter(filter.key)}\n            >\n              <FontAwesomeIcon icon={faXmark} />\n            </div>\n            {filter.name}\n          </div>\n          <div className=\"tyche__filters__filter__value-name\">{filter.valueName}</div>\n        </div>\n      ))}\n    </div>\n  )\n}\n","/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        scope: 'variable.language',\n        match: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      { match: /\\bor\\b/, scope: \"keyword\" },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport { python as default };\n","import { faArrowLeftLong, faArrowRightLong } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\ninterface PaginationProps {\n  currentPage: number\n  pageCount: number\n  onPageChange: (page: number) => void\n}\n\nexport function Pagination({ currentPage, pageCount, onPageChange }: PaginationProps) {\n  console.assert(pageCount > 1)\n\n  function getPageNumbers(): (number | \"ellipsis\")[] {\n    if (pageCount <= 7) {\n      return Array.from({ length: pageCount }, (_, i) => i)\n    }\n\n    if (currentPage <= 3) {\n      return [0, 1, 2, 3, 4, \"ellipsis\", pageCount - 1]\n    }\n\n    if (currentPage >= pageCount - 4) {\n      return [\n        0,\n        \"ellipsis\",\n        pageCount - 5,\n        pageCount - 4,\n        pageCount - 3,\n        pageCount - 2,\n        pageCount - 1,\n      ]\n    }\n\n    return [\n      0,\n      \"ellipsis\",\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      \"ellipsis\",\n      pageCount - 1,\n    ]\n  }\n\n  const pageNumbers = getPageNumbers()\n\n  function handlePageClick(page: number | string) {\n    if (typeof page === \"number\" && currentPage !== page) {\n      onPageChange(page)\n    }\n  }\n\n  function handlePrevious() {\n    if (currentPage > 0) {\n      onPageChange(currentPage - 1)\n    }\n  }\n\n  function handleNext() {\n    if (currentPage < pageCount - 1) {\n      onPageChange(currentPage + 1)\n    }\n  }\n\n  return (\n    <div className=\"pagination\">\n      <div\n        className={`pagination__nav pagination__nav--left ${\n          currentPage === 0 ? \"pagination__nav--disabled\" : \"\"\n        }`}\n        onClick={handlePrevious}\n      >\n        <FontAwesomeIcon icon={faArrowLeftLong} />\n      </div>\n\n      {pageNumbers.map((page, index) => {\n        if (page === \"ellipsis\") {\n          return (\n            <div key={`ellipsis-${index}`} className=\" pagination__ellipsis\">\n              ...\n            </div>\n          )\n        }\n\n        const isCurrentPage = page === currentPage\n\n        return (\n          <div\n            key={page}\n            className={`pagination__number ${\n              isCurrentPage ? \"pagination__number--current\" : \"\"\n            }`}\n            onClick={() => handlePageClick(page)}\n          >\n            {page + 1}\n          </div>\n        )\n      })}\n\n      <div\n        className={`pagination__nav pagination__nav--right ${\n          currentPage === pageCount - 1 ? \"pagination__nav--disabled\" : \"\"\n        }`}\n        onClick={handleNext}\n      >\n        <FontAwesomeIcon icon={faArrowRightLong} />\n      </div>\n    </div>\n  )\n}\n","import \"highlight.js/styles/github.css\"\n\nimport hljs from \"highlight.js/lib/core\"\nimport python from \"highlight.js/lib/languages/python\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Pagination } from \"src/components/Pagination\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\nhljs.registerLanguage(\"python\", python)\n\ninterface Props {\n  observations: { raw: Observation[]; filtered: Observation[] }\n  observationCategory: \"covering\" | \"rolling\"\n}\n\nconst perPage = 30\n\nexport function Representation({\n  observations,\n  observationCategory: observationType,\n}: Props) {\n  const observationsDivRef = useRef<HTMLDivElement>(null)\n  const [page, setPage] = useState(0)\n\n  useEffect(() => {\n    // reset when switching from e.g. covering to rolling, since one might have fewer\n    // observations than the other.\n    //\n    // Do we want to reset to page 0 whenever `observations` changes at all? I'd prefer\n    // not to, to avoid resetting your page position whenever a rolling observation\n    // comes in, but I think you can get into an invalid page state if we don't...\n    // (e.g. a corpus observation being deleted when you're on the last page)\n    setPage(0)\n  }, [observationType])\n\n  function reHighlight() {\n    if (observationsDivRef.current) {\n      // only highlight new elements\n      observationsDivRef.current\n        .querySelectorAll(\"code:not([data-highlighted='yes'])\")\n        .forEach(element => {\n          hljs.highlightElement(element as HTMLElement)\n        })\n    }\n  }\n\n  useEffect(() => {\n    reHighlight()\n  }, [observations, page])\n\n  const rawRepresentations = new Map<string, number>()\n  observations.filtered.forEach(observation => {\n    const repr = observation.representation\n    rawRepresentations.set(repr, (rawRepresentations.get(repr) || 0) + 1)\n  })\n\n  const pageCount = Math.ceil(rawRepresentations.size / perPage)\n  const representations = Array.from(rawRepresentations.entries())\n    .sortKey(([rep, count]) => -count)\n    .slice(page * perPage, (page + 1) * perPage)\n\n  return (\n    <TycheSection\n      title=\"String representations\"\n      defaultState=\"closed\"\n      onStateChange={state => {\n        if (state === \"open\") {\n          // wait for observationsDivRef to be set before rehighlighting\n          requestAnimationFrame(() => {\n            reHighlight()\n          })\n        }\n      }}\n    >\n      <div ref={observationsDivRef}>\n        {pageCount > 1 && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginBottom: \"12px\",\n            }}\n          >\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              onPageChange={setPage}\n            />\n          </div>\n        )}\n\n        {representations.map(([rep, count]) => (\n          // establish a new positioning context for the absolutely-positioned pill\n          <div\n            key={rep}\n            style={{ position: \"relative\" }}\n            className=\"tyche__representation__example\"\n          >\n            <pre>\n              <code className=\"language-python\">{rep}</code>\n            </pre>\n            {count > 1 && (\n              <div className=\"tyche__representation__example__count\">x {count}</div>\n            )}\n          </div>\n        ))}\n\n        {pageCount > 1 && (\n          <div\n            style={{ display: \"flex\", justifyContent: \"flex-end\", marginTop: \"12px\" }}\n          >\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              onPageChange={setPage}\n            />\n          </div>\n        )}\n      </div>\n    </TycheSection>\n  )\n}\n","import { List, Set } from \"immutable\"\nimport React from \"react\"\nimport { Filter, useFilters } from \"src/tyche/FilterContext\"\nimport { Observation } from \"src/types/dashboard\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { measureText } from \"src/utils/utils\"\n\nconst MAX_MOSAIC_WIDTH = 640\n\ntype AxisItem = [string, (observation: Observation) => boolean]\n\ninterface MosaicChartProps {\n  name: string\n  observations: { raw: Observation[]; filtered: Observation[] }\n  verticalAxis: AxisItem[]\n  horizontalAxis: AxisItem[]\n  cssStyle: (row: string, column: string) => React.CSSProperties\n}\n\ninterface Cell {\n  count: number\n  widthPercent: number\n}\n\nexport function MosaicChart({\n  name,\n  observations,\n  verticalAxis,\n  horizontalAxis,\n  cssStyle = (row, column) => ({}),\n}: MosaicChartProps) {\n  const { filters, setFilters } = useFilters()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n\n  function getSelectedCells() {\n    const mosaicFilters = filters.get(name) || []\n    if (mosaicFilters.length === 0) {\n      return Set<List<number>>()\n    }\n\n    console.assert(mosaicFilters.length === 1)\n    const filter = mosaicFilters[0]\n    return Set(filter.extraData.selectedCells)\n  }\n\n  const selectedCells = getSelectedCells()\n  const cells: Cell[][] = []\n  const rowTotals: number[] = Array(verticalAxis.length).fill(0)\n  const columnTotals: number[] = Array(horizontalAxis.length).fill(0)\n  let grandTotal = 0\n\n  for (let i = 0; i < verticalAxis.length; i++) {\n    cells[i] = []\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      cells[i][j] = { count: 0, widthPercent: 0 }\n    }\n  }\n\n  observations.filtered.forEach(observation => {\n    for (let i = 0; i < verticalAxis.length; i++) {\n      const [, verticalPredicate] = verticalAxis[i]\n\n      if (verticalPredicate(observation)) {\n        for (let j = 0; j < horizontalAxis.length; j++) {\n          const [, horizontalPredicate] = horizontalAxis[j]\n\n          if (horizontalPredicate(observation)) {\n            cells[i][j].count++\n            rowTotals[i]++\n            columnTotals[j]++\n            grandTotal++\n            // An observation can only belong to one horizontal category\n            break\n          }\n        }\n        // An observation can only belong to one vertical category\n        break\n      }\n    }\n  })\n\n  // don't show rows/columns with 0 entries\n  const visibleRows = rowTotals\n    .map((total, index) => (total > 0 ? index : null))\n    .filter(index => index !== null)\n  const visibleCols = columnTotals\n    .map((total, index) => (total > 0 ? index : null))\n    .filter(index => index !== null)\n\n  const onCellClick = (rowIndex: number | null, colIndex: number | null) => {\n    let newSelection = Set<List<number>>()\n\n    if (rowIndex !== null && colIndex !== null) {\n      const cell = List([rowIndex, colIndex])\n      // if this cell is already selected and it's the only selection, deselect it\n      if (selectedCells.equals(Set([cell]))) {\n        newSelection = Set()\n      } else {\n        newSelection = Set([cell])\n      }\n    } else if (rowIndex !== null) {\n      console.assert(colIndex === null)\n      // select all cells in this row\n      visibleCols.forEach(colIdx => {\n        if (cells[rowIndex][colIdx].count > 0) {\n          newSelection = newSelection.add(List([rowIndex, colIdx]))\n        }\n      })\n    } else if (colIndex !== null) {\n      console.assert(rowIndex === null)\n      // select all cells in this column\n      visibleRows.forEach(rowIdx => {\n        if (cells[rowIdx][colIndex].count > 0) {\n          newSelection = newSelection.add(List([rowIdx, colIndex]))\n        }\n      })\n    }\n\n    function filterName(): string {\n      if (newSelection.size === 0) {\n        return \"\"\n      }\n\n      let remainingCells = newSelection\n      const canonicalNames: string[] = []\n\n      const axes = [\n        ...visibleRows.map(rowIndex => ({\n          name: verticalAxis[rowIndex][0],\n          cells: visibleCols\n            .filter(colIndex => cells[rowIndex][colIndex].count > 0)\n            .map(colIndex => List([rowIndex, colIndex])),\n        })),\n        ...visibleCols.map(colIndex => ({\n          name: horizontalAxis[colIndex][0],\n          cells: visibleRows\n            .filter(rowIndex => cells[rowIndex][colIndex].count > 0)\n            .map(rowIndex => List([rowIndex, colIndex])),\n        })),\n      ]\n\n      for (const axis of axes) {\n        if (\n          axis.cells.length > 0 &&\n          axis.cells.every(cell => remainingCells.has(cell))\n        ) {\n          canonicalNames.push(axis.name)\n          remainingCells = remainingCells.subtract(Set(axis.cells))\n        }\n      }\n\n      while (remainingCells.size > 0) {\n        const cell = remainingCells.first()!\n        const [row, col] = cell.toArray()\n        canonicalNames.push(`${verticalAxis[row][0]}+${horizontalAxis[col][0]}`)\n        remainingCells = remainingCells.delete(cell)\n      }\n      console.assert(remainingCells.size == 0)\n\n      return canonicalNames.join(\" or \")\n    }\n\n    const mosaicFilters = []\n    if (newSelection.size > 0) {\n      mosaicFilters.push(\n        new Filter(\n          name,\n          filterName(),\n          (obs: Observation) => {\n            return newSelection.some(cell => {\n              const [row, col] = cell.toArray()\n              const verticalPredicate = verticalAxis[row][1]\n              const horizontalPredicate = horizontalAxis[col][1]\n              return verticalPredicate(obs) && horizontalPredicate(obs)\n            })\n          },\n          name,\n          { selectedCells: newSelection },\n        ),\n      )\n    }\n\n    const newFilters = new Map(filters)\n    newFilters.set(name, mosaicFilters)\n    setFilters(newFilters)\n  }\n\n  const rowHeaderWidth = Math.max(\n    ...visibleRows.map(\n      rowIndex =>\n        measureText(verticalAxis[rowIndex][0], \"tyche__mosaic__row-header\").width,\n    ),\n  )\n\n  const columnHeaderHeight = Math.max(\n    ...visibleCols.map(\n      colIndex =>\n        measureText(horizontalAxis[colIndex][0], \"tyche__mosaic__column-header\").height,\n    ),\n  )\n  const rowTotalWidth = Math.max(\n    ...visibleRows.map(\n      rowIndex =>\n        measureText(rowTotals[rowIndex].toString(), \"tyche__mosaic__row-total\").width,\n    ),\n  )\n\n  if (visibleRows.length === 0 || visibleCols.length === 0) {\n    return <div>No observations</div>\n  }\n\n  const minCellWidth = 30\n  const minCellHeight = 30\n\n  for (let i = 0; i < verticalAxis.length; i++) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      cells[i][j].widthPercent =\n        rowTotals[i] > 0 ? (cells[i][j].count / rowTotals[i]) * 100 : 0\n    }\n  }\n\n  const rowHeights = visibleRows.map(rowIndex =>\n    Math.max(\n      (rowTotals[rowIndex] / grandTotal) * 45 * visibleRows.length,\n      minCellHeight,\n    ),\n  )\n\n  const columnHeaderPositions = visibleCols.map((colIndex, i) => {\n    if (i === 0) {\n      // Left-align first column\n      return 0\n    } else if (i === visibleCols.length - 1) {\n      // Right-align last column\n      return 100\n    } else {\n      // Distribute middle columns evenly\n      return (i / (visibleCols.length - 1)) * 100\n    }\n  })\n\n  // Enforce minimum cell widths by adjusting proportions\n  const cellContainerWidth = MAX_MOSAIC_WIDTH - rowHeaderWidth - rowTotalWidth\n  visibleRows.forEach(rowIndex => {\n    const rowCells = visibleCols.map(colIndex => cells[rowIndex][colIndex])\n    const totalRowPercent = rowCells.reduce((sum, cell) => sum + cell.widthPercent, 0)\n\n    if (totalRowPercent > 0) {\n      const actualWidths = rowCells.map(\n        cell => (cell.widthPercent / 100) * cellContainerWidth,\n      )\n\n      const adjustedWidths = actualWidths.map((width, i) => {\n        const cellCount = rowCells[i].count\n        // only enforce minimum width on cells with data (empty cells will not be rendered)\n        if (cellCount > 0 && width > 0 && width < minCellWidth) {\n          return minCellWidth\n        }\n        return width\n      })\n\n      const totalAdjustedWidth = adjustedWidths.reduce((sum, width) => sum + width, 0)\n      visibleCols.forEach((colIndex, i) => {\n        cells[rowIndex][colIndex].widthPercent =\n          totalAdjustedWidth > 0 ? (adjustedWidths[i] / totalAdjustedWidth) * 100 : 0\n      })\n    }\n  })\n\n  return (\n    <div\n      className=\"tyche__mosaic__container\"\n      // constant min height so that the ui doesn't jitter when we filter down\n      style={{ maxWidth: `${MAX_MOSAIC_WIDTH}px`, minHeight: `175px` }}\n    >\n      <div\n        className=\"tyche__mosaic__column-headers\"\n        style={{\n          marginLeft: `${rowHeaderWidth}px`,\n          marginRight: `${rowTotalWidth}px`,\n          height: `${columnHeaderHeight}px`,\n        }}\n      >\n        {visibleCols.map((colIndex, i) => {\n          const isFirst = i === 0\n          const isLast = i === visibleCols.length - 1\n\n          return (\n            <div\n              key={`header-${colIndex}`}\n              className=\"tyche__mosaic__column-header\"\n              style={{\n                left: `${columnHeaderPositions[i]}%`,\n                transform: isFirst\n                  ? \"translateX(0%)\"\n                  : isLast\n                    ? \"translateX(-100%)\"\n                    : \"translateX(-50%)\",\n                textAlign: isFirst ? \"left\" : isLast ? \"right\" : \"center\",\n              }}\n              onClick={() => onCellClick(null, colIndex)}\n            >\n              {horizontalAxis[colIndex][0]}\n            </div>\n          )\n        })}\n      </div>\n\n      {visibleRows.map((rowIndex, rowDisplayIndex) => (\n        <div\n          key={`row-${rowIndex}`}\n          className=\"tyche__mosaic__row\"\n          style={{\n            height: `${rowHeights[rowDisplayIndex]}px`,\n          }}\n        >\n          <div\n            className=\"tyche__mosaic__row-header\"\n            style={{\n              width: `${rowHeaderWidth}px`,\n              cursor: \"pointer\",\n            }}\n            onClick={() => onCellClick(rowIndex, null)}\n          >\n            {verticalAxis[rowIndex][0]}\n          </div>\n\n          <div className=\"tyche__mosaic__row-cells\">\n            {visibleCols.map(colIndex => {\n              const cell = cells[rowIndex][colIndex]\n              // don't display cells with no data\n              if (cell.count === 0) {\n                return null\n              }\n\n              const isSelected = selectedCells.has(List([rowIndex, colIndex]))\n              const tooltipContent = `${verticalAxis[rowIndex][0]} and ${horizontalAxis[colIndex][0]}<br>Count: ${cell.count}`\n\n              return (\n                <div\n                  key={`cell-${rowIndex}-${colIndex}`}\n                  className={`tyche__mosaic__cell${isSelected ? \" tyche__mosaic__cell--selected\" : \"\"}`}\n                  style={{\n                    width: `${cell.widthPercent}%`,\n                    minWidth: `${minCellWidth}px`,\n                    minHeight: `${minCellHeight}px`,\n                    ...cssStyle(verticalAxis[rowIndex][0], horizontalAxis[colIndex][0]),\n                  }}\n                  onClick={() => onCellClick(rowIndex, colIndex)}\n                  onMouseEnter={e =>\n                    showTooltip(tooltipContent, e.clientX, e.clientY, \"tyche-mosaic\")\n                  }\n                  onMouseMove={e => moveTooltip(e.clientX, e.clientY, \"tyche-mosaic\")}\n                  onMouseLeave={() => hideTooltip(\"tyche-mosaic\")}\n                >\n                  <span className=\"tyche__mosaic__cell-value\">{cell.count}</span>\n                </div>\n              )\n            })}\n          </div>\n\n          <div\n            className=\"tyche__mosaic__row-total\"\n            style={{\n              width: `${rowTotalWidth}px`,\n            }}\n          >\n            {rowTotals[rowIndex]}\n          </div>\n        </div>\n      ))}\n\n      <div\n        className=\"tyche__mosaic__column-totals-row\"\n        style={{ height: `${columnHeaderHeight}px` }}\n      >\n        <div style={{ width: `${rowHeaderWidth}px` }}></div>\n        <div\n          className=\"tyche__mosaic__column-totals\"\n          style={{\n            marginRight: `${rowTotalWidth}px`,\n          }}\n        >\n          {visibleCols.map((colIndex, i) => {\n            const isFirst = i === 0\n            const isLast = i === visibleCols.length - 1\n\n            return (\n              <div\n                key={`total-${colIndex}`}\n                className=\"tyche__mosaic__column-total\"\n                style={{\n                  left: `${columnHeaderPositions[i]}%`,\n                  transform: isFirst\n                    ? \"translateX(0%)\"\n                    : isLast\n                      ? \"translateX(-100%)\"\n                      : \"translateX(-50%)\",\n                  textAlign: isFirst ? \"left\" : isLast ? \"right\" : \"center\",\n                }}\n              >\n                {columnTotals[colIndex]}\n              </div>\n            )\n          })}\n        </div>\n        <div\n          className=\"tyche__mosaic__grand-total\"\n          style={{ width: `${rowTotalWidth}px` }}\n        >\n          {grandTotal}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { MosaicChart } from \"src/tyche/MosaicChart\"\nimport { TYCHE_COLOR } from \"src/tyche/Tyche\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\nexport function Samples({\n  observations,\n}: {\n  observations: { raw: Observation[]; filtered: Observation[] }\n}) {\n  function cellStyle(row: string, column: string): React.CSSProperties {\n    const style: React.CSSProperties = {}\n\n    if (row === \"Passed\") {\n      style.backgroundColor = TYCHE_COLOR.SUCCESS\n    } else if (row === \"Invalid\") {\n      style.backgroundColor = TYCHE_COLOR.WARNING\n    } else if (row === \"Failed\") {\n      style.backgroundColor = TYCHE_COLOR.ERROR\n    }\n\n    if (column === \"Duplicate\") {\n      style.opacity = 0.7\n    }\n\n    return style\n  }\n\n  return (\n    <TycheSection title=\"Samples\">\n      <MosaicChart\n        name=\"samples\"\n        observations={observations}\n        verticalAxis={[\n          [\"Passed\", obs => obs.status === \"passed\"],\n          [\"Invalid\", obs => obs.status === \"gave_up\"],\n        ]}\n        horizontalAxis={[\n          [\"Unique\", obs => obs.isUnique ?? false],\n          [\"Duplicate\", obs => obs.isDuplicate ?? false],\n        ]}\n        cssStyle={cellStyle}\n      />\n    </TycheSection>\n  )\n}\n","import { Toggle } from \"src/components/Toggle\"\nimport { Features } from \"src/tyche/Features\"\nimport { FilterProvider, useFilters } from \"src/tyche/FilterContext\"\nimport { Filters } from \"src/tyche/Filters\"\nimport { Representation } from \"src/tyche/Representation\"\nimport { Samples } from \"src/tyche/Samples\"\nimport { Test } from \"src/types/test\"\n\nexport const PRESENT_STRING = \"Present\"\nexport const NOT_PRESENT_STRING = \"Not present\"\n\nexport enum TYCHE_COLOR {\n  // https://github.com/tyche-pbt/tyche-extension/blob/main/webview-ui/src/utilities/colors.ts\n  // plus a 10% blend of #ECEFF4 to soften them\n  PRIMARY = \"#6b8ab5\",\n  SUCCESS = \"#8ba86b\",\n  WARNING = \"#d59a7e\",\n  ERROR = \"#c77a7e\",\n  ACCENT = \"#c1a2bb\",\n  ACCENT2 = \"#9fc7c6\",\n  ACCENT3 = \"#edd39a\",\n  ACCENT4 = \"#99c7d6\",\n  ACCENT5 = \"#8faac6\",\n}\n\nfunction TycheInner({ test }: { test: Test }) {\n  const { filters, observationCategory, setObservationCategory } = useFilters()\n\n  const rawObservations =\n    observationCategory === \"rolling\"\n      ? // newest first for rolling observations\n        test.rolling_observations.sortKey(observation => -observation.run_start)\n      : test.corpus_observations\n\n  function filteredObservations() {\n    const allFilters = Array.from(filters.values()).flat()\n\n    if (allFilters.length === 0) {\n      return rawObservations\n    }\n\n    return rawObservations.filter(observation => {\n      return allFilters.every(filter => filter.predicate(observation))\n    })\n  }\n\n  const observations = {\n    raw: rawObservations,\n    filtered: filteredObservations(),\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n        <span>Observations</span>\n      </div>\n      <div\n        style={{\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          gap: \"20px\",\n          fontSize: \"1.05rem\",\n          fontWeight: \"500\",\n        }}\n      >\n        <Toggle\n          value={observationCategory}\n          onChange={setObservationCategory}\n          options={[\n            { value: \"covering\", content: \"Covering\" },\n            { value: \"rolling\", content: \"Rolling\" },\n          ]}\n        />\n        <Filters />\n      </div>\n      {observations.raw.length > 0 ? (\n        <>\n          <Samples observations={observations} />\n          <Features\n            observations={observations}\n            observationCategory={observationCategory}\n          />\n          <Representation\n            observations={observations}\n            observationCategory={observationCategory}\n          />\n        </>\n      ) : (\n        <div className=\"tyche__section\">No observations</div>\n      )}\n    </div>\n  )\n}\n\nexport function Tyche({ test }: { test: Test }) {\n  return (\n    <FilterProvider>\n      <TycheInner test={test} />\n    </FilterProvider>\n  )\n}\n","import { sum } from \"src/utils/utils\"\n\nexport const SKIP_EXCEPTIONS = [\"Skipped\", \"SkipTest\"]\n\nexport abstract class Dataclass<T> {\n  withProperties(props: Partial<T>): T {\n    return Object.assign(Object.create(this.constructor.prototype), this, props) as T\n  }\n}\n\nexport enum FailureState {\n  SHRUNK = \"shrunk\",\n  UNSHRUNK = \"unshrunk\",\n  FIXED = \"fixed\",\n}\n\nexport class Failure extends Dataclass<Failure> {\n  constructor(\n    public state: FailureState,\n    public observation: Observation,\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): Failure {\n    return new Failure(data.state, Observation.fromJson(data.observation))\n  }\n}\n\nexport class FatalFailure extends Dataclass<FatalFailure> {\n  constructor(public traceback: string) {\n    super()\n  }\n}\n\nexport class StatusCounts extends Dataclass<StatusCounts> {\n  constructor(\n    public counts: Map<Status, number> = new Map([\n      [Status.OVERRUN, 0],\n      [Status.INVALID, 0],\n      [Status.VALID, 0],\n      [Status.INTERESTING, 0],\n    ]),\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): StatusCounts {\n    const counts = new Map<Status, number>([\n      [Status.OVERRUN, 0],\n      [Status.INVALID, 0],\n      [Status.VALID, 0],\n      [Status.INTERESTING, 0],\n    ])\n\n    for (const [status, count] of Object.entries(data)) {\n      console.assert(typeof count === \"number\")\n      counts.set(Number(status) as Status, count as number)\n    }\n    return new StatusCounts(counts)\n  }\n\n  add(statuses: StatusCounts): StatusCounts {\n    const newStatuses = new Map(this.counts)\n    for (const [status, count] of statuses.counts.entries()) {\n      newStatuses.set(status, newStatuses.get(status)! + count)\n    }\n    return new StatusCounts(newStatuses)\n  }\n\n  subtract(statuses: StatusCounts): StatusCounts {\n    const newStatusCounts = new Map(this.counts)\n    for (const [status, count] of statuses.counts.entries()) {\n      newStatusCounts.set(status, newStatusCounts.get(status)! - count)\n    }\n    return new StatusCounts(newStatusCounts)\n  }\n\n  sum(): number {\n    return sum(this.counts.values())\n  }\n}\n\nexport enum Status {\n  OVERRUN = 0,\n  INVALID = 1,\n  VALID = 2,\n  INTERESTING = 3,\n}\n\nexport enum Phase {\n  GENERATE = \"generate\",\n  REPLAY = \"replay\",\n  DISTILL = \"distill\",\n  SHRINK = \"shrink\",\n  FAILED = \"failed\",\n}\n\nexport interface WorkerIdentity {\n  uuid: string\n  operating_system: string\n  python_version: string\n  hypothesis_version: string\n  hypofuzz_version: string\n  pid: number\n  hostname: string\n  pod_name: string | null\n  pod_namespace: string | null\n  node_name: string | null\n  pod_ip: string | null\n  container_id: string | null\n  git_hash: string | null\n}\n\nexport class Report extends Dataclass<Report> {\n  public status_counts_diff: StatusCounts | null\n  public elapsed_time_diff: number | null\n  public timestamp_monotonic: number | null\n\n  constructor(\n    public elapsed_time: number,\n    public timestamp: number,\n    public status_counts: StatusCounts,\n    public behaviors: number,\n    public fingerprints: number,\n    public since_new_behavior: number | null,\n    public phase: Phase,\n    public worker_uuid: string,\n  ) {\n    super()\n    this.status_counts_diff = null\n    this.elapsed_time_diff = null\n    this.timestamp_monotonic = null\n  }\n\n  get ninputs(): number {\n    return this.status_counts.sum()\n  }\n\n  static fromJson(worker_uuid: string, data: any): Report {\n    return new Report(\n      data.elapsed_time,\n      data.timestamp,\n      StatusCounts.fromJson(data.status_counts),\n      data.behaviors,\n      data.fingerprints,\n      data.since_new_behavior,\n      data.phase,\n      worker_uuid,\n    )\n  }\n}\n\nexport enum ObservationStatus {\n  PASSED = \"passed\",\n  FAILED = \"failed\",\n  GAVE_UP = \"gave_up\",\n}\n\nexport enum Stability {\n  STABLE = \"stable\",\n  UNSTABLE = \"unstable\",\n}\n\nexport class Observation extends Dataclass<Observation> {\n  public isDuplicate: boolean | null = null\n  public isUnique: boolean | null = null\n\n  // https://hypothesis.readthedocs.io/en/latest/reference/integrations.html#test-case\n  constructor(\n    public type: string,\n    public status: ObservationStatus,\n    public status_reason: string,\n    public representation: string,\n    // arguments is a reserved keyword in javascript\n    public arguments_: Map<string, any>,\n    public how_generated: string,\n    public features: Map<string, any>,\n    public timing: Map<string, any>,\n    public metadata: Map<string, any>,\n    public property: string,\n    public run_start: number,\n    public stability: Stability | null,\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): Observation {\n    return new Observation(\n      data.type,\n      data.status,\n      data.status_reason,\n      data.representation,\n      new Map(Object.entries(data.arguments)),\n      data.how_generated,\n      new Map(Object.entries(data.features)),\n      new Map(Object.entries(data.timing)),\n      new Map(Object.entries(data.metadata)),\n      data.property,\n      Number(data.run_start),\n      data.stability,\n    )\n  }\n}\n\nexport enum TestStatus {\n  FAILED_FATALLY = 0,\n  FAILED = 1,\n  SHRINKING = 2,\n  RUNNING = 3,\n  SKIPPED_DYNAMICALLY = 4,\n  WAITING = 5,\n}\n","import {\n  Dataclass,\n  Failure,\n  FatalFailure,\n  Observation,\n  Phase,\n  Report,\n  SKIP_EXCEPTIONS,\n  StatusCounts,\n  TestStatus,\n} from \"src/types/dashboard\"\nimport { bisectRight } from \"src/utils/utils\"\n\nfunction report_with_diff(report: Report, last_worker_report: Report | null): Report {\n  const last_status_counts = last_worker_report\n    ? last_worker_report.status_counts\n    : new StatusCounts()\n  const last_elapsed_time = last_worker_report ? last_worker_report.elapsed_time : 0.0\n  const status_counts_diff = report.status_counts.subtract(last_status_counts)\n  const elapsed_time_diff = report.elapsed_time - last_elapsed_time\n  const timestamp_monotonic = last_worker_report\n    ? Math.max(\n        report.timestamp,\n        last_worker_report.timestamp_monotonic! + elapsed_time_diff,\n      )\n    : report.timestamp\n\n  console.assert(\n    Array.from(status_counts_diff.counts.values()).every(count => count >= 0),\n  )\n  console.assert(elapsed_time_diff >= 0.0)\n\n  return report.withProperties({\n    status_counts_diff: status_counts_diff,\n    elapsed_time_diff: elapsed_time_diff,\n    timestamp_monotonic: timestamp_monotonic,\n  })\n}\n\nexport class Test extends Dataclass<Test> {\n  // if it's been this long since the last report in seconds, consider the test status\n  // to be \"waiting\" instead of \"running\"\n  static WAITING_STATUS_DURATION = 120\n\n  public linear_reports: Report[]\n  private _status_counts_cumsum: Map<number, [number, StatusCounts[]]>\n  private _elapsed_time_cumsum: Map<number, [number, number[]]>\n  // when we finished receiving all data for this worker from the websocket. null if\n  // we have not finished receiving data.\n  public load_finished_at: number | null = null\n\n  constructor(\n    public database_key: string | null,\n    public nodeid: string,\n    public rolling_observations: Observation[],\n    public corpus_observations: Observation[],\n    public failures: Map<string, Failure>,\n    public fatal_failure: FatalFailure | null,\n    public reports_by_worker: Map<string, Report[]>,\n    public stability: number | null,\n  ) {\n    super()\n    this.linear_reports = []\n    // TODO we should use an actual LRUCache for memory here, like in python.\n    // https://github.com/isaacs/node-lru-cache looks like a good option\n    this._status_counts_cumsum = new Map()\n    this._elapsed_time_cumsum = new Map()\n    this.load_finished_at = null\n\n    const reports_by_worker_ = this.reports_by_worker\n    this.reports_by_worker = new Map()\n\n    // TODO: use k-way merge for performance?\n\n    // list of (worker_uuid, report) for each report, sorted by report.timestamp\n    const sorted_reports = Array.from(reports_by_worker_.entries())\n      .flatMap(([worker_uuid, reports]) => reports.map(report => [worker_uuid, report]))\n      .sortKey(([_worker_uuid, report]) => (report as Report).timestamp)\n    for (const [worker_uuid, report] of sorted_reports) {\n      this.add_report(worker_uuid as string, report as Report)\n    }\n    this._check_invariants()\n  }\n\n  static fromJson(data: any): Test {\n    return new Test(\n      data.database_key,\n      data.nodeid,\n      // observations will be updated later by another websocket event\n      [],\n      [],\n      new Map(\n        Object.entries(data.failures).map(([key, value]) => [\n          key,\n          Failure.fromJson(value),\n        ]),\n      ),\n      data.fatal_failure,\n      new Map(\n        Object.entries(data.reports_by_worker).map(([key, value]) => [\n          key,\n          (value as any[]).map(Report.fromJson),\n        ]),\n      ),\n      data.stability,\n    )\n  }\n\n  _assert_reports_ordered(reports: Report[]) {\n    for (let i = 0; i < reports.length - 1; i++) {\n      console.assert(\n        reports[i].timestamp_monotonic! <= reports[i + 1].timestamp_monotonic!,\n      )\n    }\n  }\n\n  _check_invariants() {\n    this._assert_reports_ordered(this.linear_reports)\n\n    const linear_status_counts = this.linear_status_counts(null)\n    for (let i = 0; i < linear_status_counts.length - 1; i++) {\n      console.assert(linear_status_counts[i].sum() <= linear_status_counts[i + 1].sum())\n    }\n    const linear_elapsed_time = this.linear_elapsed_time(null)\n    for (let i = 0; i < linear_elapsed_time.length - 1; i++) {\n      console.assert(linear_elapsed_time[i] <= linear_elapsed_time[i + 1])\n    }\n    console.assert(\n      linear_elapsed_time.length === linear_status_counts.length &&\n        linear_status_counts.length === this.linear_reports.length,\n    )\n\n    for (const [_worker_uuid, reports] of this.reports_by_worker.entries()) {\n      this._assert_reports_ordered(reports)\n    }\n  }\n\n  add_report(worker_uuid: string, report: Report) {\n    // This function implements Test.add_report in python. Make sure to keep the\n    // two versions in sync.\n\n    let last_report_worker: Report | null = null\n    let reports_index = 0\n    if (this.reports_by_worker.has(worker_uuid)) {\n      const reports = this.reports_by_worker.get(worker_uuid)!\n      reports_index = bisectRight(reports, report.elapsed_time, r => r.elapsed_time)\n      last_report_worker = reports_index != 0 ? reports[reports_index - 1] : null\n    }\n\n    const linear_report = report_with_diff(report, last_report_worker)\n\n    if (!this.reports_by_worker.has(worker_uuid)) {\n      this.reports_by_worker.set(worker_uuid, [])\n    }\n    this.reports_by_worker.get(worker_uuid)!.splice(reports_index, 0, linear_report)\n\n    if (\n      linear_report.phase !== Phase.REPLAY ||\n      (linear_report.behaviors >= this.behaviors &&\n        linear_report.fingerprints >= this.fingerprints)\n    ) {\n      const index = bisectRight(\n        this.linear_reports,\n        linear_report.timestamp_monotonic!,\n        r => r.timestamp_monotonic,\n      )\n      this.linear_reports.splice(index, 0, linear_report)\n      if (index != this.linear_reports.length - 1) {\n        let next_worker_report = null\n        let i_offset\n        for (\n          i_offset = 0;\n          i_offset < this.linear_reports.length - (index + 1);\n          i_offset++\n        ) {\n          const report_candidate = this.linear_reports[index + 1 + i_offset]\n          if (linear_report.worker_uuid === report_candidate.worker_uuid!) {\n            next_worker_report = report_candidate\n            break\n          }\n        }\n\n        if (next_worker_report) {\n          console.assert(\n            this.linear_reports[index + 1 + i_offset] === next_worker_report,\n          )\n          this.linear_reports[index + 1 + i_offset] = report_with_diff(\n            next_worker_report,\n            linear_report,\n          )\n        }\n\n        for (const cache of [this._status_counts_cumsum, this._elapsed_time_cumsum]) {\n          for (const [key, [start_idx, values]] of cache.entries()) {\n            if (index >= start_idx) {\n              cache.set(key, [start_idx, values.slice(0, index - start_idx) as any[]])\n            }\n          }\n        }\n      }\n    }\n  }\n\n  get normalFailures() {\n    return Array.from(this.failures.entries())\n      .filter(\n        ([origin, failure]) =>\n          !SKIP_EXCEPTIONS.some(exception => origin.includes(`${exception} at`)),\n      )\n      .map(([_, failure]) => failure)\n  }\n\n  get skipFailures() {\n    return Array.from(this.failures.entries())\n      .filter(([origin, failure]) =>\n        SKIP_EXCEPTIONS.some(exception => origin.includes(`${exception} at`)),\n      )\n      .map(([_, failure]) => failure)\n  }\n\n  get status() {\n    if (this.skipFailures.length > 0) {\n      return TestStatus.SKIPPED_DYNAMICALLY\n    }\n    if (this.fatal_failure) {\n      return TestStatus.FAILED_FATALLY\n    }\n    if (this.failures.size > 0) {\n      return TestStatus.FAILED\n    }\n    if (this.linear_reports.length === 0) {\n      return TestStatus.WAITING\n    }\n\n    const latest = this.linear_reports[this.linear_reports.length - 1]\n    const timestamp = new Date().getTime() / 1000\n    if (latest.phase == Phase.SHRINK) {\n      return TestStatus.SHRINKING\n    }\n    if (\n      latest.ninputs === 0 ||\n      latest.timestamp < timestamp - Test.WAITING_STATUS_DURATION\n    ) {\n      return TestStatus.WAITING\n    }\n    return TestStatus.RUNNING\n  }\n\n  get behaviors() {\n    if (this.linear_reports.length === 0) {\n      return 0\n    }\n    return this.linear_reports[this.linear_reports.length - 1].behaviors\n  }\n\n  get fingerprints() {\n    if (this.linear_reports.length === 0) {\n      return 0\n    }\n    return this.linear_reports[this.linear_reports.length - 1].fingerprints\n  }\n\n  get since_new_behavior() {\n    // TODO take linearization into account properly here. I think we want \"linearized\n    // inputs since branch count last increased\". Iterate backwards over linear_status_counts?\n    if (this.linear_reports.length === 0) {\n      return null\n    }\n    return this.linear_reports[this.linear_reports.length - 1].since_new_behavior\n  }\n\n  elapsed_time(since: number | null): number {\n    const elapsed_times = this.linear_elapsed_time(since)\n    if (elapsed_times.length === 0) {\n      return 0.0\n    }\n    return elapsed_times[elapsed_times.length - 1]\n  }\n\n  ninputs(since: number | null): number {\n    const counts = this.linear_status_counts(since)\n    if (counts.length === 0) {\n      return 0\n    }\n    return counts[counts.length - 1].sum()\n  }\n\n  _cumsum<T>(\n    cache: Map<number, [number, T[]]>,\n    attr: keyof Report,\n    add: (a: T, b: T) => T,\n    since: number | null,\n    initial: T,\n  ): T[] {\n    if (since === null) {\n      since = -Infinity\n    }\n\n    if (cache.has(since)) {\n      const [start_idx, cumsum] = cache.get(since)!\n      if (cumsum.length < this.linear_reports.slice(start_idx).length) {\n        // extend cumsum with any new reports\n        let running = cumsum.length > 0 ? cumsum[cumsum.length - 1] : initial\n        for (const report of this.linear_reports.slice(start_idx + cumsum.length)) {\n          running = add(running, report[attr] as T)\n          cumsum.push(running)\n        }\n        cache.set(since, [start_idx, cumsum])\n      }\n      return cumsum\n    }\n\n    const cumsum: T[] = []\n    const start_idx = bisectRight(\n      this.linear_reports,\n      since,\n      r => r.timestamp_monotonic!,\n    )\n    let running = initial\n    for (const report of this.linear_reports.slice(start_idx)) {\n      running = add(running, report[attr] as T)\n      cumsum.push(running)\n    }\n    cache.set(since, [start_idx, cumsum])\n    return cumsum\n  }\n\n  linear_status_counts(since: number | null): StatusCounts[] {\n    return this._cumsum(\n      this._status_counts_cumsum,\n      \"status_counts_diff\",\n      (a, b) => a.add(b),\n      since,\n      new StatusCounts(),\n    )\n  }\n\n  linear_elapsed_time(since: number | null): number[] {\n    return this._cumsum(\n      this._elapsed_time_cumsum,\n      \"elapsed_time_diff\",\n      (a, b) => a + b,\n      since,\n      0.0,\n    )\n  }\n}\n","// must match python's hypofuzz.utils\nconst FUZZJSON_INF = \"hypofuzz-inf-a928fa52\"\nconst FUZZJSON_NINF = \"hypofuzz-ninf-a928fa52\"\nconst FUZZJSON_NAN = \"hypofuzz-nan-a928fa52\"\n\nexport function fuzzjsonReviver(_key: string, value: any): any {\n  if (value === FUZZJSON_INF) return Infinity\n  if (value === FUZZJSON_NINF) return -Infinity\n  if (value === FUZZJSON_NAN) return NaN\n  return value\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\"\nimport { ProgressBar } from \"src/components/ProgressBar\"\nimport { useNotification } from \"src/context/NotificationProvider\"\nimport { NOT_PRESENT_STRING, PRESENT_STRING } from \"src/tyche/Tyche\"\nimport { Failure, FatalFailure, Observation, Report } from \"src/types/dashboard\"\nimport { Test } from \"src/types/test\"\nimport { fuzzjsonReviver } from \"src/utils/fuzzjson\"\n\ninterface DataContextType {\n  tests: Map<string, Test>\n  socket: WebSocket | null\n  doLoadData: (nodeid: string | null) => void\n  testsLoaded: () => boolean\n}\n\nconst DataContext = createContext<DataContextType | null>(null)\n\ninterface DataProviderProps {\n  children: React.ReactNode\n}\n\ninterface LoadingStatus {\n  // the number of tests collected by the dashboard.\n  count_tests: number | null\n  // the number of tests the dashboard has fully loaded from the database so far.\n  count_tests_loaded: number | null\n}\n\nenum DashboardEventType {\n  SET_STATUS = 1,\n  ADD_TESTS = 2,\n  ADD_REPORTS = 3,\n  ADD_OBSERVATIONS = 4,\n  ADD_FAILURES = 5,\n  SET_FAILURES = 6,\n  TEST_LOAD_FINISHED = 7,\n  SET_FATAL_FAILURE = 8,\n}\n\ntype TestsAction =\n  | {\n      type: DashboardEventType.SET_STATUS\n      loading_status: LoadingStatus\n    }\n  | {\n      type: DashboardEventType.ADD_TESTS\n      tests: {\n        database_key: string\n        nodeid: string\n        failures: Map<string, Failure>\n        fatal_failure: FatalFailure | null\n        stability: number | null\n      }[]\n    }\n  | {\n      type: DashboardEventType.ADD_REPORTS\n      nodeid: string\n      worker_uuid: string\n      reports: Report[]\n    }\n  | {\n      type: DashboardEventType.ADD_FAILURES\n      nodeid: string\n      failures: Map<string, Failure>\n    }\n  | {\n      type: DashboardEventType.SET_FAILURES\n      nodeid: string\n      failures: Map<string, Failure>\n    }\n  | {\n      type: DashboardEventType.ADD_OBSERVATIONS\n      nodeid: string\n      observation_type: \"rolling\" | \"corpus\"\n      observations: Observation[]\n    }\n  | {\n      type: DashboardEventType.TEST_LOAD_FINISHED\n      nodeids: string[]\n    }\n  | {\n      type: DashboardEventType.SET_FATAL_FAILURE\n      nodeid: string\n      fatal_failure: FatalFailure | null\n    }\nfunction prepareObservations(observations: Observation[]) {\n  // compute uniqueness\n  const reprCounts = new Map<string, number>()\n  observations.forEach(obs => {\n    reprCounts.set(obs.representation, (reprCounts.get(obs.representation) || 0) + 1)\n  })\n\n  observations.forEach(observation => {\n    const count = reprCounts.get(observation.representation)!\n    observation.isUnique = count == 1\n    observation.isDuplicate = count > 1\n  })\n\n  // We want tyche to be able to rely on observations having a value for every feature. This makes\n  // things easier for e.g. the sorting logic. To support this, first make a set of all features.\n  // Then, for each observation, if that feature is not present, insert it with value \"Not present\".\n  //\n  // Also, if an observation's feature value is ever \"\", change that to \"Present\". These come from\n  // e.g. ``event(value)``, without an associated payload.\n  const features = new Set<string>()\n  observations.forEach(obs => {\n    obs.features.forEach((_value, feature) => {\n      features.add(feature)\n    })\n  })\n\n  observations.forEach(obs => {\n    features.forEach(feature => {\n      if (!obs.features.has(feature)) {\n        obs.features.set(feature, NOT_PRESENT_STRING)\n      }\n    })\n\n    for (const [feature, value] of obs.features) {\n      if (value === \"\") {\n        obs.features.set(feature, PRESENT_STRING)\n      }\n    }\n  })\n}\n\nfunction testsReducer(\n  state: Map<string, Test>,\n  action: TestsAction,\n): Map<string, Test> {\n  const newState = new Map(state)\n\n  function getOrCreateTest(nodeid: string): Test {\n    if (newState.has(nodeid)) {\n      return newState.get(nodeid)!\n    } else {\n      const test = new Test(null, nodeid, [], [], new Map(), null, new Map(), null)\n      newState.set(test.nodeid, test)\n      return test\n    }\n  }\n\n  switch (action.type) {\n    case DashboardEventType.SET_STATUS: {\n      return state\n    }\n\n    case DashboardEventType.ADD_TESTS: {\n      const { tests } = action\n      for (const {\n        database_key,\n        nodeid,\n        failures,\n        fatal_failure,\n        stability,\n      } of tests) {\n        const test = getOrCreateTest(nodeid)\n        test.database_key = database_key\n        failures.forEach((failure, interesting_origin) => {\n          test.failures.set(interesting_origin, failure)\n        })\n        test.fatal_failure = fatal_failure\n        test.stability = stability\n      }\n      return newState\n    }\n\n    case DashboardEventType.ADD_REPORTS: {\n      const { nodeid, worker_uuid, reports } = action\n      const test = getOrCreateTest(nodeid)\n      for (const report of reports) {\n        test.add_report(worker_uuid, report)\n      }\n      return newState\n    }\n\n    case DashboardEventType.ADD_FAILURES: {\n      const { nodeid, failures } = action\n      const test = getOrCreateTest(nodeid)\n      failures.forEach((failure, interesting_origin) => {\n        test.failures.set(interesting_origin, failure)\n      })\n      return newState\n    }\n\n    case DashboardEventType.SET_FAILURES: {\n      const { nodeid, failures } = action\n      const test = getOrCreateTest(nodeid)\n      test.failures = failures\n      return newState\n    }\n\n    case DashboardEventType.ADD_OBSERVATIONS: {\n      const { nodeid, observation_type, observations } = action\n      const test = getOrCreateTest(nodeid)\n      if (observation_type === \"rolling\") {\n        // make sure to create a new ref, not mutate the existing one\n        test.rolling_observations = [...test.rolling_observations, ...observations]\n        // keep only the most recent 300 rolling observations, by run_start\n        //\n        // this is a good candidate for a proper nlogn SortedList\n        test.rolling_observations = test.rolling_observations\n          .sortKey(observation => -observation.run_start)\n          .slice(0, 300)\n        prepareObservations(test.rolling_observations)\n      } else {\n        console.assert(observation_type === \"corpus\")\n        test.corpus_observations = [...test.corpus_observations, ...observations]\n        prepareObservations(test.corpus_observations)\n      }\n      return newState\n    }\n\n    case DashboardEventType.TEST_LOAD_FINISHED: {\n      const { nodeids } = action\n      for (const nodeid of nodeids) {\n        const test = getOrCreateTest(nodeid)\n        test.load_finished_at = Date.now()\n      }\n      return newState\n    }\n\n    case DashboardEventType.SET_FATAL_FAILURE: {\n      const { nodeid, fatal_failure } = action\n      const test = getOrCreateTest(nodeid)\n      test.fatal_failure = fatal_failure\n      return newState\n    }\n\n    default:\n      throw new Error(\"non-exhaustive switch in testsReducer\")\n  }\n}\n\nexport function DataProvider({ children }: DataProviderProps) {\n  const [socket, setSocket] = useState<WebSocket | null>(null)\n  const [tests, dispatch] = useReducer(testsReducer, new Map<string, Test>())\n  const [loadData, setLoadData] = useState(false)\n  const [nodeid, setNodeid] = useState<string | null>(null)\n  const [loadingStatus, setLoadingStatus] = useState<LoadingStatus>({\n    count_tests: null,\n    count_tests_loaded: null,\n  })\n  const { addNotification, updateNotification, dismissNotification } = useNotification()\n  const statusNotification = useRef<number | null>(null)\n\n  const doLoadData = (nodeid: string | null) => {\n    setLoadData(true)\n    setNodeid(nodeid)\n  }\n\n  const testsLoaded = () => {\n    const now = Date.now()\n    return (\n      loadingStatus.count_tests_loaded !== null &&\n      loadingStatus.count_tests !== null &&\n      loadingStatus.count_tests_loaded === loadingStatus.count_tests &&\n      Array.from(tests.values()).every(test => {\n        if (test.load_finished_at === null) {\n          return false\n        }\n        return now - test.load_finished_at > 200\n      })\n    )\n  }\n\n  useEffect(\n    () => {\n      if (!loadData) {\n        return\n      }\n\n      // clear `tests` whenever we navigate to a new page. We want to avoid the following:\n      //\n      // * navigate to page A\n      //   * tests[A] = v1\n      // * navigate to page B\n      //   * tests[B] = v2\n      // * navigate back to page A\n      //   * tests[A] = v1 + v1\n      //\n      // where the data in tests[A] gets doubled because we sent multiple e.g. ADD_REPORTS events,\n      // where the backend re-sent the entire reports list under the assumption this was a fresh\n      // page load, but the frontend simply appends them and duplicates the data.\n      tests.clear()\n      setLoadingStatus({\n        count_tests: null,\n        count_tests_loaded: null,\n      })\n\n      // load data from local dashboard state json files iff the appropriate env var was set\n      // during building.\n      if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n        fetch(new URL(/* @vite-ignore */ \"dashboard_state/tests.json\", import.meta.url))\n          .then(response => response.text())\n          .then(text => JSON.parse(text, fuzzjsonReviver) as Record<string, any>)\n          .then(data => {\n            Object.entries(data).forEach(([nodeid, testData]) => {\n              dispatch({\n                type: DashboardEventType.ADD_TESTS,\n                tests: [\n                  {\n                    database_key: testData.database_key,\n                    nodeid: nodeid,\n                    failures: testData.failures,\n                    fatal_failure: testData.fatal_failure,\n                    stability: testData.stability,\n                  },\n                ],\n              })\n\n              for (const [worker_uuid, reports] of Object.entries(\n                testData.reports_by_worker,\n              )) {\n                dispatch({\n                  type: DashboardEventType.ADD_REPORTS,\n                  nodeid: nodeid,\n                  worker_uuid: worker_uuid,\n                  reports: (reports as any[]).map(report =>\n                    Report.fromJson(worker_uuid, report),\n                  ),\n                })\n              }\n\n              dispatch({\n                type: DashboardEventType.TEST_LOAD_FINISHED,\n                nodeids: [nodeid],\n              })\n            })\n          })\n\n        // json.parse is sync (blocks ui) and expensive. Push it to a background worker to make it async.\n        // We pay a small serialization cost; ~5% by my measurement.\n        const worker = new Worker(new URL(\"./jsonWorker.js\", import.meta.url))\n        fetch(\n          new URL(\n            /* @vite-ignore */ \"dashboard_state/observations.json\",\n            import.meta.url,\n          ),\n        )\n          .then(response => response.text())\n          .then(text => {\n            return new Promise<Record<string, { rolling: any[]; corpus: any[] }>>(\n              resolve => {\n                worker.onmessage = e => resolve(e.data)\n                worker.postMessage(text)\n              },\n            )\n          })\n          .then(data => {\n            for (const [nodeid, test] of Object.entries(data)) {\n              dispatch({\n                type: DashboardEventType.ADD_OBSERVATIONS,\n                nodeid: nodeid,\n                observation_type: \"rolling\",\n                observations: test.rolling.map(Observation.fromJson),\n              })\n              dispatch({\n                type: DashboardEventType.ADD_OBSERVATIONS,\n                nodeid: nodeid,\n                observation_type: \"corpus\",\n                observations: test.corpus.map(Observation.fromJson),\n              })\n            }\n          })\n\n        return () => worker.terminate()\n      }\n\n      const url = new URL(\n        `ws${window.location.protocol === \"https:\" ? \"s\" : \"\"}://${window.location.host}/ws`,\n      )\n      if (nodeid) {\n        url.searchParams.set(\"nodeid\", nodeid)\n      }\n\n      const ws = new WebSocket(url)\n\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data, fuzzjsonReviver)\n        const type = Number(data.type)\n        const count_tests = Number(data.count_tests)\n        const count_tests_loaded = Number(data.count_tests_loaded)\n\n        switch (type) {\n          case DashboardEventType.SET_STATUS: {\n            const loading_status = {\n              count_tests: count_tests,\n              count_tests_loaded: count_tests_loaded,\n            }\n            setLoadingStatus(loading_status)\n\n            dispatch({\n              type: DashboardEventType.SET_STATUS,\n              loading_status: loading_status,\n            })\n\n            if (count_tests_loaded === count_tests) {\n              if (statusNotification.current !== null) {\n                dismissNotification(statusNotification.current)\n                statusNotification.current = null\n              }\n              break\n            }\n\n            const progressContent = React.createElement(ProgressBar, {\n              current: count_tests_loaded,\n              total: count_tests,\n              message: `Note: dashboard is still starting up (${count_tests_loaded}/${count_tests} tests loaded)`,\n            })\n\n            if (!statusNotification.current) {\n              statusNotification.current = addNotification(progressContent, null)\n            } else {\n              updateNotification(statusNotification.current, progressContent, null)\n            }\n\n            break\n          }\n\n          case DashboardEventType.ADD_TESTS: {\n            dispatch({\n              type: DashboardEventType.ADD_TESTS,\n              tests: data.tests.map((test: any) => ({\n                database_key: test.database_key,\n                nodeid: test.nodeid,\n                failures: new Map(\n                  Object.entries(test.failures).map(([key, value]) => [\n                    key,\n                    Failure.fromJson(value),\n                  ]),\n                ),\n                fatal_failure: test.fatal_failure,\n                stability: test.stability,\n              })),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_REPORTS: {\n            dispatch({\n              type: DashboardEventType.ADD_REPORTS,\n              nodeid: data.nodeid,\n              worker_uuid: data.worker_uuid,\n              reports: (data.reports as any[]).map(report =>\n                Report.fromJson(data.worker_uuid, report),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_OBSERVATIONS: {\n            dispatch({\n              type: DashboardEventType.ADD_OBSERVATIONS,\n              nodeid: data.nodeid,\n              observation_type: data.observation_type,\n              observations: data.observations.map(Observation.fromJson),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_FAILURES: {\n            dispatch({\n              type: DashboardEventType.ADD_FAILURES,\n              nodeid: data.nodeid,\n              failures: new Map(\n                Object.entries(data.failures).map(([key, value]) => [\n                  key,\n                  Failure.fromJson(value),\n                ]),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.SET_FAILURES: {\n            dispatch({\n              type: DashboardEventType.SET_FAILURES,\n              nodeid: data.nodeid,\n              failures: new Map(\n                Object.entries(data.failures).map(([key, value]) => [\n                  key,\n                  Failure.fromJson(value),\n                ]),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.TEST_LOAD_FINISHED: {\n            dispatch({\n              type: DashboardEventType.TEST_LOAD_FINISHED,\n              nodeids: data.nodeids,\n            })\n            break\n          }\n\n          default:\n            throw new Error(`Unknown event type: ${data.type}`)\n        }\n      }\n\n      setSocket(ws)\n\n      return () => {\n        ws.close()\n      }\n      // a single DataProvider is created for the entire lifetime of a tab. We want to re-load\n      // the provided data whenever we change the nodeid (e.g. going from overview to a specific\n      // test page) or we go from a page which doesn't want data (because it didn't call useData)\n      // to one that does.\n    },\n    // calls tests.clear, but dont want an infinite loop dependency\n\n    [nodeid, loadData, addNotification, dismissNotification, updateNotification],\n  )\n\n  return (\n    <DataContext.Provider value={{ tests, socket, doLoadData, testsLoaded }}>\n      {children}\n    </DataContext.Provider>\n  )\n}\n\nexport function useData(nodeid: string | null = null) {\n  const context = useContext(DataContext)\n  if (!context) {\n    throw new Error(\"useData must be used within a DataProvider\")\n  }\n\n  useEffect(() => {\n    context.doLoadData(nodeid)\n  }, [nodeid, context])\n\n  return context\n}\n","import {\n  faBars,\n  faBook,\n  faBookOpen,\n  faBox,\n  faCode,\n  faCodeCompare,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link, Outlet, useLocation } from \"react-router-dom\"\n\nfunction SidebarLink({\n  to,\n  icon,\n  children,\n  isActive,\n}: {\n  to: string\n  icon: React.ReactNode\n  children: React.ReactNode\n  isActive: (pathname: string) => boolean\n}) {\n  const location = useLocation()\n  return (\n    <Link to={to} className={`sidebar__link__text`}>\n      <div\n        className={`sidebar__link ${isActive(location.pathname) ? \"sidebar__link--active\" : \"\"}`}\n      >\n        <span className=\"sidebar__link__icon\">{icon}</span>\n        {children}\n      </div>\n    </Link>\n  )\n}\n\nexport function Layout() {\n  const location = useLocation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const sidebarRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    function listener(event: MouseEvent) {\n      if (sidebarOpen && sidebarRef.current?.contains(event.target as Node) === false) {\n        setSidebarOpen(false)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", listener)\n    return () => {\n      document.removeEventListener(\"mousedown\", listener)\n    }\n  }, [sidebarOpen])\n\n  useEffect(() => {\n    // close sidebar whenever route changes\n    setSidebarOpen(false)\n  }, [location])\n\n  return (\n    <div className=\"layout\">\n      {!sidebarOpen && (\n        <div className=\"toggle-sidebar\" onClick={() => setSidebarOpen(true)}>\n          <FontAwesomeIcon icon={faBars} size=\"lg\" />\n        </div>\n      )}\n      {/* dim everything when sidebar is open\n         TODO this dims the sidebar itself as well I think, probably don't want\n         to do that*/}\n      {sidebarOpen && <div className=\"opacity-overlay\" />}\n      <div ref={sidebarRef} className={`sidebar ${sidebarOpen ? \"sidebar--open\" : \"\"}`}>\n        <Link to=\"/\" className=\"sidebar__title\">\n          HypoFuzz\n        </Link>\n        <nav className=\"sidebar__nav\">\n          <SidebarLink\n            to=\"/\"\n            isActive={pathname => pathname === \"/\" || pathname.startsWith(\"/tests/\")}\n            icon={<FontAwesomeIcon icon={faCode} />}\n          >\n            Tests\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faCodeCompare} />}\n            to=\"/patches\"\n            isActive={pathname => pathname === \"/patches\"}\n          >\n            Patches\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faBox} />}\n            to=\"/collected\"\n            isActive={pathname => pathname === \"/collected\"}\n          >\n            Collection\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faUser} />}\n            to=\"/workers\"\n            isActive={pathname => pathname === \"/workers\"}\n          >\n            Workers\n          </SidebarLink>\n\n          <div className=\"sidebar__separator\"></div>\n          <a\n            href={`${import.meta.env.BASE_URL.replace(/\\/$/, \"\")}/docs/`}\n            className=\"sidebar__link__text\"\n          >\n            <div className={`sidebar__link`}>\n              <span className=\"sidebar__link__icon\">\n                <FontAwesomeIcon icon={faBookOpen} />\n              </span>\n              Docs\n            </div>\n          </a>\n        </nav>\n      </div>\n      <div className=\"content\">\n        <Outlet />\n      </div>\n    </div>\n  )\n}\n","import { faArrowDown, faArrowUp, faTimes } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { ReactNode, useEffect, useMemo, useState } from \"react\"\nimport { Pagination } from \"src/components/Pagination\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\n\ninterface TableHeader<T> {\n  content: ReactNode\n  sortKey?: (item: T) => any[] | string | number\n  align?: string\n}\n\ninterface TableProps<T> {\n  headers: TableHeader<T>[]\n  data: T[]\n  row: (item: T) => React.ReactNode[]\n  mobileRow?: (item: T) => React.ReactNode\n  getKey?: (item: T) => string | number | undefined\n  filterStrings?: (item: T) => string[]\n  onFilterChange?: (filter: string) => void\n  perPage?: number\n}\n\nenum SortOrder {\n  ASC = 0,\n  DESC = 1,\n}\n\nexport function Table<T>({\n  headers,\n  data,\n  row,\n  mobileRow,\n  getKey,\n  onFilterChange,\n  filterStrings,\n  perPage,\n}: TableProps<T>) {\n  const [sortColumn, setSortColumn] = useState<number | null>(null)\n  const [sortDirection, setSortDirection] = useState<SortOrder>(SortOrder.ASC)\n  const [filterString, setFilterString] = useState(\"\")\n  const [page, setPage] = useState(0)\n  const isMobile = useIsMobile()\n\n  function getDisplayData() {\n    let displayData = data\n\n    if (filterString) {\n      displayData = data.filter(item => {\n        if (filterStrings) {\n          return filterStrings(item).some(checkString =>\n            checkString.toLowerCase().includes(filterString.toLowerCase()),\n          )\n        }\n        return true\n      })\n    }\n\n    if (sortColumn === null) {\n      return displayData\n    }\n\n    const sorted = [...displayData].sortKey(item => headers[sortColumn].sortKey!(item))\n    return sortDirection === SortOrder.ASC ? sorted : sorted.reverse()\n  }\n\n  // recompute display data when inputs change\n  const displayData = useMemo(\n    () => getDisplayData(),\n    [data, filterString, sortColumn, sortDirection],\n  )\n\n  const pageCount = useMemo(() => {\n    if (!perPage) {\n      return 1\n    }\n    return Math.max(1, Math.ceil(displayData.length / perPage))\n  }, [displayData.length, perPage])\n\n  // Clamp page index if data size changes\n  useEffect(() => {\n    if (!perPage) {\n      return\n    }\n    if (page >= pageCount) {\n      setPage(pageCount - 1)\n    }\n  }, [page, pageCount, perPage])\n\n  const handleHeaderClick = (index: number) => {\n    if (!headers[index].sortKey) return\n\n    if (sortColumn === index) {\n      setSortDirection(prev =>\n        prev === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC,\n      )\n    } else {\n      setSortColumn(index)\n      setSortDirection(SortOrder.ASC)\n    }\n    if (perPage) {\n      setPage(0)\n    }\n  }\n\n  function doFilterChange(filter: string) {\n    setFilterString(filter)\n    onFilterChange?.(filter)\n    if (perPage) {\n      setPage(0)\n    }\n  }\n\n  const pagedData = useMemo(() => {\n    if (!perPage) {\n      return displayData\n    }\n    const start = page * perPage\n    const end = (page + 1) * perPage\n    return displayData.slice(start, end)\n  }, [displayData, page, perPage])\n\n  return (\n    <div className=\"table\">\n      {/* only show filter box if some rows are filterable */}\n      {filterStrings !== undefined && (\n        <div className=\"table__controls\">\n          <div className=\"table__filter\">\n            <input\n              type=\"text\"\n              placeholder=\"Filter\"\n              value={filterString}\n              onChange={e => doFilterChange(e.target.value)}\n              className=\"table__filter__input\"\n            />\n            {filterString && (\n              <span className=\"table__filter__clear\" onClick={() => doFilterChange(\"\")}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            )}\n          </div>\n          {perPage && pageCount > 1 && (\n            <div className=\"table__pagination table__pagination--top\">\n              <Pagination\n                currentPage={page}\n                pageCount={pageCount}\n                onPageChange={setPage}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      {filterStrings === undefined && perPage && pageCount > 1 && (\n        <div className=\"table__pagination table__pagination--top\">\n          <Pagination currentPage={page} pageCount={pageCount} onPageChange={setPage} />\n        </div>\n      )}\n      {mobileRow !== undefined && isMobile ? (\n        pagedData.map(item => (\n          <div key={getKey ? getKey(item) : undefined}>{mobileRow(item)}</div>\n        ))\n      ) : (\n        <table className=\"table__table\">\n          <thead>\n            <tr>\n              {headers.map((header, index) => (\n                <th\n                  key={index}\n                  onClick={() => handleHeaderClick(index)}\n                  className={header.sortKey ? \"table--sortable\" : \"\"}\n                >\n                  <div\n                    className={`table__header table__header--${header.align ?? \"left\"}`}\n                  >\n                    {header.content}\n                    {header.sortKey && (\n                      <div className=\"table__sort\">\n                        {[SortOrder.ASC, SortOrder.DESC].map(order => (\n                          <div\n                            className={`table__sort__arrow table__sort__arrow--${\n                              order === SortOrder.ASC ? \"asc\" : \"desc\"\n                            } ${\n                              sortColumn === index && sortDirection === order\n                                ? \"table__sort__arrow--active\"\n                                : \"\"\n                            }`}\n                          >\n                            {order === SortOrder.ASC ? (\n                              <FontAwesomeIcon icon={faArrowUp} />\n                            ) : (\n                              <FontAwesomeIcon icon={faArrowDown} />\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {pagedData.map(item => {\n              const rowValue = row(item)\n              console.assert(rowValue.length === headers.length)\n              return (\n                <tr key={getKey ? getKey(item) : undefined}>\n                  {rowValue.map((cell, colIndex) => (\n                    <td key={colIndex}>{cell}</td>\n                  ))}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      )}\n      {perPage && pageCount > 1 && (\n        <div className=\"table__pagination table__pagination--bottom\">\n          <Pagination currentPage={page} pageCount={pageCount} onPageChange={setPage} />\n        </div>\n      )}\n      {filterString && displayData.length < data.length && (\n        <div className=\"table__filter-status\">\n          Showing {displayData.length} of {data.length} rows\n          <span\n            className=\"table__filter-status__clear\"\n            onClick={() => {\n              setFilterString(\"\")\n              onFilterChange?.(\"\")\n            }}\n          >\n            [clear]\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\n","export interface CollectionResult {\n  database_key: string\n  nodeid: string\n  status: string\n  status_reason?: string\n}\n\nexport async function fetchData<T>(endpoint: string): Promise<T | null> {\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    const response = await fetch(\n      new URL(/* @vite-ignore */ \"dashboard_state/api.json\", import.meta.url),\n    )\n    return await response.json()\n  }\n\n  try {\n    const response = await fetch(`/api/${endpoint}`)\n    return await response.json()\n  } catch (e) {\n    console.error(`Failed to fetch /api/${endpoint}`, e)\n    return null\n  }\n}\n\nexport async function fetchPatches<T>(nodeid: string): Promise<T | null> {\n  const data = await fetchData<T>(`patches/${nodeid}`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.patches?.[nodeid]\n  }\n  return data\n}\n\nexport async function fetchAvailablePatches(): Promise<string[] | null> {\n  const data = await fetchData<string[]>(`available_patches/`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.available_patches\n  }\n  return data\n}\n\nexport async function fetchCollectionStatus(): Promise<CollectionResult[] | null> {\n  const data = await fetchData<CollectionResult[]>(`collection_status/`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.collection_status\n  }\n  return data\n}\n","import { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Table } from \"src/components/Table\"\nimport { CollectionResult, fetchCollectionStatus } from \"src/utils/api\"\nimport { commonPrefix } from \"src/utils/utils\"\n\nconst statusOrder = {\n  not_collected: 0,\n  collected: 1,\n}\n\nexport function CollectionStatusPage() {\n  const [collectionStatus, setCollectionStatus] = useState<CollectionResult[] | null>(\n    null,\n  )\n\n  useEffect(() => {\n    fetchCollectionStatus().then(data => {\n      setCollectionStatus(data)\n    })\n  }, [])\n\n  if (collectionStatus === null) {\n    return null\n  }\n\n  if (!collectionStatus.length) {\n    return (\n      <div className=\"card\">\n        <div className=\"card__header\">Test collection</div>\n        No tests collected.\n      </div>\n    )\n  }\n\n  const sortedResults = [...collectionStatus].sortKey(result => [\n    statusOrder[result.status as keyof typeof statusOrder],\n    result.status_reason,\n    result.nodeid,\n  ])\n\n  const nodeidPrefix = commonPrefix(sortedResults.map(r => r.nodeid))\n\n  const headers = [\n    {\n      content: \"Test\",\n      sortKey: (item: CollectionResult) => item.nodeid,\n    },\n    {\n      content: \"Status\",\n      sortKey: (item: CollectionResult) => [\n        statusOrder[item.status as keyof typeof statusOrder],\n        item.status_reason,\n      ],\n      align: \"center\",\n    },\n  ]\n\n  const row = (item: CollectionResult): React.ReactNode[] => {\n    const nodeid = item.nodeid.slice(nodeidPrefix.length)\n    const nodeidRow = (\n      <div style={{ wordBreak: \"break-all\" }}>\n        {/* don't link to a nonexistent page */}\n        {item.status == \"collected\" ? (\n          <Link to={`/tests/${encodeURIComponent(item.nodeid)}`} className=\"test__link\">\n            {nodeid}\n          </Link>\n        ) : (\n          nodeid\n        )}\n      </div>\n    )\n\n    return [\n      nodeidRow,\n      <div style={{ textAlign: \"center\" }}>\n        {item.status === \"collected\" ? (\n          <div className=\"pill pill__success\">Collected</div>\n        ) : (\n          <div className=\"pill pill__neutral\">\n            Not collected ({item.status_reason!})\n          </div>\n        )}\n      </div>,\n    ]\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Test collection status</div>\n      <Table\n        headers={headers}\n        data={sortedResults}\n        row={row}\n        getKey={item => item.database_key}\n        filterStrings={item => [\n          item.nodeid,\n          item.status === \"collected\"\n            ? \"Collected\"\n            : `Not collected (${item.status_reason})`,\n        ]}\n        perPage={100}\n      />\n    </div>\n  )\n}\n","export function NotFoundPage() {\n  return <h1>Page not found!</h1>\n}\n","/*\nLanguage: Diff\nDescription: Unified and context diff\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nWebsite: https://www.gnu.org/software/diffutils/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction diff(hljs) {\n  const regex = hljs.regex;\n  return {\n    name: 'Diff',\n    aliases: [ 'patch' ],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        match: regex.either(\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n          /^--- +\\d+,\\d+ +----$/\n        )\n      },\n      {\n        className: 'comment',\n        variants: [\n          {\n            begin: regex.either(\n              /Index: /,\n              /^index/,\n              /={3,}/,\n              /^-{3}/,\n              /^\\*{3} /,\n              /^\\+{3}/,\n              /^diff --git/\n            ),\n            end: /$/\n          },\n          { match: /^\\*{15}$/ }\n        ]\n      },\n      {\n        className: 'addition',\n        begin: /^\\+/,\n        end: /$/\n      },\n      {\n        className: 'deletion',\n        begin: /^-/,\n        end: /$/\n      },\n      {\n        className: 'addition',\n        begin: /^!/,\n        end: /$/\n      }\n    ]\n  };\n}\n\nexport { diff as default };\n","import \"highlight.js/styles/github.css\"\n\nimport { faCheck, faCopy, faDownload } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport hljs from \"highlight.js/lib/core\"\nimport diff from \"highlight.js/lib/languages/diff\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Toggle } from \"src/components/Toggle\"\nimport { fetchPatches } from \"src/utils/api\"\nimport { reHighlight } from \"src/utils/utils\"\n\nhljs.registerLanguage(\"diff\", diff)\n\nexport function TestPatches({ nodeid }: { nodeid: string }) {\n  const [patches, setPatches] = useState<Record<string, string>>({})\n  const [loading, setLoading] = useState(true)\n  const [patchType, setPatchType] = useState<string | null>(null)\n  const [copySuccess, setCopySuccess] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    fetchPatches<Record<string, string>>(nodeid).then(data => {\n      if (data) {\n        setPatches(data)\n      }\n      setLoading(false)\n    })\n  }, [nodeid])\n\n  useEffect(() => {\n    reHighlight(containerRef, true)\n  }, [patches, patchType])\n\n  if (loading) {\n    return (\n      <div className=\"card\">\n        <p>Loading patches...</p>\n      </div>\n    )\n  }\n\n  if (Object.values(patches).every(patch => patch === null)) {\n    return (\n      <div className=\"card\">\n        <p>No patches for this test</p>\n      </div>\n    )\n  }\n\n  // also defines patch display order by iteration order here\n  const patchNames = new Map([\n    [\"failing\", \"Failing\"],\n    [\"covering\", \"Covering\"],\n  ])\n\n  // get the first patch name which is present in patches\n  const activePatch =\n    patchType ?? Array.from(patchNames.keys()).find(name => patches[name])!\n  const patch = patches[activePatch]\n\n  const handleCopy = async () => {\n    await navigator.clipboard.writeText(patch)\n    setCopySuccess(true)\n    setTimeout(() => {\n      setCopySuccess(false)\n    }, 2000)\n  }\n\n  const handleDownload = () => {\n    const blob = new Blob([patch], { type: \"text/plain\" })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement(\"a\")\n    a.href = url\n    // drop the filename, use just the test name\n    a.download = `${activePatch}-${nodeid.split(\"::\").pop()}.patch`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div ref={containerRef}>\n      <div\n        style={{\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\",\n          display: \"flex\",\n          fontSize: \"1.05rem\",\n          fontWeight: \"500\",\n        }}\n      >\n        <Toggle\n          value={activePatch}\n          onChange={setPatchType}\n          options={Array.from(patchNames.entries())\n            .filter(([value]) => patches[value])\n            .map(([value, content]) => ({\n              value,\n              content,\n            }))}\n        />\n      </div>\n      <pre className=\"patch__pre\">\n        <div className=\"patch__controls\">\n          <div\n            className={`patch__controls__control ${copySuccess ? \"patch__controls__control--success\" : \"\"}`}\n            onClick={handleCopy}\n            title={\"Copy patch\"}\n          >\n            <FontAwesomeIcon icon={copySuccess ? faCheck : faCopy} />\n          </div>\n          <div\n            className=\"patch__controls__control\"\n            onClick={handleDownload}\n            title=\"Download patch\"\n          >\n            <FontAwesomeIcon icon={faDownload} />\n          </div>\n        </div>\n        <code className=\"language-diff\">{patch}</code>\n      </pre>\n    </div>\n  )\n}\n","import { faArrowRight } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Collapsible } from \"src/components/Collapsible\"\nimport { TestPatches } from \"src/components/TestPatches\"\nimport { fetchAvailablePatches } from \"src/utils/api\"\n\nexport function PatchesPage() {\n  const [nodeids, setNodeids] = useState<string[] | null>(null)\n\n  useEffect(() => {\n    fetchAvailablePatches().then(data => {\n      setNodeids(data)\n    })\n  }, [])\n\n  if (nodeids === null || nodeids.length === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"card__header\">Patches</div>\n        <p>No tests with patches present.</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\" style={{ marginBottom: \"1rem\" }}>\n        Patches\n      </div>\n      {nodeids.map(nodeid => (\n        <Collapsible\n          title={\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <span>{nodeid}</span>\n              <Link\n                to={`/tests/${encodeURIComponent(nodeid)}`}\n                className=\"patches__test__link\"\n                style={{\n                  marginLeft: \"8px\",\n                }}\n              >\n                View test <FontAwesomeIcon icon={faArrowRight} />\n              </Link>\n            </div>\n          }\n          headerClass=\"patches__test\"\n          defaultState=\"closed\"\n        >\n          <TestPatches nodeid={nodeid} />\n        </Collapsible>\n      ))}\n    </div>\n  )\n}\n","import { ScaleContinuousNumeric, scaleLinear, scaleSymlog } from \"d3-scale\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\ninterface AxisProps {\n  // viewport scale with zoom transformations applied\n  viewportScale: ScaleContinuousNumeric<number, number>\n  // original scale\n  baseScale: ScaleContinuousNumeric<number, number>\n  orientation: \"bottom\" | \"left\"\n  tickCount?: number\n  transform?: string\n  isLogScale?: boolean\n  zoomState: ZoomState\n}\n\ninterface Tick {\n  offset: number\n  name: string\n}\n\nfunction formatTick(value: number): string {\n  if (value >= 1_000_000) {\n    return `${Math.floor(value / 1_000_000)}M`\n  } else if (value >= 1000) {\n    return `${Math.floor(value / 1000)}k`\n  } else if (value > 0) {\n    return value.toLocaleString()\n  } else {\n    return \"0\"\n  }\n}\n\nfunction getTicks({\n  baseScale,\n  viewportScale,\n  tickCount,\n  zoomState,\n  orientation,\n}: {\n  baseScale: ScaleContinuousNumeric<number, number>\n  viewportScale: ScaleContinuousNumeric<number, number>\n  tickCount: number\n  zoomState: ZoomState\n  orientation: \"bottom\" | \"left\"\n}): Tick[] {\n  const range = baseScale.range()\n  let visibleDomain: [number, number]\n\n  if (orientation === \"bottom\") {\n    visibleDomain = [\n      baseScale.invert((range[0] - zoomState.x) / zoomState.scaleX),\n      baseScale.invert((range[1] - zoomState.x) / zoomState.scaleX),\n    ]\n  } else {\n    visibleDomain = [\n      baseScale.invert(range[0] - zoomState.y),\n      baseScale.invert(range[1] - zoomState.y),\n    ]\n  }\n\n  let tickValues = baseScale\n    .domain(visibleDomain)\n    .range(range)\n    .ticks(tickCount)\n    // don't show negative tick values\n    .filter(value => value >= 0)\n\n  return tickValues.map(value => ({\n    offset: viewportScale(value),\n    name: formatTick(value),\n  }))\n}\n\nexport function Axis({\n  baseScale,\n  viewportScale,\n  orientation,\n  tickCount = 5,\n  transform,\n  zoomState,\n}: AxisProps) {\n  const ticks = getTicks({\n    baseScale,\n    viewportScale,\n    tickCount,\n    zoomState,\n    orientation,\n  })\n\n  const isHorizontal = orientation === \"bottom\"\n  const [x1, y1, x2, y2] = isHorizontal\n    ? [0, 0, baseScale.range()[1], 0] // horizontal line\n    : [0, 0, 0, baseScale.range()[0]] // vertical line\n\n  return (\n    <g className={`axis axis--${orientation}`} transform={transform}>\n      {/* Main axis line */}\n      <line\n        className=\"domain\"\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      {/* end caps */}\n      <line\n        className=\"domain\"\n        x1={isHorizontal ? x1 : x1}\n        y1={isHorizontal ? y1 : y1}\n        x2={isHorizontal ? x1 : x1 - 6}\n        y2={isHorizontal ? y1 + 6 : y1}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      <line\n        className=\"domain\"\n        x1={isHorizontal ? x2 : x2}\n        y1={isHorizontal ? y2 : y2}\n        x2={isHorizontal ? x2 : x2 - 6}\n        y2={isHorizontal ? y2 + 6 : y2}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      {/* Tick marks and labels */}\n      {ticks.map((tick, i) => {\n        const tickX = isHorizontal ? tick.offset : 0\n        const tickY = isHorizontal ? 0 : tick.offset\n        const labelX = isHorizontal ? tick.offset : -10\n        const labelY = isHorizontal ? 15 : tick.offset + 4\n\n        return (\n          <g className=\"tick\" key={i}>\n            {/* Tick mark */}\n            <line\n              x1={tickX}\n              y1={tickY}\n              x2={tickX + (isHorizontal ? 0 : -6)}\n              y2={tickY + (isHorizontal ? 6 : 0)}\n              stroke=\"currentColor\"\n              strokeWidth={1}\n            />\n\n            {/* Tick label */}\n            <text\n              x={labelX}\n              y={labelY}\n              textAnchor={isHorizontal ? \"middle\" : \"end\"}\n              fontSize=\"12\"\n              fill=\"currentColor\"\n            >\n              {tick.name}\n            </text>\n          </g>\n        )\n      })}\n    </g>\n  )\n}\n","import { ScaleContinuousNumeric } from \"d3-scale\"\nimport { line as d3_line } from \"d3-shape\"\nimport { navigateOnClick } from \"src/utils/utils\"\n\nimport { GraphLine, GraphReport } from \"./types\"\n\ninterface DataLinesProps {\n  lines: GraphLine[]\n  // viewport scale with zoom applied\n  viewportXScale: ScaleContinuousNumeric<number, number>\n  viewportYScale: ScaleContinuousNumeric<number, number>\n  xValue: (d: GraphReport) => number\n  yValue: (d: GraphReport) => number\n  navigate: (path: string) => void\n}\n\nexport function DataLines({\n  lines,\n  viewportXScale,\n  viewportYScale,\n  xValue,\n  yValue,\n  navigate,\n}: DataLinesProps) {\n  // Calculate path data using D3 with viewport scales (zoom already applied)\n  const lineGenerator = d3_line<GraphReport>()\n    .x(d => viewportXScale(xValue(d)))\n    .y(d => viewportYScale(yValue(d)))\n  return (\n    <g style={{ pointerEvents: \"auto\" }}>\n      {lines.map(line => {\n        const pathData = lineGenerator(line.reports) || \"\"\n\n        return (\n          <path\n            key={`line-${line.url || \"no-url\"}`}\n            d={pathData}\n            fill=\"none\"\n            stroke={line.color}\n            className={`coverage-line ${line.isActive ? \"coverage-line__selected\" : \"\"}`}\n            style={{\n              cursor: line.url ? \"pointer\" : \"default\",\n            }}\n            onClick={event => {\n              if (line.url) {\n                navigateOnClick(event as any, line.url, navigate)\n              }\n            }}\n          />\n        )\n      })}\n    </g>\n  )\n}\n","import { Report, StatusCounts } from \"../../types/dashboard\"\n\nexport class GraphReport {\n  constructor(\n    public nodeid: string,\n    public linear_status_counts: StatusCounts,\n    public linear_elapsed_time: number,\n    public behaviors: number,\n    public fingerprints: number,\n  ) {}\n\n  static fromReport(nodeid: string, report: Report): GraphReport {\n    return new GraphReport(\n      nodeid,\n      report.status_counts,\n      report.elapsed_time,\n      report.behaviors,\n      report.fingerprints,\n    )\n  }\n}\n\nexport interface GraphLine {\n  nodeid: string\n  url: string | null\n  reports: GraphReport[]\n  color: string\n  isActive: boolean\n}\n","import { useEffect, useState } from \"react\"\n\nconst settingCallbacks = new Map<string, Set<(value: any) => void>>()\n\nexport function useSetting<T>(key: string, defaultValue: T): [T, (value: T) => void] {\n  const [value, _setValue] = useState<T>(() => {\n    // note: sessionStorage is per-tab. localStorage is per-browser-session.\n    // we may want to add a param to use one or the other (with a fallback from\n    // session to local storage?)\n    const saved = sessionStorage.getItem(key)\n    if (saved === null) return defaultValue\n    return JSON.parse(saved)\n  })\n\n  useEffect(() => {\n    if (!settingCallbacks.has(key)) {\n      settingCallbacks.set(key, new Set())\n    }\n    settingCallbacks.get(key)!.add(_setValue)\n\n    return () => {\n      settingCallbacks.get(key)!.delete(_setValue)\n    }\n  }, [key])\n\n  function setValue(newValue: T) {\n    sessionStorage.setItem(key, JSON.stringify(newValue))\n    // broadcast settings changes to other listeners. This way if there are two\n    // useSetting call for the same setting key, changes in one get reflected in the other.\n    settingCallbacks.get(key)!.forEach(callback => callback(newValue))\n  }\n\n  return [value, setValue]\n}\n","import { ScaleContinuousNumeric } from \"d3-scale\"\nimport { scaleLinear as d3_scaleLinear, scaleSymlog as d3_scaleSymlog } from \"d3-scale\"\n\nimport { max } from \"../../utils/utils\"\nimport { GraphReport } from \"./types\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\nexport interface ScaleBounds {\n  xMin?: number\n  xMax?: number\n  yMin?: number\n  yMax?: number\n}\n\nconst identityZoomState: ZoomState = { x: 0, y: 0, scaleX: 1 }\n\nfunction getConstrainedTransform({\n  zoomState,\n  bounds,\n  baseX,\n  baseY,\n}: {\n  zoomState: ZoomState\n  bounds: ScaleBounds\n  baseX: ScaleContinuousNumeric<number, number>\n  baseY: ScaleContinuousNumeric<number, number>\n}) {\n  if (!bounds) return zoomState\n\n  let constrained = { ...zoomState }\n\n  // Check horizontal bounds\n  if (bounds.xMin !== undefined || bounds.xMax !== undefined) {\n    const xRange = baseX.range()\n    const rangeStart = xRange[0]\n    const rangeEnd = xRange[1]\n\n    const leftVisibleValue = baseX.invert(\n      (rangeStart - constrained.x) / constrained.scaleX,\n    )\n    const rightVisibleValue = baseX.invert(\n      (rangeEnd - constrained.x) / constrained.scaleX,\n    )\n\n    if (bounds.xMin !== undefined && leftVisibleValue < bounds.xMin) {\n      constrained.x = rangeStart - baseX(bounds.xMin) * constrained.scaleX\n    }\n    if (bounds.xMax !== undefined && rightVisibleValue > bounds.xMax) {\n      constrained.x = rangeEnd - baseX(bounds.xMax) * constrained.scaleX\n    }\n  }\n\n  // Check vertical bounds\n  if (bounds.yMin !== undefined || bounds.yMax !== undefined) {\n    const yRange = baseY.range()\n    const rangeTop = yRange[1]\n    const rangeBottom = yRange[0]\n\n    if (\n      bounds.yMin !== undefined &&\n      baseY.invert(rangeBottom - constrained.y) < bounds.yMin\n    ) {\n      constrained.y = rangeBottom - baseY(bounds.yMin)\n    }\n    if (\n      bounds.yMax !== undefined &&\n      baseY.invert(rangeTop - constrained.y) > bounds.yMax\n    ) {\n      constrained.y = rangeTop - baseY(bounds.yMax)\n    }\n  }\n\n  return constrained\n}\n\nexport function useScales(\n  data: GraphReport[],\n  scaleSetting: string,\n  scaleSettingY: string,\n  axisSettingX: string,\n  axisSettingY: string,\n  width: number,\n  height: number,\n  zoomState: ZoomState = identityZoomState,\n  bounds: ScaleBounds,\n) {\n  const xValue = (report: GraphReport) =>\n    axisSettingX === \"time\"\n      ? report.linear_elapsed_time\n      : report.linear_status_counts.sum()\n\n  const yValue = (report: GraphReport) =>\n    axisSettingY === \"behaviors\" ? report.behaviors : report.fingerprints\n\n  const baseX = (scaleSetting === \"log\" ? d3_scaleSymlog() : d3_scaleLinear())\n    .domain([0, max(data.map(r => xValue(r))) || 1])\n    .range([0, width])\n\n  const baseY = (scaleSettingY === \"log\" ? d3_scaleSymlog() : d3_scaleLinear())\n    .domain([0, max(data.map(r => yValue(r))) || 0])\n    .range([height, 0])\n\n  const constrainedTransform = getConstrainedTransform({\n    zoomState,\n    bounds,\n    baseX,\n    baseY,\n  })\n\n  // Apply horizontal zoom and translation\n  const originalXRange = baseX.range()\n  const viewportX = baseX\n    .copy()\n    .range([\n      originalXRange[0] * constrainedTransform.scaleX + constrainedTransform.x,\n      originalXRange[1] * constrainedTransform.scaleX + constrainedTransform.x,\n    ])\n\n  // Only apply translation to Y scale, not scaling - for horizontal-only zoom\n  const viewportY = baseY\n    .copy()\n    .range([\n      baseY.range()[0] + constrainedTransform.y,\n      baseY.range()[1] + constrainedTransform.y,\n    ])\n\n  return {\n    xValue,\n    yValue,\n    baseX,\n    baseY,\n    viewportX,\n    viewportY,\n    constrainedTransform,\n  }\n}\n","import { interpolate } from \"d3-interpolate\"\nimport { MouseEvent, useEffect, useRef, useState } from \"react\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\ninterface UseZoomOptions {\n  minScale?: number\n  maxScale?: number\n  wheelSensitivity?: number\n  containerRef: React.RefObject<HTMLElement | null>\n  onZoomEnd: () => void\n  onDragEnd: () => void\n}\n\ninterface UseZoomReturn {\n  transform: ZoomState\n  onMouseDown: (event: MouseEvent<HTMLElement>) => void\n  onDoubleClick: (event: MouseEvent<HTMLElement>) => void\n  resetZoom: () => void\n  setTransform: (transform: ZoomState) => void\n}\n\nconst defaultZoomState: ZoomState = { x: 0, y: 0, scaleX: 1 }\n\nexport function useZoom({\n  minScale = 1,\n  maxScale = 50,\n  wheelSensitivity = 0.0013,\n  containerRef,\n  onZoomEnd = () => {},\n  onDragEnd = () => {},\n}: UseZoomOptions): UseZoomReturn {\n  const [transform, setTransformState] = useState<ZoomState>(defaultZoomState)\n  const isDragging = useRef(false)\n  const lastPointer = useRef({ x: 0, y: 0 })\n  const animationRef = useRef<number | null>(null)\n  const isZooming = useRef(false)\n  const wheelEventCount = useRef(0)\n  const wheelTimeoutRef = useRef<number | null>(null)\n\n  const cancelAnimation = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current)\n      animationRef.current = null\n    }\n  }\n\n  const setTransform = (newTransform: ZoomState) => {\n    cancelAnimation()\n    const constrainedTransform = newTransform\n    setTransformState(constrainedTransform)\n  }\n\n  const resetZoom = () => {\n    cancelAnimation()\n\n    const startTransform = transform\n    const endTransform = defaultZoomState\n    const duration = 500 // milliseconds\n    const startTime = performance.now()\n\n    const interpolateX = interpolate(startTransform.x, endTransform.x)\n    const interpolateY = interpolate(startTransform.y, endTransform.y)\n    const interpolateScaleX = interpolate(startTransform.scaleX, endTransform.scaleX)\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime\n      const progress = Math.min(elapsed / duration, 1)\n\n      // ease-out cubic\n      const eased = 1 - Math.pow(1 - progress, 3)\n\n      const newTransform: ZoomState = {\n        x: interpolateX(eased),\n        y: interpolateY(eased),\n        scaleX: interpolateScaleX(eased),\n      }\n\n      setTransformState(newTransform)\n\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animate)\n      } else {\n        animationRef.current = null\n      }\n    }\n\n    animationRef.current = requestAnimationFrame(animate)\n  }\n\n  useEffect(() => {\n    const container = containerRef.current\n    if (!container) return\n\n    const handleWheel = (event: WheelEvent) => {\n      cancelAnimation()\n\n      const rect = container.getBoundingClientRect()\n      const mouseX = event.clientX - rect.left\n\n      // ignore horizontal swipes\n      if (Math.abs(event.deltaX) > Math.abs(event.deltaY)) {\n        return\n      }\n\n      const scaleFactor = 1 - event.deltaY * wheelSensitivity\n      const newScale = Math.max(\n        minScale,\n        Math.min(maxScale, transform.scaleX * scaleFactor),\n      )\n      const wouldZoom = newScale !== transform.scaleX\n\n      // Prevent page scrolling if we would zoom OR if we're in an active zoom session\n      if (wouldZoom || isZooming.current) {\n        event.preventDefault()\n        event.stopPropagation()\n      } else {\n        // increment counter to indicate wheel activity\n        wheelEventCount.current++\n      }\n      if (wouldZoom) {\n        // Mark that we're in an active zoom session\n        isZooming.current = true\n\n        const scaleRatio = newScale / transform.scaleX\n        const newX = mouseX - (mouseX - transform.x) * scaleRatio\n        // horizontal-only zoom; keep y unchanged\n        const newTransform = {\n          x: newX,\n          y: transform.y,\n          scaleX: newScale,\n        }\n        const constrainedTransform = newTransform\n        setTransformState(constrainedTransform)\n      }\n\n      // Reset wheel event counter and set timeout to detect when wheel events stop\n      wheelEventCount.current = 0\n\n      // Clear any existing timeout\n      if (wheelTimeoutRef.current) {\n        clearTimeout(wheelTimeoutRef.current)\n      }\n\n      // Set a timeout to check if wheel events have stopped\n      wheelTimeoutRef.current = window.setTimeout(() => {\n        // If wheel event counter is still 0, no new wheel events came in\n        if (wheelEventCount.current === 0) {\n          isZooming.current = false\n          onZoomEnd()\n        }\n        wheelTimeoutRef.current = null\n      }, 150)\n    }\n\n    container.addEventListener(\"wheel\", handleWheel, { passive: false })\n\n    return () => {\n      container.removeEventListener(\"wheel\", handleWheel)\n    }\n  }, [transform, minScale, maxScale, wheelSensitivity, cancelAnimation])\n\n  const onMouseDown = (event: MouseEvent<HTMLElement>) => {\n    if (event.button !== 0) return // Only accept left mouse button\n    cancelAnimation()\n\n    isDragging.current = true\n    lastPointer.current = { x: event.clientX, y: event.clientY }\n\n    const handleMouseMove = (e: globalThis.MouseEvent) => {\n      if (!isDragging.current) return\n\n      const deltaX = e.clientX - lastPointer.current.x\n      const deltaY = e.clientY - lastPointer.current.y\n\n      setTransformState(prev => {\n        const newTransform = {\n          x: prev.x + deltaX,\n          y: prev.y + deltaY,\n          scaleX: prev.scaleX,\n        }\n        return newTransform\n      })\n\n      lastPointer.current = { x: e.clientX, y: e.clientY }\n    }\n\n    const handleMouseUp = () => {\n      isDragging.current = false\n      document.removeEventListener(\"mousemove\", handleMouseMove)\n      document.removeEventListener(\"mouseup\", handleMouseUp)\n      onDragEnd()\n    }\n\n    document.addEventListener(\"mousemove\", handleMouseMove)\n    document.addEventListener(\"mouseup\", handleMouseUp)\n  }\n\n  const onDoubleClick = (event: MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n    resetZoom()\n  }\n\n  useEffect(() => {\n    return () => {\n      cancelAnimation()\n      if (wheelTimeoutRef.current) {\n        clearTimeout(wheelTimeoutRef.current)\n      }\n    }\n  }, [cancelAnimation])\n\n  return {\n    transform,\n    onMouseDown,\n    onDoubleClick,\n    resetZoom,\n    setTransform,\n  }\n}\n","import {\n  faCircleDot,\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { interpolateRgb as d3_interpolateRgb } from \"d3-interpolate\"\nimport { Quadtree, quadtree } from \"d3-quadtree\"\nimport {\n  scaleLinear as d3_scaleLinear,\n  scaleOrdinal as d3_scaleOrdinal,\n} from \"d3-scale\"\nimport {\n  interpolateViridis as d3_interpolateViridis,\n  schemeCategory10 as d3_schemeCategory10,\n} from \"d3-scale-chromatic\"\nimport { select as d3_select } from \"d3-selection\"\nimport { zoomIdentity as d3_zoomIdentity } from \"d3-zoom\"\nimport { Set } from \"immutable\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Axis } from \"src/components/graph/Axis\"\nimport { DataLines } from \"src/components/graph/DataLines\"\nimport { GraphLine, GraphReport } from \"src/components/graph/types\"\nimport { Toggle } from \"src/components/Toggle\"\n// import BoxSelect from \"src/assets/box-select.svg?react\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\nimport { useSetting } from \"src/hooks/useSetting\"\nimport { Test } from \"src/types/test\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { max, min, readableNodeid } from \"src/utils/utils\"\n\nconst GRAPH_HEIGHT = 270\nimport { useScales } from \"./useScales\"\nimport { useZoom } from \"./useZoom\"\n\nconst d3 = {\n  zoomIdentity: d3_zoomIdentity,\n  select: d3_select,\n  scaleLinear: d3_scaleLinear,\n  scaleOrdinal: d3_scaleOrdinal,\n  interpolateViridis: d3_interpolateViridis,\n  interpolateRgb: d3_interpolateRgb,\n  schemeCategory10: d3_schemeCategory10,\n}\n\nfunction graphLines(\n  tests: Map<string, Test>,\n  viewSetting: WorkerView,\n  workers_after: number | null,\n  reportsColor: (nodeid: string) => string,\n): GraphLine[] {\n  let lines: GraphLine[] = []\n\n  if (viewSetting === WorkerView.TOGETHER) {\n    lines = Array.from(tests.entries())\n      .sortKey(([nodeid, test]) => nodeid)\n      .map(([nodeid, test]) => ({\n        nodeid: nodeid,\n        url: `/tests/${encodeURIComponent(nodeid)}`,\n        reports: graphReports(test, workers_after),\n        color: reportsColor(nodeid),\n        isActive: false,\n      }))\n  } else if (viewSetting === WorkerView.SEPARATE) {\n    const timestamps: number[] = []\n    for (const test of tests.values()) {\n      for (const workerReports of test.reports_by_worker.values()) {\n        if (workerReports.length > 0) {\n          timestamps.push(workerReports[0].timestamp)\n        }\n      }\n    }\n\n    const minTimestamp = min(timestamps) ?? 0\n    const maxTimestamp = max(timestamps) ?? 0\n\n    function timeColor(timestamp: number) {\n      if (timestamps.length <= 1) {\n        return timeColorScale(0.5) // Use middle color if only one worker\n      }\n      const normalized = (timestamp - minTimestamp) / (maxTimestamp - minTimestamp)\n      return timeColorScale(normalized)\n    }\n\n    for (const [nodeid, test] of tests.entries()) {\n      for (const workerReports of test.reports_by_worker.values()) {\n        if (workerReports.length > 0) {\n          lines.push({\n            nodeid: nodeid,\n            url: `/tests/${encodeURIComponent(nodeid)}`,\n            reports: workerReports.map(report =>\n              GraphReport.fromReport(nodeid, report),\n            ),\n            color: timeColor(workerReports[0].timestamp),\n            isActive: false,\n          })\n        }\n      }\n    }\n  } else if (viewSetting === WorkerView.LATEST) {\n    for (const [nodeid, test] of tests.entries()) {\n      const recentReports = max(\n        Array.from(test.reports_by_worker.values()),\n        reports => reports[0].elapsed_time,\n      )\n\n      if (recentReports) {\n        lines.push({\n          nodeid: nodeid,\n          url: `/tests/${encodeURIComponent(nodeid)}`,\n          reports: recentReports.map(report => GraphReport.fromReport(nodeid, report)),\n          // use the same color as the linearized view\n          color: reportsColor(nodeid),\n          isActive: false,\n        })\n      }\n    }\n  }\n\n  return lines\n}\n\n// lifted from github's \"blame\" color scale for \"time since now\".\n//\n// including the commented-out colors makes the color a bit too extreme.\nconst timeColorScale = d3\n  .scaleLinear<string>()\n  .domain([0, 1])\n  .range([\n    // \"rgb(255, 223, 182)\",\n    \"rgb(255, 198, 128)\",\n    \"rgb(240, 136, 62)\",\n    \"rgb(219, 109, 40)\",\n    \"rgb(189, 86, 29)\",\n    \"rgb(155, 66, 21)\",\n    \"rgb(118, 45, 10)\",\n    \"rgb(90, 30, 2)\",\n    // \"rgb(61, 19, 0)\"\n  ])\n  .interpolate(d3.interpolateRgb)\n\nexport enum WorkerView {\n  TOGETHER = \"linearized\",\n  SEPARATE = \"individual\",\n  LATEST = \"latest\",\n}\n\ninterface Props {\n  tests: Map<string, Test>\n  filterString?: string\n  workers_after?: number | null\n  workerViews?: WorkerView[]\n  workerViewSetting: string\n}\n\nfunction graphReports(test: Test, workers_after: number | null): GraphReport[] {\n  // zip up linear_status_counts, linear_elapsed_time, and linear_reports.\n  const linearStatusCounts = test.linear_status_counts(workers_after)\n  const linearElapsedTime = test.linear_elapsed_time(workers_after)\n  const reports: GraphReport[] = []\n  for (let i = 0; i < linearStatusCounts.length; i++) {\n    const report = test.linear_reports[i]\n    reports.push({\n      nodeid: test.nodeid,\n      linear_status_counts: linearStatusCounts[i],\n      linear_elapsed_time: linearElapsedTime[i],\n      behaviors: report.behaviors,\n      fingerprints: report.fingerprints,\n    })\n  }\n  return reports\n}\n\nfunction LogLinearToggle({\n  value,\n  onChange,\n}: {\n  value: \"log\" | \"linear\"\n  onChange: (value: \"log\" | \"linear\") => void\n}) {\n  return (\n    <Toggle\n      value={value}\n      onChange={onChange}\n      options={[\n        { value: \"log\", content: \"Log\" },\n        { value: \"linear\", content: \"Linear\" },\n      ]}\n    />\n  )\n}\n\nfunction LabelX() {\n  const [scale, setScale] = useSetting<\"log\" | \"linear\">(\"graph_scale_x\", \"log\")\n  const [axis, setAxis] = useSetting<\"time\" | \"inputs\">(\"graph_axis_x\", \"time\")\n  return (\n    <div\n      className=\"coverage-graph__label coverage-graph__label--x\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"0.5rem\",\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <FontAwesomeIcon\n          icon={axis === \"inputs\" ? faHashtag : faClock}\n          style={{ fontSize: \"0.9rem\" }}\n        />\n        {axis === \"inputs\" ? \"Inputs\" : \"Time\"}\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <LogLinearToggle value={scale} onChange={setScale} />\n        <Toggle\n          value={axis}\n          onChange={setAxis}\n          options={[\n            {\n              value: \"inputs\",\n              content: <FontAwesomeIcon icon={faHashtag} />,\n            },\n            {\n              value: \"time\",\n              content: <FontAwesomeIcon icon={faClock} />,\n            },\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction LabelY() {\n  const [scale, setScale] = useSetting<\"log\" | \"linear\">(\"graph_scale_y\", \"linear\")\n  const [axis, setAxis] = useSetting<\"behaviors\" | \"fingerprints\">(\n    \"graph_axis_y\",\n    \"behaviors\",\n  )\n  return (\n    <div\n      className=\"coverage-graph__label coverage-graph__label--y\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"0.5rem\",\n        zIndex: 1,\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <LogLinearToggle value={scale} onChange={setScale} />\n        <Toggle\n          value={axis}\n          onChange={setAxis}\n          options={[\n            {\n              value: \"behaviors\",\n              content: <FontAwesomeIcon icon={faCodeBranch} />,\n            },\n            {\n              value: \"fingerprints\",\n              content: <FontAwesomeIcon icon={faFingerprint} />,\n            },\n          ]}\n        />\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <FontAwesomeIcon\n          icon={axis === \"behaviors\" ? faCodeBranch : faFingerprint}\n          style={{ fontSize: \"0.9rem\" }}\n        />\n        {axis === \"behaviors\" ? \"Behaviors\" : \"Fingerprints\"}\n      </div>\n    </div>\n  )\n}\n\nconst workerToggleContent = {\n  [WorkerView.TOGETHER]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faUser} /> Together\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faUser} />,\n  },\n  [WorkerView.SEPARATE]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faUsers} /> Separate\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faUsers} />,\n  },\n  [WorkerView.LATEST]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faCircleDot} /> Latest\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faCircleDot} />,\n  },\n}\n\nconst GRAPH_MARGIN = {\n  top: 5,\n  right: 5,\n  bottom: 25,\n  left: 40,\n}\n\n// Number of sample points per unit of display length for quadtree line sampling\nconst QUADTREE_SAMPLE_INTERVAL = 10\nconst DISTANCE_THRESHOLD = 10\n\ninterface SampledPoint {\n  x: number\n  y: number\n  line: GraphLine\n}\n\nfunction sampleLinePoints(scales: any, line: GraphLine): SampledPoint[] {\n  // TODO: when we're zoomed in, we have many many more sampled points than when\n  // we're zoomed out (eg 800 vs 40k). this is a very bad performance bug.\n  const points: SampledPoint[] = []\n  const reports = line.reports\n\n  if (reports.length < 2) return points\n\n  // Calculate total display length of the line\n  let totalLength = 0\n  for (let i = 1; i < reports.length; i++) {\n    const x1 = scales.viewportX(scales.xValue(reports[i - 1]))\n    const y1 = scales.viewportY(scales.yValue(reports[i - 1]))\n    const x2 = scales.viewportX(scales.xValue(reports[i]))\n    const y2 = scales.viewportY(scales.yValue(reports[i]))\n\n    const segmentLength = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n    totalLength += segmentLength\n  }\n\n  const numSamples = Math.max(2, Math.floor(totalLength / QUADTREE_SAMPLE_INTERVAL))\n\n  for (let i = 0; i < numSamples; i++) {\n    const t = i / (numSamples - 1)\n    const targetDistance = t * totalLength\n\n    let currentDistance = 0\n    for (let j = 1; j < reports.length; j++) {\n      const x1 = scales.viewportX(scales.xValue(reports[j - 1]))\n      const y1 = scales.viewportY(scales.yValue(reports[j - 1]))\n      const x2 = scales.viewportX(scales.xValue(reports[j]))\n      const y2 = scales.viewportY(scales.yValue(reports[j]))\n\n      const segmentLength = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n\n      if (\n        currentDistance + segmentLength >= targetDistance ||\n        j === reports.length - 1\n      ) {\n        // interpolate within this segment\n        const segmentT =\n          segmentLength > 0 ? (targetDistance - currentDistance) / segmentLength : 0\n        const x = x1 + (x2 - x1) * segmentT\n        const y = y1 + (y2 - y1) * segmentT\n\n        points.push({ x, y, line })\n        break\n      }\n\n      currentDistance += segmentLength\n    }\n  }\n\n  return points\n}\n\nexport function GraphComponent({\n  tests,\n  filterString = \"\",\n  workers_after = null,\n  viewSetting,\n}: {\n  tests: Map<string, Test>\n  filterString?: string\n  workers_after?: number | null\n  viewSetting: WorkerView\n}) {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const quadtreeRef = useRef<Quadtree<SampledPoint> | null>(null)\n  const [scaleSettingX, setScaleSettingX] = useSetting<\"log\" | \"linear\">(\n    \"graph_scale_x\",\n    \"log\",\n  )\n  const [scaleSettingY, setScaleSettingY] = useSetting<\"log\" | \"linear\">(\n    \"graph_scale_y\",\n    \"linear\",\n  )\n  const [axisSettingX, setAxisSettingX] = useSetting<\"time\" | \"inputs\">(\n    \"graph_axis_x\",\n    \"time\",\n  )\n  const [axisSettingY, setAxisSettingY] = useSetting<\"behaviors\" | \"fingerprints\">(\n    \"graph_axis_y\",\n    \"behaviors\",\n  )\n  const navigate = useNavigate()\n  const isMobile = useIsMobile()\n  const tooltip = useTooltip()\n  const [containerWidth, setContainerWidth] = useState(800)\n  const [activeNodeid, setActiveNodeid] = useState<string | null>(null)\n  const scalesRef = useRef<typeof scales | null>(null)\n\n  // use the unfiltered reports as the domain so colors are stable across filtering.\n  const reportsColor = d3\n    .scaleOrdinal(d3.schemeCategory10)\n    .domain(Array.from(tests.keys()))\n\n  // pretty sure this is a react compiler bug, because this useMemo is necessary to avoid graphLines\n  // being called on every render.\n  const lines = useMemo(\n    () => graphLines(tests, viewSetting, workers_after, reportsColor),\n    [tests, viewSetting, workers_after],\n  )\n  let filteredLines = lines\n  if (filterString) {\n    filteredLines = lines.filter(line =>\n      line.url?.toLowerCase().includes(filterString.toLowerCase()),\n    )\n  }\n\n  let activeLine: GraphLine | null = null\n  filteredLines.forEach(line => {\n    line.isActive = false\n    if (line.nodeid === activeNodeid) {\n      line.isActive = true\n      activeLine = line\n    }\n  })\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          setContainerWidth(entry.contentRect.width)\n        }\n      })\n      resizeObserver.observe(containerRef.current)\n      return () => resizeObserver.disconnect()\n    }\n    return undefined\n  }, [])\n\n  const graphWidth = containerWidth - GRAPH_MARGIN.left - GRAPH_MARGIN.right\n  const graphHeight = GRAPH_HEIGHT - GRAPH_MARGIN.top - GRAPH_MARGIN.bottom\n  const allReports = filteredLines.flatMap(line => line.reports)\n\n  function rebuildQuadtree() {\n    // for each line, we sample points from it proportional to its current display length,\n    // and track them in a quadtree. This lets us find the line closest to the cursor\n    // (up to some sampling error; increase QUADTREE_SAMPLE_INTERVAL to improve this).\n    // Once we have the closest line, it's cheap to find the closest report on that line for\n    // the actual tooltip contents.\n    const sampledPoints = filteredLines.flatMap(line =>\n      sampleLinePoints(scalesRef.current!, line),\n    )\n    quadtreeRef.current = quadtree<SampledPoint>()\n      .x(d => d.x)\n      .y(d => d.y)\n      .addAll(sampledPoints)\n  }\n\n  const zoom = useZoom({\n    minScale: 1,\n    maxScale: 50,\n    containerRef,\n    onZoomEnd: rebuildQuadtree,\n    onDragEnd: rebuildQuadtree,\n  })\n  const scales = useScales(\n    allReports,\n    scaleSettingX,\n    scaleSettingY,\n    axisSettingX,\n    axisSettingY,\n    graphWidth,\n    graphHeight,\n    zoom.transform,\n    { yMin: 0 },\n  )\n\n  // if we don't do this, onDragEnd (but not onZoomEnd?!) refers to the `scales` from the previous\n  // render, and our quadtree updates incorrectly.\n  scalesRef.current = scales\n\n  useEffect(() => {\n    rebuildQuadtree()\n  }, [filteredLines])\n\n  return (\n    <div\n      ref={element => {\n        if (containerRef.current !== element) {\n          containerRef.current = element\n        }\n      }}\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: `${GRAPH_HEIGHT}px`,\n        userSelect: \"none\",\n        cursor: activeLine ? \"pointer\" : \"default\",\n      }}\n      onMouseDown={zoom.onMouseDown}\n      onDoubleClick={zoom.onDoubleClick}\n      onClick={() => {\n        if (activeLine && activeLine.url) {\n          navigate(activeLine.url)\n        }\n      }}\n      onMouseMove={event => {\n        const rect = event.currentTarget.getBoundingClientRect()\n        const mouseX = event.clientX - rect.left - GRAPH_MARGIN.left\n        const mouseY = event.clientY - rect.top - GRAPH_MARGIN.top\n\n        const closestPoint =\n          quadtreeRef.current!.find(mouseX, mouseY, DISTANCE_THRESHOLD) || null\n\n        if (closestPoint) {\n          setActiveNodeid(closestPoint.line.nodeid)\n          const reports = closestPoint.line.reports\n\n          // find the closest actual report on this line. We know the closest sampled point\n          // and therefore the closest line, but not the closest report on that line.\n          let closestReport = reports[0]\n          let minDistance = Infinity\n\n          reports.forEach(report => {\n            const reportX = scales.viewportX(scales.xValue(report))\n            const reportY = scales.viewportY(scales.yValue(report))\n            const distance = Math.sqrt(\n              (mouseX - reportX) ** 2 + (mouseY - reportY) ** 2,\n            )\n\n            if (distance < minDistance) {\n              minDistance = distance\n              closestReport = report\n            }\n          })\n\n          const behaviors_s = closestReport.behaviors === 1 ? \"\" : \"s\"\n          const fingerprints_s = closestReport.fingerprints === 1 ? \"\" : \"s\"\n          const inputs_s = closestReport.linear_status_counts.sum() === 1 ? \"\" : \"s\"\n          const seconds_s = closestReport.linear_elapsed_time === 1 ? \"\" : \"s\"\n\n          const content = `\n            <div style=\"font-weight: bold; margin-bottom: 4px;\">${readableNodeid(closestReport.nodeid)}</div>\n            <div>${closestReport.behaviors.toLocaleString()} behavior${behaviors_s} / ${closestReport.fingerprints.toLocaleString()} fingerprint${fingerprints_s}</div>\n            <div>${closestReport.linear_status_counts.sum().toLocaleString()} input${inputs_s} / ${closestReport.linear_elapsed_time.toFixed(1)} second${seconds_s}</div>\n          `\n\n          tooltip.showTooltip(content, event.clientX, event.clientY, \"coverage-graph\")\n        } else {\n          setActiveNodeid(null)\n          tooltip.hideTooltip(\"coverage-graph\")\n        }\n      }}\n      onMouseLeave={() => {\n        setActiveNodeid(null)\n        tooltip.hideTooltip(\"coverage-graph\")\n      }}\n    >\n      <svg\n        className=\"coverage-graph__svg\"\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: `${GRAPH_HEIGHT}px`,\n          pointerEvents: \"none\",\n        }}\n      >\n        <defs>\n          <clipPath id=\"clip-content\">\n            {/* add some padding so the stroke width doesn't get clipped, even though the center\n            of the line would still be inside the clip path */}\n            <rect y={-2} width={graphWidth} height={graphHeight + 4} />\n          </clipPath>\n        </defs>\n\n        <g transform={`translate(${GRAPH_MARGIN.left}, ${GRAPH_MARGIN.top})`}>\n          <g clipPath=\"url(#clip-content)\">\n            <DataLines\n              lines={filteredLines}\n              viewportXScale={scales.viewportX}\n              viewportYScale={scales.viewportY}\n              xValue={scales.xValue}\n              yValue={scales.yValue}\n              navigate={navigate}\n            />\n          </g>\n\n          <Axis\n            baseScale={scales.baseX}\n            viewportScale={scales.viewportX}\n            orientation=\"bottom\"\n            transform={`translate(0, ${scales.baseY.range()[0]})`}\n            isLogScale={scaleSettingX === \"log\"}\n            zoomState={scales.constrainedTransform}\n          />\n\n          <Axis\n            baseScale={scales.baseY}\n            viewportScale={scales.viewportY}\n            orientation=\"left\"\n            isLogScale={scaleSettingY === \"log\"}\n            zoomState={scales.constrainedTransform}\n          />\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nfunction ColorLegend() {\n  const colors = [\n    \"rgb(255, 198, 128)\",\n    \"rgb(240, 136, 62)\",\n    \"rgb(219, 109, 40)\",\n    \"rgb(189, 86, 29)\",\n    \"rgb(155, 66, 21)\",\n    \"rgb(118, 45, 10)\",\n    \"rgb(90, 30, 2)\",\n  ]\n\n  return (\n    <div className=\"coverage-graph__color-legend\">\n      <span>Older</span>\n      <div style={{ display: \"flex\", gap: \"2px\" }}>\n        {colors.map((color, index) => (\n          <div\n            key={index}\n            className=\"coverage-graph__color-legend__square\"\n            style={{ backgroundColor: color }}\n          />\n        ))}\n      </div>\n      <span>Newer</span>\n    </div>\n  )\n}\n\nexport function CoverageGraph({\n  tests,\n  filterString = \"\",\n  workers_after = null,\n  workerViews = [WorkerView.TOGETHER, WorkerView.SEPARATE, WorkerView.LATEST],\n  workerViewSetting,\n}: Props) {\n  let [viewSetting, setWorkerView] = useSetting<WorkerView>(\n    workerViewSetting,\n    WorkerView.TOGETHER,\n  )\n\n  const workers = Set(\n    Array.from(tests.values()).flatMap(test =>\n      Array.from(test.reports_by_worker.values()),\n    ),\n  )\n  const disabled = workers.size == 1\n  // force view setting to be the default WorkerView.TOGETHER if we're disabled, to avoid\n  // confusing people that they can't switch away from the default\n  if (disabled) {\n    viewSetting = WorkerView.TOGETHER\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\" style={{ marginBottom: \"1rem\" }}>\n        Coverage\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent:\n            viewSetting === WorkerView.SEPARATE ? \"space-between\" : \"flex-end\",\n          alignItems: viewSetting === WorkerView.SEPARATE ? \"center\" : \"default\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        {viewSetting === WorkerView.SEPARATE && <ColorLegend />}\n        <span className=\"tooltip\">\n          <Toggle\n            value={viewSetting}\n            onChange={setWorkerView}\n            options={workerViews.map(view => ({\n              value: view,\n              content: workerToggleContent[view].content,\n              mobileContent: workerToggleContent[view].mobileContent,\n            }))}\n            disabled={disabled}\n          />\n          {disabled && (\n            <span className=\"tooltip__text\">\n              Switching worker display mode requires multiple workers\n            </span>\n          )}\n        </span>\n      </div>\n      <div className=\"coverage-graph__container\">\n        <div\n          className=\"coverage-graph__grid\"\n          style={{ marginRight: \"15px\", flex: 1, height: \"auto\" }}\n        >\n          {/* top left */}\n          <LabelY />\n          {/* top right */}\n          <GraphComponent\n            tests={tests}\n            viewSetting={viewSetting}\n            workers_after={workers_after}\n            filterString={filterString}\n          />\n          {/* bottom left */}\n          <div></div>\n          {/* bottom right */}\n          <LabelX />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { TestStatus } from \"src/types/dashboard\"\n\nexport const statusStrings = {\n  [TestStatus.FAILED_FATALLY]: \"Failed fatally\",\n  [TestStatus.FAILED]: \"Failed\",\n  [TestStatus.SHRINKING]: \"Shrinking\",\n  [TestStatus.RUNNING]: \"Running\",\n  [TestStatus.SKIPPED_DYNAMICALLY]: \"Skipped dynamically\",\n  [TestStatus.WAITING]: \"Waiting\",\n}\n\nexport function TestStatusPill({ status }: { status: TestStatus }) {\n  return (\n    <span style={{ textAlign: \"center\" }}>\n      {status === TestStatus.FAILED_FATALLY ? (\n        <span className=\"pill pill__failure\">{statusStrings[status]}</span>\n      ) : status === TestStatus.FAILED ? (\n        <span className=\"pill pill__failure\">{statusStrings[status]}</span>\n      ) : status === TestStatus.SHRINKING ? (\n        <span className=\"pill pill__warning\">{statusStrings[status]}</span>\n      ) : status === TestStatus.RUNNING ? (\n        <span className=\"pill pill__success\">{statusStrings[status]}</span>\n      ) : (\n        <span className=\"pill pill__neutral\">{statusStrings[status]}</span>\n      )}\n    </span>\n  )\n}\n","interface TooltipProps {\n  content: React.ReactNode\n  tooltip: string\n}\n\nexport function Tooltip({ content, tooltip }: TooltipProps) {\n  return (\n    <span className=\"tooltip tooltip--underline\">\n      {content}\n      <div className=\"tooltip__text\">{tooltip}</div>\n    </span>\n  )\n}\n","import { faCheck } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode } from \"react\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { Test } from \"src/types/test\"\n\nexport interface TestStats {\n  inputs: string\n  behaviors: string\n  fingerprints: string\n  executions: string\n  inputsSinceBranch: string\n  timeSpent: string\n  stability: ReactNode\n}\n\nexport function formatTime(t: number): string {\n  const hours = Math.floor(t / 3600)\n  const minutes = Math.floor((t % 3600) / 60)\n  const seconds = Math.floor(t % 60)\n\n  // displays as hh:mm:ss. eg:\n  // 0:53\n  // 6:53\n  // 1:06:53\n  //\n  // only pad minutes to two digits if hours are present\n  return `${hours > 0 ? `${hours}:${minutes.toString().padStart(2, \"0\")}` : minutes}:${seconds.toString().padStart(2, \"0\")}`\n}\n\nexport function inputsPerSecond(test: Test): number | null {\n  const ninputs = test.ninputs(null)\n  const elapsed = test.elapsed_time(null)\n  return elapsed === 0.0 ? null : ninputs / elapsed\n}\n\nfunction formatInputsPerSecond(perSecond: number): string {\n  // toPrecision converts to exponential notation sometimes.\n  // parseFloat gets rid of that.\n  return formatNumber(parseFloat(perSecond.toPrecision(3)))\n}\n\nfunction formatStability(value: number): string {\n  // we don't have enough confidence for anything beyond the decimal place\n  return (value * 100).toFixed(0)\n}\n\nexport function formatNumber(value: number): string {\n  if (!Number.isFinite(value)) {\n    return String(value)\n  }\n\n  const sign = value < 0 ? \"-\" : \"\"\n  const abs = Math.abs(value)\n\n  if (abs < 1000) {\n    return `${sign}${abs.toLocaleString()}`\n  }\n\n  const suffixes = [\"k\", \"M\", \"B\"]\n  const magnitude = Math.min(Math.floor(Math.log10(abs) / 3), suffixes.length)\n  const divisor = 1000 ** magnitude\n  const scaled = abs / divisor\n\n  const decimals = scaled < 100 ? 1 : 0\n  const rounded = scaled.toFixed(decimals)\n\n  return `${sign}${rounded}${suffixes[magnitude - 1]}`\n}\n\nexport function getTestStats(test: Test): TestStats {\n  if (test.linear_reports.length === 0) {\n    return {\n      inputs: \"—\",\n      behaviors: \"—\",\n      fingerprints: \"—\",\n      executions: \"—\",\n      inputsSinceBranch: \"—\",\n      timeSpent: \"—\",\n      stability: \"—\",\n    }\n  }\n\n  const perSecond = inputsPerSecond(test)\n  return {\n    inputs: formatNumber(test.ninputs(null)),\n    behaviors: formatNumber(test.behaviors),\n    fingerprints: formatNumber(test.fingerprints),\n    executions: perSecond === null ? \"—\" : `${formatInputsPerSecond(perSecond)}/s`,\n    inputsSinceBranch: test.since_new_behavior\n      ? formatNumber(test.since_new_behavior)\n      : \"—\",\n    timeSpent: formatTime(test.elapsed_time(null)),\n    stability:\n      test.stability === null ? (\n        \"—\"\n      ) : test.stability == 1 ? (\n        <Tooltip\n          content={<FontAwesomeIcon icon={faCheck} />}\n          tooltip={\"100% stability\"}\n        />\n      ) : (\n        `${formatStability(test.stability)}%`\n      ),\n  }\n}\n","import \"highlight.js/styles/github.css\"\n\nimport {\n  faArrowLeft,\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faLocationPinLock,\n  faSeedling,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport hljs from \"highlight.js/lib/core\"\nimport python from \"highlight.js/lib/languages/python\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\nimport { Collapsible } from \"src/components/Collapsible\"\nimport { CoverageGraph } from \"src/components/graph/CoverageGraph\"\nimport { Table } from \"src/components/Table\"\nimport { TestPatches } from \"src/components/TestPatches\"\nimport { TestStatusPill } from \"src/components/TestStatusPill\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { useData } from \"src/context/DataProvider\"\nimport { Tyche } from \"src/tyche/Tyche\"\nimport { Failure, FatalFailure } from \"src/types/dashboard\"\nimport { Test } from \"src/types/test\"\nimport { fetchAvailablePatches } from \"src/utils/api\"\nimport { getTestStats } from \"src/utils/testStats\"\nimport { reHighlight } from \"src/utils/utils\"\n\nhljs.registerLanguage(\"python\", python)\n\nfunction FailureStatusPill({ failure }: { failure: Failure }) {\n  return (\n    <span style={{ textAlign: \"center\" }}>\n      {failure.state === \"shrunk\" ? (\n        <span className=\"pill pill__neutral\">Fully shrunk</span>\n      ) : failure.state === \"unshrunk\" ? (\n        <span className=\"pill pill__neutral\">Still shrinking...</span>\n      ) : (\n        // this case shouldn't happen\n        <></>\n      )}\n    </span>\n  )\n}\n\nfunction FailureCard({ failure }: { failure: Failure }) {\n  return (\n    <div className=\"card\">\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"0.7rem\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        <div className=\"failure__title\">Failure</div>\n        <FailureStatusPill failure={failure} />\n      </div>\n      <div className=\"failure__item\">\n        <div className=\"failure__item__subtitle\">Call</div>\n        <pre>\n          <code className=\"language-python\">\n            {failure.observation.metadata.get(\"reproduction_decorator\") +\n              \"\\n\" +\n              failure.observation.representation}\n          </code>\n        </pre>\n        <div className=\"failure__item__subtitle\">Traceback</div>\n        <pre>\n          <code className=\"language-python\">\n            {failure.observation.metadata.get(\"traceback\")}\n          </code>\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nfunction FatalFailureCard({ failure }: { failure: FatalFailure }) {\n  return (\n    <div className=\"card\">\n      <div className=\"failure__title\">Fatal failure</div>\n      <div className=\"failure__item\">\n        <div className=\"failure__item__subtitle\">Traceback</div>\n        <pre>\n          <code className=\"language-python\" style={{ whiteSpace: \"pre-wrap\" }}>\n            {failure.traceback}\n          </code>\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport function TestPage() {\n  const { nodeid } = useParams<{ nodeid: string }>()\n  const { tests } = useData(nodeid)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [nodeidsWithPatches, setNodeidsWithPatches] = useState<string[] | null>(null)\n\n  useEffect(() => {\n    fetchAvailablePatches().then(data => {\n      setNodeidsWithPatches(data)\n    })\n  }, [])\n\n  const existing = tests.get(nodeid!)\n  // make a new object each time we rerender, or the component will never update.\n  //\n  // I feel like this should be fixed at a more basic level by creating a new Test each\n  // time in DataProvider's getOrCreateTest, but that didn't work. I'm misunderstanding\n  // something in react renders.\n  const test = existing\n    ? new Test(\n        existing.database_key,\n        existing.nodeid,\n        existing.rolling_observations,\n        existing.corpus_observations,\n        existing.failures,\n        existing.fatal_failure,\n        existing.reports_by_worker,\n        existing.stability,\n      )\n    : null\n\n  useEffect(() => {\n    if (test) {\n      reHighlight(containerRef)\n    }\n  }, [test])\n\n  if (!nodeid || !test) {\n    return <div>Test not found</div>\n  }\n\n  const stats = getTestStats(test)\n\n  const headers = [\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faHashtag} />\n            </div>\n          }\n          tooltip=\"Number of inputs\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faCodeBranch} />\n            </div>\n          }\n          tooltip=\"Number of behaviors (typically branches) found\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faFingerprint} />\n            </div>\n          }\n          tooltip=\"Number of fingerprints (sets of behaviors) found\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faTachometerAlt} />\n            </div>\n          }\n          tooltip=\"Inputs per second\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faSeedling} />\n            </div>\n          }\n          tooltip=\"Number of inputs since a new behavior\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faClock} />\n            </div>\n          }\n          tooltip=\"Total time spent running\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faLocationPinLock} />\n            </div>\n          }\n          tooltip=\"Coverage stability (percentage of inputs with deterministic coverage when replayed)\"\n        />\n      ),\n    },\n  ]\n\n  return (\n    <div ref={containerRef}>\n      <Link to=\"/\" className=\"back-link\">\n        <FontAwesomeIcon icon={faArrowLeft} /> All tests\n      </Link>\n      <div className=\"card\">\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.7rem\" }}>\n          <span\n            style={{\n              wordBreak: \"break-all\",\n              fontSize: \"1.5rem\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {nodeid}\n          </span>\n          <TestStatusPill status={test.status} />\n        </div>\n        <div style={{ paddingTop: \"1rem\", paddingBottom: \"1rem\" }}>\n          <Table\n            headers={headers}\n            data={[stats]}\n            row={item => [\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>{item.inputs}</div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.behaviors}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.fingerprints}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.executions}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.inputsSinceBranch}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.timeSpent}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.stability}\n              </div>,\n            ]}\n          />\n        </div>\n      </div>\n      <CoverageGraph\n        tests={new Map([[nodeid, test]])}\n        workerViewSetting=\"graph_worker_view_test\"\n      />\n      {test.normalFailures.map(failure => (\n        <FailureCard failure={failure} />\n      ))}\n      {test.fatal_failure && <FatalFailureCard failure={test.fatal_failure} />}\n      <Tyche test={test} />\n      {nodeidsWithPatches?.includes(nodeid) && (\n        <div className=\"card\">\n          <Collapsible title=\"Patches\" defaultState=\"closed\" headerClass=\"card__header\">\n            <TestPatches nodeid={nodeid} />\n          </Collapsible>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { IconDefinition } from \"@fortawesome/fontawesome-svg-core\"\nimport {\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faLocationPinLock,\n  faSeedling,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Link } from \"react-router-dom\"\nimport { Table } from \"src/components/Table\"\nimport { statusStrings, TestStatusPill } from \"src/components/TestStatusPill\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { Test } from \"src/types/test\"\nimport { getTestStats, inputsPerSecond } from \"src/utils/testStats\"\nimport { commonPrefix } from \"src/utils/utils\"\n\nfunction Icon({ icon, tooltip }: { icon: IconDefinition; tooltip: string }) {\n  return (\n    <Tooltip\n      content={\n        <div className=\"table__header__icon\">\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      }\n      tooltip={tooltip}\n    />\n  )\n}\n\nfunction InlineStatistic({\n  icon,\n  value,\n}: {\n  icon: React.ReactNode\n  value: React.ReactNode\n}) {\n  return (\n    <div className=\"table__inline-statistic\">\n      {icon}\n      <span className=\"table__inline-statistic__value\">{value}</span>\n    </div>\n  )\n}\n\ninterface Props {\n  tests: Map<string, Test>\n  onFilterChange?: (filter: string) => void\n}\n\nexport function TestTable({ tests, onFilterChange }: Props) {\n  const sortedTests = Array.from(tests)\n    .sortKey(([nodeid, test]) => {\n      const ninputs = test.ninputs(null)\n      return [test.status, ninputs != null ? -ninputs : -1, nodeid]\n    })\n    .map(([nodeid, test]) => test)\n\n  const nodeidPrefix = commonPrefix(sortedTests.map(t => t.nodeid))\n  const iconInputs = <Icon icon={faHashtag} tooltip=\"Number of inputs\" />\n  const iconBehaviors = (\n    <Icon\n      icon={faCodeBranch}\n      tooltip=\"Number of behaviors (typically branches) found\"\n    />\n  )\n  const iconFingerprints = (\n    <Icon\n      icon={faFingerprint}\n      tooltip=\"Number of fingerprints (sets of behaviors) found\"\n    />\n  )\n  const iconExecutions = <Icon icon={faTachometerAlt} tooltip=\"Inputs per second\" />\n  const iconSinceNewBranch = (\n    <Icon icon={faSeedling} tooltip=\"Number of inputs since a new behavior\" />\n  )\n  const iconTimeSpent = <Icon icon={faClock} tooltip=\"Total time spent running\" />\n  const iconStability = (\n    <Icon\n      icon={faLocationPinLock}\n      tooltip=\"Coverage stability (percentage of inputs with deterministic coverage when replayed)\"\n    />\n  )\n\n  const headers = [\n    {\n      content: \"Test\",\n      sortKey: (test: Test) => test.nodeid,\n    },\n    {\n      content: \"Status\",\n      sortKey: (test: Test) => test.status,\n      align: \"center\",\n    },\n    {\n      content: iconInputs,\n      align: \"right\",\n      sortKey: (test: Test) => test.ninputs(null),\n    },\n    {\n      content: iconBehaviors,\n      align: \"right\",\n      sortKey: (test: Test) => test.behaviors,\n    },\n    {\n      content: iconFingerprints,\n      align: \"right\",\n      sortKey: (test: Test) => test.fingerprints,\n    },\n    {\n      content: iconExecutions,\n      align: \"right\",\n      sortKey: (test: Test) => inputsPerSecond(test) ?? -1,\n    },\n    {\n      content: iconSinceNewBranch,\n      align: \"right\",\n      sortKey: (test: Test) => test.since_new_behavior ?? 0,\n    },\n    {\n      content: iconTimeSpent,\n      align: \"right\",\n      sortKey: (test: Test) => test.elapsed_time(null),\n    },\n    {\n      content: iconStability,\n      align: \"right\",\n      sortKey: (test: Test) => test.stability ?? 0,\n    },\n  ]\n\n  const row = (test: Test): React.ReactNode[] => {\n    const stats = getTestStats(test)\n    const nodeid = test.nodeid.slice(nodeidPrefix.length)\n\n    return [\n      <Link\n        to={`/tests/${encodeURIComponent(test.nodeid)}`}\n        className=\"test__link\"\n        style={{ wordBreak: \"break-all\" }}\n      >\n        {nodeid}\n      </Link>,\n      <div style={{ textAlign: \"center\" }}>\n        <TestStatusPill status={test.status} />\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.inputs}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.behaviors}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.fingerprints}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.executions}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.inputsSinceBranch}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.timeSpent}\n      </div>,\n      <div style={{ textAlign: \"center\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.stability}\n      </div>,\n    ]\n  }\n\n  function mobileRow(test: Test) {\n    const stats = getTestStats(test)\n    const nodeid = test.nodeid.slice(nodeidPrefix.length)\n\n    return (\n      <div className=\"table__mobile-row\">\n        <div className=\"table__mobile-row__header\">\n          <Link\n            to={`/tests/${encodeURIComponent(test.nodeid)}`}\n            className=\"test__link\"\n            style={{ wordBreak: \"break-all\" }}\n          >\n            {nodeid}\n          </Link>\n          <TestStatusPill status={test.status} />\n        </div>\n        <div className=\"table__mobile-row__statistics\">\n          <InlineStatistic icon={iconInputs} value={stats.inputs} />\n          <InlineStatistic icon={iconBehaviors} value={stats.behaviors} />\n          <InlineStatistic icon={iconExecutions} value={stats.executions} />\n          <InlineStatistic icon={iconSinceNewBranch} value={stats.inputsSinceBranch} />\n          <InlineStatistic icon={iconTimeSpent} value={stats.timeSpent} />\n          <InlineStatistic icon={iconStability} value={stats.stability} />\n        </div>\n      </div>\n    )\n  }\n\n  function filterStrings(test: Test) {\n    return [test.nodeid, statusStrings[test.status]]\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Tests</div>\n      <Table\n        headers={headers}\n        data={sortedTests}\n        row={row}\n        mobileRow={mobileRow}\n        // `test` is not guaranteed to have a databse_key set (if e.g.\n        // ADD_REPORTS arrives before ADD_TESTS). Fall back to the default array\n        // index key if it's not set yet.\n        getKey={test => test.database_key ?? undefined}\n        filterStrings={filterStrings}\n        onFilterChange={onFilterChange}\n        perPage={50}\n      />\n    </div>\n  )\n}\n","import { useState } from \"react\"\nimport { CoverageGraph, WorkerView } from \"src/components/graph/CoverageGraph\"\nimport { TestTable } from \"src/components/TestTable\"\nimport { useData } from \"src/context/DataProvider\"\n\nexport function TestsPage() {\n  const { tests } = useData()\n  const [filterString, setFilterString] = useState(\"\")\n\n  return (\n    <div className=\"dashboard\">\n      <CoverageGraph\n        tests={tests}\n        filterString={filterString}\n        workerViews={[WorkerView.TOGETHER, WorkerView.LATEST]}\n        workerViewSetting=\"graph_worker_view_tests\"\n      />\n      <TestTable tests={tests} onFilterChange={setFilterString} />\n    </div>\n  )\n}\n","import { useEffect, useRef, useState } from \"react\"\n\ninterface RangeSliderProps {\n  min: number\n  max: number\n  value: [number, number]\n  onChange: (value: [number, number]) => void\n  step?: number\n}\n\nexport function RangeSlider({ min, max, value, onChange, step = 1 }: RangeSliderProps) {\n  const [dragging, setDragging] = useState<\"min\" | \"max\" | null>(null)\n  const sliderRef = useRef<HTMLDivElement>(null)\n  console.assert(min <= max, `min: ${min} max: ${max}`)\n\n  const [minValue, maxValue] = value\n  const range = max - min\n\n  const minPercent = range === 0 ? 0 : ((minValue - min) / range) * 100\n  const maxPercent = range === 0 ? 100 : ((maxValue - min) / range) * 100\n\n  // ensure that if both are overlapped on the very left (right) edge, the thumb\n  // with room to move right (left) is on top\n  const zIndexMin = minPercent < 50 ? 1 : 2\n  const zIndexMax = maxPercent < 50 ? 2 : 1\n\n  const getValueFromPosition = (clientX: number): number => {\n    if (!sliderRef.current) return min\n\n    const rect = sliderRef.current.getBoundingClientRect()\n    const percent = Math.max(\n      0,\n      Math.min(100, ((clientX - rect.left) / rect.width) * 100),\n    )\n    const rawValue = min + (percent / 100) * range\n\n    // Snap to step\n    const steppedValue = Math.round(rawValue / step) * step\n    return Math.max(min, Math.min(max, steppedValue))\n  }\n\n  const handleMouseDown = (thumb: \"min\" | \"max\") => (event: React.MouseEvent) => {\n    event.preventDefault()\n    setDragging(thumb)\n  }\n\n  const handleMouseMove = (event: MouseEvent) => {\n    if (!dragging) return\n\n    const newValue = getValueFromPosition(event.clientX)\n\n    if (dragging === \"min\") {\n      onChange([Math.min(newValue, maxValue), maxValue])\n    } else {\n      onChange([minValue, Math.max(newValue, minValue)])\n    }\n  }\n\n  const handleMouseUp = () => {\n    setDragging(null)\n  }\n\n  const handleTrackMouseDown = (event: React.MouseEvent) => {\n    if (dragging) return\n\n    const newValue = getValueFromPosition(event.clientX)\n    const minDistance = Math.abs(newValue - minValue)\n    const maxDistance = Math.abs(newValue - maxValue)\n\n    if (minDistance < maxDistance) {\n      onChange([Math.min(newValue, maxValue), maxValue])\n      setDragging(\"min\")\n    } else {\n      onChange([minValue, Math.max(newValue, minValue)])\n      setDragging(\"max\")\n    }\n  }\n\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener(\"mousemove\", handleMouseMove)\n      document.addEventListener(\"mouseup\", handleMouseUp)\n      return () => {\n        document.removeEventListener(\"mousemove\", handleMouseMove)\n        document.removeEventListener(\"mouseup\", handleMouseUp)\n      }\n    }\n    return () => {}\n  }, [dragging, handleMouseMove, handleMouseUp])\n\n  return (\n    <div className=\"range-slider\">\n      <div className=\"range-slider__container\">\n        <div\n          ref={sliderRef}\n          className=\"range-slider__track\"\n          onMouseDown={handleTrackMouseDown}\n        >\n          <div\n            className=\"range-slider__range\"\n            style={{\n              left: `${minPercent}%`,\n              width: `${maxPercent - minPercent}%`,\n            }}\n          />\n          <div\n            className={`range-slider__thumb range-slider__thumb--min`}\n            style={{\n              left: `${minPercent}%`,\n              zIndex: zIndexMin,\n            }}\n            onMouseDown={handleMouseDown(\"min\")}\n          />\n          <div\n            className={`range-slider__thumb range-slider__thumb--max`}\n            style={{\n              left: `${maxPercent}%`,\n              zIndex: zIndexMax,\n            }}\n            onMouseDown={handleMouseDown(\"max\")}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { OrderedSet } from \"immutable\"\nimport React, { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { RangeSlider } from \"src/components/RangeSlider\"\nimport { useData } from \"src/context/DataProvider\"\nimport { formatTime } from \"src/utils/testStats\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { navigateOnClick, readableNodeid } from \"src/utils/utils\"\n\ninterface Segment {\n  nodeid: string\n  start: number\n  end: number\n}\n\ninterface WorkerReport {\n  timestamp_monotonic: number\n  nodeid: string\n}\n\nclass Worker {\n  constructor(\n    public uuid: string,\n    public segments: Segment[],\n  ) {}\n\n  visibleSegments(range: [number, number]): Segment[] {\n    return this.segments.filter(\n      segment => segment.end >= range[0] && segment.start <= range[1],\n    )\n  }\n}\n\ninterface TimePeriod {\n  label: string\n  // duration in seconds\n  duration: number | null\n}\n\nconst TIME_PERIODS: TimePeriod[] = [\n  { label: \"Latest\", duration: null },\n  { label: \"1 hour\", duration: 1 * 60 * 60 },\n  { label: \"1 day\", duration: 24 * 60 * 60 },\n  { label: \"7 days\", duration: 7 * 24 * 60 * 60 },\n  { label: \"1 month\", duration: 30 * 24 * 60 * 60 },\n  { label: \"3 months\", duration: 90 * 24 * 60 * 60 },\n]\n\nfunction formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp * 1000)\n  return date.toLocaleString()\n}\n\n// tolerance for a region, in seconds\nconst REGION_TOLERANCE = 5 * 60\n\nfunction segmentRegions(segments: Segment[]): [number, number][] {\n  // returns a list of [start, end] regions, where a region is defined as the largest\n  // interval where there is no timestamp without an active segment.\n  // so in\n  //\n  // ```\n  //  [--]          [-------]\n  //   [---]  [-]     [------]\n  // [----]   [--]\n  // ```\n  // there are 3 regions.\n\n  // We iterate over the egments in order of start time. We track the latest seen end time.\n  // If we ever see a segment with a later start time than the current end time, that means\n  // there must have been empty space between them, which marks a new region.\n\n  // assert segments are sorted by segment.start\n  console.assert(\n    segments.every(\n      (segment, index) => index === 0 || segment.start >= segments[index - 1].start,\n    ),\n  )\n\n  if (segments.length == 0) {\n    return []\n  }\n\n  let regions: [number, number][] = []\n  let regionStart = segments[0].start\n  let latestEnd = segments[0].end\n  for (const segment of segments) {\n    if (segment.start > latestEnd + REGION_TOLERANCE) {\n      // this marks a new region\n      regions.push([regionStart, latestEnd])\n      regionStart = segment.start\n    }\n\n    latestEnd = Math.max(latestEnd, segment.end)\n  }\n\n  // finalize the current region\n  regions.push([regionStart, latestEnd])\n  return regions\n}\n\nfunction nodeColor(nodeid: string): string {\n  let hash = 0\n  for (let i = 0; i < nodeid.length; i++) {\n    hash = ((hash << 5) - hash + nodeid.charCodeAt(i)) & 0xffffffff\n  }\n\n  const hue = Math.abs(hash) % 360\n  const saturation = 45 + (Math.abs(hash >> 8) % 30) // 45-75%\n  const lightness = 45 + (Math.abs(hash >> 16) % 20) // 45-65%\n\n  return `hsl(${hue}, ${saturation}%, ${lightness}%)`\n}\n\nfunction DetailsItem({ label, value }: { label: string; value: React.ReactNode }) {\n  return (\n    <div className=\"workers__worker__details__item\">\n      <span className=\"workers__worker__details__label\">{label}</span>\n      <span className=\"workers__worker__details__value\">{value}</span>\n    </div>\n  )\n}\n\nconst WorkerBar = ({\n  worker,\n  range,\n  expandedWorkers,\n  onWorkerClick,\n  segmentStyle,\n  navigate,\n  showTooltip,\n  hideTooltip,\n  moveTooltip,\n}: {\n  worker: Worker\n  range: [number, number]\n  expandedWorkers: Set<string>\n  onWorkerClick: (uuid: string) => void\n  segmentStyle: (segment: Segment) => React.CSSProperties\n  navigate: ReturnType<typeof useNavigate>\n  showTooltip: (text: string, x: number, y: number, id: string) => void\n  hideTooltip: (id: string) => void\n  moveTooltip: (x: number, y: number, id: string) => void\n}) => {\n  return (\n    <div\n      key={worker.uuid}\n      className={`workers__worker${expandedWorkers.has(worker.uuid) ? \" workers__worker--expanded\" : \"\"}`}\n      onClick={() => onWorkerClick(worker.uuid)}\n      // these extra onMouseLeave calls shouldn't be necessary, but I've had trouble\n      // with the workers__timeline__segment mouse leave handler not firing consistently\n      onMouseLeave={() => hideTooltip(\"workers\")}\n    >\n      <div className=\"workers__worker__bar\" onMouseLeave={() => hideTooltip(\"workers\")}>\n        {worker.visibleSegments(range).map((segment, index) => (\n          <div\n            key={index}\n            className=\"workers__timeline__segment\"\n            style={segmentStyle(segment)}\n            onClick={event => {\n              navigateOnClick(\n                event,\n                `/tests/${encodeURIComponent(segment.nodeid)}`,\n                navigate,\n              )\n              // prevent the worker click handler from firing (which would distractingly\n              // expand the worker details for this worker during navigation)\n              event.stopPropagation()\n            }}\n            onMouseEnter={event =>\n              showTooltip(\n                readableNodeid(segment.nodeid),\n                event.clientX,\n                event.clientY,\n                \"workers\",\n              )\n            }\n            onMouseLeave={() => hideTooltip(\"workers\")}\n            onMouseMove={event => moveTooltip(event.clientX, event.clientY, \"workers\")}\n          />\n        ))}\n      </div>\n      {expandedWorkers.has(worker.uuid) && <WorkerDetails worker={worker} />}\n    </div>\n  )\n}\n\nconst WorkerDetails = ({ worker }: { worker: Worker }) => {\n  return (\n    <div className=\"workers__worker__details\">\n      <div className=\"workers__worker__details__grid\">\n        <DetailsItem label=\"Worker UUID\" value={worker.uuid} />\n        <DetailsItem\n          label=\"Lifetime\"\n          value={formatTime(\n            worker.segments[worker.segments.length - 1].end - worker.segments[0].start,\n          )}\n        />\n        <DetailsItem\n          label=\"Started\"\n          value={formatTimestamp(worker.segments[0].start)}\n        />\n        <DetailsItem\n          label=\"Last seen\"\n          value={formatTimestamp(worker.segments[worker.segments.length - 1].end)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function WorkersPage() {\n  const { tests } = useData()\n  const navigate = useNavigate()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n  const [expandedWorkers, setExpandedWorkers] = useState<Set<string>>(new Set())\n  const [selectedPeriod, setSelectedPeriod] = useState<TimePeriod>(TIME_PERIODS[0])\n  const [userRange, _setUserRange] = useState<[number, number] | null>(null)\n  const [rightSticky, setRightSticky] = useState<boolean>(false)\n\n  function setUserRange(range: [number, number] | null) {\n    _setUserRange(range)\n    // if a user sets the slider all the way to the right, consider it \"stickied\": future\n    // events which change the maximum range should also implicitly change the user range,\n    // because when a user sets the slider to the right, the want \"the most recent timestamp\n    // as of anytime\", not \"the most recent timestamp as of now\".\n    setRightSticky(range?.[1] == maxTimestamp)\n  }\n\n  const workerUuids = OrderedSet(\n    Array.from(tests.values())\n      .map(test => Array.from(test.reports_by_worker.keys()))\n      .flat()\n      .sortKey(uuid => uuid),\n  )\n\n  const workerReports = new Map<string, WorkerReport[]>()\n  workerUuids.forEach(uuid => {\n    const allReports: WorkerReport[] = []\n    workerReports.set(uuid, allReports)\n    Array.from(tests.values()).forEach(test => {\n      if (!test.reports_by_worker.has(uuid)) {\n        return\n      }\n\n      const reports = test.reports_by_worker.get(uuid)!\n      allReports.push(\n        ...reports.map(report => ({\n          timestamp_monotonic: report.timestamp_monotonic!,\n          nodeid: test.nodeid,\n        })),\n      )\n    })\n\n    allReports.sortKey(report => report.timestamp_monotonic)\n  })\n\n  let minTimestamp: number = Infinity\n  let maxTimestamp: number = -Infinity\n\n  let workers: Worker[] = []\n  workerUuids.forEach(uuid => {\n    const reports = workerReports.get(uuid)!\n    const segments: Segment[] = []\n    let currentSegment: Segment | null = null\n\n    reports.forEach((report, index) => {\n      minTimestamp = Math.min(minTimestamp, report.timestamp_monotonic)\n      maxTimestamp = Math.max(maxTimestamp, report.timestamp_monotonic)\n\n      if (!currentSegment || currentSegment.nodeid !== report.nodeid) {\n        // flush the current segment\n        if (currentSegment) {\n          segments.push(currentSegment)\n        }\n        currentSegment = {\n          nodeid: report.nodeid,\n          start: report.timestamp_monotonic,\n          end: report.timestamp_monotonic,\n        }\n      } else {\n        // extend the current segment\n        currentSegment.end = report.timestamp_monotonic\n      }\n\n      // if this is the last report, flush the segment\n      if (index === reports.length - 1 && currentSegment) {\n        segments.push(currentSegment)\n      }\n    })\n\n    workers.push(new Worker(uuid, segments))\n  })\n\n  workers.sortKey(worker => worker.segments[0].start)\n  const segments = workers\n    .flatMap(worker => worker.segments)\n    .sortKey(segment => segment.start)\n  const regions = segmentRegions(segments)\n\n  const span = maxTimestamp - minTimestamp\n  // find the first time period which is larger than the span of the workers.\n  // that time period is available, but anything after is not.\n  const firstLargerPeriod = TIME_PERIODS.findIndex(\n    period => period.duration !== null && period.duration >= span,\n  )\n\n  function getSliderRange(): [number, number] {\n    if (selectedPeriod.duration === null) {\n      const latestRegion = regions[regions.length - 1]\n      // the range is just the last region, unless there are no segments, in which case\n      // we use the min/max timestamp\n      return regions.length > 0\n        ? [latestRegion[0], latestRegion[1]]\n        : [minTimestamp, maxTimestamp]\n    }\n\n    const range: [number, number] = [\n      Math.max(minTimestamp, maxTimestamp - selectedPeriod.duration!),\n      maxTimestamp,\n    ]\n\n    // trim the slider range to remove any time at the beginning or end when there\n    // are no active workers\n    let trimmedMin: number | null = null\n    let trimmedMax: number | null = null\n    for (const worker of workers) {\n      const visibleSegments = worker.visibleSegments(range)\n      if (visibleSegments.length === 0) {\n        continue\n      }\n\n      if (trimmedMin === null || visibleSegments[0].start < trimmedMin) {\n        trimmedMin = visibleSegments[0].start\n      }\n\n      if (\n        trimmedMax === null ||\n        visibleSegments[visibleSegments.length - 1].end > trimmedMax\n      ) {\n        trimmedMax = visibleSegments[visibleSegments.length - 1].end\n      }\n    }\n\n    return [trimmedMin ?? range[0], trimmedMax ?? range[1]]\n  }\n\n  const sliderRange = getSliderRange()\n  // create a new ref to avoid a lint warning about mutating a useState value\n  let visibleRange: [number, number] = [...(userRange ?? sliderRange)]\n  if (rightSticky && userRange) {\n    visibleRange[1] = maxTimestamp\n  }\n\n  useEffect(() => {\n    setUserRange(null)\n  }, [selectedPeriod])\n\n  const [visibleMin, visibleMax] = visibleRange\n  const visibleDuration = visibleMax - visibleMin\n\n  const segmentStyle = (segment: Segment) => {\n    let left: number\n    let width: number\n    if (visibleDuration === 0) {\n      left = 0\n      width = 100\n    } else {\n      left = ((segment.start - visibleMin) / visibleDuration) * 100\n      width = ((segment.end - segment.start) / visibleDuration) * 100\n    }\n\n    // TODO we should compute a min in pixels, not percentage.\n    width = Math.max(width, 0.1)\n\n    return {\n      left: `${left}%`,\n      width: `${width}%`,\n      backgroundColor: nodeColor(segment.nodeid),\n    }\n  }\n\n  const onWorkerClick = (uuid: string) => {\n    setExpandedWorkers(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(uuid)) {\n        newSet.delete(uuid)\n      } else {\n        newSet.add(uuid)\n      }\n      return newSet\n    })\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Workers </div>\n      <div className=\"card__body\">\n        <div className=\"card__text\">\n          <div className=\"card__text__paragraph\">\n            This page shows the history of your workers, and what tests they have been\n            fuzzing.\n          </div>\n          <div className=\"card__text__paragraph\">\n            Roughly speaking, \"one worker\" = \"one CPU core\".\n          </div>\n        </div>\n        <div className=\"workers\">\n          <div className=\"workers__controls\">\n            <div className=\"workers__durations\">\n              {TIME_PERIODS.map((period, index) => {\n                const available = index <= firstLargerPeriod\n                return (\n                  <div\n                    key={index}\n                    className={`workers__durations__button ${\n                      selectedPeriod.label === period.label\n                        ? \"workers__durations__button--active\"\n                        : \"\"\n                    } ${!available ? \"workers__durations__button--disabled\" : \"\"}`}\n                    onClick={() => {\n                      if (!available) {\n                        return\n                      }\n                      setSelectedPeriod(period)\n                      // reset the range when clicking on a period, even if it's the same period. This gives a\n                      // nice \"reset button\" ux to users.\n                      setUserRange(null)\n                    }}\n                  >\n                    {period.label}\n                  </div>\n                )\n              })}\n            </div>\n            <RangeSlider\n              min={sliderRange[0]}\n              max={sliderRange[1]}\n              value={visibleRange}\n              onChange={newRange => setUserRange(newRange)}\n              step={(sliderRange[1] - sliderRange[0]) / 1000}\n            />\n          </div>\n          <div className=\"workers__timeline-header\">\n            <span className=\"workers__timeline-header__label\">\n              {formatTimestamp(visibleMin)}\n            </span>\n            <span className=\"workers__timeline-header__label\">\n              {formatTimestamp(visibleMax)}\n            </span>\n          </div>\n          {workers.map(\n            worker =>\n              worker.visibleSegments(visibleRange).length > 0 && (\n                <WorkerBar\n                  key={worker.uuid}\n                  worker={worker}\n                  range={visibleRange}\n                  expandedWorkers={expandedWorkers}\n                  onWorkerClick={onWorkerClick}\n                  segmentStyle={segmentStyle}\n                  navigate={navigate}\n                  showTooltip={showTooltip}\n                  hideTooltip={hideTooltip}\n                  moveTooltip={moveTooltip}\n                />\n              ),\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { BrowserRouter, HashRouter, Route, Routes } from \"react-router-dom\"\nimport { DataProvider } from \"src/context/DataProvider\"\nimport { NotificationProvider } from \"src/context/NotificationProvider\"\nimport { Layout } from \"src/Layout\"\nimport { CollectionStatusPage } from \"src/pages/CollectionStatus\"\nimport { NotFoundPage } from \"src/pages/NotFound\"\nimport { PatchesPage } from \"src/pages/Patches\"\nimport { TestPage } from \"src/pages/Test\"\nimport { TestsPage } from \"src/pages/Tests\"\nimport { WorkersPage } from \"src/pages/Workers\"\nimport { TooltipProvider } from \"src/utils/tooltip\"\n\nexport function App() {\n  const Router =\n    import.meta.env.VITE_ROUTER_TYPE === \"hash\" ? HashRouter : BrowserRouter\n\n  return (\n    <Router>\n      <NotificationProvider>\n        <DataProvider>\n          <TooltipProvider>\n            <Routes>\n              <Route element={<Layout />}>\n                <Route path=\"/\" element={<TestsPage />} />\n                <Route path=\"/patches\" element={<PatchesPage />} />\n                <Route path=\"/collected\" element={<CollectionStatusPage />} />\n                <Route path=\"/workers\" element={<WorkersPage />} />\n                <Route path=\"/tests/:nodeid\" element={<TestPage />} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n              </Route>\n            </Routes>\n          </TooltipProvider>\n        </DataProvider>\n      </NotificationProvider>\n    </Router>\n  )\n}\n","import \"src/styles/styles.scss\"\n// ensure our array prototype definitions get loaded\nimport \"src/utils/prototypes\"\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom/client\"\nimport { App } from \"src/App\"\n\nReactDOM.createRoot(document.getElementById(\"app\")!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","jsxRuntimeModule","require$$0","Array","prototype","sortKey","sort","a","b","keyA","keyB","isArray","i","Math","min","length","ReactSharedInternals","reactCompilerRuntime_production","size","compilerRuntimeModule","Notification","t0","$","_c","message","onDismiss","isVisible","shouldRender","setShouldRender","useState","t1","t2","timer","setTimeout","clearTimeout","useEffect","t3","t4","jsx","t5","e","stopPropagation","t6","Symbol","for","FontAwesomeIcon","faXmark","t7","t8","jsxs","NotificationContext","createContext","NotificationProvider","children","notifications","setNotifications","Map","timers","useRef","idCounter","id","current","get","delete","prev","filter","n","dismissNotification","duration","id_0","notification","prev_0","set","addNotification","id_1","message_0","duration_0","map","timer_0","updateNotification","notification_1","index","top","t9","useNotification","context","useContext","Error","useIsMobile","isMobile","setIsMobile","checkIfMobile","window","matchMedia","matches","addEventListener","removeEventListener","Toggle","value","onChange","options","disabled","undefined","assert","Set","_temp","option","otherValue","find","o_0","o","mobileContent","content","String","Filter","constructor","name","valueName","predicate","extraData","createdAt","Date","now","FilterContext","FilterProvider","filtersByObsType","setFiltersByKey","observationCategory","setObservationCategory","filters","newFilters","newMap","setFilters","newFilters_0","filteredFilters","f","removeFilter","useFilters","TooltipContext","TooltipPortal","state","visible","x","y","position","left","display","pointerEvents","zIndex","__html","createPortal","document","body","TooltipProvider","location","useLocation","owner","tooltipState","setTooltipState","pathname","showTooltip","owner_0","hideTooltip","x_0","y_0","owner_1","prev_1","moveTooltip","contextValue","useTooltip","sum","values","start","from","reduce","total","val","reHighlight","containerRef","force","querySelectorAll","forEach","element","removeAttribute","hljs","highlightElement","max","array","maxElement","maxValue","minValue","bisectRight","arr","low","high","mid","measureContainer","getMeasureContainer","createElement","style","cssText","appendChild","measureText","text","className","container","textContent","rect","getBoundingClientRect","width","height","navigateOnClick","event","url","navigate","metaKey","ctrlKey","resolvedUrl","origin","open","readableNodeid","nodeid","split","pop","commonPrefix","strings","delimiter","segments","s","minLen","prefix","seg","every","parts","push","joined","join","withDelim","startsWith","d3","select","d3_select","scaleLinear","d3_scaleLinear","scaleOrdinal","d3_scaleOrdinal","scaleBand","d3_scaleBand","axisBottom","d3_axisBottom","axisLeft","d3_axisLeft","Feature","getValue","observation","features","UserFeature","isSystem","SystemFeature","HORIZONTAL_BAR_FEATURE_CUTOFF","SELECTION_STROKE_WIDTH","NominalChart","feature","observations","parentRef","svgRef","nominalFilters","selectedValues","getSelectedValues","raw","filtered","_temp2","filteredObservations","newSelection","equals","first","_temp3","nominalFilters_0","some","obs","onValueClick","distinctRawValues","data","value_2","entries","_temp4","selectAll","remove","clientWidth","svg","attr","append","showTooltipHandler","d","label","count","clientX","clientY","margin","right","bottom","innerWidth","innerHeight","domain","range","colorScale","has","PRESENT_STRING","NOT_PRESENT_STRING","TYCHE_COLOR","PRIMARY","ACCENT","ACCENT2","ACCENT3","ACCENT4","g","xAccumulator","barHeight","count_0","value_4","barWidth","isSelected","on","event_0","call","tickFormat","_temp6","margin_0","innerWidth_0","innerHeight_0","keys","padding","g_0","enter","value_5","count_1","bandwidth","t10","count_2","event_2","t11","value_6","event_3","d_1","t12","value_7","t13","value_8","t14","count_3","t15","count_4","ticks","_temp7","faGear","d_2","round","Number","toString","d_0","_temp5","feature_0","SUCCESS","ERROR","value_3","value_0","obs_0","status","Collapsible","title","defaultState","onStateChange","headerClass","contentClass","setState","newState","toggleState","faCaretDown","faCaretRight","TycheSection","STABILITY_FEATURE_KEY","Features","T0","bb0","featureNames","add","feature_1","stability","Filters","allFilters","flat","filter_0","python","regex","IDENT_RE","RESERVED_WORDS","KEYWORDS","PROMPT","SUBST","LITERAL_BRACKET","STRING","digitpart","pointfloat","lookahead","NUMBER","COMMENT_TYPE","PARAMS","Pagination","currentPage","pageCount","onPageChange","getPageNumbers","pageNumbers","page","handlePageClick","handlePrevious","handleNext","faArrowLeftLong","page_0","isCurrentPage","faArrowRightLong","_","registerLanguage","perPage","Representation","observationType","observationsDivRef","setPage","rawRepresentations","repr","representation","ceil","representations","slice","requestAnimationFrame","justifyContent","marginBottom","marginTop","rep_0","MAX_MOSAIC_WIDTH","MosaicChart","verticalAxis","horizontalAxis","cssStyle","row","column","getSelectedCells","mosaicFilters","selectedCells","cells","rowTotals","fill","columnTotals","grandTotal","j","widthPercent","verticalPredicate","horizontalPredicate","visibleRows","visibleCols","onCellClick","rowIndex","colIndex","cell","List","colIdx","rowIdx","filterName","remainingCells","canonicalNames","axes","rowIndex_0","colIndex_2","axis","subtract","col","toArray","cell_2","rowHeaderWidth","columnHeaderHeight","rowTotalWidth","minCellWidth","minCellHeight","rowHeights","columnHeaderPositions","cellContainerWidth","rowIndex_6","rowCells","adjustedWidths","totalAdjustedWidth","maxWidth","minHeight","marginLeft","marginRight","isFirst","isLast","transform","textAlign","rowDisplayIndex","cursor","colIndex_8","tooltipContent","minWidth","Samples","cellStyle","backgroundColor","WARNING","opacity","obs_2","isDuplicate","obs_1","isUnique","ACCENT5","TycheInner","test","corpus_observations","rolling_observations","rawObservations","observation_0","paddingTop","paddingBottom","alignItems","gap","fontSize","fontWeight","Fragment","run_start","Tyche","SKIP_EXCEPTIONS","Dataclass","withProperties","props","Object","assign","create","Failure","fromJson","Observation","StatusCounts","counts","Status","statuses","newStatuses","newStatusCounts","Phase","GENERATE","REPLAY","DISTILL","SHRINK","FAILED","Report","elapsed_time","timestamp","status_counts","behaviors","fingerprints","since_new_behavior","phase","worker_uuid","status_counts_diff","elapsed_time_diff","timestamp_monotonic","ninputs","status_reason","arguments_","how_generated","timing","metadata","property","arguments","TestStatus","FAILED_FATALLY","SHRINKING","RUNNING","SKIPPED_DYNAMICALLY","WAITING","report_with_diff","report","last_worker_report","last_status_counts","last_elapsed_time","console","Test","database_key","failures","fatal_failure","reports_by_worker","linear_reports","_status_counts_cumsum","_elapsed_time_cumsum","load_finished_at","reports_by_worker_","sorted_reports","flatMap","reports","_worker_uuid","add_report","_check_invariants","_assert_reports_ordered","linear_status_counts","linear_elapsed_time","last_report_worker","reports_index","r","linear_report","splice","next_worker_report","i_offset","report_candidate","cache","start_idx","normalFailures","failure","exception","includes","skipFailures","latest","getTime","WAITING_STATUS_DURATION","since","elapsed_times","_cumsum","initial","cumsum","running","__publicField","_Test","FUZZJSON_INF","FUZZJSON_NINF","FUZZJSON_NAN","fuzzjsonReviver","_key","Infinity","NaN","DataContext","prepareObservations","reprCounts","_value","testsReducer","action","getOrCreateTest","DashboardEventType","tests","interesting_origin","observation_type","nodeids","DataProvider","socket","setSocket","dispatch","useReducer","loadData","setLoadData","setNodeid","count_tests","count_tests_loaded","loadingStatus","setLoadingStatus","nodeid_0","doLoadData","testsLoaded","clear","fetch","then","nodeid_1","testData","worker","Worker","text_0","Promise","resolve","onmessage","postMessage","data_0","nodeid_2","test_0","rolling","corpus","terminate","response_0","response","JSON","parse","useData","SidebarLink","to","icon","isActive","Link","Layout","sidebarOpen","setSidebarOpen","sidebarRef","listener","contains","target","faBars","faCode","faCodeCompare","faBox","faUser","import","replace","faBookOpen","Outlet","t16","pathname_2","pathname_1","pathname_0","Table","headers","mobileRow","getKey","onFilterChange","filterStrings","sortColumn","setSortColumn","sortDirection","setSortDirection","SortOrder","filterString","setFilterString","getDisplayData","displayData","item","checkString","toLowerCase","sorted","reverse","useMemo","handleHeaderClick","doFilterChange","pagedData","end","faTimes","item_1","header","align","order","faArrowUp","faArrowDown","item_2","rowValue","fetchData","endpoint","URL","json","fetchPatches","patches","fetchAvailablePatches","available_patches","fetchCollectionStatus","collection_status","statusOrder","not_collected","collected","CollectionStatusPage","collectionStatus","setCollectionStatus","sortedResults","nodeidPrefix","wordBreak","encodeURIComponent","item_3","item_0","result","NotFoundPage","diff","TestPatches","setPatches","loading","setLoading","patchType","setPatchType","copySuccess","setCopySuccess","handleCopy","handleDownload","patch_0","patchNames","activePatch","navigator","clipboard","writeText","patch","blob","Blob","createObjectURL","href","download","click","removeChild","revokeObjectURL","faCheck","faCopy","t17","t18","faDownload","t19","t20","t21","t22","t23","PatchesPage","setNodeids","faArrowRight","formatTick","floor","toLocaleString","getTicks","baseScale","viewportScale","tickCount","zoomState","orientation","visibleDomain","invert","scaleX","offset","Axis","isHorizontal","x1","y1","x2","y2","tick","tickX","tickY","labelX","labelY","DataLines","lines","viewportXScale","viewportYScale","xValue","yValue","lineGenerator","d3_line","line","pathData","color","GraphReport","fromReport","settingCallbacks","useSetting","defaultValue","saved","sessionStorage","getItem","_setValue","newValue","setItem","stringify","callback","setValue","identityZoomState","getConstrainedTransform","bounds","baseX","baseY","constrained","xMin","xMax","xRange","rangeStart","rangeEnd","leftVisibleValue","rightVisibleValue","yMin","yMax","yRange","rangeTop","rangeBottom","useScales","scaleSetting","scaleSettingY","axisSettingX","axisSettingY","d3_scaleSymlog","constrainedTransform","originalXRange","viewportX","copy","viewportY","defaultZoomState","useZoom","minScale","maxScale","wheelSensitivity","onZoomEnd","onDragEnd","setTransformState","isDragging","lastPointer","animationRef","isZooming","wheelEventCount","wheelTimeoutRef","cancelAnimationFrame","cancelAnimation","newTransform","setTransform","startTransform","startTime","performance","interpolateX","interpolate","interpolateY","interpolateScaleX","animate","currentTime","elapsed","progress","eased","pow","newTransform_0","resetZoom","handleWheel","mouseX","abs","deltaX","deltaY","scaleFactor","newScale","wouldZoom","preventDefault","scaleRatio","constrainedTransform_0","passive","button","handleMouseMove","handleMouseUp","onMouseDown","event_1","onDoubleClick","GRAPH_HEIGHT","zoomIdentity","d3_zoomIdentity","interpolateViridis","d3_interpolateViridis","interpolateRgb","d3_interpolateRgb","schemeCategory10","d3_schemeCategory10","graphLines","viewSetting","workers_after","reportsColor","WorkerView","graphReports","timeColor","timestamps","timeColorScale","normalized","minTimestamp","maxTimestamp","workerReports","recentReports","TOGETHER","SEPARATE","LATEST","linearStatusCounts","linearElapsedTime","LogLinearToggle","LabelX","scale","setScale","setAxis","flexDirection","faHashtag","faClock","LabelY","faCodeBranch","faFingerprint","workerToggleContent","faUsers","faCircleDot","GRAPH_MARGIN","QUADTREE_SAMPLE_INTERVAL","DISTANCE_THRESHOLD","sampleLinePoints","scales","points","totalLength","segmentLength","sqrt","numSamples","targetDistance","currentDistance","segmentT","GraphComponent","quadtreeRef","scaleSettingX","setScaleSettingX","setScaleSettingY","setAxisSettingX","setAxisSettingY","useNavigate","tooltip","containerWidth","setContainerWidth","activeNodeid","setActiveNodeid","scalesRef","filteredLines","activeLine","line_0","resizeObserver","ResizeObserver","entry","contentRect","observe","disconnect","graphWidth","graphHeight","allReports","rebuildQuadtree","sampledPoints","quadtree","addAll","zoom","userSelect","currentTarget","mouseY","closestPoint","closestReport","minDistance","reportX","reportY","distance","behaviors_s","fingerprints_s","inputs_s","seconds_s","toFixed","ColorLegend","colors","CoverageGraph","workerViews","workerViewSetting","setWorkerView","flex","view","statusStrings","TestStatusPill","Tooltip","formatTime","t","hours","minutes","seconds","padStart","inputsPerSecond","formatInputsPerSecond","perSecond","formatNumber","parseFloat","toPrecision","formatStability","isFinite","sign","suffixes","magnitude","log10","divisor","scaled","decimals","rounded","getTestStats","inputs","executions","inputsSinceBranch","timeSpent","FailureStatusPill","FailureCard","FatalFailureCard","whiteSpace","traceback","TestPage","useParams","nodeidsWithPatches","setNodeidsWithPatches","existing","stats","faTachometerAlt","faSeedling","faLocationPinLock","faArrowLeft","t24","t25","t26","t27","t28","fontVariantNumeric","Icon","InlineStatistic","TestTable","sortedTests","iconInputs","iconBehaviors","iconFingerprints","iconExecutions","iconSinceNewBranch","iconTimeSpent","iconStability","_temp8","_temp9","_temp0","_temp1","_temp10","test_10","test_11","stats_0","test_12","_temp11","test_13","test_9","test_8","test_7","test_6","test_5","test_4","test_3","test_2","test_1","TestsPage","RangeSlider","step","dragging","setDragging","sliderRef","minPercent","maxPercent","zIndexMin","zIndexMax","percent","rawValue","steppedValue","getValueFromPosition","thumb","handleMouseDown","newValue_0","maxDistance","handleTrackMouseDown","Worker$1","uuid","visibleSegments","segment","TIME_PERIODS","formatTimestamp","REGION_TOLERANCE","segmentRegions","regions","regionStart","latestEnd","nodeColor","hash","charCodeAt","hue","saturation","lightness","DetailsItem","WorkerBar","expandedWorkers","onWorkerClick","segmentStyle","WorkerDetails","WorkersPage","setExpandedWorkers","selectedPeriod","setSelectedPeriod","userRange","_setUserRange","rightSticky","setRightSticky","setUserRange","workerUuids","OrderedSet","uuid_0","workers","uuid_1","reports_0","currentSegment","report_1","segments_0","span","period","firstLargerPeriod","findIndex","sliderRange","latestRegion","range_0","trimmedMin","trimmedMax","worker_1","visibleRange","visibleMin","visibleMax","visibleDuration","segment_0","uuid_2","newSet","period_0","index_0","available","newRange","worker_2","worker_0","report_0","App","Router","HashRouter","Route","Routes","ReactDOM","createRoot","getElementById","render","React"],"mappings":"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,EAV9DpD,EAAMnE,GAWhB,EACDwB,KAAAkH,EAAAlH,KAAAc,GAAAA,EAAAd,EAAA,CAAA,iBAfY,CAAA,UAAA,iBACbS,SAAAA,CAAAA,EACCsW,EAAUxT,IAAKzC,CAaf,CAAA,EACH,CAAA,CAAMd,KAAA2G,EAAA3G,KAAAkH,EAAAlH,KAAAD,EAAAC,KAAAQ,CAAAA,MAAAT,EAAAC,EAAA,CAAA,EAAAQ,EAAAR,EAAA,CAAA,EAAA,OAAAQ,IAAAa,OAAAC,IAAA,6BAAA,EAAAd,EAhBNT,CAgBM,CA5BH,SAAAoF,GAAAxC,EAAA,CAAA,OAKgBA,EAAMuD,SAAA,CCF7B,SAASgR,GAAOhN,EAAM,CACpB,MAAMiN,EAAQjN,EAAK,MACbkN,EAAW,WAAoC,sCAAA,GAAA,EAC/CC,EAAiB,CACrB,MACA,KACA,SACA,QACA,QACA,QACA,OACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,UACA,MACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,QACA,cACA,MACA,KACA,OACA,QACA,SACA,MACA,QACA,OACA,OACD,EAsGKC,EAAW,CACf,SAAU,sBACV,QAASD,EACT,SAvGgB,CAChB,aACA,MACA,MACA,MACA,QACA,MACA,OACA,aACA,YACA,QACA,WACA,MACA,cACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,OACA,SACA,QACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,MACA,KACA,QACA,MACA,aACA,aACA,OACA,MACA,OACA,SACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,QACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,OACA,KACD,EAkCC,QAhCe,CACf,YACA,WACA,QACA,OACA,iBACA,MACD,EA0BC,KArBY,CACZ,MACA,WACA,YACA,OACA,OACA,UACA,UACA,WACA,WACA,MACA,QACA,OACA,OACD,CAQA,EAEKE,EAAS,CACb,UAAW,OACX,MAAO,gBACR,EAEKC,EAAQ,CACZ,UAAW,QACX,MAAO,KACP,IAAK,KACL,SAAUF,EACV,QAAS,GACV,EAEKG,EAAkB,CACtB,MAAO,OACP,UAAW,CACZ,EAEKC,EAAS,CACb,UAAW,SACX,SAAU,CAAExN,EAAK,gBAAkB,EACnC,SAAU,CACR,CACE,MAAO,yCACP,IAAK,MACL,SAAU,CACRA,EAAK,iBACLqN,CACD,EACD,UAAW,EACZ,EACD,CACE,MAAO,yCACP,IAAK,MACL,SAAU,CACRrN,EAAK,iBACLqN,CACD,EACD,UAAW,EACZ,EACD,CACE,MAAO,8BACP,IAAK,MACL,SAAU,CACRrN,EAAK,iBACLqN,EACAE,EACAD,CACV,CACO,EACD,CACE,MAAO,8BACP,IAAK,MACL,SAAU,CACRtN,EAAK,iBACLqN,EACAE,EACAD,CACV,CACO,EACD,CACE,MAAO,eACP,IAAK,IACL,UAAW,EACZ,EACD,CACE,MAAO,eACP,IAAK,IACL,UAAW,EACZ,EACD,CACE,MAAO,4BACP,IAAK,GACN,EACD,CACE,MAAO,4BACP,IAAK,GACN,EACD,CACE,MAAO,4BACP,IAAK,IACL,SAAU,CACRtN,EAAK,iBACLuN,EACAD,CACV,CACO,EACD,CACE,MAAO,4BACP,IAAK,IACL,SAAU,CACRtN,EAAK,iBACLuN,EACAD,CACV,CACO,EACDtN,EAAK,iBACLA,EAAK,iBACX,CACG,EAGKyN,EAAY,kBACZC,EAAa,QAAQD,CAAS,UAAUA,CAAS,SAASA,CAAS,OAMnEE,EAAY,OAAOR,EAAe,KAAK,GAAG,CAAC,GAC3CS,EAAS,CACb,UAAW,SACX,UAAW,EACX,SAAU,CAWR,CACE,MAAO,QAAQH,CAAS,MAAMC,CAAU,eAAeD,CAAS,YAAYE,CAAS,GACtF,EACD,CACE,MAAO,IAAID,CAAU,QACtB,EAQD,CACE,MAAO,0CAA0CC,CAAS,GAC3D,EACD,CACE,MAAO,4BAA4BA,CAAS,GAC7C,EACD,CACE,MAAO,6BAA6BA,CAAS,GAC9C,EACD,CACE,MAAO,mCAAmCA,CAAS,GACpD,EAID,CACE,MAAO,OAAOF,CAAS,WAAWE,CAAS,GACnD,CACA,CACG,EACKE,EAAe,CACnB,UAAW,UACX,MAAOZ,EAAM,UAAU,SAAS,EAChC,IAAK,IACL,SAAUG,EACV,SAAU,CACR,CACE,MAAO,SACR,EAED,CACE,MAAO,IACP,IAAK,OACL,eAAgB,EACxB,CACA,CACG,EACKU,EAAS,CACb,UAAW,SACX,SAAU,CAER,CACE,UAAW,GACX,MAAO,UACP,KAAM,EACP,EACD,CACE,MAAO,KACP,IAAK,KACL,aAAc,GACd,WAAY,GACZ,SAAUV,EACV,SAAU,CACR,OACAC,EACAO,EACAJ,EACAxN,EAAK,iBACf,CACA,CACA,CACG,EACD,OAAAsN,EAAM,SAAW,CACfE,EACAI,EACAP,CACD,EAEM,CACL,KAAM,SACN,QAAS,CACP,KACA,MACA,SACD,EACD,aAAc,GACd,SAAUD,EACV,QAAS,cACT,SAAU,CACRC,EACAO,EACA,CAEE,MAAO,oBACP,MAAO,UACR,EACD,CAGE,cAAe,KACf,UAAW,CACZ,EACD,CAAE,MAAO,SAAU,MAAO,SAAW,EACrCJ,EACAK,EACA7N,EAAK,kBACL,CACE,MAAO,CACL,QAAS,MACTkN,CACD,EACD,MAAO,CACL,EAAG,UACH,EAAG,gBACJ,EACD,SAAU,CAAEY,CAAM,CACnB,EACD,CACE,SAAU,CACR,CACE,MAAO,CACL,UAAW,MACXZ,EAAU,MACV,QAASA,EAAS,OACnB,CACF,EACD,CACE,MAAO,CACL,UAAW,MACXA,CACD,CACb,CACS,EACD,MAAO,CACL,EAAG,UACH,EAAG,cACH,EAAG,uBACb,CACO,EACD,CACE,UAAW,OACX,MAAO,WACP,IAAK,UACL,SAAU,CACRU,EACAE,EACAN,CACV,CACA,CACA,CACG,CACH,CCxaO,SAAAO,GAAAlY,EAAA,CAAAC,MAAAA,EAAAC,IAAA,EAAA,EAAoB,CAAAiY,YAAAA,EAAAC,UAAAA,EAAAC,aAAAA,CAAAA,EAAArY,EACzBkF,QAAAA,OAAekT,GAAa,EAAC3X,IAAAA,EAAAR,EAAAkY,CAAAA,IAAAA,GAAAlY,OAAAmY,GAE7B3X,YAAA,CAAA,OACM2X,GAAc,EACTtZ,MAAA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","x_google_ignoreList":[0,1,3,4,17,32]}