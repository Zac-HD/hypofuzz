{
  "tests/test_branches.py::test_branch_cache": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_branch_cache(\n    start=Location(filename='', line=2, column=None),\n    end=Location(filename='', line=62, column=31249443),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 4.129100125283003e-05,
          "overall:gc": 0.0,
          "generate:start": 9.066704660654068e-05,
          "generate:end": 0.00012700003571808338
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_branches.py::test_branch_cache",
        "run_start": 287672.934678083,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_branch_cache(\n    start=Location(filename='\\U00079ba9?n\u00faZ\u00b0\u00b6\\U0009da0dBu', line=-32049, column=-1183757936),\n    end=Location(filename='Q\\U00033b02', line=-2050735673, column=None),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0011251660180278122,
          "overall:gc": 0.0,
          "generate:start": 0.0003860419965349138,
          "generate:end": 0.00016325002070516348
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_branches.py::test_branch_cache",
        "run_start": 287651.105671583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_branch_cache(\n    start=Location(filename='', line=1, column=None),\n    end=Location(filename='\u00fa\u00c7\u00f0\u00ea\\U0010b969R9U\u00ff%\u00ba\u00f1\\x9a\\U00013736\u00b3\\U00076d0fH\u00df\u00b5\\U000fffa0_\\x86\\U00034407\u00b6\u00ea\\x04\\n', line=-26221, column=0),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00011045800056308508,
          "overall:gc": 0.0,
          "generate:start": 0.00013229204341769218,
          "generate:end": 0.00014308298705145717
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_branches.py::test_branch_cache",
        "run_start": 287693.635163416,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_branch_cache(\n    start=Location(filename='', line=1, column=None),\n    end=Location(filename='', line=0, column=None),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 4.612503107637167e-05,
          "overall:gc": 0.0,
          "generate:start": 0.00010458298493176699,
          "generate:end": 9.762501576915383e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_branches.py::test_branch_cache",
        "run_start": 287693.878392,
        "stability": null
      }
    ]
  },
  "tests/test_branches.py::test_branch_make": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_branch_make(\n    start=Location(filename='', line=7233495202270846228, column=25780),\n    end=Location(filename='\u00f3\\U000b7cbe', line=-29, column=None),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0001134999911300838,
          "overall:gc": 0.0,
          "generate:start": 0.0002509159967303276,
          "generate:end": 0.00013754202518612146
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_branches.py::test_branch_make",
        "run_start": 287651.878187708,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_branch_make(\n    start=Location(filename='', line=-7459, column=None),\n    end=Location(filename='\\U000d7483\\U0009b53fI\\x87\\U000f5c7a\\U000f0f13G\u00c6', line=28758, column=-25958),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 8.32080258987844e-05,
          "overall:gc": 0.0,
          "generate:start": 0.00012004200834780931,
          "generate:end": 0.00015516701387241483
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_branches.py::test_branch_make",
        "run_start": 287665.421669791,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_branch_make(\n    start=Location(filename='', line=6, column=None),\n    end=Location(filename='', line=0, column=None),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0001022499636746943,
          "overall:gc": 0.0,
          "generate:start": 0.0001010000123642385,
          "generate:end": 9.520800085738301e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_branches.py::test_branch_make",
        "run_start": 287684.607813041,
        "stability": null
      }
    ]
  },
  "tests/test_provider.py::test_draw_past_prefix": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_draw_past_prefix(\n    choice_types_constraints=('boolean',\n     {'p': 0.8067120584976946, 'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0018896659603342414,
          "overall:gc": 0.0,
          "generate:choice_types_constraints": 0.00015366700245067477,
          "generate:random": 1.2499978765845299e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_draw_past_prefix",
        "run_start": 287671.324712708,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_draw_past_prefix(\n    choice_types_constraints=('boolean',\n     {'p': 0.8018412169545901, 'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0020708340452983975,
          "overall:gc": 0.0,
          "generate:choice_types_constraints": 0.00014133303193375468,
          "generate:random": 1.291697844862938e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_draw_past_prefix",
        "run_start": 287682.424102875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_draw_past_prefix(\n    choice_types_constraints=('boolean',\n     {'p': 0.8177818246430049, 'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0011500000255182385,
          "overall:gc": 0.0,
          "generate:choice_types_constraints": 0.00014583306619897485,
          "generate:random": 1.3707962352782488e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_draw_past_prefix",
        "run_start": 287682.978492625,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_draw_past_prefix(\n    choice_types_constraints=('integer',\n     {'min_value': None,\n      'max_value': None,\n      'shrink_towards': 448,\n      'weights': None,\n      'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.004389751004055142,
          "overall:gc": 7.845798972994089e-05,
          "generate:choice_types_constraints": 0.2097688339999877,
          "generate:random": 0.0002364169922657311
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_draw_past_prefix",
        "run_start": 287650.680521375,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_draw_past_prefix(\n    choice_types_constraints=('boolean', {'p': 0.0, 'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0017116660019382834,
          "overall:gc": 0.0,
          "generate:choice_types_constraints": 0.00014274998102337122,
          "generate:random": 1.3375014532357454e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_draw_past_prefix",
        "run_start": 287662.255676625,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_draw_past_prefix(\n    choice_types_constraints=('boolean', {'p': 0.0, 'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0013082909863442183,
          "overall:gc": 0.0,
          "generate:choice_types_constraints": 0.00013116700574755669,
          "generate:random": 1.2958014849573374e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_draw_past_prefix",
        "run_start": 287693.304908583,
        "stability": null
      }
    ]
  },
  "tests/test_provider.py::test_misaligned_type": {
    "rolling": [
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_misaligned_type (line 113)",
        "representation": "test_misaligned_type(\n    node=ChoiceNode(type='boolean',\n     value=True,\n     constraints={'p': 1.0},\n     was_forced=False,\n     index=None),\n    choice_type_constraints=('boolean',\n     {'p': 0.19986824910092654, 'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00014224997721612453,
          "overall:gc": 0.0,
          "generate:node": 0.0007384159252978861,
          "generate:choice_type_constraints": 9.787501767277718e-05,
          "generate:random": 1.108401920646429e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_type",
        "run_start": 287684.249582416,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_type(\n    node=ChoiceNode(type='boolean',\n     value=True,\n     constraints={'p': 1.0},\n     was_forced=True,\n     index=None),\n    choice_type_constraints=('float',\n     {'min_value': -4.119025356082229e+16,\n      'max_value': inf,\n      'forced': None,\n      'allow_nan': True,\n      'smallest_nonzero_magnitude': 0.5902371704755213}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0014266250072978437,
          "overall:gc": 0.0003487499780021608,
          "generate:node": 0.0008312500431202352,
          "generate:choice_type_constraints": 0.00032295798882842064,
          "generate:random": 1.5375029761344194e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_type",
        "run_start": 287667.226146458,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_type(\n    node=ChoiceNode(type='boolean',\n     value=True,\n     constraints={'p': 1.0},\n     was_forced=True,\n     index=None),\n    choice_type_constraints=('integer',\n     {'min_value': 26638,\n      'max_value': 32569,\n      'shrink_towards': -111,\n      'weights': {28601: 0.11842336779817406,\n       30425: 0.13897812248852318,\n       31674: 0.1855758227924597},\n      'forced': None}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.002485667006112635,
          "overall:gc": 0.0,
          "generate:node": 0.0007998339715413749,
          "generate:choice_type_constraints": 0.001064834010321647,
          "generate:random": 1.3041018974035978e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_type",
        "run_start": 287675.114748083,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_type(\n    node=ChoiceNode(type='integer',\n     value=114,\n     constraints={'min_value': None,\n      'max_value': None,\n      'shrink_towards': -10247,\n      'weights': None},\n     was_forced=False,\n     index=None),\n    choice_type_constraints=('string',\n     {'intervals': IntervalSet([(167160, 645543), (935786, 1098987)]),\n      'forced': None,\n      'min_size': 11,\n      'max_size': 10_000_000_000}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0032988330349326134,
          "overall:gc": 0.0,
          "generate:node": 0.00079158297739923,
          "generate:choice_type_constraints": 0.000985959020908922,
          "generate:random": 1.4375022146850824e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_type",
        "run_start": 287660.886826458,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_type(\n    node=ChoiceNode(type='boolean',\n     value=True,\n     constraints={'p': 1.0},\n     was_forced=False,\n     index=None),\n    choice_type_constraints=('bytes',\n     {'forced': None, 'min_size': 0, 'max_size': 100}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0015642919461242855,
          "overall:gc": 0.0,
          "generate:node": 0.0007189159514382482,
          "generate:choice_type_constraints": 0.00020520895486697555,
          "generate:random": 1.091597368940711e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_type",
        "run_start": 287687.412885916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_type(\n    node=ChoiceNode(type='string',\n     value='\\U0008d3b7\\U0008d37a\\U000bad33\\U0008d3f6\\U0008d3bb',\n     constraints={'intervals': IntervalSet(\n          [(578297, 613031), (711856, 777969)],\n      ), 'min_size': 4, 'max_size': 10_000_000_000},\n     was_forced=False,\n     index=None),\n    choice_type_constraints=('float',\n     {'min_value': -inf,\n      'max_value': inf,\n      'forced': None,\n      'allow_nan': True,\n      'smallest_nonzero_magnitude': 1.782763842530261e-129}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0011488330201245844,
          "overall:gc": 9.512499673292041e-05,
          "generate:node": 0.00163220806280151,
          "generate:choice_type_constraints": 0.00022254098439589143,
          "generate:random": 0.00021662499057129025
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_type",
        "run_start": 287657.781226166,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_type(\n    node=ChoiceNode(type='boolean',\n     value=True,\n     constraints={'p': 1.0},\n     was_forced=False,\n     index=None),\n    choice_type_constraints=('bytes',\n     {'forced': None, 'min_size': 0, 'max_size': 10_000_000_000}),\n    random=HypothesisRandom(generated data),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00101816700771451,
          "overall:gc": 0.0,
          "generate:node": 0.0007356669520959258,
          "generate:choice_type_constraints": 0.00013291701907292008,
          "generate:random": 1.1249969247728586e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_type",
        "run_start": 287658.29553325,
        "stability": null
      }
    ]
  },
  "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_changed_constraints_pops_if_still_permitted(\n    data=data(...),\n    node=ChoiceNode(type='bytes',\n     value=b'\\xeb\\x82\\x89\\\\\\x0e\\xd8\\xf5[\\xf8e\\x8e\\x99\\x94\\x0f\\xc03Sg\\xd3-\\x0em\\xc5\\x14\\x94\\x8c\\xcb\\x030791n!J\\x94`X2(9;\\xae\\xe5\\xb0\\ty&\\x8d\\xdb\\xae\\xf1EK\\xcb\\x9a\\x81{\\xe4L\\xa8,v/\\x8b:\\x08\\x05\\xeb\\xe3\\x85\\xef\\x88!t\\xad\\xcf\\x99\\xa3\\xac\\x864\\xc8X\\xa0ae\\x1c\\x0e\\\\\\xa6\\xac\\x0c',\n     constraints={'min_size': 38, 'max_size': 10_000_000_000},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'forced': None, 'min_size': 33, 'max_size': 10_000_000_000}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0013205420109443367,
          "overall:gc": 7.033295696601272e-05,
          "generate:data": 7.583992555737495e-06,
          "generate:node": 0.0010074580204673111,
          "generate:random": 1.0541989468038082e-05,
          "generate:Draw 1": 0.00012987502850592136
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted",
        "run_start": 287661.172954416,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_changed_constraints_pops_if_still_permitted(\n    data=data(...),\n    node=ChoiceNode(type='boolean',\n     value=False,\n     constraints={'p': 0.0},\n     was_forced=True,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'p': 0.0, 'forced': None}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0017683749902062118,
          "overall:gc": 0.000101707992143929,
          "generate:data": 1.091696321964264e-05,
          "generate:node": 0.0009415000677108765,
          "generate:random": 1.2207950931042433e-05,
          "generate:Draw 1": 6.433302769437432e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted",
        "run_start": 287678.618479125,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_changed_constraints_pops_if_still_permitted(\n    data=data(...),\n    node=ChoiceNode(type='boolean',\n     value=False,\n     constraints={'p': 0.0},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'p': 0.44032897156238293, 'forced': None}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0026749989483505487,
          "overall:gc": 0.0,
          "generate:data": 1.287501072511077e-05,
          "generate:node": 0.0007564169354736805,
          "generate:random": 1.1208001524209976e-05,
          "generate:Draw 1": 9.345903526991606e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted",
        "run_start": 287675.454313208,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_changed_constraints_pops_if_still_permitted(\n    data=data(...),\n    node=ChoiceNode(type='boolean',\n     value=False,\n     constraints={'p': 0.0},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'p': 1.0858381779069413e-181, 'forced': None}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0015612911083735526,
          "overall:gc": 7.304095197468996e-05,
          "generate:data": 8.083006832748652e-06,
          "generate:node": 0.0006659579812549055,
          "generate:random": 1.0417017620056868e-05,
          "generate:Draw 1": 8.333398727700114e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted",
        "run_start": 287681.095691291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_changed_constraints_pops_if_still_permitted (line 141)",
        "representation": "test_changed_constraints_pops_if_still_permitted(\n    data=data(...),\n    node=ChoiceNode(type='bytes',\n     value=b'\\x89\\x85\\xa0\\x98\\x02\\xff\\xe1cxM\\xa1\\xf9\\x1d\\x86\\x16',\n     constraints={'min_size': 14, 'max_size': 10_000_000_000},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'forced': None, 'min_size': 18, 'max_size': 10_000_000_000}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0014681669999845326,
          "overall:gc": 0.0,
          "generate:data": 0.0014100829721428454,
          "generate:node": 0.008985668013338,
          "generate:random": 0.0005665000062435865,
          "generate:Draw 1": 0.0001879159826785326
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted",
        "run_start": 287650.679367833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_changed_constraints_pops_if_still_permitted(\n    data=data(...),\n    node=ChoiceNode(type='boolean',\n     value=True,\n     constraints={'p': 1.0},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'p': 0.27798306329369243, 'forced': None}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0017912510666064918,
          "overall:gc": 0.00012441602302715182,
          "generate:data": 8.540984708815813e-06,
          "generate:node": 0.000794125022366643,
          "generate:random": 1.191598130390048e-05,
          "generate:Draw 1": 9.941693861037493e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted",
        "run_start": 287670.246794041,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_changed_constraints_pops_if_still_permitted(\n    data=data(...),\n    node=ChoiceNode(type='boolean',\n     value=False,\n     constraints={'p': 0.0},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'p': 0.0, 'forced': None}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0016188749577850103,
          "overall:gc": 0.0,
          "generate:data": 8.08399636298418e-06,
          "generate:node": 0.0007242499850690365,
          "generate:random": 1.1541997082531452e-05,
          "generate:Draw 1": 6.091699469834566e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_changed_constraints_pops_if_still_permitted",
        "run_start": 287680.880953541,
        "stability": null
      }
    ]
  },
  "tests/test_utils.py::test_fast_bisect_right": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_fast_bisect_right(\n    data=data(...),\n)\nDraw 1: None\nDraw 2: [-6.828590546781331e+37,\n -31264,\n -21481,\n -5061,\n -4134,\n -2803,\n 3,\n 1921,\n 3745,\n 8990]\nDraw 3: 19014",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0002276249579153955,
          "overall:gc": 0.00011858297511935234,
          "generate:data": 5.875015631318092e-06,
          "generate:Draw 1": 3.2167008612304926e-05,
          "generate:Draw 2": 0.0006603749934583902,
          "generate:Draw 3": 2.7667032554745674e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_fast_bisect_right",
        "run_start": 287672.062873375,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_fast_bisect_right(\n    data=data(...),\n)\nDraw 1: None\nDraw 2: []\nDraw 3: -23984",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00019329204224050045,
          "overall:gc": 0.00013108301209285855,
          "generate:data": 5.08397351950407e-06,
          "generate:Draw 1": 2.7916976250708103e-05,
          "generate:Draw 2": 0.0002734169829636812,
          "generate:Draw 3": 3.583298530429602e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_fast_bisect_right",
        "run_start": 287670.335717333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_fast_bisect_right(\n    data=data(...),\n)\nDraw 1: None\nDraw 2: []\nDraw 3: -12123",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00027650000993162394,
          "overall:gc": 0.0,
          "generate:data": 9.749957825988531e-06,
          "generate:Draw 1": 4.387501394376159e-05,
          "generate:Draw 2": 0.0003688749857246876,
          "generate:Draw 3": 4.358298610895872e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_fast_bisect_right",
        "run_start": 287689.562879291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_fast_bisect_right(\n    data=data(...),\n)\nDraw 1: 'lambda x: <unknown>'\nDraw 2: [-9_027_283_906_819_513_373,\n -14160,\n 8288]\nDraw 3: -1551",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00045670801773667336,
          "overall:gc": 0.0,
          "generate:data": 1.3708020560443401e-05,
          "generate:Draw 1": 6.191700231283903e-05,
          "generate:Draw 2": 0.00043000001460313797,
          "generate:Draw 3": 2.6499968953430653e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_fast_bisect_right",
        "run_start": 287669.268753333,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_fast_bisect_right(\n    data=data(...),\n)\nDraw 1: None\nDraw 2: []\nDraw 3: 0",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00021041708532720804,
          "overall:gc": 0.0,
          "generate:data": 8.416012860834599e-06,
          "generate:Draw 1": 3.779097460210323e-05,
          "generate:Draw 2": 0.00029316695872694254,
          "generate:Draw 3": 1.8041988369077444e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_fast_bisect_right",
        "run_start": 287669.426452375,
        "stability": null
      }
    ]
  },
  "tests/test_provider.py::test_misaligned_constraints": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_constraints(\n    data=data(...),\n    node=ChoiceNode(type='float',\n     value=-inf,\n     constraints={'min_value': -inf,\n      'max_value': -4.942719771727779e+183,\n      'allow_nan': False,\n      'smallest_nonzero_magnitude': 0.7092060289703955},\n     was_forced=True,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'min_value': -6.945729518975423e+16,\n 'max_value': -5.379830520772473e+16,\n 'forced': None,\n 'allow_nan': False,\n 'smallest_nonzero_magnitude': 0.9525238831680161}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0015354579663835466,
          "overall:gc": 0.0,
          "generate:data": 1.0542047675698996e-05,
          "generate:node": 0.00094541598809883,
          "generate:random": 1.18750031106174e-05,
          "generate:Draw 1": 0.00028137501794844866
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_constraints",
        "run_start": 287666.915387833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_constraints(\n    data=data(...),\n    node=ChoiceNode(type='float',\n     value=0.5,\n     constraints={'min_value': -inf,\n      'max_value': inf,\n      'allow_nan': False,\n      'smallest_nonzero_magnitude': 0.4773132410350315},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'min_value': -inf,\n 'max_value': inf,\n 'forced': None,\n 'allow_nan': False,\n 'smallest_nonzero_magnitude': 0.7067220329035057}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0012457080301828682,
          "overall:gc": 0.00011508300667628646,
          "generate:data": 1.0791001841425896e-05,
          "generate:node": 0.000793792016338557,
          "generate:random": 1.087499549612403e-05,
          "generate:Draw 1": 0.00014304195065051317
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_constraints",
        "run_start": 287678.627712791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_misaligned_constraints (line 127)",
        "representation": "test_misaligned_constraints(\n    data=data(...),\n    node=ChoiceNode(type='float',\n     value=0.5,\n     constraints={'min_value': -inf,\n      'max_value': inf,\n      'allow_nan': False,\n      'smallest_nonzero_magnitude': 0.4773132410350315},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'min_value': -inf,\n 'max_value': 2.795799335314819e+16,\n 'forced': None,\n 'allow_nan': False,\n 'smallest_nonzero_magnitude': 0.0001}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 7.7791977673769e-05,
          "overall:gc": 0.0,
          "generate:data": 5.582987796515226e-06,
          "generate:node": 0.0007240410195663571,
          "generate:random": 1.0000017937272787e-05,
          "generate:Draw 1": 0.0001627500168979168
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_constraints",
        "run_start": 287673.283523708,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_misaligned_constraints (line 127)",
        "representation": "test_misaligned_constraints(\n    data=data(...),\n    node=ChoiceNode(type='boolean',\n     value=True,\n     constraints={'p': 0.42821625476825476},\n     was_forced=True,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'p': 1.0, 'forced': None}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 8.558202534914017e-05,
          "overall:gc": 0.0,
          "generate:data": 1.1791009455919266e-05,
          "generate:node": 0.0009454999817535281,
          "generate:random": 1.60830095410347e-05,
          "generate:Draw 1": 0.00010058400221168995
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_constraints",
        "run_start": 287659.59433275,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_misaligned_constraints (line 127)",
        "representation": "test_misaligned_constraints(\n    data=data(...),\n    node=ChoiceNode(type='float',\n     value=0.5,\n     constraints={'min_value': -inf,\n      'max_value': inf,\n      'allow_nan': False,\n      'smallest_nonzero_magnitude': 0.4773132410350315},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'min_value': -inf,\n 'max_value': inf,\n 'forced': None,\n 'allow_nan': False,\n 'smallest_nonzero_magnitude': 0.4773132410350315}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0001105000264942646,
          "overall:gc": 0.0,
          "generate:data": 9.958981536328793e-06,
          "generate:node": 0.000820208981167525,
          "generate:random": 1.0834017302840948e-05,
          "generate:Draw 1": 0.00010349997319281101
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_constraints",
        "run_start": 287684.08791325,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_misaligned_constraints(\n    data=data(...),\n    node=ChoiceNode(type='bytes',\n     value=b'^',\n     constraints={'min_size': 0, 'max_size': 10_000_000_000},\n     was_forced=False,\n     index=None),\n    random=HypothesisRandom(generated data),\n)\nDraw 1: {'forced': None, 'min_size': 3, 'max_size': 10_000_000_000}",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0024352489854209125,
          "overall:gc": 0.0,
          "generate:data": 5.875015631318092e-06,
          "generate:node": 0.000728208979126066,
          "generate:random": 1.0083022061735392e-05,
          "generate:Draw 1": 0.00011116702808067203
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_misaligned_constraints",
        "run_start": 287693.041342041,
        "stability": null
      }
    ]
  },
  "tests/test_database.py::test_observation_roundtrip": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_observation_roundtrip(\n    observation=Observation(type='test_case',\n     status=ObservationStatus.PASSED,\n     status_reason='end of input',\n     representation='I',\n     arguments={},\n     how_generated='\\U000de424$\\x07C\ud83a\udd0a\\U00060861\u00ff\u00e3\u00bcv\\x93',\n     features={},\n     timing={},\n     metadata=ObservationMetadata(traceback=None,\n      reproduction_decorator=None,\n      predicates={},\n      backend={},\n      sys_argv=[],\n      os_getpid=1,\n      imported_at=-4.900621093654732e+16,\n      data_status=Status.INVALID),\n     property='\u00c8=FU\u00cd\u00b3',\n     run_start=-6.118426272713482e+16,\n     stability=Stability.UNSTABLE),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00014299998292699456,
          "overall:gc": 0.0,
          "generate:observation": 0.0005554580129683018
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_database.py::test_observation_roundtrip",
        "run_start": 287683.211568333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_observation_roundtrip(\n    observation=Observation(type='test_case',\n     status=ObservationStatus.GAVE_UP,\n     status_reason='',\n     representation='record_property',\n     arguments={},\n     how_generated='\\x7f\\x85t\u00cf\\U000bb72d\\U000c6245',\n     features={},\n     timing={},\n     metadata=ObservationMetadata(traceback=None,\n      reproduction_decorator=None,\n      predicates={'\\x95\\x9b': PredicateCounts(satisfied=0, unsatisfied=-15269),\n       '': PredicateCounts(satisfied=16619, unsatisfied=1985),\n       '-\u00b3\u00f0\u00f37\\r\\xad\\x1e \u00fc\u00f0\u00b4k\\U0010f939\\U0005c489': PredicateCounts(satisfied=0,\n        unsatisfied=0),\n       '\\U00063aa5\u00c1\\x8f\u00d5\\U00062e0b*-\\x96\\U000cdc90': PredicateCounts(satisfied=77,\n        unsatisfied=0),\n       '\u00a1\\x19\\U0010c484\u00d4b\\U000b0d01D\u00ca\u00f0l\\U000e378b\\U00050d09\\U0006d442\\x0f\u00b2.4\\x93\u00e5\\U0007c0bd': PredicateCounts(satisfied=62_651_876_553_676_101_545_652_642_290_996_348_054,\n        unsatisfied=0),\n       '\\U0005569f\u00c0': PredicateCounts(satisfied=14130, unsatisfied=0),\n       '\\x18\\U0006f21d\\x8a\\U0008d982\u00b5\u00f1': PredicateCounts(satisfied=0,\n        unsatisfied=0),\n       '\\x8d': PredicateCounts(satisfied=-2640, unsatisfied=0),\n       '\u00df\\x16\u00d4': PredicateCounts(satisfied=0, unsatisfied=84),\n       '\\U000713f1\u00d6\u00b5M\u022f\u00ff': PredicateCounts(satisfied=0, unsatisfied=0),\n       '\\U000f21b6\\x86g\u00ccY)': PredicateCounts(satisfied=0, unsatisfied=-27230),\n       '\u00bb\\U0004243a\u00e0': PredicateCounts(satisfied=0, unsatisfied=0),\n       '\u00cdW\\U000eb3eb\\U000f9897': PredicateCounts(satisfied=0, unsatisfied=0),\n       '\\rt\u00ed\u00c0Z\u00b3=\u00fb': PredicateCounts(satisfied=-19785, unsatisfied=998041544),\n       '\\U000f19a0\\x063U\\x1c\u00fd\u00da': PredicateCounts(satisfied=0, unsatisfied=0)},\n      backend={},\n      sys_argv=['qy\\x85\\U0007c0b7B\\x0b',\n       '\u00ab\\x7f<\u00ab\\U000f8622I',\n       '\\U000fb7c1',\n       '\\n\\U000d1ac5E\ud84a\udd07\\U00054d7d\\x9a\\x1a\u00f1V',\n       '',\n       '7X\\x96\u00b1\u00ccx\u00aa\\U0010a7c9\\x19',\n       '\\U00097923'],\n      os_getpid=37_955_737_768_299_823,\n      imported_at=2.2805788557728873e+70,\n      data_status=Status.OVERRUN),\n     property='\\x07\u00fd\\x88\ud22e\u00bc\u00f1\u00cf4\\U000fe318',\n     run_start=-2627563064279151.0,\n     stability=None),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0018252490554004908,
          "overall:gc": 0.00011845899280160666,
          "generate:observation": 0.0049226670525968075
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_database.py::test_observation_roundtrip",
        "run_start": 287652.25697125,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_observation_roundtrip(\n    observation=Observation(type='test_case',\n     status=ObservationStatus.GAVE_UP,\n     status_reason='\\x85\\U0009ab03\u00a2\u00ce\u00a4\\U000a0ebe\\x80\\x18',\n     representation='\u00a5A',\n     arguments={},\n     how_generated='j\\x928\\U000e6fda\ud811\udcf5y\\U0007f1dao\\x01\u00fa\\x7f\u00ff',\n     features={},\n     timing={},\n     metadata=ObservationMetadata(traceback='\u00a3',\n      reproduction_decorator=None,\n      predicates={'': PredicateCounts(satisfied=0, unsatisfied=52),\n       '\u00ac\u00af\\x15kf': PredicateCounts(satisfied=27413, unsatisfied=120),\n       '\\x0f8MOK\u00cd': PredicateCounts(satisfied=0, unsatisfied=0)},\n      backend={},\n      sys_argv=['\\U000edd29',\n       'None',\n       'S\u00e4\\U0001f8d7\u00efE',\n       '\\x7f',\n       '\\n',\n       '\\U000808ce\u00e2\\U00089c9c\u00ea\\U000c5180et',\n       '\\x8a\\U0010fdaa',\n       '\\U00053e09\\x02~\u00fc\u00d5\u00de\u00f0\\x07\u00efC}\\U000a624a\u2923\u00f9v~$\\ua6fd*\\U000c467a\\uf2f2\u00f7\u00b9H\u00b6$\u00db\\x91\\U000e888e\\x1dPt<'],\n      os_getpid=27,\n      imported_at=1e-06,\n      data_status=Status.VALID),\n     property='\u00db\\U00054fa2\ud84c\udeb4r.\u00b8',\n     run_start=-1.7192118030568492e+210,\n     stability=Stability.STABLE),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.00013058300828561187,
          "overall:gc": 0.0,
          "generate:observation": 0.0014023740077391267
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_database.py::test_observation_roundtrip",
        "run_start": 287673.769282125,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_observation_roundtrip(\n    observation=Observation(type='test_case',\n     status=ObservationStatus.FAILED,\n     status_reason='',\n     representation='\\U00048116\u00ee\\x10!V\\U0003f582\u00bb\\x89iC',\n     arguments={},\n     how_generated='6\\U00076cb2\u00eb\u00c9\\x84\u00d2\u00a7',\n     features={},\n     timing={},\n     metadata=ObservationMetadata(traceback=None,\n      reproduction_decorator=':',\n      predicates={},\n      backend={},\n      sys_argv=[],\n      os_getpid=1,\n      imported_at=-4.900621093654732e+16,\n      data_status=Status.OVERRUN),\n     property=':',\n     run_start=-6.118426272713482e+16,\n     stability=Stability.UNSTABLE),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00019754201639443636,
          "overall:gc": 0.0,
          "generate:observation": 0.0005506659508682787
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_database.py::test_observation_roundtrip",
        "run_start": 287675.152470833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_observation_roundtrip(\n    observation=Observation(type='test_case',\n     status=ObservationStatus.FAILED,\n     status_reason='\\x07B\u00a33d\\x9e',\n     representation='\u1e70\u033a\u033a\u0315o\u035e \u0337i\u0332\u032c\u0347\u032a\u0359n\u031d\u0317\u0355v\u031f\u031c\u0318\u0326\u035fo\u0336\u0319\u0330\u0320k\u00e8\u035a\u032e\u033a\u032a\u0339\u0331\u0324 \u0316t\u031d\u0355\u0333\u0323\u033b\u032a\u035eh\u033c\u0353\u0332\u0326\u0333\u0318\u0332e\u0347\u0323\u0330\u0326\u032c\u034e \u0322\u033c\u033b\u0331\u0318h\u035a\u034e\u0359\u031c\u0323\u0332\u0345i\u0326\u0332\u0323\u0330\u0324v\u033b\u034de\u033a\u032d\u0333\u032a\u0330-m\u0322i\u0345n\u0316\u033a\u031e\u0332\u032f\u0330d\u0335\u033c\u031f\u0359\u0329\u033c\u0318\u0333 \u031e\u0325\u0331\u0333\u032dr\u031b\u0317\u0318e\u0359p\u0360r\u033c\u031e\u033b\u032d\u0317e\u033a\u0320\u0323\u035fs\u0318\u0347\u0333\u034d\u031d\u0349e\u0349\u0325\u032f\u031e\u0332\u035a\u032c\u035c\u01f9\u032c\u034e\u034e\u031f\u0316\u0347\u0324t\u034d\u032c\u0324\u0353\u033c\u032d\u0358\u0345i\u032a\u0331n\u0360g\u0334\u0349 \u034f\u0349\u0345c\u032c\u031fh\u0361a\u032b\u033b\u032f\u0358o\u032b\u031f\u0316\u034d\u0319\u031d\u0349s\u0317\u0326\u0332.\u0328\u0339\u0348\u0323',\n     arguments={},\n     how_generated='Rn',\n     features={},\n     timing={},\n     metadata=ObservationMetadata(traceback=None,\n      reproduction_decorator=None,\n      predicates={},\n      backend={},\n      sys_argv=[],\n      os_getpid=-7735,\n      imported_at=-4.900621093654732e+16,\n      data_status=Status.OVERRUN),\n     property='',\n     run_start=-6.118426272713482e+16,\n     stability=None),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00010870798723772168,
          "overall:gc": 0.0,
          "generate:observation": 0.00043162499787285924
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_database.py::test_observation_roundtrip",
        "run_start": 287689.008790208,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_observation_roundtrip(\n    observation=Observation(type='test_case',\n     status=ObservationStatus.PASSED,\n     status_reason='',\n     representation='',\n     arguments={},\n     how_generated='',\n     features={},\n     timing={},\n     metadata=ObservationMetadata(traceback=None,\n      reproduction_decorator=None,\n      predicates={},\n      backend={},\n      sys_argv=[],\n      os_getpid=0,\n      imported_at=-4.900621093654732e+16,\n      data_status=Status.OVERRUN),\n     property='\\U00092bad\\U000ed32a\u00d9\ud879\udc04\\n\\x8c0\u00aeI',\n     run_start=-6.118426272713482e+16,\n     stability=None),\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00012220803182572126,
          "overall:gc": 0.0,
          "generate:observation": 0.0004169170279055834
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_database.py::test_observation_roundtrip",
        "run_start": 287693.34194725,
        "stability": null
      }
    ]
  },
  "tests/test_utils.py::test_k_way_merge": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_k_way_merge(\n    data=data(...),\n)\nDraw 1: 'lambda x: <unknown>'\nDraw 2: [[6_762_484_713_960_960_965,\n  2_532_484_410_181_272_588,\n  12557,\n  0,\n  -7,\n  -1_025_701_874_699_451_268],\n [1.8918964108192508e+37, 27, -1_475_811_960_707_747_997],\n [1.7476756358595552e+37,\n  403833567,\n  29793,\n  26193,\n  21992,\n  8207,\n  1301,\n  99,\n  79,\n  -15021,\n  -5_776_464_118_912_426_561,\n  -2.257381127090351e+37,\n  -6.973728176883599e+37]]",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0005508349277079105,
          "overall:gc": 0.0002430410240776837,
          "generate:data": 6.792019121348858e-06,
          "generate:Draw 1": 4.670803900808096e-05,
          "generate:Draw 2": 0.0010994999902322888
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_k_way_merge",
        "run_start": 287658.87432175,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_k_way_merge(\n    data=data(...),\n)\nDraw 1: None\nDraw 2: [[-102]]",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0002770409919321537,
          "overall:gc": 0.0001758339931257069,
          "generate:data": 6.458023563027382e-06,
          "generate:Draw 1": 4.299997817724943e-05,
          "generate:Draw 2": 0.0003957080189138651
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_k_way_merge",
        "run_start": 287679.364537666,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_k_way_merge(\n    data=data(...),\n)\nDraw 1: None\nDraw 2: []",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0036012500058859587,
          "overall:gc": 0.0001710830256342888,
          "generate:data": 0.0012317909859120846,
          "generate:Draw 1": 0.0006716249627061188,
          "generate:Draw 2": 0.005201667023357004
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_k_way_merge",
        "run_start": 287650.677346583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_k_way_merge(\n    data=data(...),\n)\nDraw 1: 'lambda x: <unknown>'\nDraw 2: []",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00041258306009694934,
          "overall:gc": 0.0,
          "generate:data": 6.209011189639568e-06,
          "generate:Draw 1": 4.341697786003351e-05,
          "generate:Draw 2": 0.0002751249703578651
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_k_way_merge",
        "run_start": 287658.431732166,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_k_way_merge(\n    data=data(...),\n)\nDraw 1: None\nDraw 2: []",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0036012500058859587,
          "overall:gc": 0.0001710830256342888,
          "generate:data": 0.0012317909859120846,
          "generate:Draw 1": 0.0006716249627061188,
          "generate:Draw 2": 0.005201667023357004
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_utils.py::test_k_way_merge",
        "run_start": 287650.677346583,
        "stability": null
      }
    ]
  },
  "tests/test_linearize.py::test_out_of_order_report_invalidates_cache": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=2.2250738585072014e-308,\n      timestamp=8.276932639660361e+307,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 44,\n       Status.INTERESTING: 0},\n      behaviors=15603,\n      fingerprints=3640,\n      since_new_behavior=3600,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=27837.90199920367,\n      timestamp=8.261551070965941e-98,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 70,\n       Status.INTERESTING: 0},\n      behaviors=29815,\n      fingerprints=16965,\n      since_new_behavior=10690,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=224010.4850204035,\n      timestamp=4.685852718953507e+307,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 4948,\n       Status.INTERESTING: 0},\n      behaviors=21556,\n      fingerprints=27,\n      since_new_behavior=120,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=758279.8381735771,\n      timestamp=5.734527271679837e+16,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 23344,\n       Status.INTERESTING: 0},\n      behaviors=1_637_067_906,\n      fingerprints=21488,\n      since_new_behavior=16,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=806533.7075741019,\n      timestamp=3.9117153718622447e+307,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 29603,\n       Status.INTERESTING: 0},\n      behaviors=2_617_248_161_033_242_472,\n      fingerprints=388,\n      since_new_behavior=1_000_000_000,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=813812.8009254213,\n      timestamp=1.0697704647420628e+16,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 52_930_150_734_129_845_753_943_722_679_550_617_812,\n       Status.INTERESTING: 0},\n      behaviors=50,\n      fingerprints=19482,\n      since_new_behavior=17231,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=0.1,\n      timestamp=9007199254740991.0,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 34,\n       Status.INTERESTING: 0},\n      behaviors=9373,\n      fingerprints=8_190_781_863_211_013_434,\n      since_new_behavior=13,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=408526.03706168465,\n      timestamp=2.00001,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 76,\n       Status.INTERESTING: 0},\n      behaviors=31024,\n      fingerprints=4915,\n      since_new_behavior=2_733_596_285_950_563_736,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=446514.5610217295,\n      timestamp=8983934576564670.0,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 84,\n       Status.INTERESTING: 0},\n      behaviors=21384,\n      fingerprints=1_210_216_376,\n      since_new_behavior=24565,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=462714.6198241482,\n      timestamp=6793104697246020.0,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 107,\n       Status.INTERESTING: 0},\n      behaviors=126,\n      fingerprints=96,\n      since_new_behavior=58,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=467147.390413538,\n      timestamp=7909254450224140.0,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 119,\n       Status.INTERESTING: 0},\n      behaviors=38,\n      fingerprints=13,\n      since_new_behavior=21372,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=593474.0423222543,\n      timestamp=5775156057742332.0,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 3707,\n       Status.INTERESTING: 0},\n      behaviors=7,\n      fingerprints=1_140_275_111,\n      since_new_behavior=83_265_332_250_578_243_942_519_611_146_420_516_143,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=627955.7208377228,\n      timestamp=660437637778996.6,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 21025,\n       Status.INTERESTING: 0},\n      behaviors=50_893_641_166_918_126_379_739_527_063_855_854_973,\n      fingerprints=511,\n      since_new_behavior=2020,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=699264.9974053081,\n      timestamp=10.0,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 21709,\n       Status.INTERESTING: 0},\n      behaviors=770,\n      fingerprints=104,\n      since_new_behavior=4238,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=718660.0351893177,\n      timestamp=8689584935280770.0,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 27138,\n       Status.INTERESTING: 0},\n      behaviors=32743,\n      fingerprints=10880,\n      since_new_behavior=29,\n      phase=Phase.DISTILL)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0037775420350953937,
          "overall:gc": 0.0,
          "generate:reports": 0.018374042003415525
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287688.281002916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_out_of_order_report_invalidates_cache (line 227)",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 3.329198807477951e-05,
          "overall:gc": 0.0,
          "generate:reports": 0.00040179200004786253
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287679.091716916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=1.5256252899671557e-162,\n      timestamp=1.2470736623406504e+308,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 14,\n       Status.INTERESTING: 0},\n      behaviors=11,\n      fingerprints=27695,\n      since_new_behavior=18441,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=2.031740265301202e-84,\n      timestamp=1.2300262725305425e+308,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 26921,\n       Status.INTERESTING: 0},\n      behaviors=32027,\n      fingerprints=10065,\n      since_new_behavior=23768,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=2.225073858507e-311,\n      timestamp=6.693495425345245e+16,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 82,\n       Status.INTERESTING: 0},\n      behaviors=25567,\n      fingerprints=3977,\n      since_new_behavior=18323,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=1e-12,\n      timestamp=7.984632568144696e-88,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8807,\n       Status.INTERESTING: 0},\n      behaviors=45,\n      fingerprints=11817,\n      since_new_behavior=9079,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=81572.00252165932,\n      timestamp=6379462353842082.0,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22150,\n       Status.INTERESTING: 0},\n      behaviors=11545,\n      fingerprints=6905,\n      since_new_behavior=32352,\n      phase=Phase.REPLAY)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0012757079675793648,
          "overall:gc": 0.0,
          "generate:reports": 0.006321373046375811
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287691.9523265,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=5.8044622775871526e-40,\n      timestamp=8055165552849520.0,\n      worker_uuid=UUID('0a44d95e-5636-41c3-a86c-1b8780bcab5c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 21332,\n       Status.INTERESTING: 0},\n      behaviors=20,\n      fingerprints=18123,\n      since_new_behavior=2,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=739194.755792259,\n      timestamp=1.278011694396734e+307,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 100,\n       Status.INTERESTING: 0},\n      behaviors=5117,\n      fingerprints=34,\n      since_new_behavior=22741,\n      phase=Phase.GENERATE)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006394999800249934,
          "overall:gc": 0.0,
          "generate:reports": 0.0032791669946163893
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287686.446439791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=911349.6363692959,\n      timestamp=0.5,\n      worker_uuid=UUID('0a44d95e-5636-41c3-a86c-1b8780bcab5c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 13776,\n       Status.INTERESTING: 0},\n      behaviors=32379,\n      fingerprints=6_376_729_010_560_553_394,\n      since_new_behavior=46,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=0.0,\n      timestamp=4.0318635701831946e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 29,\n       Status.INTERESTING: 0},\n      behaviors=24932,\n      fingerprints=12096,\n      since_new_behavior=5873,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=9.815513784215163e-160,\n      timestamp=2.8653755950690925e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 50,\n       Status.INTERESTING: 0},\n      behaviors=733_498_627_086_425_365,\n      fingerprints=14523,\n      since_new_behavior=1067,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=1.5386665769975984e-157,\n      timestamp=4.319018082795314e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 92,\n       Status.INTERESTING: 0},\n      behaviors=12111,\n      fingerprints=7050,\n      since_new_behavior=511,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=2.220446049250313e-16,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 97,\n       Status.INTERESTING: 0},\n      behaviors=62,\n      fingerprints=20690,\n      since_new_behavior=32753,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=66217.49556837654,\n      timestamp=3.888542886832371e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 100,\n       Status.INTERESTING: 0},\n      behaviors=2,\n      fingerprints=6290,\n      since_new_behavior=31240,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=136574.42767618402,\n      timestamp=3.162774748740498e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 110,\n       Status.INTERESTING: 0},\n      behaviors=25074,\n      fingerprints=1_898_713_206,\n      since_new_behavior=10928,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=183179.52202502522,\n      timestamp=2.171153505685514e+305,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 127,\n       Status.INTERESTING: 0},\n      behaviors=13011,\n      fingerprints=82,\n      since_new_behavior=8_828_013_637_736_624_236,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=195168.0132643437,\n      timestamp=4.562567993642365e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 4990,\n       Status.INTERESTING: 0},\n      behaviors=47,\n      fingerprints=9,\n      since_new_behavior=28581,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=244982.76909935696,\n      timestamp=1.5,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 6910,\n       Status.INTERESTING: 0},\n      behaviors=53,\n      fingerprints=28928,\n      since_new_behavior=4706,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=474693.0953570586,\n      timestamp=4.028018894291872e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8408,\n       Status.INTERESTING: 0},\n      behaviors=20711,\n      fingerprints=14,\n      since_new_behavior=49,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=745923.5249042896,\n      timestamp=0.3333333333333333,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22421,\n       Status.INTERESTING: 0},\n      behaviors=26,\n      fingerprints=29249,\n      since_new_behavior=36,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=962706.1878013154,\n      timestamp=5.455453288030125e+16,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 28915,\n       Status.INTERESTING: 0},\n      behaviors=19,\n      fingerprints=16360,\n      since_new_behavior=10567,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=1000000.0,\n      timestamp=2.9571119991824104e+306,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5_543_275_322_546_427_561,\n       Status.INTERESTING: 0},\n      behaviors=32706,\n      fingerprints=15757,\n      since_new_behavior=15646,\n      phase=Phase.DISTILL)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.003284500038716942,
          "overall:gc": 0.0,
          "generate:reports": 0.01520141598302871
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287685.296208166,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=144787.95698665638,\n      timestamp=7290344177391206.0,\n      worker_uuid=UUID('0a44d95e-5636-41c3-a86c-1b8780bcab5c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 30142,\n       Status.INTERESTING: 0},\n      behaviors=26739,\n      fingerprints=27790,\n      since_new_behavior=12167,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=198529.25323299126,\n      timestamp=3012514926033567.0,\n      worker_uuid=UUID('0a44d95e-5636-41c3-a86c-1b8780bcab5c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 30952,\n       Status.INTERESTING: 0},\n      behaviors=22043,\n      fingerprints=1_277_084_547_611_594_641,\n      since_new_behavior=31654,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=0.005,\n      timestamp=7.373180142013164e+288,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1721,\n       Status.INTERESTING: 0},\n      behaviors=1270,\n      fingerprints=28771,\n      since_new_behavior=53,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=102280.72633489907,\n      timestamp=8.853196465975637e+288,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2020,\n       Status.INTERESTING: 0},\n      behaviors=943,\n      fingerprints=3900,\n      since_new_behavior=117,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=236234.5211043509,\n      timestamp=1.0069370848771778e+288,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 11492,\n       Status.INTERESTING: 0},\n      behaviors=12886,\n      fingerprints=66,\n      since_new_behavior=14185,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=314950.48667640286,\n      timestamp=1.3653268344704498e+289,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 19911,\n       Status.INTERESTING: 0},\n      behaviors=9700,\n      fingerprints=23654,\n      since_new_behavior=17837,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=443566.5286814584,\n      timestamp=4.2311672558583203e+288,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 21143,\n       Status.INTERESTING: 0},\n      behaviors=4106,\n      fingerprints=1_558_151_247,\n      since_new_behavior=30021,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=465298.3913736334,\n      timestamp=1.6517539609364444e+287,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 21708,\n       Status.INTERESTING: 0},\n      behaviors=8937,\n      fingerprints=7136,\n      since_new_behavior=31363,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=506315.72650478693,\n      timestamp=4.6971458365633263e+288,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22960,\n       Status.INTERESTING: 0},\n      behaviors=19941,\n      fingerprints=1431,\n      since_new_behavior=32210,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=633714.7606672734,\n      timestamp=7.011925972478574e+288,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 25668,\n       Status.INTERESTING: 0},\n      behaviors=255,\n      fingerprints=31943,\n      since_new_behavior=1_560_910_255,\n      phase=Phase.SHRINK)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00252454198198393,
          "overall:gc": 0.0,
          "generate:reports": 0.009226292895618826
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287672.220807,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=139664.5710034581,\n      timestamp=8271517150997434.0,\n      worker_uuid=UUID('0a44d95e-5636-41c3-a86c-1b8780bcab5c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 101,\n       Status.INTERESTING: 0},\n      behaviors=28759,\n      fingerprints=55,\n      since_new_behavior=19057,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=744893.6501219549,\n      timestamp=2235348926974333.0,\n      worker_uuid=UUID('0a44d95e-5636-41c3-a86c-1b8780bcab5c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22679,\n       Status.INTERESTING: 0},\n      behaviors=15843,\n      fingerprints=3459,\n      since_new_behavior=90,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=0.02,\n      timestamp=8.297817548370451e+307,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 105,\n       Status.INTERESTING: 0},\n      behaviors=3_790_871_321_603_770_192,\n      fingerprints=13833,\n      since_new_behavior=21596,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=431775.1588093629,\n      timestamp=9.686146634134697e+307,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 13097,\n       Status.INTERESTING: 0},\n      behaviors=6680,\n      fingerprints=392_781_215_930_021_706,\n      since_new_behavior=696,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=824165.6886412279,\n      timestamp=1.0415685671311439e+307,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 27940,\n       Status.INTERESTING: 0},\n      behaviors=16574,\n      fingerprints=25945,\n      since_new_behavior=9751,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=900676.0203235901,\n      timestamp=6.820072699640251e+307,\n      worker_uuid=UUID('ca83e203-888f-4371-a70c-ba50ad2ce312'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 161_460_859_642_625_915,\n       Status.INTERESTING: 0},\n      behaviors=2_381_349_440_876_683_682,\n      fingerprints=883_091_470_128_664_367,\n      since_new_behavior=8_124_411_587_042_132_051,\n      phase=Phase.REPLAY)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0015185410156846046,
          "overall:gc": 0.00011708401143550873,
          "generate:reports": 0.00813870906131342
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287661.529692041,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=999256.4254487966,\n      timestamp=3.2791345430462424e+307,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2125,\n       Status.INTERESTING: 0},\n      behaviors=55,\n      fingerprints=19057,\n      since_new_behavior=0,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=2.4302333957635042e-207,\n      timestamp=1.3694248087579982e+308,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 58,\n       Status.INTERESTING: 0},\n      behaviors=85,\n      fingerprints=16224,\n      since_new_behavior=22269,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=387984.6106579389,\n      timestamp=7.953759575372033e+307,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 11384,\n       Status.INTERESTING: 0},\n      behaviors=6_651_873_957_196_041_131,\n      fingerprints=1000,\n      since_new_behavior=48,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=773850.3426734378,\n      timestamp=1.181210983804928e+307,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 11781,\n       Status.INTERESTING: 0},\n      behaviors=11,\n      fingerprints=10455,\n      since_new_behavior=23,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=873466.6238409608,\n      timestamp=3.4353009529500954e+307,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 14735,\n       Status.INTERESTING: 0},\n      behaviors=14226,\n      fingerprints=61,\n      since_new_behavior=72,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=979636.630655845,\n      timestamp=1.6538453770926353e+307,\n      worker_uuid=UUID('cf1822ff-bc68-4778-ab49-1044d5e34124'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 4_942_687_387_248_630_554,\n       Status.INTERESTING: 0},\n      behaviors=19,\n      fingerprints=54,\n      since_new_behavior=8116,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=2.225073858507e-311,\n      timestamp=1.320657487144183e+307,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2,\n       Status.INTERESTING: 0},\n      behaviors=2287,\n      fingerprints=107,\n      since_new_behavior=238070310,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=9.084263123182103e-178,\n      timestamp=1.9817727446571208e+307,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 448,\n       Status.INTERESTING: 0},\n      behaviors=63,\n      fingerprints=125,\n      since_new_behavior=124,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=1.4021455175649894e-75,\n      timestamp=9.741536190890981e+306,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 458,\n       Status.INTERESTING: 0},\n      behaviors=2,\n      fingerprints=11188,\n      since_new_behavior=63,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=55535.611762980625,\n      timestamp=6.854762766546343e+306,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 3818,\n       Status.INTERESTING: 0},\n      behaviors=16982,\n      fingerprints=24970,\n      since_new_behavior=8586,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=92660.42321004566,\n      timestamp=2.3745364782270736e+307,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 11989,\n       Status.INTERESTING: 0},\n      behaviors=60,\n      fingerprints=69,\n      since_new_behavior=1_781_469_767,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=188421.78755499324,\n      timestamp=2.463427253795912e+307,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 12828,\n       Status.INTERESTING: 0},\n      behaviors=19984,\n      fingerprints=31867,\n      since_new_behavior=7804,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=272376.63179784716,\n      timestamp=1.2286488129703857e+307,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 14652,\n       Status.INTERESTING: 0},\n      behaviors=83,\n      fingerprints=28603,\n      since_new_behavior=30,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=331076.42031537136,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 17337,\n       Status.INTERESTING: 0},\n      behaviors=1_322_575_869,\n      fingerprints=128_042_821_543_611_192_830_653_271_652_005_079_731,\n      since_new_behavior=25,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=360000.7481388739,\n      timestamp=8.902909210009448e+306,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 32642,\n       Status.INTERESTING: 0},\n      behaviors=80,\n      fingerprints=1177,\n      since_new_behavior=28807,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=480589.9748955277,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 618_841_258_575_960_667,\n       Status.INTERESTING: 0},\n      behaviors=66_441_012_024_417_077_215_761_600_443_884_554_444,\n      fingerprints=11731,\n      since_new_behavior=9772,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=671027.9484718406,\n      timestamp=2.5727079181184253e+307,\n      worker_uuid=UUID('4067c358-4ee2-47f8-9a94-e3e8ab73738f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_658_459_110_445_526_375,\n       Status.INTERESTING: 0},\n      behaviors=8_401_199_678_575_284_479,\n      fingerprints=8076,\n      since_new_behavior=111,\n      phase=Phase.SHRINK)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.004122417070902884,
          "overall:gc": 0.00033545796759426594,
          "generate:reports": 0.020343665964901447
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287662.665237333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=1.1627305505088565e-103,\n      timestamp=2.225073858507203e-309,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 10885,\n       Status.INTERESTING: 0},\n      behaviors=8470,\n      fingerprints=25570,\n      since_new_behavior=21837,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=188148.64295049556,\n      timestamp=1.325181665893718e+307,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 21332,\n       Status.INTERESTING: 0},\n      behaviors=2,\n      fingerprints=4_568_212_048_539_358_321,\n      since_new_behavior=2,\n      phase=Phase.GENERATE)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006319999811239541,
          "overall:gc": 0.0,
          "generate:reports": 0.0025484160287305713
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287690.836825875,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_out_of_order_report_invalidates_cache(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=0.005,\n      timestamp=286229410184828.3,\n      worker_uuid=UUID('f41addc5-362d-4359-b319-3ba2cc537825'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2762,\n       Status.INTERESTING: 0},\n      behaviors=38788,\n      fingerprints=12442,\n      since_new_behavior=6926,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=56297.702163951486,\n      timestamp=728463065983304.9,\n      worker_uuid=UUID('f41addc5-362d-4359-b319-3ba2cc537825'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 18749,\n       Status.INTERESTING: 0},\n      behaviors=107,\n      fingerprints=18749,\n      since_new_behavior=28815,\n      phase=Phase.GENERATE)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006272500031627715,
          "overall:gc": 0.0,
          "generate:reports": 0.0026394170126877725
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_out_of_order_report_invalidates_cache",
        "run_start": 287691.970534666,
        "stability": null
      }
    ]
  },
  "tests/test_provider.py::test_drawing_prefix_exactly": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.6737628097535967},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='string',\n      value='\\U0007ccf2',\n      constraints={'intervals': IntervalSet([(511077, 544279)]),\n       'min_size': 0,\n       'max_size': 10_000_000_000},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'a\\xd3W:\\xd8\\xff|\\xad\\xf7~\\x91\\xd1w\\xce\\x82\\x04\\xdd\\x1b\\x00,\\x15\\xa6\\xc7)\\xa3[\\xad\\x81\\x81m\\xc8\\xf8\\xbd]sT\\xb8\\xd7\\xc3\\xe8\\x95Wg\\x19\\x02\\xc1\\xa2\\x1b\\x89`m\\xf1\\xbd9@V\\xeaK\\xffx-\\xa2\\xf9\\xdc\\xb7\\xf5{-\\x00fan',\n      constraints={'min_size': 37, 'max_size': 10_000_000_000},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'tz&\\xec\\xaf\\x0c\\x9f2',\n      constraints={'min_size': 8, 'max_size': 10_000_000_000},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=1.7976931348623157e+308,\n      constraints={'min_value': -inf,\n       'max_value': inf,\n       'allow_nan': False,\n       'smallest_nonzero_magnitude': 0.19419723142759532},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string',\n      value='\u0117\u0157\u010c\u00c9\u00ee\u0124\ud83c\udd51\u00e2\u00bc\u013e\u0147\u013b\u0152\u00ee\ud81f\ude19\u00d9\u015ae\\x9d\\x99\u0142\\ufae0\u0136\u012e\u0108\u00e9\u00e6\u00dd\u0145\u00c7\u00dc\u00a1\\x8bn\\xad\ua655',\n      constraints={'intervals': IntervalSet([(100, 164598), (864631, 868854)]),\n       'min_size': 32,\n       'max_size': 132},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=False,\n      constraints={'p': 0.5},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'\\xd9\\x0c',\n      constraints={'min_size': 0, 'max_size': 100},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='integer',\n      value=-39,\n      constraints={'min_value': -72,\n       'max_value': None,\n       'shrink_towards': 0,\n       'weights': None},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.404060078795658},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'\\xba\\xfd\\xfa\\x91K\\xa9\\xda\\x06\\xe6,',\n      constraints={'min_size': 0, 'max_size': 100},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string',\n      value='',\n      constraints={'intervals': IntervalSet([]),\n       'min_size': 0,\n       'max_size': 10_000_000_000},\n      was_forced=True,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0033942500012926757,
          "overall:gc": 0.0,
          "generate:nodes": 0.013680958130862564
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287682.4057815,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='string',\n      value=',\\uf159r',\n      constraints={'intervals': IntervalSet([(0, 504527)]),\n       'min_size': 0,\n       'max_size': 10_000_000_000},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.23133672571173963},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string',\n      value='',\n      constraints={'intervals': IntervalSet([]),\n       'min_size': 0,\n       'max_size': 149},\n      was_forced=True,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0027657500468194485,
          "overall:gc": 0.0,
          "generate:nodes": 0.0037040829774923623
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287693.392958416,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.8886640726630619},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='integer',\n      value=538383170,\n      constraints={'min_value': -7776,\n       'max_value': 1_567_670_796,\n       'shrink_towards': -11981,\n       'weights': {538383170: 0.20288883978258476,\n        706104142: 0.0030433325967387714,\n        10139: 0.031178440792685516,\n        739797622: 0.524793370813054}},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 1.0},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='float',\n      value=2.00001,\n      constraints={'min_value': -1.372757835878392e+258,\n       'max_value': inf,\n       'allow_nan': False,\n       'smallest_nonzero_magnitude': 0.5433324124017999},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=False,\n      constraints={'p': 0.011343590285916473},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string',\n      value='',\n      constraints={'intervals': IntervalSet([]),\n       'min_size': 0,\n       'max_size': 107},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=-6.314962760373403e+16,\n      constraints={'min_value': -inf,\n       'max_value': inf,\n       'allow_nan': False,\n       'smallest_nonzero_magnitude': 0.07052159708029039},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='string',\n      value='\\U000d841c\ud874\udcf6\\U0009163a',\n      constraints={'intervals': IntervalSet(\n           [(184349, 520108),\n            (561857, 762933),\n            (836894, 896238),\n            (927198, 970224)],\n       ),\n       'min_size': 0,\n       'max_size': 98},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=False,\n      constraints={'p': 0.1860967321952203},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='integer',\n      value=-8873,\n      constraints={'min_value': None,\n       'max_value': None,\n       'shrink_towards': 0,\n       'weights': None},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string',\n      value='\ud81d\udf19\ud81d\udf76\ud81d\udfab\ud81d\udfa4\ud86e\udf89\ud81d\udf38\ud81d\udf10\\U000e9c03',\n      constraints={'intervals': IntervalSet(\n           [(95924, 334985), (954669, 961566)],\n       ), 'min_size': 0, 'max_size': 10_000_000_000},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string', value='', constraints={'intervals': IntervalSet(\n           [(100874, 136969), (186033, 366810), (506703, 895064)],\n       ),\n       'min_size': 0,\n       'max_size': 10_000_000_000}, was_forced=False, index=None),\n     ChoiceNode(type='float',\n      value=-3.650080465233183e+16,\n      constraints={'min_value': -inf,\n       'max_value': inf,\n       'allow_nan': True,\n       'smallest_nonzero_magnitude': 5e-324},\n      was_forced=False,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0033407079754397273,
          "overall:gc": 0.0,
          "generate:nodes": 0.015485623152926564
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287682.918566583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='float',\n      value=0.99999,\n      constraints={'min_value': -3.038837551862682e-07,\n       'max_value': 6.115636423629416e+16,\n       'allow_nan': False,\n       'smallest_nonzero_magnitude': 0.01},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.7850190354177473},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=False,\n      constraints={'p': 0.005},\n      was_forced=True,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0023709170054644346,
          "overall:gc": 0.0,
          "generate:nodes": 0.0025137499906122684
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287683.858938666,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='bytes',\n      value=b'\\x88\\x93N\\x05',\n      constraints={'min_size': 0, 'max_size': 10_000_000_000},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='integer',\n      value=6374,\n      constraints={'min_value': None,\n       'max_value': None,\n       'shrink_towards': 13638,\n       'weights': None},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'I\\xa2\\xb4\\xad',\n      constraints={'min_size': 0, 'max_size': 100},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='integer',\n      value=18560,\n      constraints={'min_value': -6,\n       'max_value': 19131,\n       'shrink_towards': 45,\n       'weights': {4351: 0.6833036512395301}},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='integer',\n      value=-6040,\n      constraints={'min_value': -9681,\n       'max_value': 2,\n       'shrink_towards': 869,\n       'weights': {-4816: 0.002515153336968438, -8312: 0.002484846663031562}},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'\\x8cpi\\xc4@\\xb9\\xd6\\x158\\x87_',\n      constraints={'min_size': 0, 'max_size': 10_000_000_000},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='string',\n      value='',\n      constraints={'intervals': IntervalSet([]),\n       'min_size': 0,\n       'max_size': 100},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'q\\xfb\\x06\\x7f\\\\\\x119\\xdc=\\x1b\\xe5\\xbeWn\\xa7\\xfd_\\xac\\xaeT\\xb2t\\xc7\\xa1\\x0f\\x7f@v\\x9f\\xcb<*.\\\\\\xeb\\x0c\\xf1\\x10\\xc4\\xe1\\xf8\\xa5\\x92',\n      constraints={'min_size': 18, 'max_size': 10_000_000_000},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string',\n      value='',\n      constraints={'intervals': IntervalSet([]),\n       'min_size': 0,\n       'max_size': 100},\n      was_forced=False,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0037761249695904553,
          "overall:gc": 0.0,
          "generate:nodes": 0.008528125006705523
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287657.149328375,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='bytes',\n      value=b'\\xcc\\x85c\\xe5\\xde\\xe9\\xcac\\x9e\\x7f\\x95\\x13x',\n      constraints={'min_size': 0, 'max_size': 100},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'\\xcb\\xd7\\xec\\xd7\\xf1\\r',\n      constraints={'min_size': 0, 'max_size': 100},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=1626836622076201.8,\n      constraints={'min_value': -7.522264211205433e-14,\n       'max_value': 2.642068326983281e+16,\n       'allow_nan': True,\n       'smallest_nonzero_magnitude': 0.5010921133110448},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=1.130581339218865e+308,\n      constraints={'min_value': -1503944796348077.0,\n       'max_value': inf,\n       'allow_nan': False,\n       'smallest_nonzero_magnitude': 0.4993827810074357},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=1000.0,\n      constraints={'min_value': -6.829130579099258e+16,\n       'max_value': inf,\n       'allow_nan': False,\n       'smallest_nonzero_magnitude': 0.8005950217010507},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='integer',\n      value=23255,\n      constraints={'min_value': 23186,\n       'max_value': 23256,\n       'shrink_towards': -14664,\n       'weights': None},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='string',\n      value='\\x15\\x12',\n      constraints={'intervals': IntervalSet(\n           [(0, 100183),\n            (160827, 214529),\n            (319973, 411607),\n            (469275, 628268),\n            (687992, 775159),\n            (887577, 900584),\n            (960644, 1035871)],\n       ),\n       'min_size': 0,\n       'max_size': 100},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='string', value='', constraints={'intervals': IntervalSet(\n           [(115966, 138607),\n            (163038, 179099),\n            (452254, 525731),\n            (599942, 682980),\n            (729100, 836444)],\n       ),\n       'min_size': 0,\n       'max_size': 10_000_000_000}, was_forced=True, index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0022446250077337027,
          "overall:gc": 0.0,
          "generate:nodes": 0.0093938740901649
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287677.415013583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.6737628097535967},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.5},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=struct.unpack('d', struct.pack('Q', 0x7ff8000000000001))[0],\n      constraints={'min_value': -4.448990020076077e+16,\n       'max_value': inf,\n       'allow_nan': True,\n       'smallest_nonzero_magnitude': 0.10964956393973993},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='integer',\n      value=-3_188_656_053_864_089_097,\n      constraints={'min_value': None,\n       'max_value': -23006,\n       'shrink_towards': 0,\n       'weights': None},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=-3.278902074832773e+124,\n      constraints={'min_value': -inf,\n       'max_value': 4.326802288052185e-195,\n       'allow_nan': True,\n       'smallest_nonzero_magnitude': 1.4773883273339811e-21},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=False,\n      constraints={'p': 0.16869717440936885},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='integer',\n      value=82,\n      constraints={'min_value': None,\n       'max_value': 32600,\n       'shrink_towards': 0,\n       'weights': None},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=-2.5708530622630788e+16,\n      constraints={'min_value': -inf,\n       'max_value': -1383.5504003898932,\n       'allow_nan': True,\n       'smallest_nonzero_magnitude': 0.9591264754990139},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='float',\n      value=-inf,\n      constraints={'min_value': -inf,\n       'max_value': inf,\n       'allow_nan': True,\n       'smallest_nonzero_magnitude': 0.22901197842358673},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='boolean',\n      value=False,\n      constraints={'p': 5.699350259480959e-299},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='float',\n      value=-2.3224548281035004e+16,\n      constraints={'min_value': -inf,\n       'max_value': 0.0001,\n       'allow_nan': False,\n       'smallest_nonzero_magnitude': 2.2508956310106524e-214},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='integer',\n      value=-22,\n      constraints={'min_value': -29,\n       'max_value': 54,\n       'shrink_towards': 0,\n       'weights': None},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'-6D\\x8f:\\xbb\\\\R6f=\\xf0Nx&\\x8f_Gt8\\x13\\xd5\\xda\\xfe\\xdd\\x8e+\\xbc\\xd4\\xbbTU',\n      constraints={'min_size': 20, 'max_size': 120},\n      was_forced=True,\n      index=None),\n     ChoiceNode(type='string',\n      value='\ud855\udd9b\ud855\udceb\ud855\uddb2\ud855\udd42\ud865\udef2\ud855\uddb2',\n      constraints={'intervals': IntervalSet(\n           [(152783, 173868), (319213, 427180), (661919, 880639)],\n       ), 'min_size': 0, 'max_size': 100},\n      was_forced=True,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0022850829991512,
          "overall:gc": 0.0,
          "generate:nodes": 0.012158622033894062
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287681.86231675,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.921073513650716},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='bytes',\n      value=b'N\\xc5\\xd1\\xc8\\x8c7\\xcf\\xe1\\xdc\\x0b\\xf6\\xe3\\xbe:\\xa9bK\\x96\\xa7\\xa0\\xb5\\xf0\\xa1\\x12\\xa2\\xd50+\\xe6$6\\x8d\\xdf\\xf9!->EAF\\xc5\\xc4\\x93\\x89c\\xb3\\xbf\\xb5\\xe9\\xb7|7\\xa8\\xe0\\xa8\\x9a\\xad>',\n      constraints={'min_size': 28, 'max_size': 10_000_000_000},\n      was_forced=False,\n      index=None),\n     ChoiceNode(type='integer',\n      value=23312,\n      constraints={'min_value': 13014,\n       'max_value': 27166,\n       'shrink_towards': 0,\n       'weights': None},\n      was_forced=False,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0013003749772906303,
          "overall:gc": 0.0,
          "generate:nodes": 0.0023333749268203974
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287664.4221695,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.5},\n      was_forced=False,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.002549665980041027,
          "overall:gc": 0.0,
          "generate:nodes": 0.0008158330456353724
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287685.508731125,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[ChoiceNode(type='boolean',\n      value=True,\n      constraints={'p': 0.5},\n      was_forced=False,\n      index=None)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0017585409805178642,
          "overall:gc": 0.0,
          "generate:nodes": 0.0007653749780729413
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287693.745232583,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_drawing_prefix_exactly(\n    nodes=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0009488749783486128,
          "overall:gc": 0.0,
          "generate:nodes": 4.6083005145192146e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_provider.py::test_drawing_prefix_exactly",
        "run_start": 287657.269447375,
        "stability": null
      }
    ]
  },
  "tests/test_linearize.py::test_linearize_decomposes_with_addition": {
    "rolling": [
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_linearize_decomposes_with_addition (line 209)",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 852338.8559514331,\n  'timestamp': 1e-05,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 27,\n  'fingerprints': 861270137,\n  'since_new_behavior': 104,\n  'phase': 'Phase.DISTILL'}]",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0002585829934105277,
          "overall:gc": 0.0002882919507101178,
          "generate:data": 8.791976142674685e-06,
          "generate:Draw 1": 0.001883333025034517
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287691.119929875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 0.0,\n  'timestamp': 5.3182463747146776e+16,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 420,\n   'Status.INTERESTING': 0},\n  'behaviors': 8952,\n  'fingerprints': 115,\n  'since_new_behavior': 240,\n  'phase': 'Phase.DISTILL'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 8.844313489911005e-239,\n  'timestamp': 0.5,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 993,\n   'Status.INTERESTING': 0},\n  'behaviors': 1921,\n  'fingerprints': 122,\n  'since_new_behavior': 8_151_646_943_295_845_985,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 0.005,\n  'timestamp': 1.0,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 4959,\n   'Status.INTERESTING': 0},\n  'behaviors': 30191,\n  'fingerprints': 4297,\n  'since_new_behavior': 13371,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 339564.7331722354,\n  'timestamp': 6.5206983569310616e+16,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 4.990354560756016e+37,\n   'Status.INTERESTING': 0},\n  'behaviors': 1_836_002_753,\n  'fingerprints': 50,\n  'since_new_behavior': 92,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 881769.1076105676,\n  'timestamp': 8.403457225248685e+307,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 1.414669847463243e+38,\n   'Status.INTERESTING': 0},\n  'behaviors': 12147,\n  'fingerprints': 26625,\n  'since_new_behavior': 1_824_680_748,\n  'phase': 'Phase.REPLAY'}]\nDraw 2: 2",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.010336417006328702,
          "overall:gc": 0.0006613749428652227,
          "generate:data": 1.3291952200233936e-05,
          "generate:Draw 1": 0.0062506250105798244,
          "generate:Draw 2": 2.7541012968868017e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287661.588280166,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 0.005,\n  'timestamp': 0.0040930506922806035,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 35,\n   'Status.INTERESTING': 0},\n  'behaviors': 18,\n  'fingerprints': 10626,\n  'since_new_behavior': 1_690_347_856_184_520_816,\n  'phase': 'Phase.DISTILL'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 130006.31042452107,\n  'timestamp': 0.003774342182567312,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 35,\n   'Status.INTERESTING': 0},\n  'behaviors': 87,\n  'fingerprints': 6218,\n  'since_new_behavior': 8744,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 699669.1148383344,\n  'timestamp': 0.00026390042968228787,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 2383,\n   'Status.INTERESTING': 0},\n  'behaviors': 27082,\n  'fingerprints': 77,\n  'since_new_behavior': 100,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 716017.214372962,\n  'timestamp': 0.000659208010928949,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 10389,\n   'Status.INTERESTING': 0},\n  'behaviors': 59,\n  'fingerprints': 48,\n  'since_new_behavior': 57,\n  'phase': 'Phase.FAILED'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 763838.831278257,\n  'timestamp': 8.834329520879109e-163,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 6.447079457812105e+37,\n   'Status.INTERESTING': 0},\n  'behaviors': 2551,\n  'fingerprints': 240,\n  'since_new_behavior': 76,\n  'phase': 'Phase.DISTILL'}]\nDraw 2: 3",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.010450541914906353,
          "overall:gc": 0.0006001659785397351,
          "generate:data": 1.1458992958068848e-05,
          "generate:Draw 1": 0.006087709043640643,
          "generate:Draw 2": 4.787504440173507e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287664.640467291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 0.01,\n  'timestamp': 7.584644982146021e+307,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 33,\n   'Status.INTERESTING': 0},\n  'behaviors': 1_593_086_159,\n  'fingerprints': 10229,\n  'since_new_behavior': 1.2140154165234294e+38,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 177582.57361620624,\n  'timestamp': 7.515333319422069e+307,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 901,\n   'Status.INTERESTING': 0},\n  'behaviors': 5.633965026637424e+37,\n  'fingerprints': 82,\n  'since_new_behavior': 21670,\n  'phase': 'Phase.FAILED'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 225180.74358771383,\n  'timestamp': 7.158030078444691e+307,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 18227,\n   'Status.INTERESTING': 0},\n  'behaviors': 17320,\n  'fingerprints': 988,\n  'since_new_behavior': 25128,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 525313.765779255,\n  'timestamp': 6.928670187552368e+307,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 25434,\n   'Status.INTERESTING': 0},\n  'behaviors': 22011,\n  'fingerprints': 28,\n  'since_new_behavior': 9083,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 999999.0,\n  'timestamp': 5.191529560782705e+307,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 30898,\n   'Status.INTERESTING': 0},\n  'behaviors': 65535,\n  'fingerprints': 53,\n  'since_new_behavior': 2818,\n  'phase': 'Phase.REPLAY'}]\nDraw 2: 2",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.011425458011217415,
          "overall:gc": 0.00045391597086563706,
          "generate:data": 1.266703475266695e-05,
          "generate:Draw 1": 0.005536667013075203,
          "generate:Draw 2": 2.7709000278264284e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287677.769246291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 483624.48463870864,\n  'timestamp': 9007199254740992.0,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 26316,\n  'fingerprints': 45,\n  'since_new_behavior': 48298908,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 593454.5317439656,\n  'timestamp': 0.0001,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 125,\n   'Status.INTERESTING': 0},\n  'behaviors': 32631,\n  'fingerprints': 2_080_695_193,\n  'since_new_behavior': 7.451712762278621e+37,\n  'phase': 'Phase.DISTILL'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 781906.3970765219,\n  'timestamp': 7.785698223629874e+307,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 125,\n   'Status.INTERESTING': 0},\n  'behaviors': 7403,\n  'fingerprints': 1_459_180_375,\n  'since_new_behavior': 4.852360844485559e+37,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 879054.9866822783,\n  'timestamp': 8.767022264437735e+307,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 10389,\n   'Status.INTERESTING': 0},\n  'behaviors': 800893249,\n  'fingerprints': 300,\n  'since_new_behavior': 16827,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 963039.9586968519,\n  'timestamp': 1.3620665183731403e+307,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8_700_501_936_294_012_085,\n   'Status.INTERESTING': 0},\n  'behaviors': 22845,\n  'fingerprints': 32006,\n  'since_new_behavior': 3815,\n  'phase': 'Phase.SHRINK'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.008007165975868702,
          "overall:gc": 0.0005904999561607838,
          "generate:data": 1.0791991371661425e-05,
          "generate:Draw 1": 0.006817292072810233,
          "generate:Draw 2": 2.6708003133535385e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287658.087777291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_linearize_decomposes_with_addition (line 209)",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 0.0,\n  'timestamp': 1.304565732716727e+308,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 17955,\n   'Status.INTERESTING': 0},\n  'behaviors': 1.657738666835836e+38,\n  'fingerprints': 1.0286543388450941e+37,\n  'since_new_behavior': 20124,\n  'phase': 'Phase.REPLAY'}]",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00025529199047014117,
          "overall:gc": 0.0002027910086326301,
          "generate:data": 1.0999967344105244e-05,
          "generate:Draw 1": 0.0031064999639056623
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287671.658336916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 1e-06,\n  'timestamp': 1e-06,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 8,\n  'fingerprints': 8,\n  'since_new_behavior': 10389,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 281858.19542107265,\n  'timestamp': 1.1,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 125,\n   'Status.INTERESTING': 0},\n  'behaviors': 13509,\n  'fingerprints': 136,\n  'since_new_behavior': 8,\n  'phase': 'Phase.GENERATE'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0050544170662760735,
          "overall:gc": 0.0001425420050509274,
          "generate:data": 9.374984074383974e-06,
          "generate:Draw 1": 0.002810457954183221,
          "generate:Draw 2": 2.5333021767437458e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287657.593342791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 2.00001,\n  'timestamp': 1.9,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 10389,\n  'fingerprints': 107,\n  'since_new_behavior': 65535,\n  'phase': 'Phase.FAILED'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 659009.8675548651,\n  'timestamp': 3.031805414456215e+16,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 125,\n   'Status.INTERESTING': 0},\n  'behaviors': 125,\n  'fingerprints': 12011,\n  'since_new_behavior': 8,\n  'phase': 'Phase.GENERATE'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.005145374976564199,
          "overall:gc": 0.0003043329925276339,
          "generate:data": 9.957992006093264e-06,
          "generate:Draw 1": 0.0029747920343652368,
          "generate:Draw 2": 2.458301605656743e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287659.211597,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "failed to satisfy assume() in test_linearize_decomposes_with_addition (line 209)",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: []",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00011791702127084136,
          "overall:gc": 0.034675667993724346,
          "generate:data": 1.229101326316595e-05,
          "generate:Draw 1": 0.0018087899661622941
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287665.991274875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 277312.14555685705,\n  'timestamp': 1.7387852155858085e+308,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 30264,\n  'fingerprints': 8,\n  'since_new_behavior': 28212,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 312322.19449517335,\n  'timestamp': 1.4532435636223895e+308,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 81,\n  'fingerprints': 3981,\n  'since_new_behavior': 9999,\n  'phase': 'Phase.SHRINK'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.005579792952630669,
          "overall:gc": 0.00022937398171052337,
          "generate:data": 1.0917021427303553e-05,
          "generate:Draw 1": 0.0029226670158095658,
          "generate:Draw 2": 2.7458008844405413e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287670.551392708,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 265828.94483163225,\n  'timestamp': 1e-05,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 8,\n  'fingerprints': 8,\n  'since_new_behavior': 106,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 352284.93859111913,\n  'timestamp': 5.191529560782705e+307,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 2452,\n  'fingerprints': 8,\n  'since_new_behavior': 106,\n  'phase': 'Phase.REPLAY'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.005575833085458726,
          "overall:gc": 0.00037462497130036354,
          "generate:data": 8.125032763928175e-06,
          "generate:Draw 1": 0.0023516250075772405,
          "generate:Draw 2": 2.524995943531394e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287687.777626541,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 1.192092896e-07,\n  'timestamp': 0.00489674610942367,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 2488,\n   'Status.INTERESTING': 0},\n  'behaviors': 2127,\n  'fingerprints': 12998,\n  'since_new_behavior': 76,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 1000.0,\n  'timestamp': 4.6900558159662134e-98,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8732,\n   'Status.INTERESTING': 0},\n  'behaviors': 1.0216008809015652e+38,\n  'fingerprints': 13845,\n  'since_new_behavior': 1000,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 43744.19134882369,\n  'timestamp': 0.019999999999999997,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 14853,\n   'Status.INTERESTING': 0},\n  'behaviors': 15997,\n  'fingerprints': 20838,\n  'since_new_behavior': 26823,\n  'phase': 'Phase.DISTILL'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 294385.8723708717,\n  'timestamp': 1.5539155191199473e-22,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 351936163,\n   'Status.INTERESTING': 0},\n  'behaviors': 87,\n  'fingerprints': 20,\n  'since_new_behavior': 4417,\n  'phase': 'Phase.FAILED'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 486287.57373721176,\n  'timestamp': 0.0027336896891093426,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 625390058,\n   'Status.INTERESTING': 0},\n  'behaviors': 106,\n  'fingerprints': 1623,\n  'since_new_behavior': 14720,\n  'phase': 'Phase.FAILED'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 573563.6176178422,\n  'timestamp': 0.009462627802351496,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 3_767_814_215_033_997_170,\n   'Status.INTERESTING': 0},\n  'behaviors': 8203,\n  'fingerprints': 119,\n  'since_new_behavior': 29112,\n  'phase': 'Phase.SHRINK'}]\nDraw 2: 3",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.015097332012373954,
          "overall:gc": 0.000933875038754195,
          "generate:data": 1.0124989785254002e-05,
          "generate:Draw 1": 0.007235333963762969,
          "generate:Draw 2": 3.062497125938535e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287680.253292958,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 1.0,\n  'timestamp': 9.728899489720539e+307,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 2488,\n   'Status.INTERESTING': 0},\n  'behaviors': 8,\n  'fingerprints': 8,\n  'since_new_behavior': 8,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 654611.2430023935,\n  'timestamp': 5.557021639942189e+307,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8876,\n   'Status.INTERESTING': 0},\n  'behaviors': 8,\n  'fingerprints': 10389,\n  'since_new_behavior': 6209,\n  'phase': 'Phase.FAILED'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00611241499427706,
          "overall:gc": 0.0003922079922631383,
          "generate:data": 1.0500021744519472e-05,
          "generate:Draw 1": 0.0033345010015182197,
          "generate:Draw 2": 2.804200630635023e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287686.548664583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 176043.80429131174,\n  'timestamp': 1e-05,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 13297,\n  'fingerprints': 1887,\n  'since_new_behavior': 24024,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 194171.7888809898,\n  'timestamp': 6.0143495588097384e+16,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 8238,\n  'fingerprints': 7_068_801_456_384_439_810,\n  'since_new_behavior': 1.5250291041372981e+38,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 396098.1062588743,\n  'timestamp': 344401.98769436765,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 1.1743369872751203e+38,\n  'fingerprints': 75,\n  'since_new_behavior': 22974,\n  'phase': 'Phase.DISTILL'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 396860.581511648,\n  'timestamp': 5.1086632218103016e+16,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 6,\n  'fingerprints': 31,\n  'since_new_behavior': 1_224_311_579,\n  'phase': 'Phase.REPLAY'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 873190.5381520045,\n  'timestamp': 1e-05,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 119,\n   'Status.INTERESTING': 0},\n  'behaviors': 7337,\n  'fingerprints': 549,\n  'since_new_behavior': 62,\n  'phase': 'Phase.GENERATE'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.010538958886172622,
          "overall:gc": 0.0006326660513877869,
          "generate:data": 7.333990652114153e-06,
          "generate:Draw 1": 0.005027499981224537,
          "generate:Draw 2": 3.420904977247119e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287694.839715833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 2.5899286402561102e-304,\n  'timestamp': 1.9,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 8,\n  'fingerprints': 10389,\n  'since_new_behavior': 8,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 25142.94526847328,\n  'timestamp': 3.031805414456215e+16,\n  'worker_uuid': \"UUID('1b1dee4b-1f14-4ce5-97b7-3b1f395f956e')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 125,\n   'Status.INTERESTING': 0},\n  'behaviors': 1248,\n  'fingerprints': 8,\n  'since_new_behavior': 10389,\n  'phase': 'Phase.GENERATE'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0054536660318262875,
          "overall:gc": 0.000766957993619144,
          "generate:data": 1.18750031106174e-05,
          "generate:Draw 1": 0.0029482090030796826,
          "generate:Draw 2": 3.0750001315027475e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287660.440732958,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 1.0760243441618702e-240,\n  'timestamp': 2.2002429900583204e-05,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 18,\n   'Status.INTERESTING': 0},\n  'behaviors': 1_340_583_894_494_143_648,\n  'fingerprints': 3.4375783748654026e+37,\n  'since_new_behavior': 21,\n  'phase': 'Phase.FAILED'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 535564.8840531058,\n  'timestamp': 2.371914416192527e-06,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 89,\n   'Status.INTERESTING': 0},\n  'behaviors': 13459,\n  'fingerprints': 13248,\n  'since_new_behavior': 75,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 554504.9881726928,\n  'timestamp': 3.207416797311475e-06,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 813062577,\n   'Status.INTERESTING': 0},\n  'behaviors': 19280,\n  'fingerprints': 31,\n  'since_new_behavior': 93,\n  'phase': 'Phase.GENERATE'}]\nDraw 2: 2",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.007902126002591103,
          "overall:gc": 0.0003886669874191284,
          "generate:data": 1.2415985111147165e-05,
          "generate:Draw 1": 0.0046070830430835485,
          "generate:Draw 2": 4.4290965888649225e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287659.318150291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_0'\",\n  'nodeid': 'nodeid_0',\n  'elapsed_time': 3.082539100165223e-238,\n  'timestamp': 2.429727026883986e+307,\n  'worker_uuid': \"UUID('8d136eb0-1344-4348-9fb4-ecae7e0e45b6')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 5616,\n   'Status.INTERESTING': 0},\n  'behaviors': 41,\n  'fingerprints': 24381,\n  'since_new_behavior': 13451,\n  'phase': 'Phase.DISTILL'},\n {'database_key': \"b'database_key_0'\",\n  'nodeid': 'nodeid_0',\n  'elapsed_time': 474770.8408685062,\n  'timestamp': 0.5,\n  'worker_uuid': \"UUID('8d136eb0-1344-4348-9fb4-ecae7e0e45b6')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 12703,\n   'Status.INTERESTING': 0},\n  'behaviors': 107,\n  'fingerprints': 57,\n  'since_new_behavior': 20,\n  'phase': 'Phase.SHRINK'},\n {'database_key': \"b'database_key_0'\",\n  'nodeid': 'nodeid_0',\n  'elapsed_time': 790488.3663935768,\n  'timestamp': 5.7089371783782824e+16,\n  'worker_uuid': \"UUID('8d136eb0-1344-4348-9fb4-ecae7e0e45b6')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 1_219_499_766,\n   'Status.INTERESTING': 0},\n  'behaviors': 32605,\n  'fingerprints': 79,\n  'since_new_behavior': 7_891_412_154_127_071_852,\n  'phase': 'Phase.DISTILL'},\n {'database_key': \"b'database_key_0'\",\n  'nodeid': 'nodeid_0',\n  'elapsed_time': 804641.5442317195,\n  'timestamp': 9.174866595597061e+306,\n  'worker_uuid': \"UUID('8d136eb0-1344-4348-9fb4-ecae7e0e45b6')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 6_633_742_857_751_228_412,\n   'Status.INTERESTING': 0},\n  'behaviors': 126,\n  'fingerprints': 30568,\n  'since_new_behavior': 94,\n  'phase': 'Phase.FAILED'}]\nDraw 2: 3",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.01141741796163842,
          "overall:gc": 0.03181595797650516,
          "generate:data": 1.5583005733788013e-05,
          "generate:Draw 1": 0.00810675002867356,
          "generate:Draw 2": 5.3333002142608166e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287656.957946916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 536992.7979486905,\n  'timestamp': 10.0,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 599,\n  'fingerprints': 8,\n  'since_new_behavior': 8,\n  'phase': 'Phase.GENERATE'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 903292.358011833,\n  'timestamp': 2.142964967812198e+16,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 3483,\n   'Status.INTERESTING': 0},\n  'behaviors': 8,\n  'fingerprints': 30242,\n  'since_new_behavior': 9,\n  'phase': 'Phase.REPLAY'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.003322292002849281,
          "overall:gc": 0.00023912504548206925,
          "generate:data": 1.029198756441474e-05,
          "generate:Draw 1": 0.002590541960671544,
          "generate:Draw 2": 2.6958005037158728e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287692.211795666,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_linearize_decomposes_with_addition(\n    data=data(...),\n)\nDraw 1: [{'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 4.03219038585748e-270,\n  'timestamp': 1e-05,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 8,\n  'fingerprints': 8,\n  'since_new_behavior': 2,\n  'phase': 'Phase.FAILED'},\n {'database_key': \"b'database_key_8'\",\n  'nodeid': 'nodeid_8',\n  'elapsed_time': 344401.98769436765,\n  'timestamp': 6.0143495588097384e+16,\n  'worker_uuid': \"UUID('6018366c-f658-47a7-9ed3-4fe53a096533')\",\n  'status_counts': {'Status.OVERRUN': 0,\n   'Status.INVALID': 0,\n   'Status.VALID': 8,\n   'Status.INTERESTING': 0},\n  'behaviors': 16701,\n  'fingerprints': 8,\n  'since_new_behavior': 27649,\n  'phase': 'Phase.DISTILL'}]\nDraw 2: 1",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.005636582965962589,
          "overall:gc": 0.00039258296601474285,
          "generate:data": 1.5666999388486147e-05,
          "generate:Draw 1": 0.003166917013004422,
          "generate:Draw 2": 1.7459038645029068e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_linearize_decomposes_with_addition",
        "run_start": 287694.350935666,
        "stability": null
      }
    ]
  },
  "tests/test_linearize.py::test_non_overlapping_reports": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=753979.0313426384,\n      timestamp=8.72035848910468e+306,\n      worker_uuid=UUID('e008364f-306d-4b3d-bce8-0083255d4b38'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2,\n       Status.INTERESTING: 0},\n      behaviors=103,\n      fingerprints=110,\n      since_new_behavior=23806,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=863797.8169121274,\n      timestamp=4.43343638509842e+306,\n      worker_uuid=UUID('e008364f-306d-4b3d-bce8-0083255d4b38'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 87,\n       Status.INTERESTING: 0},\n      behaviors=22517,\n      fingerprints=27448,\n      since_new_behavior=12744,\n      phase=Phase.SHRINK)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0002489580074325204,
          "overall:gc": 0.0,
          "generate:reports": 0.0024839169927872717
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287690.88199625,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=5.591505719170844e-51,\n      timestamp=9.870242105207946e+307,\n      worker_uuid=UUID('e9a092f2-c06a-4a83-a854-ddfb7034869c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 57,\n       Status.INTERESTING: 0},\n      behaviors=20593,\n      fingerprints=12,\n      since_new_behavior=3310,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=132031.7009305241,\n      timestamp=4.244375153852711e+16,\n      worker_uuid=UUID('e9a092f2-c06a-4a83-a854-ddfb7034869c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 364,\n       Status.INTERESTING: 0},\n      behaviors=3,\n      fingerprints=10990,\n      since_new_behavior=712,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=284720.5912727567,\n      timestamp=1.1125369292536007e-308,\n      worker_uuid=UUID('e9a092f2-c06a-4a83-a854-ddfb7034869c'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_888_472_786,\n       Status.INTERESTING: 0},\n      behaviors=16832,\n      fingerprints=6322,\n      since_new_behavior=255,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.4459224872967745e-267,\n      timestamp=7.153495263418114e+16,\n      worker_uuid=UUID('5f0b02aa-ef6e-410d-b05b-fc370d45f303'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5605,\n       Status.INTERESTING: 0},\n      behaviors=3_198_225_377_448_819_123,\n      fingerprints=7_620_912_707_359_061_974,\n      since_new_behavior=4282,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.2946367239070673e-76,\n      timestamp=1.7919330002300006e+307,\n      worker_uuid=UUID('5f0b02aa-ef6e-410d-b05b-fc370d45f303'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 10188,\n       Status.INTERESTING: 0},\n      behaviors=127,\n      fingerprints=1_281_212_281,\n      since_new_behavior=15099,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=0.3333333333333333,\n      timestamp=2.0319555449915197e+307,\n      worker_uuid=UUID('5f0b02aa-ef6e-410d-b05b-fc370d45f303'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 31630,\n       Status.INTERESTING: 0},\n      behaviors=1_608_791_110_276_748_393,\n      fingerprints=8153,\n      since_new_behavior=104,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=893667.1970575724,\n      timestamp=10000000.0,\n      worker_uuid=UUID('5f0b02aa-ef6e-410d-b05b-fc370d45f303'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 592324163,\n       Status.INTERESTING: 0},\n      behaviors=10167,\n      fingerprints=2_502_892_104_312_555_366,\n      since_new_behavior=26780,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=9.954958766501584e-08,\n      timestamp=3.219815044271483e+16,\n      worker_uuid=UUID('aaeb9ffa-1ffc-4d71-a9f7-ec6fe9fb87f2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 3145,\n       Status.INTERESTING: 0},\n      behaviors=18,\n      fingerprints=12,\n      since_new_behavior=32271,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=245128.16298687673,\n      timestamp=3.1570259168804988e+16,\n      worker_uuid=UUID('aaeb9ffa-1ffc-4d71-a9f7-ec6fe9fb87f2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5309,\n       Status.INTERESTING: 0},\n      behaviors=33,\n      fingerprints=20119,\n      since_new_behavior=30976,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=564448.6692803082,\n      timestamp=3.0994454610577584e+16,\n      worker_uuid=UUID('aaeb9ffa-1ffc-4d71-a9f7-ec6fe9fb87f2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 16678,\n       Status.INTERESTING: 0},\n      behaviors=5661,\n      fingerprints=24936,\n      since_new_behavior=24177,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=869783.7839428561,\n      timestamp=3.3156933545767416e+16,\n      worker_uuid=UUID('aaeb9ffa-1ffc-4d71-a9f7-ec6fe9fb87f2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 27913,\n       Status.INTERESTING: 0},\n      behaviors=103,\n      fingerprints=64,\n      since_new_behavior=8232,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=964243.1984156412,\n      timestamp=3.363492749691856e+16,\n      worker_uuid=UUID('aaeb9ffa-1ffc-4d71-a9f7-ec6fe9fb87f2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_475_421_511_976_472_091,\n       Status.INTERESTING: 0},\n      behaviors=1719,\n      fingerprints=20283,\n      since_new_behavior=3545,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.6343351716894406e-127,\n      timestamp=2.0232182183671738e+307,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 66,\n       Status.INTERESTING: 0},\n      behaviors=52,\n      fingerprints=30641,\n      since_new_behavior=29679,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.00001,\n      timestamp=4.3583175633565784e+16,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 117,\n       Status.INTERESTING: 0},\n      behaviors=4138,\n      fingerprints=25829,\n      since_new_behavior=12353,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=123168.46011036378,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1921,\n       Status.INTERESTING: 0},\n      behaviors=24778,\n      fingerprints=21822,\n      since_new_behavior=7,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=187594.2696925795,\n      timestamp=6.969924507139467e+306,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5759,\n       Status.INTERESTING: 0},\n      behaviors=167,\n      fingerprints=28_092_579_984_857_227_224_061_844_485_738_905_339,\n      since_new_behavior=11576,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=480014.6116681186,\n      timestamp=2.7868146287967427e+307,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 6874,\n       Status.INTERESTING: 0},\n      behaviors=18458,\n      fingerprints=2383,\n      since_new_behavior=2828,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=611692.9199975748,\n      timestamp=1.3308221412437303e+307,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8207,\n       Status.INTERESTING: 0},\n      behaviors=10026,\n      fingerprints=14963,\n      since_new_behavior=78,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=649446.3535003259,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 12800,\n       Status.INTERESTING: 0},\n      behaviors=17574,\n      fingerprints=8643,\n      since_new_behavior=8191,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=752067.6259016885,\n      timestamp=3.0072824210579076e+16,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 14504,\n       Status.INTERESTING: 0},\n      behaviors=12049,\n      fingerprints=30467,\n      since_new_behavior=5_222_273_799_174_222_702,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=950467.5807640404,\n      timestamp=3.7274812548156713e+307,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 24380,\n       Status.INTERESTING: 0},\n      behaviors=9,\n      fingerprints=7_063_476_469_707_591_370,\n      since_new_behavior=28336,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=976052.5374341133,\n      timestamp=9.12341719111037e+307,\n      worker_uuid=UUID('dbf8b474-af4a-4b99-b5d5-f335c47904f3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 4_294_967_295,\n       Status.INTERESTING: 0},\n      behaviors=60,\n      fingerprints=19992,\n      since_new_behavior=15348,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.225073858507203e-309,\n      timestamp=7.734583031795218e+305,\n      worker_uuid=UUID('74a82d3c-cbef-4972-8c68-16eb06f6a943'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 76,\n       Status.INTERESTING: 0},\n      behaviors=31403,\n      fingerprints=31761,\n      since_new_behavior=29358,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=5.80777734873612e-83,\n      timestamp=1.274274907485604e+32,\n      worker_uuid=UUID('74a82d3c-cbef-4972-8c68-16eb06f6a943'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 122,\n       Status.INTERESTING: 0},\n      behaviors=28289,\n      fingerprints=15799,\n      since_new_behavior=63,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.0,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('74a82d3c-cbef-4972-8c68-16eb06f6a943'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 9005,\n       Status.INTERESTING: 0},\n      behaviors=30194,\n      fingerprints=8_538_494_249_836_443_301,\n      since_new_behavior=30421,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=407928.88230652845,\n      timestamp=1.765856014835494e+306,\n      worker_uuid=UUID('74a82d3c-cbef-4972-8c68-16eb06f6a943'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 12888,\n       Status.INTERESTING: 0},\n      behaviors=105,\n      fingerprints=706,\n      since_new_behavior=27455,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=714878.9474879417,\n      timestamp=3.455491778754376e+306,\n      worker_uuid=UUID('74a82d3c-cbef-4972-8c68-16eb06f6a943'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 24259,\n       Status.INTERESTING: 0},\n      behaviors=22687,\n      fingerprints=10026,\n      since_new_behavior=19620,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=810929.5958619891,\n      timestamp=2.2764255441212725e+134,\n      worker_uuid=UUID('74a82d3c-cbef-4972-8c68-16eb06f6a943'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_398_334_292,\n       Status.INTERESTING: 0},\n      behaviors=28080,\n      fingerprints=118,\n      since_new_behavior=4695,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=0.5,\n      timestamp=3.446161535700843e+16,\n      worker_uuid=UUID('4ddd8b40-3abd-4290-b1fc-1eaaeb7c49d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5813,\n       Status.INTERESTING: 0},\n      behaviors=7961,\n      fingerprints=5955,\n      since_new_behavior=22687,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=450680.3221171106,\n      timestamp=1.9785777157234746e-152,\n      worker_uuid=UUID('4ddd8b40-3abd-4290-b1fc-1eaaeb7c49d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 20896,\n       Status.INTERESTING: 0},\n      behaviors=6504,\n      fingerprints=7202,\n      since_new_behavior=4304,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=454883.0503093743,\n      timestamp=2.5613040942650547e+307,\n      worker_uuid=UUID('4ddd8b40-3abd-4290-b1fc-1eaaeb7c49d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 26116,\n       Status.INTERESTING: 0},\n      behaviors=20576,\n      fingerprints=120,\n      since_new_behavior=22213,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.2250738585072014e-308,\n      timestamp=7.900311028836198e+305,\n      worker_uuid=UUID('18433ad2-070a-4912-9117-7a2790151fe3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 107,\n       Status.INTERESTING: 0},\n      behaviors=23196,\n      fingerprints=94_727_115_565_130_899_964_495_239_462_243_023_671,\n      since_new_behavior=22286,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=3.1503570354117103e-26,\n      timestamp=2.1646366021013086e+307,\n      worker_uuid=UUID('18433ad2-070a-4912-9117-7a2790151fe3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 4663,\n       Status.INTERESTING: 0},\n      behaviors=90_633_441_336_223_103_288_900_563_860_312_512_997,\n      fingerprints=126,\n      since_new_behavior=5_609_164_386_938_047_870,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=27693.037201836032,\n      timestamp=8.057997394064881e+151,\n      worker_uuid=UUID('18433ad2-070a-4912-9117-7a2790151fe3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 6390,\n       Status.INTERESTING: 0},\n      behaviors=3472,\n      fingerprints=29388,\n      since_new_behavior=13451,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=419601.88164825307,\n      timestamp=5.246402491638515e+161,\n      worker_uuid=UUID('18433ad2-070a-4912-9117-7a2790151fe3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22035,\n       Status.INTERESTING: 0},\n      behaviors=19862,\n      fingerprints=139_033_099_398_372_466_095_670_162_768_644_543_951,\n      since_new_behavior=36,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=544027.6225713989,\n      timestamp=5.0390269365331224e+16,\n      worker_uuid=UUID('18433ad2-070a-4912-9117-7a2790151fe3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 31355,\n       Status.INTERESTING: 0},\n      behaviors=27,\n      fingerprints=84,\n      since_new_behavior=11686,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=860962.5669644229,\n      timestamp=7.154995122062942e+307,\n      worker_uuid=UUID('18433ad2-070a-4912-9117-7a2790151fe3'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 4_481_708_060_939_341_291,\n       Status.INTERESTING: 0},\n      behaviors=90,\n      fingerprints=41,\n      since_new_behavior=1_244_174_817,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.0,\n      timestamp=5.948997816397489e+292,\n      worker_uuid=UUID('5da1899c-830a-4840-86e0-bdab12f4c3d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 3162,\n       Status.INTERESTING: 0},\n      behaviors=15211,\n      fingerprints=1895,\n      since_new_behavior=19260,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=225463.20003742242,\n      timestamp=2.7691866678441993e+307,\n      worker_uuid=UUID('5da1899c-830a-4840-86e0-bdab12f4c3d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 9146,\n       Status.INTERESTING: 0},\n      behaviors=11848,\n      fingerprints=3048,\n      since_new_behavior=40,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=268324.37038996123,\n      timestamp=2.3666849700007135e+307,\n      worker_uuid=UUID('5da1899c-830a-4840-86e0-bdab12f4c3d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 13421,\n       Status.INTERESTING: 0},\n      behaviors=48,\n      fingerprints=1_000_000_000,\n      since_new_behavior=32211,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=613149.4628736927,\n      timestamp=3.496202912819839e+307,\n      worker_uuid=UUID('5da1899c-830a-4840-86e0-bdab12f4c3d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 13658,\n       Status.INTERESTING: 0},\n      behaviors=12862,\n      fingerprints=32023,\n      since_new_behavior=90,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=727962.9007213357,\n      timestamp=2.0681128404961984e+186,\n      worker_uuid=UUID('5da1899c-830a-4840-86e0-bdab12f4c3d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 19806,\n       Status.INTERESTING: 0},\n      behaviors=32_618_661_755_144_066_464_458_443_622_433_207_474,\n      fingerprints=30043,\n      since_new_behavior=25183,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=731961.3965431927,\n      timestamp=1.7244718694320444e+16,\n      worker_uuid=UUID('5da1899c-830a-4840-86e0-bdab12f4c3d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 461125641,\n       Status.INTERESTING: 0},\n      behaviors=5590,\n      fingerprints=4979,\n      since_new_behavior=107,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=790793.3570304133,\n      timestamp=4.803538752775034e+307,\n      worker_uuid=UUID('5da1899c-830a-4840-86e0-bdab12f4c3d8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 43_660_047_963_842_830_102_738_322_603_261_272_891,\n       Status.INTERESTING: 0},\n      behaviors=8752,\n      fingerprints=50,\n      since_new_behavior=23656,\n      phase=Phase.SHRINK)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0014363750233314931,
          "overall:gc": 0.0,
          "generate:reports": 0.05237046180991456
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287676.886551,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0001977919600903988,
          "overall:gc": 0.0,
          "generate:reports": 0.0017907079891301692
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287653.219322166,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=148945.7498406648,\n      timestamp=0.04683664877423221,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 40,\n       Status.INTERESTING: 0},\n      behaviors=100,\n      fingerprints=19129,\n      since_new_behavior=19283,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=419574.8215365319,\n      timestamp=4.8381244678290624e-147,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2090,\n       Status.INTERESTING: 0},\n      behaviors=25030,\n      fingerprints=109,\n      since_new_behavior=19371,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=559403.3943751317,\n      timestamp=0.023135171389165973,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 31483,\n       Status.INTERESTING: 0},\n      behaviors=32651,\n      fingerprints=89,\n      since_new_behavior=524288,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=787807.5295118234,\n      timestamp=0.09999999999999999,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_058_794_277,\n       Status.INTERESTING: 0},\n      behaviors=24979,\n      fingerprints=7977,\n      since_new_behavior=8381,\n      phase=Phase.SHRINK)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0002449999446980655,
          "overall:gc": 0.0,
          "generate:reports": 0.005138873937539756
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287690.499016583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=663518.1207478321,\n      timestamp=7.674098289298727e+73,\n      worker_uuid=UUID('6018366c-f658-47a7-9ed3-4fe53a096533'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 94,\n       Status.INTERESTING: 0},\n      behaviors=8,\n      fingerprints=8,\n      since_new_behavior=15983,\n      phase=Phase.DISTILL)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00012375001097097993,
          "overall:gc": 0.0,
          "generate:reports": 0.0019790829974226654
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287663.879114333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.8149615730019796e-171,\n      timestamp=1.2940538450171817e+308,\n      worker_uuid=UUID('6018366c-f658-47a7-9ed3-4fe53a096533'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 12180,\n       Status.INTERESTING: 0},\n      behaviors=46,\n      fingerprints=4_434_240_077_516_032_896,\n      since_new_behavior=25,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=533783.8376083769,\n      timestamp=2.418415536661931e+307,\n      worker_uuid=UUID('6018366c-f658-47a7-9ed3-4fe53a096533'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 15317,\n       Status.INTERESTING: 0},\n      behaviors=19697,\n      fingerprints=23272,\n      since_new_behavior=90179069,\n      phase=Phase.DISTILL)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00018437497783452272,
          "overall:gc": 0.0,
          "generate:reports": 0.003060499031562358
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287662.816713791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=0.0,\n      timestamp=4.822811935359588e+16,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 55,\n       Status.INTERESTING: 0},\n      behaviors=126_836_028_314_223_066_769_686_287_976_522_008_202,\n      fingerprints=392702882,\n      since_new_behavior=3889,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.00001,\n      timestamp=7.258243526809487e+307,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 68,\n       Status.INTERESTING: 0},\n      behaviors=29720,\n      fingerprints=1_294_475_717_859_719_719,\n      since_new_behavior=16942,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=49729.81807713307,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 110,\n       Status.INTERESTING: 0},\n      behaviors=106,\n      fingerprints=55,\n      since_new_behavior=32690,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=138373.88833906152,\n      timestamp=5.497116862101681e+307,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 125,\n       Status.INTERESTING: 0},\n      behaviors=1_880_352_547,\n      fingerprints=2102,\n      since_new_behavior=13687,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=181125.79297527455,\n      timestamp=4.5338400767265944e+16,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 13816,\n       Status.INTERESTING: 0},\n      behaviors=12,\n      fingerprints=25952,\n      since_new_behavior=607548833,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=278359.4719863912,\n      timestamp=6.975556729014665e+16,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 14206,\n       Status.INTERESTING: 0},\n      behaviors=1_405_741_586,\n      fingerprints=17726,\n      since_new_behavior=7,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=334635.6839638616,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 30551,\n       Status.INTERESTING: 0},\n      behaviors=16962,\n      fingerprints=20213,\n      since_new_behavior=524288,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=527765.4143028262,\n      timestamp=5.613537711523958e+307,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_130_214_836,\n       Status.INTERESTING: 0},\n      behaviors=27536,\n      fingerprints=11438,\n      since_new_behavior=94,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=809431.9632231036,\n      timestamp=3.034941184766763e+307,\n      worker_uuid=UUID('4b036e5b-14db-4cb7-b0e8-59b0a94c7e1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 56_260_772_220_298_884_604_624_753_172_865_354_915,\n       Status.INTERESTING: 0},\n      behaviors=27942,\n      fingerprints=9174,\n      since_new_behavior=11009,\n      phase=Phase.DISTILL)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0004489590064622462,
          "overall:gc": 0.0,
          "generate:reports": 0.010325583920348436
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287682.00011675,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=1e-05,\n      timestamp=3.863296692166958e+16,\n      worker_uuid=UUID('e008364f-306d-4b3d-bce8-0083255d4b38'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 18729,\n       Status.INTERESTING: 0},\n      behaviors=3967,\n      fingerprints=1_618_184_741,\n      since_new_behavior=39,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=817419.2796257243,\n      timestamp=1.6553402526351266e+16,\n      worker_uuid=UUID('e008364f-306d-4b3d-bce8-0083255d4b38'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 875040734,\n       Status.INTERESTING: 0},\n      behaviors=58,\n      fingerprints=1_495_887_277,\n      since_new_behavior=1_405_401_669,\n      phase=Phase.DISTILL)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0001778329606167972,
          "overall:gc": 0.0,
          "generate:reports": 0.0029540840187110007
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287692.996506875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=133061.18823772063,\n      timestamp=8.426967788356006e+307,\n      worker_uuid=UUID('5fee3352-3a73-49b4-9fc4-1cb3efca05dd'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 9,\n       Status.INTERESTING: 0},\n      behaviors=4771,\n      fingerprints=29322,\n      since_new_behavior=172800,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=307085.09870359406,\n      timestamp=8.219008046998846e+307,\n      worker_uuid=UUID('5fee3352-3a73-49b4-9fc4-1cb3efca05dd'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 105,\n       Status.INTERESTING: 0},\n      behaviors=15180,\n      fingerprints=27287,\n      since_new_behavior=71,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=568223.5265646442,\n      timestamp=7.482536827311125e+307,\n      worker_uuid=UUID('5fee3352-3a73-49b4-9fc4-1cb3efca05dd'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 3324,\n       Status.INTERESTING: 0},\n      behaviors=83,\n      fingerprints=6_482_886_666_680_448_687,\n      since_new_behavior=1729,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=995289.1713227963,\n      timestamp=7.217032123214204e+307,\n      worker_uuid=UUID('5fee3352-3a73-49b4-9fc4-1cb3efca05dd'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8232,\n       Status.INTERESTING: 0},\n      behaviors=32267,\n      fingerprints=21,\n      since_new_behavior=10929,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.225073858507203e-309,\n      timestamp=0.008406628158590612,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 44,\n       Status.INTERESTING: 0},\n      behaviors=56,\n      fingerprints=13238,\n      since_new_behavior=2_310_583_836_539_152_082,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.201742440266538e-183,\n      timestamp=0.00927867980177678,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 47,\n       Status.INTERESTING: 0},\n      behaviors=80,\n      fingerprints=28145,\n      since_new_behavior=1_427_351_839,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.5484957278547893e-108,\n      timestamp=1.1125369292536007e-308,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 81,\n       Status.INTERESTING: 0},\n      behaviors=37,\n      fingerprints=21,\n      since_new_behavior=1_711_150_555,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=3.400826941819459e-70,\n      timestamp=1.7157283164739672e-181,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 97,\n       Status.INTERESTING: 0},\n      behaviors=97,\n      fingerprints=27,\n      since_new_behavior=25835,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.220446049250313e-16,\n      timestamp=0.0045690034458756405,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 105,\n       Status.INTERESTING: 0},\n      behaviors=28969,\n      fingerprints=28811,\n      since_new_behavior=414247243,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1e-12,\n      timestamp=0.005795522305750246,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 119,\n       Status.INTERESTING: 0},\n      behaviors=92,\n      fingerprints=45,\n      since_new_behavior=5139,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=66587.28684032701,\n      timestamp=0.0007967868181619477,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 126,\n       Status.INTERESTING: 0},\n      behaviors=12111,\n      fingerprints=90,\n      since_new_behavior=13606,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=120703.24831169857,\n      timestamp=0.009207231300920937,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 256,\n       Status.INTERESTING: 0},\n      behaviors=1_571_723_996_020_728_477,\n      fingerprints=29988,\n      since_new_behavior=32429,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=202534.31669171245,\n      timestamp=0.01,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1449,\n       Status.INTERESTING: 0},\n      behaviors=5491,\n      fingerprints=6_226_806_935_098_048_290,\n      since_new_behavior=23,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=226829.89649105206,\n      timestamp=0.0021853817419165995,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2493,\n       Status.INTERESTING: 0},\n      behaviors=29042,\n      fingerprints=73,\n      since_new_behavior=615756083,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=249061.87060839453,\n      timestamp=1e-05,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 3389,\n       Status.INTERESTING: 0},\n      behaviors=2964,\n      fingerprints=32508,\n      since_new_behavior=1747,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=254414.7895071059,\n      timestamp=0.008898198283991824,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5253,\n       Status.INTERESTING: 0},\n      behaviors=23,\n      fingerprints=20467,\n      since_new_behavior=42,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=280306.2875962288,\n      timestamp=0.003314320258656734,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 7367,\n       Status.INTERESTING: 0},\n      behaviors=1162,\n      fingerprints=6405,\n      since_new_behavior=68,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=281613.54421473213,\n      timestamp=0.007441665778437768,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 9117,\n       Status.INTERESTING: 0},\n      behaviors=81,\n      fingerprints=29541,\n      since_new_behavior=5234,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=312165.21879158536,\n      timestamp=1e-06,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 9999,\n       Status.INTERESTING: 0},\n      behaviors=11825,\n      fingerprints=117,\n      since_new_behavior=1_952_267_884,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=457296.15436944284,\n      timestamp=0.00337055402778451,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 11790,\n       Status.INTERESTING: 0},\n      behaviors=83,\n      fingerprints=23315,\n      since_new_behavior=2_649_080_648_701_997_639,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=476923.67691672896,\n      timestamp=5.976525202884042e-05,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 13264,\n       Status.INTERESTING: 0},\n      behaviors=66,\n      fingerprints=59,\n      since_new_behavior=125,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=489403.8582334074,\n      timestamp=0.004032438694957962,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 17892,\n       Status.INTERESTING: 0},\n      behaviors=957,\n      fingerprints=32241,\n      since_new_behavior=32237,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=523328.129925401,\n      timestamp=1e-05,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 18661,\n       Status.INTERESTING: 0},\n      behaviors=23223,\n      fingerprints=8917,\n      since_new_behavior=14511,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=524003.4904170675,\n      timestamp=0.006605984425033921,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 24546,\n       Status.INTERESTING: 0},\n      behaviors=1,\n      fingerprints=3_284_489_739_849_056_460,\n      since_new_behavior=65,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=553196.3940575086,\n      timestamp=0.0018985990150333515,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 24981,\n       Status.INTERESTING: 0},\n      behaviors=15069,\n      fingerprints=22547,\n      since_new_behavior=76,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=580432.52782038,\n      timestamp=1.175494351e-38,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 26540,\n       Status.INTERESTING: 0},\n      behaviors=93,\n      fingerprints=19571,\n      since_new_behavior=26728,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=583326.5315132242,\n      timestamp=2.2250738585e-313,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 27226,\n       Status.INTERESTING: 0},\n      behaviors=121,\n      fingerprints=23881,\n      since_new_behavior=94,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=585392.968190181,\n      timestamp=0.0002795801050506986,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 172800,\n       Status.INTERESTING: 0},\n      behaviors=46_892_639_339_978_788_088_989_528_177_261_419_719,\n      fingerprints=26348,\n      since_new_behavior=22719,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=707139.0839136492,\n      timestamp=0.005969677624401323,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 520765891,\n       Status.INTERESTING: 0},\n      behaviors=960_677_386_192_339_154,\n      fingerprints=2_316_026_417_039_129_859,\n      since_new_behavior=1565,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=715014.0296605717,\n      timestamp=0.008546236953299924,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 7_812_015_903_962_021_995,\n       Status.INTERESTING: 0},\n      behaviors=23_010_899_109_923_876_401_945_684_789_489_355_298,\n      fingerprints=1_272_915_113,\n      since_new_behavior=107,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=742253.3193577067,\n      timestamp=0.0041690329747944435,\n      worker_uuid=UUID('15521554-a922-4b4f-986b-dd4fc1eda055'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 143_840_983_821_834_765_984_612_057_816_080_479_788,\n       Status.INTERESTING: 0},\n      behaviors=20,\n      fingerprints=27,\n      since_new_behavior=121,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=6.103515625e-05,\n      timestamp=9007199254740992.0,\n      worker_uuid=UUID('54a8f784-b800-4387-be7f-832bb254ed1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 6277,\n       Status.INTERESTING: 0},\n      behaviors=27124,\n      fingerprints=68,\n      since_new_behavior=114,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=630453.29692074,\n      timestamp=7890199205824395.0,\n      worker_uuid=UUID('54a8f784-b800-4387-be7f-832bb254ed1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8232,\n       Status.INTERESTING: 0},\n      behaviors=652198803,\n      fingerprints=5148,\n      since_new_behavior=12150,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=799398.7957583773,\n      timestamp=9007199254740992.0,\n      worker_uuid=UUID('54a8f784-b800-4387-be7f-832bb254ed1e'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5_432_295_922_326_799_496,\n       Status.INTERESTING: 0},\n      behaviors=112_091_930_995_784_046_998_483_557_706_415_343_575,\n      fingerprints=114,\n      since_new_behavior=420,\n      phase=Phase.FAILED)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.000758624984882772,
          "overall:gc": 0.0,
          "generate:reports": 0.10010333615355194
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287660.239495958,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=110252.33852999008,\n      timestamp=inf,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 40,\n       Status.INTERESTING: 0},\n      behaviors=27501,\n      fingerprints=16333,\n      since_new_behavior=5349,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=605941.469415439,\n      timestamp=2.5094053571365588e+72,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 65,\n       Status.INTERESTING: 0},\n      behaviors=240,\n      fingerprints=5845,\n      since_new_behavior=65,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=950422.2858853994,\n      timestamp=5.8486113621215046e+169,\n      worker_uuid=UUID('5c6e4337-15ba-4bdd-9772-19d30e7a269f'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 6121,\n       Status.INTERESTING: 0},\n      behaviors=14963,\n      fingerprints=30825,\n      since_new_behavior=83,\n      phase=Phase.GENERATE)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00030283298110589385,
          "overall:gc": 0.0,
          "generate:reports": 0.005931000108830631
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287677.02285525,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=292830.98114805255,\n      timestamp=4.064321848581577e-26,\n      worker_uuid=UUID('45dd6df0-d826-4deb-a156-344c097be30a'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 15508,\n       Status.INTERESTING: 0},\n      behaviors=29695,\n      fingerprints=839924477,\n      since_new_behavior=106716241,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=856685.8554338013,\n      timestamp=1.6579610508586e+79,\n      worker_uuid=UUID('45dd6df0-d826-4deb-a156-344c097be30a'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 17355,\n       Status.INTERESTING: 0},\n      behaviors=19988,\n      fingerprints=850,\n      since_new_behavior=2390,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=999999.0,\n      timestamp=2.1022041132151363e+79,\n      worker_uuid=UUID('45dd6df0-d826-4deb-a156-344c097be30a'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 65535,\n       Status.INTERESTING: 0},\n      behaviors=15296,\n      fingerprints=58,\n      since_new_behavior=30335,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.225073858507e-311,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 120,\n       Status.INTERESTING: 0},\n      behaviors=29683,\n      fingerprints=23806,\n      since_new_behavior=37,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=2.246197969962834e-260,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 123,\n       Status.INTERESTING: 0},\n      behaviors=28,\n      fingerprints=7147,\n      since_new_behavior=90,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=4.0157881491914914e-13,\n      timestamp=6.391240942992734e+16,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2837,\n       Status.INTERESTING: 0},\n      behaviors=5700,\n      fingerprints=926929334,\n      since_new_behavior=12349,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.0,\n      timestamp=1.8493269863541353e+57,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 7395,\n       Status.INTERESTING: 0},\n      behaviors=7,\n      fingerprints=113,\n      since_new_behavior=16957,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=1.0,\n      timestamp=1.5323416840348403e+58,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8207,\n       Status.INTERESTING: 0},\n      behaviors=9999,\n      fingerprints=7036,\n      since_new_behavior=24,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=621450.926314287,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 9006,\n       Status.INTERESTING: 0},\n      behaviors=9176,\n      fingerprints=19383,\n      since_new_behavior=1_331_047_927,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=689812.0292092878,\n      timestamp=1.1211473917368813e+58,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 17195,\n       Status.INTERESTING: 0},\n      behaviors=122,\n      fingerprints=40,\n      since_new_behavior=8_326_356_908_811_272_913,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=743034.808151992,\n      timestamp=5.881723158277598e+57,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 25111,\n       Status.INTERESTING: 0},\n      behaviors=17717,\n      fingerprints=29710,\n      since_new_behavior=11683,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=794148.9257969143,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 29422,\n       Status.INTERESTING: 0},\n      behaviors=31918,\n      fingerprints=17415,\n      since_new_behavior=6696,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=999999.9999999999,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('0eb219e2-201b-43b9-bb18-edee70c0df08'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 152_899_164_211_775_643_961_403_204_342_012_577_508,\n       Status.INTERESTING: 0},\n      behaviors=417,\n      fingerprints=29755,\n      since_new_behavior=5_622_894_995_114_407_698,\n      phase=Phase.GENERATE)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00032429094426333904,
          "overall:gc": 0.0,
          "generate:reports": 0.0104923348990269
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287654.305971041,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=4.453193017064936e-270,\n      timestamp=7.721267406197115e+307,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 0,\n       Status.INTERESTING: 0},\n      behaviors=7658,\n      fingerprints=4725,\n      since_new_behavior=106_824_439_041_852_649_488_666_100_641_537_561_667,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=59304.62120058101,\n      timestamp=7.426369429347617e+307,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 2,\n       Status.INTERESTING: 0},\n      behaviors=8_719_182_029_578_699_462,\n      fingerprints=100,\n      since_new_behavior=1502,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_8',\n      nodeid='nodeid_8',\n      elapsed_time=156269.89633382895,\n      timestamp=9.208887238251157e+307,\n      worker_uuid=UUID('d95bafc8-f2a4-427b-9cf4-bb99f4bea973'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 24708,\n       Status.INTERESTING: 0},\n      behaviors=31883,\n      fingerprints=21163,\n      since_new_behavior=7616,\n      phase=Phase.DISTILL)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0001843329519033432,
          "overall:gc": 0.0,
          "generate:reports": 0.004297666950151324
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287678.033836666,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=2.263568249570798e-44,\n      timestamp=6.895454677831108e+307,\n      worker_uuid=UUID('85116e44-7708-48fc-a6be-f14ec4d521db'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 26271,\n       Status.INTERESTING: 0},\n      behaviors=20984,\n      fingerprints=1_799_314_865,\n      since_new_behavior=100,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=2.220446049250313e-16,\n      timestamp=6.746231513929238e+307,\n      worker_uuid=UUID('85116e44-7708-48fc-a6be-f14ec4d521db'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 121_874_877_786_653_487_148_659_129_493_972_295_500,\n       Status.INTERESTING: 0},\n      behaviors=1099,\n      fingerprints=8_035_743_845_516_538_866,\n      since_new_behavior=25651,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=174680.9890861565,\n      timestamp=1.2776361171640433e+308,\n      worker_uuid=UUID('bdf180c7-dbce-48b5-9123-e007678514c8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 125,\n       Status.INTERESTING: 0},\n      behaviors=2644,\n      fingerprints=113,\n      since_new_behavior=7257,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=291830.2690437216,\n      timestamp=1.159124414685224e+308,\n      worker_uuid=UUID('bdf180c7-dbce-48b5-9123-e007678514c8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5665,\n       Status.INTERESTING: 0},\n      behaviors=30891,\n      fingerprints=17346,\n      since_new_behavior=15,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=893067.4792402926,\n      timestamp=1.1544560236579015e+308,\n      worker_uuid=UUID('bdf180c7-dbce-48b5-9123-e007678514c8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 15473,\n       Status.INTERESTING: 0},\n      behaviors=27166,\n      fingerprints=26959,\n      since_new_behavior=70,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=906568.2473907568,\n      timestamp=1.619251785190256e+308,\n      worker_uuid=UUID('bdf180c7-dbce-48b5-9123-e007678514c8'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 16754,\n       Status.INTERESTING: 0},\n      behaviors=2,\n      fingerprints=125,\n      since_new_behavior=8288,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=507542.9684695795,\n      timestamp=1.0,\n      worker_uuid=UUID('150d8695-89df-4079-b203-4cab292f3bd2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 18375,\n       Status.INTERESTING: 0},\n      behaviors=14_218_098_064_889_259_387_467_465_561_906_876_967,\n      fingerprints=6492,\n      since_new_behavior=5262,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=5e-324,\n      timestamp=4.3490117792466763e+307,\n      worker_uuid=UUID('763b3dfd-2c78-412c-831d-f5ede9699069'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8,\n       Status.INTERESTING: 0},\n      behaviors=22,\n      fingerprints=32460,\n      since_new_behavior=17315,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=2.2250738585e-313,\n      timestamp=1.0165066862887993e+307,\n      worker_uuid=UUID('763b3dfd-2c78-412c-831d-f5ede9699069'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 80,\n       Status.INTERESTING: 0},\n      behaviors=7425,\n      fingerprints=25388,\n      since_new_behavior=19236,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=5.960464477539063e-08,\n      timestamp=4.794089872810278e+307,\n      worker_uuid=UUID('763b3dfd-2c78-412c-831d-f5ede9699069'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 125,\n       Status.INTERESTING: 0},\n      behaviors=16445,\n      fingerprints=21,\n      since_new_behavior=15473,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=781489.1556979802,\n      timestamp=9.531889020387348e+306,\n      worker_uuid=UUID('763b3dfd-2c78-412c-831d-f5ede9699069'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 448,\n       Status.INTERESTING: 0},\n      behaviors=97,\n      fingerprints=12607,\n      since_new_behavior=110,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=884185.1938158046,\n      timestamp=2.1658941942227358e+307,\n      worker_uuid=UUID('763b3dfd-2c78-412c-831d-f5ede9699069'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5096,\n       Status.INTERESTING: 0},\n      behaviors=102,\n      fingerprints=21041,\n      since_new_behavior=102,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=946182.9768181867,\n      timestamp=4.286843294809609e+307,\n      worker_uuid=UUID('763b3dfd-2c78-412c-831d-f5ede9699069'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 30441,\n       Status.INTERESTING: 0},\n      behaviors=31840,\n      fingerprints=30,\n      since_new_behavior=21589,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=999999.9999999999,\n      timestamp=1.5439456859551752e+307,\n      worker_uuid=UUID('763b3dfd-2c78-412c-831d-f5ede9699069'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 128843716,\n       Status.INTERESTING: 0},\n      behaviors=1_611_769_344,\n      fingerprints=21320,\n      since_new_behavior=12787,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=2.225073858507203e-309,\n      timestamp=4.831574190824374e+16,\n      worker_uuid=UUID('a682be8b-7d59-478e-9cbd-fe7ae335be57'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 11,\n       Status.INTERESTING: 0},\n      behaviors=2375,\n      fingerprints=15343,\n      since_new_behavior=6,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=8.473642605009412e-177,\n      timestamp=3.815326012959421e+306,\n      worker_uuid=UUID('a682be8b-7d59-478e-9cbd-fe7ae335be57'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5307,\n       Status.INTERESTING: 0},\n      behaviors=419266936,\n      fingerprints=255,\n      since_new_behavior=124_963_928_141_292_614_706_355_410_883_418_432_918,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=112008.41356152938,\n      timestamp=2.2648303397298704e+307,\n      worker_uuid=UUID('a682be8b-7d59-478e-9cbd-fe7ae335be57'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5882,\n       Status.INTERESTING: 0},\n      behaviors=83,\n      fingerprints=23234,\n      since_new_behavior=122,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=321346.6234794445,\n      timestamp=1.8276227446930108e+307,\n      worker_uuid=UUID('a682be8b-7d59-478e-9cbd-fe7ae335be57'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5937,\n       Status.INTERESTING: 0},\n      behaviors=53,\n      fingerprints=4593,\n      since_new_behavior=27610,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=369735.9624484771,\n      timestamp=9007199254740992.0,\n      worker_uuid=UUID('a682be8b-7d59-478e-9cbd-fe7ae335be57'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 24875,\n       Status.INTERESTING: 0},\n      behaviors=80,\n      fingerprints=125,\n      since_new_behavior=87,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=536592.6838177046,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('a682be8b-7d59-478e-9cbd-fe7ae335be57'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 25370,\n       Status.INTERESTING: 0},\n      behaviors=3034,\n      fingerprints=7640,\n      since_new_behavior=11059,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=854752.1139517478,\n      timestamp=2.1060159311550684e+16,\n      worker_uuid=UUID('a682be8b-7d59-478e-9cbd-fe7ae335be57'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_031_063_231_298_267_970,\n       Status.INTERESTING: 0},\n      behaviors=117,\n      fingerprints=4065,\n      since_new_behavior=523,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=0.0,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 26,\n       Status.INTERESTING: 0},\n      behaviors=31290,\n      fingerprints=28379,\n      since_new_behavior=90,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=2.00001,\n      timestamp=8.816633104417975e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 32,\n       Status.INTERESTING: 0},\n      behaviors=44,\n      fingerprints=12643,\n      since_new_behavior=2368627,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=10.0,\n      timestamp=5.795117298876439e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 69,\n       Status.INTERESTING: 0},\n      behaviors=9131,\n      fingerprints=29867,\n      since_new_behavior=2_164_839_101_037_575_930,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=111226.18951939825,\n      timestamp=6.701368322121634e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 80,\n       Status.INTERESTING: 0},\n      behaviors=13011,\n      fingerprints=68,\n      since_new_behavior=9338,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=131917.57140793305,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 97,\n       Status.INTERESTING: 0},\n      behaviors=32086,\n      fingerprints=12331,\n      since_new_behavior=7235,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=163521.78511715314,\n      timestamp=6.465771062861071e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 110,\n       Status.INTERESTING: 0},\n      behaviors=8843,\n      fingerprints=8736,\n      since_new_behavior=7827,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=196994.72901125776,\n      timestamp=2.27963394595436e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 119,\n       Status.INTERESTING: 0},\n      behaviors=19472,\n      fingerprints=126,\n      since_new_behavior=19,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=206314.214338919,\n      timestamp=9.354523494705321e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 3975,\n       Status.INTERESTING: 0},\n      behaviors=27841,\n      fingerprints=71,\n      since_new_behavior=9589,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=422798.76097963407,\n      timestamp=9.08287274955771e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8288,\n       Status.INTERESTING: 0},\n      behaviors=80,\n      fingerprints=16748,\n      since_new_behavior=29_144_032_712_703_659_036_668_249_823_047_005_587,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=435308.121816698,\n      timestamp=1.2459831148149675e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 17503,\n       Status.INTERESTING: 0},\n      behaviors=17709,\n      fingerprints=0,\n      since_new_behavior=1_641_494_380,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=520853.0748282724,\n      timestamp=5.283125456402705e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 18174,\n       Status.INTERESTING: 0},\n      behaviors=109,\n      fingerprints=14,\n      since_new_behavior=110,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=529019.0589689475,\n      timestamp=3.3312689181869184e+306,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22232,\n       Status.INTERESTING: 0},\n      behaviors=22907,\n      fingerprints=6175,\n      since_new_behavior=33,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=582222.9802560571,\n      timestamp=2.119295880067023e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22472,\n       Status.INTERESTING: 0},\n      behaviors=18618,\n      fingerprints=20722352,\n      since_new_behavior=113,\n      phase=Phase.REPLAY),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=878800.1476447029,\n      timestamp=4.40223885873364e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 23845,\n       Status.INTERESTING: 0},\n      behaviors=1_404_626_260,\n      fingerprints=29425,\n      since_new_behavior=5_373_459_031_003_769_670,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=902755.9057805107,\n      timestamp=7.034607547335649e+16,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 27059,\n       Status.INTERESTING: 0},\n      behaviors=8,\n      fingerprints=1866,\n      since_new_behavior=2_204_005_430_084_726_462,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=937529.9035122257,\n      timestamp=4.0404125861455897e+307,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 538334612,\n       Status.INTERESTING: 0},\n      behaviors=23183,\n      fingerprints=89,\n      since_new_behavior=14676,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=946518.6160985049,\n      timestamp=9.630084150784597e+306,\n      worker_uuid=UUID('0442e939-34ad-4a5c-a75d-a92495fcf449'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_908_246_249,\n       Status.INTERESTING: 0},\n      behaviors=18020,\n      fingerprints=4733,\n      since_new_behavior=8880,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=257029.60757982868,\n      timestamp=7.294105014416542e+305,\n      worker_uuid=UUID('cf0df11f-1414-4171-81d5-82c2ec841da2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 7813,\n       Status.INTERESTING: 0},\n      behaviors=63,\n      fingerprints=3_239_662_453_530_218_554,\n      since_new_behavior=59,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=651292.1582420318,\n      timestamp=3.5969498037470654e+225,\n      worker_uuid=UUID('cf0df11f-1414-4171-81d5-82c2ec841da2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 22795,\n       Status.INTERESTING: 0},\n      behaviors=18873,\n      fingerprints=524288,\n      since_new_behavior=8_747_875_026_169_215_611,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=685875.1458290721,\n      timestamp=2.961571071437525e+168,\n      worker_uuid=UUID('cf0df11f-1414-4171-81d5-82c2ec841da2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 8_828_980_488_055_585_771,\n       Status.INTERESTING: 0},\n      behaviors=93,\n      fingerprints=240,\n      since_new_behavior=21101,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=2.2793082852267817e-86,\n      timestamp=5.160772113090056e+223,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 61,\n       Status.INTERESTING: 0},\n      behaviors=2_774_781_274_319_379_738,\n      fingerprints=21394,\n      since_new_behavior=989590943,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=64261.987762868084,\n      timestamp=4.242972338471718e+307,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 86,\n       Status.INTERESTING: 0},\n      behaviors=4774,\n      fingerprints=15475,\n      since_new_behavior=13483,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=201720.7119869951,\n      timestamp=2.523084540950498e+307,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 93,\n       Status.INTERESTING: 0},\n      behaviors=26411,\n      fingerprints=29177,\n      since_new_behavior=9999,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=215625.16412552097,\n      timestamp=4.887124786978969e+307,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 104,\n       Status.INTERESTING: 0},\n      behaviors=29010,\n      fingerprints=39,\n      since_new_behavior=2_572_350_238_914_411_101,\n      phase=Phase.DISTILL),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=217216.8666504109,\n      timestamp=3.3328686223488286e+306,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 107,\n       Status.INTERESTING: 0},\n      behaviors=26299,\n      fingerprints=22117,\n      since_new_behavior=25135,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=236489.75215953178,\n      timestamp=4.078946071102313e+306,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 114,\n       Status.INTERESTING: 0},\n      behaviors=31,\n      fingerprints=3793,\n      since_new_behavior=26,\n      phase=Phase.SHRINK),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=287434.944487371,\n      timestamp=3.402823466e+38,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 5893,\n       Status.INTERESTING: 0},\n      behaviors=23187,\n      fingerprints=27,\n      since_new_behavior=72,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=459408.55143983016,\n      timestamp=6.442752972687106e+16,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 16179,\n       Status.INTERESTING: 0},\n      behaviors=32,\n      fingerprints=10983,\n      since_new_behavior=1_971_894_589_215_355_317,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=594995.6369832787,\n      timestamp=5.218330184597606e+307,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 28236,\n       Status.INTERESTING: 0},\n      behaviors=7603,\n      fingerprints=18494,\n      since_new_behavior=119,\n      phase=Phase.GENERATE),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=608102.565346972,\n      timestamp=3.9135019422214175e+307,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 1_636_035_063,\n       Status.INTERESTING: 0},\n      behaviors=422_480_337_413_394_354,\n      fingerprints=21245,\n      since_new_behavior=127,\n      phase=Phase.FAILED),\n     Report(database_key=b'database_key_3',\n      nodeid='nodeid_3',\n      elapsed_time=819038.2950675763,\n      timestamp=4.10672927613201e+16,\n      worker_uuid=UUID('c81e4f34-429c-40f8-a2cc-a0f5488133b2'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 72_262_853_164_928_131_355_172_191_615_154_386_461,\n       Status.INTERESTING: 0},\n      behaviors=3869,\n      fingerprints=9940,\n      since_new_behavior=30526,\n      phase=Phase.REPLAY)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0012689580325968564,
          "overall:gc": 0.0,
          "generate:reports": 0.045200376014690846
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287668.240445791,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 4.899996565654874e-05,
          "overall:gc": 0.0,
          "generate:reports": 0.0003951669787056744
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287660.888412375,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00012708298163488507,
          "overall:gc": 0.0,
          "generate:reports": 0.0015018329722806811
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287692.076594583,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_non_overlapping_reports(\n    reports=[Report(database_key=b'database_key_2',\n      nodeid='nodeid_2',\n      elapsed_time=827634.6021838259,\n      timestamp=4.929414195197923e+16,\n      worker_uuid=UUID('e008364f-306d-4b3d-bce8-0083255d4b38'),\n      status_counts={Status.OVERRUN: 0,\n       Status.INVALID: 0,\n       Status.VALID: 87,\n       Status.INTERESTING: 0},\n      behaviors=5579,\n      fingerprints=87,\n      since_new_behavior=122,\n      phase=Phase.REPLAY)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0001135829952545464,
          "overall:gc": 0.0,
          "generate:reports": 0.0017369170091114938
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_linearize.py::test_non_overlapping_reports",
        "run_start": 287693.285577958,
        "stability": null
      }
    ]
  },
  "tests/test_bayes.py::test_softmax": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[1.7976931348623157e+308, 0.5, 2.942784602892623e-296],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00584891700418666,
          "overall:gc": 0.0,
          "generate:values": 0.00022408406948670745
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287675.754413791,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[5086698717497851.0, 5086698717497851.0],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006596660241484642,
          "overall:gc": 0.00014870899030938745,
          "generate:values": 5.8500037994235754e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287678.083948416,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[0.0, 1.7976931348623157e+308, 1.7976931348623157e+308],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0010028750402852893,
          "overall:gc": 0.0,
          "generate:values": 7.400003960356116e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287676.725944,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00023358396720141172,
          "overall:gc": 0.0,
          "generate:values": 3.8209022022783756e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287676.032923541,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[0.0, 1.047986334316402e+308],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006458749994635582,
          "overall:gc": 0.0,
          "generate:values": 7.891695713624358e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287678.240992583,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[0.0],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0003361250273883343,
          "overall:gc": 0.0,
          "generate:values": 7.67079764045775e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287676.530524166,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[3.996671460399951e+163, 1.1192639777708352e+16],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006749169551767409,
          "overall:gc": 0.0,
          "generate:values": 9.349995525553823e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287675.783484875,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[5086698717497851.0, 5086698717497851.0, 6.103515625e-05],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.001148583018220961,
          "overall:gc": 0.0,
          "generate:values": 0.00012587499804794788
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287676.554123958,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[0.0, 1.7976931348623157e+308, 1.1429243602944818e+308],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0010082080261781812,
          "overall:gc": 0.0,
          "generate:values": 0.00011170899961143732
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287678.175555291,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_softmax(\n    values=[0.0,\n     1.7976931348623157e+308,\n     1.7976931348623157e+308,\n     7.083648435680091e+16],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0013447499950416386,
          "overall:gc": 0.0,
          "generate:values": 0.00012737500946968794
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_bayes.py::test_softmax",
        "run_start": 287678.247756458,
        "stability": null
      }
    ]
  },
  "tests/test_corpus.py::test_corpus_covering_nodes": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x17U\u00fe\u00b6\u00ba\\x12\u00cd\u00ae\\x83\u00b6D\\U0009fc5c_\u00b9',\n       run_start=-0.3333333333333333,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage=None,\n       timing={'\\x87\\U0004c80f\u00e1': 7.635547567510092e-299,\n        '>\\x84+f\u00c9Q\\x113': 1.8136590914969642e-82},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(3600, 413081)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-9440592290860596.0,\n          constraints={'min_value': -4.3710961151483384e+16,\n           'max_value': -4237311163908185.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 6.012218723478468e-224},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5143822120939595},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.09556857454739001},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='B\\r@\u00a6_`\u00e7\u00cf\u00a6',\n       run_start=-6.497086803521573e-238,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=117, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 0, 1), ('a', 1, 0)),\n                 (('c', 1, 2), ('a', 3, 3)),\n                 (('c', 2, 1), ('a', 0, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-3.815426948561277e+158,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={' \\U000afeeb\\U000488b8\\U000c610d\\U00040349': 6.737213358287618e+16,\n        '\\U00038529\\U000efd34H': -6.133513476570507e+16,\n        '\u00cb\\x14': 888687086209689.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-112, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'5',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x94',\n          constraints={'min_size': 0, 'max_size': 84},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xc6'{\\xfd\\x8c\\xc4\",\n          constraints={'min_size': 0, 'max_size': 40},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.639458553377853e+102,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1e-05},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb2\\xcb[',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=10.0,\n          constraints={'min_value': -3.102255997360038e+278,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 2.225073858507e-311},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"'\\xbf\\xd6\\x8e8\\xe6>`\\xf4\\x13\\xb5~\\xa6Z?\\x8f7\\xc9^F\\x96\\xf9\\xe4\\x9b\\x1d98;\\xa3\\x9d-\\xd5gH\\xf8]A\\n\\x05F\\xd1a\\x88\\x96\\xcd?\\x9d\\xd5\\x0c9'\\n\",\n          constraints={'min_size': 33, 'max_size': 133},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'^\\xe9JJX\\x8fz\\xc4\\xe3hM',\n          constraints={'min_size': 0, 'max_size': 58},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0003a4dc\ud875\udff4\ud875\udfcd\ud875\udf34\\U000397fd\ud875\udf77\ud875\udffc\ud875\udf75\ud875\udf81\ud875\udf6c\ud876\udc06\ud875\udf9a\ud884\uddb4\ud875\udf4c\ud875\udf2f\\U00049979\ud875\udff5\ud875\udfcb\ud875\udfcd\ud875\udf6f\ud875\udf27\ud875\udf3a\ud875\udfcb\\U0003ba43\ud876\udc00\ud875\udf3d\ud876\udc08\ud875\udfb5\ud875\udf32\ud875\udfe6\ud875\udfae\ud875\udf89\ud876\udc0a\ud876\udc11\ud875\udfe0\\U00041aa5\ud875\udfcc\ud875\udfa0\ud875\udf49\ud876\udc1a\ud875\udfb1\ud875\udfd7\ud875\udf48\ud876\udc01\\U00045e2e\ud875\udffe\ud875\udfec\ud875\udf28\ud875\udf6b\ud875\udfd4\ud875\udf69\ud876\udc19\\U00042ef8\\U00041053',\n          constraints={'intervals': IntervalSet([(186148, 307302)]),\n           'min_size': 28,\n           'max_size': 128},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6792524711498197},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb6\\xe6\\x91\\x0e\\xef=\\xd0\\xb7\\x83l$',\n          constraints={'min_size': 5, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-6.294265006271257e+16,\n          constraints={'min_value': -inf,\n           'max_value': 2.2635102569208794e-75,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.1462965539738235},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-932022827,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 2), ('c', 2, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000ef27e1\\x94Fa\\U000869ba\\x93',\n       run_start=4.031109182376848e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\u00d8\\U000e4a4b\\x9cZ': -6.577062994971674e+18,\n        '': 1.4889831783052319e+223},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11483, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=2.6435372296118676e+307,\n          constraints={'min_value': -1381869683829944.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6948505554632732},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.297933566560959e+16,\n          constraints={'min_value': -5.4491453587128984e+16,\n           'max_value': 1.2380875265044916e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5441940859478943},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.0016159579972736537,
          "overall:gc": 0.0,
          "generate:args": 0.02401233493583277
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287663.525516208,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=5.0434191338350584e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x93z\\U00047ef9l': -24419,\n        '': -3.493076056083167e+89,\n        '`': -2.225073858507203e-309,\n        '\\x8a': 1.0},\n       coverage=None,\n       timing={\"\\U000e62e6\\U000ab012X\u00fe\\x82'#\": 8.144282221767233e+161,\n        '\"\u00be': -7.983499168349632e+121,\n        '\\U000da77c\\U000530bb:\\U0007ac42q': 7.198753504914412e+16,\n        '\\x1e': 1.0239734313427368e-112,\n        '\\U000f03e1(o>\\U00078e78nS|\\x880\u00ab\\xa0\u00c95\\x13y': nan,\n        '>\u00a7\u00da?n\u00f5\u00d3': -2.00001,\n        'h\\x07\u00de': 5.492517375069088e+16,\n        '9\u00c5\u00d5': -9326394457337524.0,\n        '': 5.0335243188096664e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=81, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=6.694442486611064e+307,\n          constraints={'min_value': 3.084115068085956e+16,\n           'max_value': 6.694442486611065e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.12661969833917344},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=100,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 1,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000466ed\\U000466b1\\U0004664b\\U00058611\\U000466fe\\U000466ec\\U0004d129\\U0004666c\\U000466ea\\U0005b1c0\\U0004666c\\U00046656\\U000466f9\\U00046717\\U000466f8\\U000466ac\\U000466c0\\U0006f65f\\U0004bb3b\\U00046713\\U0004672f\\U000466db\\U00046715\\U0005fa95\\U00046712\\U00046745\\U000466e9\\U00046653\\U00062f2f\\U000466ec\\U00046649\\U000466e4\\U00046689\\U00046739\\U00046668\\U000466a1\\U000466a3\\U0004667c\\U0004673f\\U000466a8\\U0004671a',\n          constraints={'intervals': IntervalSet([(288327, 457732)]),\n           'min_size': 33,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6258426657383683},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 110},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.10634679131593242},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=19797,\n          constraints={'min_value': -13,\n           'max_value': None,\n           'shrink_towards': 9537,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 2.2250738585e-313},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.402823466e+38,\n          constraints={'min_value': -inf,\n           'max_value': -4.410224736300344e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.12472608229189411},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 3, 0), ('c', 2, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00c6',\n       run_start=-2.2110361127989244e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ae4': 3.2624996686227244e+16,\n        '\u00cd.\\U00081171': -1.5,\n        '\\x19;\u00bf\\x91\u00fc\"(': 0.005},\n       coverage=None,\n       timing={'': -1e-05,\n        '\\U0007d02b\u00efn\u00c6\\x96*f(\\U000aca3f\u00d2r\\U000e43be': 1e-05,\n        'bD\\U000e1c7e%\\U00102e36d*\\x0c': -1.600145539173029e-177,\n        '\u00b1\u00ee\u00f8\\x83n\u00a5\u00c8': 3.0749675695743576e+16,\n        'w': 0.005,\n        '\\U00053810': inf,\n        '\u00e7': -4.390190511003151e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-80, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xf32&\\xff\\xbdM\\xd7\\x14\\xbf/M\\x16Z\\xea\\xb8\\xec\\xf7\\xdd\\xa9x\\x8abc\\x80gQ\\xb8\\xf3m\\xfd\\x88\\xc5\\xa1\\n\\xa1A\\n\\xf4;\\x83\\xb4\\x03\\x92v\\r\\x16\\xbf:iT\\x1bi\\\\=\\xd7Op\\xa2',\n          constraints={'min_size': 44, 'max_size': 58},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.844381826077049},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.2987018396064561},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x0f\\xba\\xbd\\xe9\\xff\\xdf\\xd4\\xe4\\xcb\\xa8\\xf4',\n          constraints={'min_size': 1, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8355566066579383},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.2116541616694944e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6720234970406219},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=19,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 88,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('c', 0, 1)), (('b', 2, 3), ('a', 2, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x8e\u00ac%s',\n       run_start=-1.7713152294123669e+171,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'nil': 6_327_144_877_516_661_163,\n        '\u00b3i\u00cb`\u00a5p\\x96\u00fe\u00f9-\\U0004f5e9\\U0008f47f': 9007199254740992.0,\n        '\u00c9D\\x98\"\\U0008e21f_Z\u00b4': 7.825312064657136e+276,\n        '\u00a4X\u00eb': -6.010955659635766e-275,\n        '\u00f8\\xad': 3.8099063809066856e+16},\n       coverage=None,\n       timing={'error': -8.886452070951755e-203},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-22430, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-162,\n          constraints={'min_value': None,\n           'max_value': -71,\n           'shrink_towards': 12244,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0e52\u0e52\u0e35\u0e16\u0e55\u0ed2\u0e4a\\u0efb\u0e16\ud83d\ude30\u0e4a\u0e1d\\U0005d660\\u0ebe\u0e95\\u0eff\u0e2e\u0e18\\u0e67\\u0e60\u0f00\\U000418f1\\u0ea4\\u0eea\u0e2b\u0ed6\u0e16',\n          constraints={'intervals': IntervalSet([(3600, 416915)]),\n           'min_size': 27,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-6.437317694160085e+230,\n          constraints={'min_value': -2.563394371246731e+232,\n           'max_value': 9007199254740992.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.01},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf3\\x1f\\xd1\\x85\\xd7;\\xba\\xf7\\x03!\\xdf\\xdc\\xb2\\xc6}%\\xce\\xdc\\xbbo\\xae\\x04-\\xc4\\x95.b\\x97\\xccp\\xafV01i#\\xef\\x9f\\xd4\\x85\\xb1P\\xb4\\x80\\xf9S\\x1b\\xa3*1D\\xf5\\xf9\\x90 z\\x9a\\xb5\\xc7at]\\xa8\\xde\\xaa\\x17\\x08\\xe5\\x9e\\xf2\\xf76h<\\xa0\\xa3\\x93\\xe1\\x07\\xb6\\xa1\\xe8\\xc1\\x14\\xb1\\x1a\\x15O\\xec\\xc2D?\\xf25\\xa5\\xe7\\x0b\\xb7\\xbd\\xe4\\xd8\\x92\\x19\\xd4\\x12\\x955\\x7f\\x91(-\\xbf\\xb9\\xa7\\x19\\x99\\xc2\\xae+\\xb9|\\x0c\\x9c\\r\\xb1V\\xf2_\\x93',\n          constraints={'min_size': 30, 'max_size': 130},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8a\\xe6\\xb5\\xdc\\xf5k^]\\x88f_\\x06\\x8c\\xc2\\xd7\\xf3\\xfe8\\r+',\n          constraints={'min_size': 17, 'max_size': 117},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xde\\xa3',\n          constraints={'min_size': 2, 'max_size': 102},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000b6e5d\u2094\u20b7\\u209d\u20e4\\u20c4',\n          constraints={'intervals': IntervalSet(\n               [(8232, 52968),\n                (164151, 166429),\n                (310860, 318319),\n                (369459, 503578),\n                (532449, 586884),\n                (598949, 653965),\n                (674473, 692051),\n                (695980, 783661),\n                (837362, 910140),\n                (983251, 1034679),\n                (1054829, 1093657),\n                (1114110, 1114111)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.4973022892907604e+16,\n          constraints={'min_value': -1.616742151853921e-58,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.13119456200959803},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.354403248224513e+307,\n          constraints={'min_value': 1.9477099403500656e+16,\n           'max_value': 1.3165778790267198e+308,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.17784704817803568},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 1, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x99',\n       run_start=4.853868622180747e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00f5': 1.1317146860870633e-192,\n        \"\\\\'\\x14\\U0001abbb\u00b1\": 2211,\n        'CI': -10197,\n        'hypothesis': -27901,\n        '^\u00a5\\x86`m': -5.155225815168503e+16},\n       coverage=None,\n       timing={'\\x8e\\n\\x1f\\U000fe840': -1.1754943508222875e-38,\n        '': -0.0,\n        '\\U0008d9d8\\U000ef7a5\\r': 5.212153981283843e+16,\n        '\u00bf': -3353896235904363.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=7356, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6371957179073641},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-3017,\n          constraints={'min_value': None,\n           'max_value': 12163,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0008127d\\U000812b9\\U000922c9\\U00081287\\U00081241\\U000812cf\\U00081284\\U00081214\\U00081288\\U0008126e\\U00081208\\U00081254\\U000812af\\U0008120e\\U00081290\\U00081263\\U00081295\\U000812aa\\U000812c6\\U000812b2\\U00081202\\U0008129b\\U000812ca\\U000a4801\\U0009242e\\U00081265\\U0008124a\\U00094903\\U000811f9\\U0008125e\\U000a4fbb\\U0008125f\\U00081299\\U000823fe\\U000a5761\\U000812ad\\U000811fb\\U0008fc63',\n          constraints={'intervals': IntervalSet([(528864, 731293)]),\n           'min_size': 24,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.10060402293027207},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xcb\\xeb',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-4_359_135_830_884_017_665,\n          constraints={'min_value': None,\n           'max_value': -4_359_135_830_336_211_342,\n           'shrink_towards': 15085,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb2\\x85',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xfc',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xdf\\xf4u\\x14\\x05\\x07\\xa7\\n\\\\\\xaa,\\\\o\\xb7\\x1c\\x9a\\x1aQqs\\xedz(\\\\\\xf9B\\x89\\xb9\\x1a\\xaaPdG\\x84U\\x859+\\\\\\xeb\\x02s\\xc4\\xfa\\xeda\\xa5iY\\x98\\x1a\\xde\\xeb\\x94p\\xaf+\\x02j\\xc1\\xef\\xc6<\\xe2\\x9es\\xee\\xd4\\xac\\xfe\\t\\x9f*\\xc0\\xca\\x90\\xdc/\\xa3)\\xf5r/\\xa7\\x8e\\x19A\\xd3\\x0f\\xe6II\\x1c\\x11ym',\n          constraints={'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=26731,\n          constraints={'min_value': 6,\n           'max_value': None,\n           'shrink_towards': 120,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xe3\\x81-\\xa9\\x94\\xf1\\xf0j\\x99\\xb1\\x81}P8\\xf3\\xb8uk\\x18\\xa2\\x16.8S\\xbc\\xff\\xd6\\xf7\\xe4U\\xa3\\xc1\\xdd\\x98\\x1f\\x0c\\x849\\xb4\\xb0\\xf8=y\\xc5\\x91\\xcd\\xc0\\xb6\\x7f8\\xe1\\xddi\\xdbtM\\xd0\\xa4\\xb8\\xcd\\x99\\xd8S\\xfb\\x0c_\\xfb\\x97y \\x1e\\xdd\\x98\\x83$Pe\\\\_?\\xe6\\xf67\\xbe%\\x86\\x99\\xb2 \\x19\\xfbj\\x13Ns>\\x07\\xf0\\x95\\xf5KS4D`%<\\xf7\\x12\\xa2tk\\xab\\r\\xc7E\\xbfKn'gn\\x9eF\\xc1\\x9c(\\x92Q\\xdb\\x8bUqe\",\n          constraints={'min_size': 50, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-7848,\n          constraints={'min_value': None,\n           'max_value': -30,\n           'shrink_towards': -3742,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 0), ('a', 1, 1)),\n                 (('a', 3, 2), ('a', 0, 3)),\n                 (('b', 0, 3), ('b', 1, 2)),\n                 (('c', 1, 3), ('c', 2, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00af\ud852\ude12\u00b1\\U000ad6fe`8\\U000fa5883`\\U00103eb7\u00a4\\x94',\n       run_start=0.0001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'Msn': -112,\n        '': 2.8436617297990997e-157,\n        '\\U000b9180\\x1e\\x08\\U00074e1e': -55,\n        'exec': -7,\n        '\\x0e+\u00cd\\x0c;N\\x18\u00a6\u00cb\\x1e\\x08ES\\x84\\xad\\x84\\U00085429': -1.1791505598088475e+22,\n        '\\x00': -215832565,\n        '\\U0006c829': -4.499966345964661e+56,\n        '\u00e8\\x8f\u00baDz%\u00a6\\U00108422': 7.847515947870612e+267,\n        'z': -7.11429318213275e-143,\n        '\\U000543e7x\u00c4\u00fb\u00eb*\\x11\u00a1_': 4_218_470_815_286_721_713,\n        'Q\u00bf\u00c4': -2.7130849442834624e+16,\n        '\\U000a9963o`\\x1d': -2808,\n        '|b\\U0008eb45': 14824,\n        '\\x8b\u00d6\u00f0\u00a2~\u00cf': -592740887,\n        \"M\\x0b\u00c0\\x8a\\x94\\x97'\\x97\\U00059980{\\x8f\u00c2goz\u00cb\\x9ft\u00e3\\x11n\u00fd\\x0f\": -nan,\n        '\u00b2\\U00064747\uc3d5': -11,\n        '=H\u00dc\u00bcX\\U0005d107+\\U000533a0\\x9d\u00d7\\U000c3d6eE\\x07': 3971,\n        '\u00af\\x0c': 47,\n        'n^e': -6.820809097488197e+16},\n       coverage=None,\n       timing={'': 3.1304956400729134e+179,\n        'LPT1': 4.870403187100602e+16,\n        '\\x15\u00e9\\U000875ce': 1.6096453379516242e-130,\n        '\u00e2e\\U00044580\\x92\u00df;\u00fc': -4.615308887907715e+16,\n        '\u00e2Z\u00cc\ud881\ude02\\U00097d02': 1.1125369292536007e-308,\n        '\u00f7': 1.9308281808395284e+16,\n        '\u00bf\\U000c13df': -6.865544299012397e+16,\n        '\\U000671f3[\u00c7r\\U00054fd0': -6.496586226937826e+16,\n        'i\ud85a\udf09\\x04': -1.7663366694293902e+199,\n        '\u00de': 5e-324,\n        '\ud835\udc7b\ud835\udc89\ud835\udc86 \ud835\udc92\ud835\udc96\ud835\udc8a\ud835\udc84\ud835\udc8c \ud835\udc83\ud835\udc93\ud835\udc90\ud835\udc98\ud835\udc8f \ud835\udc87\ud835\udc90\ud835\udc99 \ud835\udc8b\ud835\udc96\ud835\udc8e\ud835\udc91\ud835\udc94 \ud835\udc90\ud835\udc97\ud835\udc86\ud835\udc93 \ud835\udc95\ud835\udc89\ud835\udc86 \ud835\udc8d\ud835\udc82\ud835\udc9b\ud835\udc9a \ud835\udc85\ud835\udc90\ud835\udc88': -4.368054050230087e+25,\n        'L\\x87\\x8dg\u00ec\\U000d8339\u00d1\u00bfY': 1.1754943508222875e-38,\n        '\\U0004102apv\\x86k\\x92\\U000f2d459': 0.5,\n        '\\U0005ae63\\x7fEt\\x8a\\x80}': 1.0,\n        '-\u00e9\u00a5\\x90I\\x85;4': 6.4451801540110744e+16,\n        'm\\x97': -3.2300548144655483e-253,\n        '\\x93\u00e7\u00edL\u00f1\u00cd\\x14\\U000f9a52\u00bf': -4.372870941352621e-260,\n        'd6:': -4.399102819097291e+16,\n        'HOMEDRIVE': -2750696044794265.0,\n        'NUM': 1.1127654812505372e+16,\n        '4^': 1.401298464324817e-45,\n        '\\x06^\\x18\\U00049b3bQ\u00e3\u00e1\\x87': -1.188363845290306e+16,\n        'numpy': -3.464952334658518e+16,\n        '\\x82\u00de': -2.2250738585072014e-308,\n        '\u00e2N\\x02\\x0e\u00e9@\u00e7\u00e1': -2.81070038083791e+16,\n        'm\\x8b\\x1c': -1.2287758925093904e+272,\n        '\\x1a\\x9aF\u00ea': 0.5,\n        '\\U00051b3b-': -1.882344741618281e+16,\n        '\\r': 2.2250738585072014e-308},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=25604, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x84^a/8\\x88\\xdd\\xdc\\x9b\\x9d\\x1d\\x1dX\\x96',\n          constraints={'min_size': 6, 'max_size': 38},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.9353096497394542},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=26762,\n          constraints={'min_value': 19060,\n           'max_value': 30438,\n           'shrink_towards': -11854,\n           'weights': {24461: 0.005762773855939946,\n            27502: 0.0019180095158858837,\n            29957: 0.002004714788312501,\n            26537: 0.0013160605649706841,\n            26424: 0.006014144364937503,\n            21726: 0.0014781503101401413,\n            30438: 0.0041036297378459615,\n            24976: 0.0005308148098384719,\n            28242: 0.005674448887546784,\n            22971: 0.004318928281574539,\n            23784: 0.002493823128516381,\n            27827: 3.007072182468752e-05,\n            23920: 0.0038734069277794802,\n            23748: 0.005981856368886144,\n            25122: 0.0018171731529650805,\n            23299: 0.0006014144364937504,\n            19150: 0.005972098384141146,\n            29757: 0.002557091657043343,\n            26837: 0.003007072182468752,\n            21242: 0.00021177731357660345,\n            28536: 0.0049911828710477845,\n            23112: 0.002527368420784388,\n            26762: 0.0043137753621272645}},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.6034095293425856e-285,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'': [-29840, 28225, -59, 16052, 95, 24950, 240],\n        'rootdir': [24384, 791613459],\n        'M\\x11\\U0007e99f\\U00083987\u00e5i': [],\n        'i\u00f6\u00c6.': [1269, -126],\n        '!l\\x04\u00cf\\x7f': [17334, 78, 2892, -7545, 278],\n        '\\U000c63db2': [],\n        '[\"\\U00066e2a\\U000b1bac>': [1_161_043_310, 34, -40],\n        '>\\U000d2108': [26755, 90, 18],\n        '\\x98\\U00033c5a5o\\x98\\x13\\x11\\U0005fc80\u00b8\u00c3\\x98\u00b8\u00f3\u00a7\u00f3R\ud804\udc377\\x8c\u00b5L': [-26561,\n         3541]},\n       timing={'\\x0e\u00cb': 0.01,\n        'X\\x7f': 8.279672297410804e-78,\n        '': 1.1923565143992137e+288,\n        '\u00e0\\U0010c62b\u00ecQ\u00fb@[>': 1.0255159435547702e-233,\n        '\u0396\u00fa\u00ef\u00da\u00c2\ud845\udcb3\u00ae\ud866\udcf6H\\U000e7914\u4ae7\\x18': -1.0458260438568628e-138},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-10327, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-71,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 3_110_100_664_157_159_132,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6690888246668557},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 1, 2), ('a', 0, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-7.588820252399552e-250,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00b82!\\x87\\U00080b78d': -22850,\n        '': -1371441138140279.0,\n        '\u00a7\\U0003e44fY\u00a3\\U00059d29\\x7f\u00fd\\x16\\U0008ca49;\u00a6\u00c8': -43,\n        '\u00eazTg\u00ff\\U00062ed4': -116,\n        '\u00dd\u00d6': -11707},\n       coverage={},\n       timing={'': 0.0,\n        '\\U0007ec73': 6.348097236158023e+16,\n        '\\x83\\x7f+6': 1.1754943508222875e-38,\n        '\\U000d94c5\\x04\u00a3?\\U000a225e': -4.416843888089922e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-21964, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=11268,\n          constraints={'min_value': -27,\n           'max_value': None,\n           'shrink_towards': -110,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.3138105247329e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7769113696573242},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=4.0769039504874504e+16,\n          constraints={'min_value': 2.973693331978783e-20,\n           'max_value': 5.757311117439585e+199,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.10864993497346978},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xc4',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-4207,\n          constraints={'min_value': None,\n           'max_value': 1921,\n           'shrink_towards': -123,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8eb\\x93\\x8e\\xd4\\x12\\xf9\\xee`W\\x99\\x14\\xf9V_\\x9aD\\x8e\\xd4\\xac\\xbdV|!\\x8b\\xcd\\xedJ5\\xc6\\xa6\\xa9t\\x17\\xf6\\x18\\x17\\xf8\\xb9\\x11\\xfc\\t\\x87\\x98\\x15\\xe6K\\xf0\\x1ec\\x8d',\n          constraints={'min_size': 50, 'max_size': 60},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 2, 3)),\n                 (('a', 0, 3), ('a', 0, 0)),\n                 (('b', 3, 2), ('c', 3, 0)),\n                 (('b', 3, 3), ('b', 2, 1)),\n                 (('c', 1, 2), ('a', 0, 2)),\n                 (('c', 2, 1), ('c', 0, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0003b732Z\u00cf\\x8e\\U000e5794',\n       run_start=-1.175494351e-38,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'j': -3.0071044284611628e+16},\n       coverage=None,\n       timing={'\\x1c\\xad': 3.676256456150372e+16,\n        '\u00fd\ud838\udc56\\x0b\\U0006cd6c\u00e4': 0.0,\n        '': 4.729547894651482e-68,\n        '\u00e2': 10.0,\n        '\u00b1/w': -8.092433038742876e-10,\n        '\\x95\\U00075924\u00a60\\x01\\x02': 1000.0,\n        '\\x12': 7.650524884440305e-154,\n        '\\U0007cadb_': -2.7849025537035978e-189,\n        '\\\\\\n\\x1aUm\\x9d\u00b5m\u00d3u\\x8e\u00ecu': 9.944392200306741e+63,\n        '\\x96\\x82[|\\U000f9a45C\u00c4': 5.1897914209418366e+154,\n        'bx': 2.7576521632103305e-113,\n        '\u00ffP\\x01': -5.489304862807253e+16,\n        '\u00ef': 3.402823466e+38,\n        '\\U00056f20\u00f8\u00f3\\U0006d5de\\U000e91b6\u00e1\\x9a\u00e6\\x04': -inf,\n        '\\x9e\\x9f\\x9a\u00a3\\x8b\u00fa2|\\x9130\u00ed\u00e9\u00df\\U00081104': -4.764295318595389e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=11773, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U0001c1c7\\U0001c1f6\\U0001c24d\\U000aae66\\U0001c295\\U0001c22e\\U0001c289\\U0001c2a6\\U0001c1fa\\U0001c246\\U0001c25c\\U0001c1bb',\n          constraints={'intervals': IntervalSet([(115114, 1001024)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 3, 1)),\n                 (('a', 0, 1), ('c', 2, 0)),\n                 (('a', 1, 1), ('a', 0, 1)),\n                 (('a', 2, 0), ('b', 2, 3)),\n                 (('a', 3, 1), ('a', 2, 1)),\n                 (('b', 1, 2), ('b', 3, 0)),\n                 (('b', 2, 0), ('a', 1, 0)),\n                 (('b', 2, 0), ('c', 2, 0)),\n                 (('b', 2, 2), ('a', 3, 2)),\n                 (('b', 2, 2), ('b', 1, 1)),\n                 (('b', 2, 2), ('b', 3, 1)),\n                 (('b', 3, 1), ('c', 1, 1)),\n                 (('b', 3, 2), ('b', 3, 3)),\n                 (('c', 1, 0), ('b', 1, 1)),\n                 (('c', 3, 0), ('a', 3, 3)),\n                 (('c', 3, 3), ('b', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x9a\u00a6\u00b3',\n       run_start=-6.194479883386941e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000a2338\u00f0{\\x02Z\\U0009cb53\u00c0\u00e9G': 17389},\n       coverage={'$': [-199,\n         6_601_638_351_142_610_916,\n         9448,\n         -27268,\n         112_793_886_267_525_093_355_056_616_955_349_262_339]},\n       timing={'\u00ba\u00d1\\x12^\ud86c\udda1\\U000d36ef': 1.192092896e-07,\n        '\ud847\ude3d\\x91\\x7f+\u00ca\\x98\u00d3\u00b1\\U000ee9fa\u00d6\\x1fv\u00fe\\U000d9c59': -1.7058782509477165e+45,\n        '\u00fb\u00f8\u00cd\\U000c6ea2': 1.747638089081259e+16,\n        '\\U00039322\\U0010ebd6\\xa0\u00ae\\x18\u00f6zg\\x14e\u00efJ\\U000c771d\u00ba\ud83e\udd12[m': 3.849863565687301e+16,\n        '\\U0007c365\u00b7\\x87\u00e7': -1.1125369292536007e-308,\n        '\\U000db472': -4.515233086409078e+16,\n        '\u00c6+\u00e7/\u00c8P\\x16\\U000d4014\\x7fX?U': 1000.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=5424, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u0168\u017b\u0143\u0147\u0105\\U000f10b9\u013f\u00df\u011b\u00b8\u0128\u00ff\u00f2\u0106\u0115\u00d0\u00a3\u00cc\u0154\\U000dc773\u0159\\x92\u00d9\\U000f9b1d\u0146\u0142\u0163',\n          constraints={'intervals': IntervalSet(\n               [(136, 3600),\n                (118902, 315452),\n                (317731, 532836),\n                (613019, 740756),\n                (858012, 1046101)],\n           ),\n           'min_size': 20,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.3037522963199561e+308,\n          constraints={'min_value': 4.6691679873901746e+139,\n           'max_value': 1.4883102739971393e+308,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9999999999999999},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.402823466e+38,\n          constraints={'min_value': 1.1464942572755656e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.41583613492744276},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=11191,\n          constraints={'min_value': -24,\n           'max_value': 13424,\n           'shrink_towards': 0,\n           'weights': {1842: 0.3350641922357174, 11191: 0.5156880490190325}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x19\\xfc\\r2\\xe8\\xc2|\\x94V<\\x19',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.6797187311099664e+308,\n          constraints={'min_value': 0.5,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5816105216983686},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.511533042904495e-115},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.593683119684591},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"g\\xcam\\xc6\\x04\\xe1\\x8e\\xd3-\\x8a7w\\xea\\xa7\\x84\\xf0\\xd3\\x88\\x96v\\x0c|\\xfb:\\xa8'S\\x12K\\xfbE\\x17\\x84\\x9d\\x19\\xecD\\x9b\\xf1\\xfa\\xec-\\xd1\\xcf\\x11\\x89\\x06\\xbaK7\\xa4.\\x1e\\x8b\\x8a/\\x00\\xbc\\xe14?\\x8b\\x156}\",\n          constraints={'min_size': 41, 'max_size': 141},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000d534f\\U000d5361\\U0010a998\\U000ef27a\\U000f96b0\\U000d811b\\U000d537c\\U000d5341\\U000eda66\\U000da4e2\\U000d53da\\U000d5411\\U000d537a\\U000d53ed\\U000d53ba\\U000d53b8\\U000e2bfa\\U00103e19\\U000f5e2f\\U000d53d1\\U000d53bb\\U000dea06\\U000d540a\\U000d53e6\\U000d53d2\\U00106514\\U000d53a9\\U000d5364\\U000d53c8\\U000d53e7\\U000d5353\\U000d53a2\\U000e7de2\\U000d542f\\U000d5400\\U000d53a5\\U000d53eb\\U000d53dd\\U000d538f\\U000d53e7\\U000d540c\\U000d53f3\\U000d5375\\U000f8f73\\U000d53cf\\U000d53ed\\U0010a6b7\\U000d5352\\U000d5385',\n          constraints={'intervals': IntervalSet([(873270, 1114111)]),\n           'min_size': 40,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('b', 2, 2)),\n                 (('a', 2, 0), ('a', 0, 1)),\n                 (('a', 3, 3), ('b', 3, 0)),\n                 (('a', 3, 3), ('c', 1, 1)),\n                 (('b', 2, 0), ('a', 1, 0)),\n                 (('b', 2, 3), ('b', 1, 3)),\n                 (('b', 3, 0), ('b', 1, 1)),\n                 (('b', 3, 0), ('c', 0, 3)),\n                 (('c', 0, 1), ('a', 0, 1)),\n                 (('c', 1, 3), ('c', 3, 3)),\n                 (('c', 3, 2), ('b', 0, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='True',\n       run_start=-6.7388285857102376e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 4.419443413244373e+57,\n        '\ud835\udc13\ud835\udc21\ud835\udc1e \ud835\udc2a\ud835\udc2e\ud835\udc22\ud835\udc1c\ud835\udc24 \ud835\udc1b\ud835\udc2b\ud835\udc28\ud835\udc30\ud835\udc27 \ud835\udc1f\ud835\udc28\ud835\udc31 \ud835\udc23\ud835\udc2e\ud835\udc26\ud835\udc29\ud835\udc2c \ud835\udc28\ud835\udc2f\ud835\udc1e\ud835\udc2b \ud835\udc2d\ud835\udc21\ud835\udc1e \ud835\udc25\ud835\udc1a\ud835\udc33\ud835\udc32 \ud835\udc1d\ud835\udc28\ud835\udc20': 26320.59697470079,\n        '\u00d4\u00d9S\u00f2\\U0003c35e\u00b1\\x80\\x0c\u00e2K\"\ud83c\udfad\\U00108ceck\u00c16P': -16062,\n        '\\x0c\\U00044ff2\\x00\\x8c\\U000af913\u00e1\\U000b49ffG\u00f8\\x97\\U000f1b51\\tL\u00a8\u00ba\\x81\\x13h6\u00f1\\x8b\\x8c\u00c4\\U000a997a\u00d6\\x07': 7.625745713594595e+24,\n        'u\u00e3\\x9e\\U0001674a\\U000c314f\u00c2': -1.5},\n       coverage=None,\n       timing={'': -9.70805603657114e+216},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=32416, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x17',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.005549624969717115,
          "overall:gc": 5.083403084427118e-05,
          "generate:args": 0.0873750441824086
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287679.184267958,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='5\\x9f&\\x10Zm\\x8c`\\x9a\\U000cd6b1F\u00e0',\n       run_start=-3.0364705003212527e-32,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage=None,\n       timing={';V': -2.7526159063241176e+16,\n        '(\\x1b\u5ab5`\u00f3': -3.777959388256832e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'>2\\x05|\\x08bhSQ\\xa36y\\x17/\\x7f?:G',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-4207,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -5.483817110023986e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.225073858507e-311},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('c', 0, 2)), (('c', 1, 1), ('b', 3, 3))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0005947079625912011,
          "overall:gc": 0.0,
          "generate:args": 0.00856616796227172
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287687.421721916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U00082f58,',\n       run_start=-1.1125369292536007e-308,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x11\\U000b2990': 1_786_083_112_277_233_573,\n        '\\U000a00cd\ud863\udca70\\x87': -27},\n       coverage=None,\n       timing={'\u00a6m\u00fd': 1.4906725594974484e+16,\n        '\u00f2k\u00ba\\U0002ef9a\\U000b5a13\\x98': 5.2088360867318745e+28,\n        'G\\U0006fc1f\\x8b\u00cd': 2884891969969179.0,\n        '\\U000be3e3\u00deY\u00c7>S(\\U0008d5a8\\x1d\u00ea\u00c7\u00a9\\x99\u00a7\u00da(\\x88\\U000720da\\x8b': -nan,\n        '\u00c8GN\u00f8\u00d8\\x84': -1.257853104651793e+114,\n        'z\\x10\\U0006dfd8': -9047480729889496.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=3.9301368080690255e+44,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.8636589769250467},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 2, 0), ('b', 3, 3)), (('c', 3, 3), ('c', 1, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00d4\\x16\u00f9',\n       run_start=6.166337284281407e-171,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 33,\n        '\u00cd\u00e0\u00c0\\U00057a3f \\x94': 13288,\n        'M\\U0007bf5b\\x85v=\\U0005cd37\\x1e': -4.073352248116525e-231,\n        'Infinity': -4988,\n        'I\u00b3Y\\x90\\x9bq1\\x02\u00b9\u00e0': -8974,\n        '\\U000e447e\\U000a46ab\u00e7%\"\\U0007d517\\U0008133b\u00e4\\U000eed8f\u00fc\u00c5lm`\\x13\\U001016a5\u00a1\\x8e\\x01%\u00cew\u00f8': 6.6940757477849656e+16,\n        '1': -1.9506246211763422e-305},\n       coverage=None,\n       timing={'\u00a4\u00d3\\x1b': 5345201558298149.0,\n        'iNY3': -2.944427702734631e-44,\n        '\\x83\u00b2\u00cf^\\x191O\\x89@\u00e4\\U0010b2c6cS\\xad\\x85\\x19\u00f1\u00f8\\x02\u00f6\u00db\\x91': 7364003627388623.0,\n        '\u00ce\\rtz': 2.380668204019458e+81,\n        '\\U00094a7e\\x8d\u00b8\\x18\u00b8\\x12': 6965170108942932.0,\n        '\ud83c\uddfa\ud83c\uddf8': -1.175494351e-38,\n        '\\U000e04e3': 3.201651665251373e+16,\n        '\\U0006d02dpf\u00ea\u00d1\\x8f5': -5.377853170513625e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-105, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('c', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x17\\U000dee5e',\n       run_start=1.1754943508222875e-38,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e5z6\\xad\u00a2\\U0001eff2}': -9765151569853944.0,\n        '\ud85c\udda9\u00b4': -104,\n        '\u00b8\\x9e': -9.151866821936255e+112,\n        '\\ueb76': 28839,\n        'r\u00c7\\x98\u00b8': 1_078_137_964,\n        '\\x05': -28850,\n        'monkeypatch': 28187,\n        'F\u00b23': -45},\n       coverage=None,\n       timing={'\u00b6_M\\U0003526d\u00ff\\x89\u00bf\u00f3\\U00072240\\x12\\U0001a68f\\U00064033\u00e7Gx\u00aa\\U0007632f\\U00082375JR': -3.547290326833845e+16,\n        '\u00c5\u00a1\u00e3\u00cb\u00d0\\x84\u00f1\\x17y\u00be\\U0008b15bQ\\x10p\u00b4\\U000f3b8b<.\u00aa\\U000e4047\ud807\udcb4\\U000ec59b\u00a3E': -2.620994464943455e+57},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-22116, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-6.887153494778601e+37,\n          constraints={'min_value': -inf,\n           'max_value': -7.159311846622287e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.4116152114360142},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-7_090_056_426_962_408_684,\n          constraints={'min_value': None,\n           'max_value': 103_904_152_565_792_370_140_787_538_830_634_054_947,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u02ef\u022f\u0202\u0280\u0215\u025c\\U00036832\u02ae\\U00072867\\U000fce00\u0261\\U0006929f\u0200\u0278\u0265\u02c2\u02c1\u0217\\U0005c966\u02b8\ud77e\u029f\u0284\u02a5\u02d8\u021d\u02d5\u02ca\u0270\u02dd\u02eb\u025e\u02d3\u0229\\U0007b477\u4f55\u02d3\u02ef',\n          constraints={'intervals': IntervalSet(\n               [(512, 58838),\n                (172800, 284362),\n                (354789, 433282),\n                (439695, 528703),\n                (989310, 1042942)],\n           ),\n           'min_size': 37,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=945,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -1_264_862_817,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('c', 2, 3)),\n                 (('b', 1, 2), ('b', 3, 3)),\n                 (('c', 0, 0), ('b', 2, 3)),\n                 (('c', 2, 1), ('a', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00fc\u00f7\\x0cQ\u00a1',\n       run_start=1e-12,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00cf\\U00048b14\\r9\\U00108e35\\U0007685bq\\U0007d2de\\x8a\u00a2': 10.0,\n        '\\x88\\x13-': -4.766476228183083e+16,\n        '\\x85\u00c6\u00e9': 9.661330905534627e-207,\n        '\\x7f\\r\u00e3': 156_817_351_824_510_085_029_198_604_271_344_187_687,\n        '\\x85!': 1.0004005776607336e+16},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=136, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u01cb\u0175\u010d\u018f\u01e5\u0123\u01ef\u012a\u01dc\u01fa\u0130\u01a2\u12d4\u01a5\uf95e\ud802\udde7\u017d\u0127\u013c\u0140\u01d8\u0112\u0113\u0185\ufc75\u01da\u017c\u01c7\u0110\u01df\u0130\u0131\u0194\u778a\u0173\u01be\u0182\u015d\u014a\u0116\u018e\u01d5\u0fd4\u014f\u013a\u0116\u01e3\u1dc4\u0149\u3a36\u763b\u9569\u449d\u0186\u012b\u01a1\u55e4\u018e\u0182\u01d4',\n          constraints={'intervals': IntervalSet([(267, 71339)]),\n           'min_size': 42,\n           'max_size': 142},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00cb\\U000d6d8f\\x15\u00fb\\x15\\U000a9134k\\x17\\x16\\x89\u00ce\u00e1\u00b7',\n       run_start=-5.5451593511865597e+191,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -3058,\n        '\\x8c\u00e2\\x05': -16578,\n        '\\x1f': -3.8848372369915464e+16,\n        '\u00c3\u00cc\u00be': 31248,\n        'v\u00c4\\U00034119\\U000e0e21O\\n\\x1a\\U0008edd86\u00d6': -6.108188986622113e+16,\n        'V*t\u00ba\u00fb\\x8b\u00cf\u00ab\u00f8\u00a1': -2.225073858507e-311,\n        '\\x9b': 2.122850841078903e+16,\n        'E3Z\u00ff\\U0005e68cV\u00d4\u2cff\u00de\u00d4\\U00102ceb\\U0003b138\u00b3(\u00ab\u00d86\\n$': -6.057274676631728e+16,\n        '\u00a6': -3.694421049213706e+16,\n        '\\x83\u00c2': 29075},\n       coverage=None,\n       timing={'\\x0el.h`': 1.4342268034848472e-80, '': -4.170463172225421e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=31286, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.03446766525798984},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.16771914168938287},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=31701,\n          constraints={'min_value': 31633,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b vV\\xd6~\\xa7\\x06\\xdc&\\xb5\\xe7\\x92\\xce\\xbf`\\xd4\\xdc\\x88\\xf7\\xc4hB\\x0e\\xee\\xc5',\n          constraints={'min_size': 14, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=60077,\n          constraints={'min_value': 28361,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=19415,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 11244,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6282445389711045},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x86\\xa1\\xad%\\x1euN\\\\\\xc73\\xc2*\\xc1\\xb6\\xfd\\xa4 \\xa7\\r\\xdd\\xa9\\xc6f\\xc5\\xd8\\x1f\\x98\\xec\\x19\\xf0\\x88k`K\\xdd\\xc9\\xc4*\\xb8\\x19\\x87\\xd7\\x1d\\xa23\\xf6Q\\x85',\n          constraints={'min_size': 28, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8343440248855187},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.519317220100541},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=100,\n          constraints={'min_value': -12748,\n           'max_value': None,\n           'shrink_towards': -23846,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 1, 3)),\n                 (('b', 0, 2), ('c', 1, 0)),\n                 (('c', 0, 1), ('a', 0, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='7\\U0009ff15\u00e6*\\x90\u00f0J',\n       run_start=2.965948954587335e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 16601,\n        '\u00d2\\n]\u00fd': -22,\n        'l': -5.759559997487425e+207,\n        'lk\\U00056be1\u00c2w\u00ee\u00a9\u00f2h\\x99aO': 3.963869414464331e+16,\n        '<\\U000c8d15\u00b0w\\U000624b8\\U0009281a': 2.94941834327708e+16,\n        'h\\U00086dbe\\x01\\xad': 2.1362772261306114e+215,\n        '\u00d8': -5749282523217417.0,\n        'M\\U0010d9ca3m \u00f0': 97,\n        '\\x00\\U000ae9a0g\\x81\\U000f37db\ud84c\udcb6': -28962,\n        '\\U000c399f': -1.6850941995468775e-125,\n        '\u00e5\\U00065dec\\x87\u00ae\u00c4\\U0003f5cf\u00ec/\\U00080364': 87},\n       coverage={'\u00b5\\U00053e83\u00c2': [-28792, 15571],\n        '\\x99Z\u00e9\\U000892c9\\U0010b83a\u00dd%f': [91,\n         49,\n         -165_464_566_737_089_339_299_926_504_731_912_318_472,\n         -25987,\n         -21584,\n         23210,\n         65535,\n         -683],\n        'B/c\u00b5': [-32107,\n         -162_092_821_512_069_578_066_744_378_097_266_420_074,\n         6,\n         31,\n         -1_699_860_241,\n         -47,\n         22680,\n         20458,\n         13355],\n        '\u06cb\\U000ebce8\\x1f\\x00': [625890072, 30018, -15209, 894025524]},\n       timing={'\u00df\u00a8\\x88\\x8d\\U0008becd': -2.8954450487456277e-70,\n        '\u00d9\\U0005c28d%*': 2.755110549567361e+16,\n        '': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=14280, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-1435,\n          constraints={'min_value': -16077,\n           'max_value': 38,\n           'shrink_towards': -86,\n           'weights': {-2915: 0.0011627291801375153,\n            -1165: 0.026978340225724946,\n            -889: 0.022011254261925774,\n            -5382: 0.017286007972885195}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\"\u00f9\u00c7|\\x10*\u00fb\u00a7\\U00041131\\x99',\n          constraints={'intervals': IntervalSet(\n               [(0, 53088), (260483, 605116)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='J\u00c1\\x12\\U0010b3ae\u00c8\u00a4]\u00cdC\\U000be160MQ\\x9e\u00c9@',\n       run_start=-9505203175893392.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ddo\\U0001cd3a?\\U000735c0\u00e2\\U000828ab\\x1d\u00ff5\\U000724a1\u00a4\\x1c\u00fe\u00fa\u00c6=\\x86\\x8a\\U00070568r\u00a4\\x01E\\U0003a345\u00b0M\\\\\u00d9': 2276,\n        '\\x04K': -4.7859182013218504e+16},\n       coverage={'\\x1c&\\U000e8e0c\\U000e69c5\ud883\ude0a\\U0006a620kS\u00b4\\U00042e69\\x16\u00a2': [43,\n         3181,\n         -74],\n        '\u00f8': [22345, -31742, 29878, 2157, 18],\n        '\\U0003d27d\u00b8\\x8b\\U000660eb}!]\u00edIr\u00a9\\U000c1ec3\u00ff\u00d0\\x86P\u00b71\\U000f1797\u00f0\\x01\u00b6\\U0001a7b1@': [32660,\n         59,\n         -2_144_720_429_111_776_261,\n         -29454]},\n       timing={'urllib.error': 4.441928223992969e+16,\n        '\\x8cL\\x11\\x02': -3.579910068104707e+33},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-16, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(167179, 172800),\n                (198630, 231191),\n                (253145, 277181),\n                (299202, 325260),\n                (448208, 466333),\n                (524597, 955825)],\n           ),\n           'min_size': 0,\n           'max_size': 53},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8523,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-5711,\n          constraints={'min_value': None,\n           'max_value': -82,\n           'shrink_towards': 6434,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.465549464648801e+307,\n          constraints={'min_value': 3.7282307598381365e+263,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.2250738585e-313},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'D\\xcd+r\\xf8\\xc3',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('c', 2, 0)),\n                 (('a', 1, 1), ('c', 3, 1)),\n                 (('a', 2, 0), ('a', 2, 3)),\n                 (('b', 0, 1), ('c', 3, 0)),\n                 (('b', 0, 3), ('c', 2, 3)),\n                 (('b', 1, 2), ('b', 0, 2)),\n                 (('b', 3, 1), ('b', 3, 3)),\n                 (('c', 2, 1), ('a', 2, 0)),\n                 (('c', 3, 2), ('c', 2, 3))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from TupleStrategy((TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))), TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))))).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.0021567500079981983,
          "overall:gc": 0.0,
          "generate:args": 0.04436771298060194
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287669.3747065,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287689.791517708,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x9a\\U000f74b0K\u00a1M\\x1f\\x11\\x91\\U00109ae4\\x00\u00f9',\n       run_start=0.5081124242163241,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage=None,\n       timing={'': 1.2417841924913388e+16,\n        '\u00b6>\\U0010483d\\x99\\U000a9b5c': -2.18230738836602e+90,\n        'd\\U00079d71\\x12\u00bb\\x1d\\U000d78f0\\x9ffj\\U00087f6b\u00e7\\x82\u00f1\\U00065bf3\u00de\u00d5t\\U000edfe9\\x86\\U000e2aeb': -2.0709347093353924e+16,\n        'R\u00ab': 2.5267369187417307e+94},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\x04\\U00105bf8\u00cd\u00cc\\x93\\x0f[\u00dd\u00aan\u00f7/\\x05\\U00013804M\\U000be9a9[\\xad\\U000aac90\u00c1\\x03C\\x06\\U000da06d\\U00097129\u00a2\\x0c',\n          constraints={'intervals': IntervalSet(\n               [(0, 219786), (587005, 723409), (727739, 1114111)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x08V\\xe5\\xe7\\xf9\\xfe\\x7f\\x0fn\\xe6L}zJ\\xaf\\xdb]b\\xe7\\xed\\r\\x98'\\xa9E\\xf2M\\xb0s*/Hq\\xc2\",\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u9989\u997f\u9976\u98cd\u9908\u98b9\ud807\udf48\u9928\u990a\u991a\u98da\u98ba\u98fe\u994a\u98be\u98e6\u99b0\u98cc\u9940\u99a8\u9963\u98b6\u98c6\u98f1\u98b7\\U0001ab55\u98b3\u98db\u999d\u98f2\u9988\ud81e\udd7f\u98fc\u98e4\ud80d\udc1e\u9936\u994a\u999e\\U00014819\u9961\u998e\u98ef\u9947\u992f\u98d6\u9939\u9965\u98ef\\U00014b4e\u99a1\u98bc\u99ad\u98e3\u98ca',\n          constraints={'intervals': IntervalSet([(39090, 193532)]),\n           'min_size': 43,\n           'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'3>\\xec\\xda/\\x99\\x97\\x1a\\xddG\\xca\\xe0\\x1a\\xdf\\x01\\x04d4WK\\x9c\\xe1\\xc0\\n\\xb9\\\\\\x8d\\x93u|7f\\x84k\\n(d\\xabg{',\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5616803017953412},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_377_820_784,\n          constraints={'min_value': None,\n           'max_value': 0,\n           'shrink_towards': -3_127_365_757_811_660_317,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=129,\n          constraints={'min_value': 2,\n           'max_value': None,\n           'shrink_towards': 29603,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 0, 1)), (('a', 2, 3), ('c', 0, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00cc\u00fa~\u00ed\u00cf~9',\n       run_start=-2.9151819481798628e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'cachedir: ': 7},\n       coverage={'j\u00d8\u00fa\\x1c\\x9b': [-512], '\ud820\udfef\u00f4\\x0c\\U000ed6327B+': [-23337, 0]},\n       timing={'': 0.1,\n        '\\x8d^\\x7f': -2.7190245715088808e+141,\n        '\u80b9': -2.1200071209132748e+16,\n        '\\x8f\\xa0': 1.8616185412111408e+59},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=22652, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.0010270409984514117,
          "overall:gc": 0.0,
          "generate:args": 0.013262417167425156
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287664.6787225,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00e6\u0153\u00c6\u0152\ufb00\u02a4\u02a8\u00df(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b)',\n       run_start=5.710008313951299e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -6.795581058703873e+16,\n        '\u00d40k\u00fe!o\u00d0\u00d8\u00cdAB\u00e0\u00f5\ud801\udd9e)\\x0c': 3.402823466e+38,\n        '\\U0009651d\u00f8': 0.702540533879951,\n        '^\u00c3\\U000a0cb6\u00c0\\U0008a2a2\\x16\u00d41\u00af\u00eb': 1},\n       coverage={},\n       timing={'\u00e6\u0153\u00c6\u0152\ufb00\u02a4\u02a8\u00df(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b)': 9007199254740992.0,\n        '\\U000eac13W\u00d4\\U0004a7db': 91197951.48953803,\n        '^': -6.69498322741405e+16,\n        '\\U000edfc1': -171103726.3462285,\n        '\u00d2': 3.650992344835375e+188,\n        '\u00d0\\U0010d964': -6.874276429265363e-56,\n        \"`\\x83\\x9e\\U0003d115\\U000fc49e\u00fe\\x97l\\x18p\u00f5'l0\u00ed\\x95\\x0f\u00fa\u00f5\ud833\udf36al\u00f9\u00fb\u00efo\": -1.6147642198328161e-152,\n        '': 0.5,\n        '-Infinity': 3.5017336490840865e-242,\n        'm\u00a4': -5.087100285032972e-158,\n        '`H5~\\U000c6604\\U001016b0': 4.649833470224851e+16,\n        '\\x00\u00ee': 6.173775655377922e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=31449, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 0, 0)),\n                 (('a', 3, 1), ('a', 3, 1)),\n                 (('b', 0, 0), ('a', 1, 0)),\n                 (('b', 0, 1), ('c', 1, 0)),\n                 (('b', 1, 3), ('b', 3, 1)),\n                 (('b', 2, 0), ('b', 3, 3)),\n                 (('b', 2, 2), ('a', 3, 3)),\n                 (('b', 3, 2), ('b', 0, 3)),\n                 (('b', 3, 2), ('c', 1, 0)),\n                 (('c', 3, 3), ('a', 0, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0006282079848460853,
          "overall:gc": 0.0,
          "generate:args": 0.008432915026787668
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287694.297718708,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\r\\U0009879dQ\\x9d[r\\rX\\U00035c9e\\x1d\\x1d\\x13\u00e4\\U0009d7bdH\u00d3\u00a3\u00d1,',\n       run_start=-1.1379697223237174e+110,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'YR': [61_585_092_396_776_387_832_608_552_436_392_391_112,\n         -43_922_170_778_449_425_678_416_064_806_484_839_470,\n         -8,\n         30,\n         2020,\n         1_078_508_247,\n         -29,\n         18],\n        '': [53_950_645_509_385_653_176_234_470_446_392_654_637,\n         -4_915_598_436_044_810_297,\n         -26990],\n        '\\xa0\u00be\u00d6': []},\n       timing={'': 1.7976931348623157e+308,\n        '\\U0006d282': -7.877336829446246e+215,\n        '\\x8b\u00fb': -4.634239787356845e+16,\n        '\\U0010d87dj\\x86\u00af\\x06\\U00099cdb\u00e0\\U000973ef\\U00107147\u00b7': 1.2599521776947481e+126},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(0, 79043),\n                (138082, 156050),\n                (164011, 176907),\n                (187910, 266054),\n                (288555, 302681),\n                (317210, 359635),\n                (426042, 433788),\n                (483719, 725908),\n                (777442, 830776),\n                (869717, 940349),\n                (992213, 1002308)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.3333333333333333},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2739186692734475},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('b', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00aa',\n       run_start=1.3227304983647274e+44,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={\"\u00b4'U\\U00106e9a\\U000751b0\\x96L\\U000b5a8d\\x7f\\x1b\u00b6\": -5.6997047953661145e+125,\n        '\u00f8\\U0009b870': 1.6767665900254244e+16,\n        '': 1.2319398736459086e+16,\n        '\\U0004d1a7\\x7f\\x85': 3.570529592082331e+63,\n        '#\u00d8\\x9a3\ud851\uded4\u00bb\u00a2\\U000f976b\\x92\u00e4': -4.505771227930784e+16,\n        '\\x00=7q*^': 4.522731784304871e+16,\n        'Default value for ': -1.4428389196279281e+72},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=511590306, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x9d',\n          constraints={'min_size': 1, 'max_size': 101},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.12908942795855152},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('a', 1, 2)),\n                 (('b', 2, 0), ('c', 1, 0)),\n                 (('c', 0, 3), ('c', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00a9\u00c5',\n       run_start=-4.804368101987492e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'D': 3.4741790618419564e-134,\n        '': -2.225073858507e-311,\n        'w\ud888\udcad=C': -7629,\n        '\\U000c1c70d\\x11\\x94\\x8d\\U00057635': -2.2250738585e-313,\n        'pytest_collect_file': -246600440866.20697},\n       coverage=None,\n       timing={'\\r\u00fc_:': -0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-12103, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x19\\xc0V~Q\\xb3\\x95\\x04M\\xc2\\xa1\\xea\\xc6\\x90\\x98\\x13b\\xf5=9\\xd75\\x80(-\\x82^\\x02\\xc9\\xa6\\xd0\\x80h \\xf7\\xc8\\xe2\\xc3\\x0b\\xe8\\x9e\\x1b',\n          constraints={'min_size': 33, 'max_size': 133},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'd\\xd8\\xdf\\x8e\\xa8E-\\x05\\x07/,j\\xe0\\x0cz&\\xabM\\xa9\\x9e\\x01q\\x96\\x82',\n          constraints={'min_size': 0, 'max_size': 95},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u2175\u21cf\u2154\u2145\u21a2\\U000a279a\u21c7\u2184\u2164\\U0004d498\u21ed\u2187\u2208\u21dc\\U000a29bd\u2178\\U000537f2\\U00100868\u217e\\U00013a6e\u2195\u21e2\\U00091a55\u2136\u21b0\u21c9\u21cb\u21d5\u21e9\u214f\u21fa\u21fb\u2218\u219e\\U000a61eb\u2137\u2159\\u218c\u218a\u21d2\\U0002f776\u2158\u21e3\\U000a6678\u2210\\U0007466c\u2134',\n          constraints={'intervals': IntervalSet(\n               [(8476, 15058),\n                (73119, 99667),\n                (167514, 353137),\n                (378053, 386404),\n                (470202, 494458),\n                (557244, 638893),\n                (658781, 708124),\n                (873914, 874967),\n                (904514, 962427),\n                (1045369, 1054821)],\n           ),\n           'min_size': 35,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-611,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8f',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.960464477539063e-08},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'v\\xd1\\x1b\\x16',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='@V\u00b9X\\U0009910c+/\\U000d3a79\u00c2\\x0f',\n       run_start=-2.8505738758391257e-210,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U0010870b\\x1da\\x1d,\u00b3\\U000f3259q\u00ea\\U000a0d80\ud834\udd48`\\x7f': 1042,\n        '\\U0005c56e\\U000d4446-': 2391,\n        '\u00aa\\U000b72ee': -31700,\n        '\u00fa!\u00b2\u00e1\\x85|\u00b9\\U000e9ebew!\\U00063399\\xa0': 15401,\n        'J\\U000a1c69\\x05%ZA\\x1c!': -8.221341244295432e+148,\n        '': -1.2415545825790024e+16,\n        '\\xad\\U0008923c\\x08\\U000568c0': -13405,\n        '\u00a4o\u00d8': 4.0963609018266547e-113,\n        '\u00f1.': 2.2250738585e-313,\n        'M\\U000ed143\\x03vH\u00d9\u33c3\u00d4\u00f3': 1.1472453029444578e-170,\n        ' KR\\x14\\U00048249': 4.552873982368112e-169},\n       coverage=None,\n       timing={'\u00b0': -1173081399365560.0,\n        '\\U0004f41c&\\x1e\u00a6<\\x16\u00a3]\\x1c\\x17\u00c4': 5835661662770380.0,\n        'setup_method': 2.497035351988161e+202,\n        '\u00e2\u00aa\\x86\u00e8\u00e9\u00ef\u00b8': -6250552463711860.0,\n        '\\x92\\x19\u00b6\\x19&y': -5.335705172633829e-173},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-5679, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('b', 0, 1)), (('a', 1, 0), ('c', 1, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='N\\r+a\\U00065a45S\\U000b7c5a',\n       run_start=-3.3733268777655014e-07,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\\\j': -30},\n       coverage=None,\n       timing={'\\x95\\U0005f515\\x04\\x80K': 6.6785331273844104e+16,\n        '\u00b0\\U00048591\\x1b\\x0f\u00f9\\U00098150\u00e8\\xa0\u00ea': -8.439801912614605e-153,\n        '\u00ca.\\x15\u00f3': 2.5839609246778673e+199},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=12596, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.07387261619807962},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('a', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00e1\\x81\u00c9Y(\\x9b',\n       run_start=-3.340051934035527e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00cc\\U000a7f7e\u00bcC\\x8f\\x93\u00cd': 5.642654701939739e+25,\n        'handler': 18885,\n        'a': -1.5137431979929587e-239,\n        '\u00eb\u00d9': -32596,\n        '\u00aa\u00f7\\x08': 6854,\n        \"\\x1d\u00d6\u00d1\\U000cfe5a\\x86\\x02'\\x98\u00df\\x05\u00dd\": -4262,\n        '': 102_050_856_268_467_714,\n        '\u00ab\u00d2\\x05\ud882\udd17\\U000be82e\u00c4': 65535,\n        '\\U0007971fb\u00d0&-\\x17\u00ce\u00a1': -12325,\n        '\\U000cebd8Z\u00d1': 13098},\n       coverage={'\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': [-30857],\n        '\\U0005d4ed\u00a8BN\\x85\\U0010d83c': [-18095, 14483, 0],\n        '\\x7f\ud878\ude93\u00a9\u00a2': [],\n        '\u00f2\\x88W\\U000ead18\\x8b\\x1e\u00a3\\U00105a2f\u00ee': [123, 160],\n        '\\x8a\\x81\\x91\\U000aa294\u00d1]\\x8a\u00e1\ud86b\udeee\u00e5\u00aa': [29192],\n        ':': [116, 1696, 2_184_721_891_242_043_692, -20830],\n        ',./;\\'[]\\\\-=<>?:\"{}|_+!@#$%^&*()`~': [-26328,\n         127,\n         32747,\n         -10782,\n         -238,\n         -13389,\n         31,\n         -14120,\n         -4271,\n         -5_415_191_385_345_349_306,\n         32576,\n         -4_037_922_254_779_772_727,\n         56,\n         121,\n         24382,\n         -25815,\n         123,\n         12063,\n         -69,\n         8288,\n         15436,\n         1_710_260_819,\n         -1_526_153_881_285_703_390,\n         -22590],\n        '\\x12\\x07\\x8d': [75,\n         -4633,\n         -2_019_286_505,\n         -6305,\n         39_782_278_594_766_613_879_547_035_624_576_802_755,\n         -7775,\n         -61,\n         13880,\n         -93_979_931_913_029_332_834_966_599_684_095_754_485,\n         -76],\n        '{\u00b5': [-71, -6520, -30354],\n        '(\\U00105e36\\U00043a87\\U000d1c68\\U000ecfa0\\x0e\u00ba\u00ac\u00d0': [-102],\n        '': [],\n        '@\\x8d\u00e7': [-1_020_269_296, 79]},\n       timing={'\u00d5\u00a1@': -5.842814804407936e+16,\n        's\\U000a1d0d\u00c3\u00cb\\x0f7\\x01\u00fd': 6.592654972550995e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-29248, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=21,\n          constraints={'min_value': None,\n           'max_value': 8371,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.17890132666983452},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=492,\n          constraints={'min_value': 118,\n           'max_value': 2010,\n           'shrink_towards': 14649,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-15869,\n          constraints={'min_value': None,\n           'max_value': 24676,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'M\\xd9\\x7f\\x0e_\\xb4\\xe9:\\x9e',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.003520541009493172,
          "overall:gc": 0.0,
          "generate:args": 0.05545345798600465
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287651.176316333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='/\u00a5\\x1d\\x1c\u00d1\u00f3\u00d5',\n       run_start=5.4459612334540504e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'\\x83\\U0010b307\\U000e057a\u00de\u00e7\\U0003c57cIR\\U000ebd2f\\x1f\\U0004d214R\ud884\ude8aKZ': [-47,\n         0,\n         20581,\n         1,\n         21498,\n         20489,\n         -22323]},\n       timing={'K\\x06\\x8e-\\U000dee46': 2.0640636491203598e+191,\n        '\\U00085c64Y}\ud803\udcd6d\u00d1': 2.211315783288078e+16,\n        '\u00fd\ud885\udf26\\x12\u00b2\u00f6': 3.773666846892041e+16,\n        '\\U000dfda2\u00d7': 6.414164220819689e-217,\n        '\u00e5\u00b8\\U00106c5e)\\x903\u00ce': inf,\n        '': -1.7978037800869182e+16,\n        '}0F\\U0003a127B': -3.498392829668691e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.3065667261601386e+308,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1e-05},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-6.748296829950797e+16,\n          constraints={'min_value': -inf,\n           'max_value': -4.637256956748745e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.02},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.402823466e+38,\n          constraints={'min_value': 5.0849365681442504e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.713648529019952},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 1), ('c', 1, 1)),\n                 (('b', 1, 0), ('c', 0, 3)),\n                 (('c', 2, 0), ('c', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='perform_collect',\n       run_start=-5.180427397512707e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00c0\u00eb\ud850\udefd\u00dd\\x92I': 17393,\n        '\\x97A\u00fb)\\x7f\\x1f0': -1.7061089878995839e+19},\n       coverage={'\u00d3\\x90\u00a8DW{\u00d0\\U000f406b': [-26522,\n         7_632_188_400_975_987_434,\n         992213,\n         317210,\n         426042,\n         940349,\n         187910,\n         830776,\n         164011,\n         1045878,\n         483719,\n         869717,\n         288555,\n         266054,\n         433788,\n         79043,\n         1002308,\n         359635,\n         156050,\n         777442,\n         176907,\n         138082,\n         725908]},\n       timing={'\\x08\\x92\u00e3': -2.6573288427101446e-39},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1264819875223373539911826968759041017, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 3, 3), ('c', 2, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0004533329629339278,
          "overall:gc": 0.0,
          "generate:args": 0.0057178339920938015
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287657.727172333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\r\\U0009879dQ\\x9d[r\\rX\\U00035c9e\\x1d\\x1d\\x13\u00e4\\U0009d7bdH\u00d3\u00a3\u00d1,',\n       run_start=-1.1379697223237174e+110,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'YR': [61_585_092_396_776_387_832_608_552_436_392_391_112,\n         -43_922_170_778_449_425_678_416_064_806_484_839_470,\n         -8,\n         30,\n         2020,\n         1_078_508_247,\n         -29,\n         18],\n        '': [53_950_645_509_385_653_176_234_470_446_392_654_637,\n         -4_915_598_436_044_810_297,\n         -26990],\n        '\\xa0\u00be\u00d6': []},\n       timing={'': 1.7976931348623157e+308,\n        '\\U0006d282': -7.877336829446246e+215,\n        '\\x8b\u00fb': -4.634239787356845e+16,\n        '\\U0010d87dj\\x86\u00af\\x06\\U00099cdb\u00e0\\U000973ef\\U00107147\u00b7': 1.2599521776947481e+126},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(0, 79043),\n                (138082, 156050),\n                (164011, 176907),\n                (187910, 266054),\n                (288555, 302681),\n                (317210, 359635),\n                (426042, 433788),\n                (483719, 725908),\n                (777442, 830776),\n                (869717, 940349),\n                (992213, 1002308)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.3333333333333333},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2739186692734475},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('b', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00aa',\n       run_start=1.3227304983647274e+44,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={\"\u00b4'U\\U00106e9a\\U000751b0\\x96L\\U000b5a8d\\x7f\\x1b\u00b6\": -5.6997047953661145e+125,\n        '\u00f8\\U0009b870': 1.6767665900254244e+16,\n        '': 1.2319398736459086e+16,\n        '\\U0004d1a7\\x7f\\x85': 3.570529592082331e+63,\n        '#\u00d8\\x9a3\ud851\uded4\u00bb\u00a2\\U000f976b\\x92\u00e4': -4.505771227930784e+16,\n        '\\x00=7q*^': 4.522731784304871e+16,\n        '\\x88': 3.705929533848922e+16,\n        'r\u00cf\\x88$\\x90++\\U0004ffea\u00a9': 2451566405597813.0,\n        ':\u00fcJ\u00e2\\U000e6e51\\x86\u00f1\\x90\\x93\\U000b0934F4J\\x1f\u00ca': 2363065.7492111754},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=511590306, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x9d',\n          constraints={'min_size': 1, 'max_size': 101},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.12908942795855152},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('c', 1, 2)),\n                 (('b', 1, 1), ('a', 1, 3)),\n                 (('b', 1, 1), ('c', 0, 3)),\n                 (('c', 0, 0), ('b', 2, 0)),\n                 (('c', 1, 3), ('c', 2, 1)),\n                 (('c', 2, 3), ('c', 2, 3)),\n                 (('c', 3, 0), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='P\u00da4\u00f3\\U00056c95\u00b4\u00da',\n       run_start=3.994525705361722e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'E': 2_086_576_409,\n        '': 2853579432371386.0,\n        'y\\U00093f93G': -3.4733182339919536e+16,\n        'Y\u00a5\u00ff^jO\\U0004a84f': 1.254974102785816e-136,\n        '\u00aa\u00b3\\x06J\\U0005b27aC[4J\u00ce/\\U00089ab1\\xa0\\x85\u00fb\\x9c`\\x17}': -6.220502610958928e-291},\n       coverage={'\u00fcJ\u00aa\\U000cf224': [1450,\n         53,\n         2453,\n         2,\n         44,\n         -14901,\n         -20759,\n         -20935,\n         1]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=15502, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00ff\\U000e0219',\n       run_start=-1.020126062615304e+17,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00b6s}': -107,\n        '': 4629967000545639.0,\n        '\\x82\\x14\u00b9': 302681,\n        '\\U000a13b1\u00ee7\u00f2\ud862\udd05\\x00\u00bb\u00a4\u00a9\\x82\\U001054dc\u00b1\u00e4\u00fc\\U00094ffc\\x9d$\\x81[\u00fa': 1.716418656762653e+135},\n       coverage=None,\n       timing={'4w\u00b0\\x84\\x0f\u00fd': -7.003851092579113e+16,\n        '': -6878192144788280.0,\n        '\\x03\u00c8\\t\u3019': -2.8701675638600164e+16,\n        'q>\\n\\U000f2983\u00cf\u00c1\\U00094eba\u00bd\u00cd\u00b3\\U00040ca1\u00f1\u00eb\\uf38e\\x17': 1000.0,\n        '\\U000a492c\\U000a9721\u00db\ud822\udcb3': 5.101781956628299e-34,\n        '\\x05\u00d6\\x91%\\U0010d17e\u00e2\u00d0\\U0004bf33T': 1.3252834306816873e-126,\n        'else': -2.2637731127985616e+16,\n        'b': 5.421240458672005e+228,\n        'captured ': 6.089227748077832e+159,\n        '\\U000d657a`\u00fe\\x12\\U0007f637\\U000c7bc1\u00e2': -nan,\n        '\\x06n\u00e3\\U000c5315\u00f4\u00ee@\\x8c%\u00a2U\\U0003eb78\\U000bf7d6E\u0330\u00ff': 4.243931444621647e+16,\n        '6\\U0010aa97\\x0e\\U000f4d70\\U0008b575\u00f9\u00a9\u00e8': -1.2244076599969126e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=73, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud860\udcd1\ud860\udcbc\ud860\udcd1\ud860\udd6f\ud860\udd19\ud860\udd51\ud860\udd85\ud860\udd9c\ud888\udf66\\U00051974\\U00032665\ud860\udd76\ud860\udcea\\U00097fe3\ud860\udd93\ud860\udce5\ud860\udd05\ud860\udd97\ud860\udd1a\ud860\udccd\ud860\udd21\ud860\udcf4\\U0006dae2\ud860\udd48\ud860\udd8f\ud860\udd67\ud860\udd1a\ud860\udd8f',\n          constraints={'intervals': IntervalSet(\n               [(164025, 417235), (438215, 626861)],\n           ), 'min_size': 20, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000437b4\\U000d4a94\\U000437c5\\U000a6035\\U00051641\\U00043812\\U000437e7\\U0004378f\\U000437b8\\U00043803\\U000437c8\\U0005c6ec\\U000c5b38\\U000437d8\\U000aaa0b\\U00059400\\U0008d5c5\\U00043818\\U00043785\\U00043813\\U000437f6\\U000437c4\\U00043776\\U000437e1\\U000437d5\\U000d5da9\\U000437ff\\U0004376c\\U000437f9\\U00043748\\U000a42e2\\U0004373c\\U00043792\\U0004376d\\U000437cf\\U00043789\\U0004374d\\U0004b7ce\\U00043778\\U00043773\\U0008d9f9\\U000d6738\\U0004376d\\U000437b0\\U00043743\\U00043797\\U000a46f5\\U00043823\\U000437ce\\U000437e7\\U000437e1\\U000437b4\\U000b47c5\\U00043783\\U0004373a',\n          constraints={'intervals': IntervalSet([(276264, 879103)]),\n           'min_size': 43,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-6.558201992298741e+16,\n          constraints={'min_value': -inf,\n           'max_value': 9.963698335490126e-148,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5020408575113405},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.5244461573899794e+307,\n          constraints={'min_value': -1557709888604973.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5821038145485781},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.3084740147599167e-186},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.3903522306297785e+109,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.02},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-4.50065853237987e+16,\n          constraints={'min_value': -5.437312230831888e+16,\n           'max_value': -3.6184529504408984e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7925529582264093},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-8811,\n          constraints={'min_value': None,\n           'max_value': 93,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 1, 3)),\n                 (('a', 2, 1), ('b', 2, 1)),\n                 (('a', 2, 3), ('b', 2, 1)),\n                 (('a', 3, 2), ('a', 2, 1)),\n                 (('b', 1, 3), ('b', 2, 1)),\n                 (('c', 1, 0), ('c', 0, 2)),\n                 (('c', 3, 1), ('a', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x00',\n       run_start=5590211445359123.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -1.9308003365408224e+213, '\u00c7\\U00060a95\u00d0': 1_270_253_667},\n       coverage={'\\x93\u00f7\ud85b\udebe\u00ed\\x1aI\\x14\u00d2\u00b0\\x9f\\x10': [28432, -1051],\n        '\\U0010defc\\U0005d380M': [12294,\n         -15867,\n         1921,\n         -25185,\n         256,\n         14063,\n         -1463,\n         -10388,\n         15961,\n         15996],\n        'q\\U00064280~': [],\n        '\u00f6\\U0006ba2d\u00f9\\x9aD;\u00d1': [127],\n        '': [1_561_005_915, -1]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=115, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 131},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=32369,\n          constraints={'min_value': 1921,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-5.032187999887508e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5937960345630714},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-4.955312523542974e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8573307627122968},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=10.0,\n          constraints={'min_value': -1.7167684376741328e+16,\n           'max_value': 846144500024383.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7446993475870661},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00016bee\\U00016c34',\n          constraints={'intervals': IntervalSet(\n               [(93139, 211576),\n                (290243, 347081),\n                (388967, 478751),\n                (663502, 706714),\n                (867692, 990204)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('b', 2, 3)),\n                 (('a', 1, 1), ('a', 1, 0)),\n                 (('a', 1, 2), ('a', 2, 3)),\n                 (('a', 1, 3), ('b', 2, 2)),\n                 (('a', 2, 2), ('c', 1, 2)),\n                 (('a', 2, 2), ('c', 2, 0)),\n                 (('b', 0, 0), ('b', 0, 2)),\n                 (('b', 1, 0), ('c', 2, 0)),\n                 (('c', 1, 3), ('a', 0, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=3.3338850795419292e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -3.057815465805744e+16,\n        '\u00f8\\x1a\u00b6\u00b2\\x1e\u00f7e': 17605,\n        '\u00ec{\\x9c<\u00b85\\x7f\u00d7]\\U00033120c\\x01\\x8a\u00f1\\x9b\\x15\\x0f*': 20037,\n        '\\x06\u00f5\\U000627c3': 3471,\n        '\\U00038e73': -1_508_592_913,\n        '\\x9f\\U0003abb3\u00c4\u00ab\\U0006b569\\U00045927\u00e4\ud847\udddd\u00bcW': 1.6762791190875008e+16,\n        '\"\\x87\u00c9\\x89_\\U0007ce84': 7_176_378_292_007_411_037,\n        'P\u00a2\u00df\u00b9\\U00096111xz\\x9e~\\U000680a2[': 6394,\n        '\\U000f2d14\u00ed\\U0010c225X\u00a5\u00a7\u00a4V\\x8fX\u00b8-\\x9e\u00a2\\U0001b600': -2_924_276_939_577_002_128},\n       coverage=None,\n       timing={'orig_level': -5.223525427437086e+16,\n        '\u00dc': -4.79413936577704e+16,\n        'h\u00fd\u00e7\\x88\"\u00db\\x12\u00df\u00efk\\U0006c4cb\\U000cb961\u00aa\\t\\U000d245e': 2.2250738585e-313,\n        '\u00b6\\x9c\u00cc\u00cb\\U000d9f0c\\U00075b68=\\U0009c8cb\\x1b\\x1c\\x87\\U0010955a\u00ca': 4.486172635281656e+242,\n        '\\U0006b898x\ub689\u00ea\\x8d>dTd\\U00058f3f\u00e4': 3.595901912907738e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=18095, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=8.982006259613463e+98,\n          constraints={'min_value': 3.402823466e+38,\n           'max_value': 9.901700976282505e+98,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.27652711273514613},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=28143,\n          constraints={'min_value': 28130,\n           'max_value': 28154,\n           'shrink_towards': 1132,\n           'weights': {28131: 0.02336761943314048,\n            28150: 0.05562370111313715,\n            28140: 0.06043368755031411,\n            28144: 0.05646160324775886}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -5.246042468842294e+133,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.538267453636733},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.278605049586612e+16,\n          constraints={'min_value': -inf,\n           'max_value': 4.4232829729361224e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2475771957124529},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xab5\\xba\\xca\\xdb\\x7f\\x8d\\x95\\xa7\\xad\\x86\\\\ZW)\\x88N',\n          constraints={'min_size': 17, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 7.592544422915965e-306},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 0), ('c', 3, 0)),\n                 (('b', 2, 1), ('b', 1, 0)),\n                 (('b', 3, 3), ('b', 2, 1)),\n                 (('c', 1, 1), ('a', 0, 2)),\n                 (('c', 1, 3), ('b', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-1.1322731356593919e+180,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U0009f3e4\\U0009f225&\u00e1\\x83\u00fdL\u00cc\\x14\u00e2\u00e9\u00f0': -5.863546380838146e+16,\n        '\\U000df06cU': -27815,\n        'c\u00ae\\U00099898T\u00eb*\\x01\\x97\\x07\ud865\udd34X\\U0002f759\\x9d|\ud821\udeefEC': 30585,\n        \"')\": -4.7513885365398584e+16,\n        '\\U000d336a\\U000f58587\\U000463b6': 4.713140017086248e+16,\n        '\u00fd': -1522023117801654.0,\n        '': -16,\n        '\u00d1i?\\U000c0744~': 5.051622717161562e+101,\n        \"R\\x95\\xadD\u00bd\\x97\\U000884c5\u00f6\\U000437bf\u00c3\u00bb;\\x04\u00f9?\\U000e6063\u00fb\\U00109f69\\x17\\x17\u00d6/Zm\\U000f788d\\xa0\\U000b7db9\u00df.\\x07\\x93\u00b74\u00a8'r\u00bb\\x9c\ud873\udc1aO\\x11\u3e7fe\u00cf\": -2.938527331780271e-239,\n        '=': 1e-12,\n        '\\U000a2064\u00ae\u00b9\u00d2\u00bc': -7441},\n       coverage=None,\n       timing={'': 2.1568505637935195e-76,\n        'u\u00df\\x93\\U00057e37': -2.2250738585e-313,\n        'j\u00e6\\x8d\\U000988d3\u00f62\\U000b5bb0': -5008132054662221.0,\n        '\u00b1\u00e6E\\x02\u00f5\u00cb': -5.676081371268277e+126},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-10921, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\uf554\\uf4eb\\uf4ab\\uf4bf\\uf470\\uf4f3',\n          constraints={'intervals': IntervalSet([(62573, 219784)]),\n           'min_size': 3,\n           'max_size': 103},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -2.2441151506202325e-61,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.34693817216388406},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1_332_803_120,\n          constraints={'min_value': 1_332_797_457,\n           'max_value': 1_332_824_130,\n           'shrink_towards': 9478,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -2.154244142270517e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6763357486101788},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd0\\x83',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 2), ('b', 3, 3)),\n                 (('c', 1, 3), ('a', 0, 0)),\n                 (('c', 2, 2), ('c', 3, 3)),\n                 (('c', 3, 3), ('b', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00e1\u00d6\u00b8A\\U00068abc\\x03r\u00af',\n       run_start=6.947588978273437e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x06': -4.726919060030342e+16,\n        '': -4.1064938183599405e-122,\n        '\\U0003b449\\U000528b5\ud820\udd575\\U0010001c\ud847\udc1a\\U00092e61\\x1d\\x04': -21,\n        ':\u00f0\u00fa\u00db\\U000c33d2': 1.1754943508222875e-38},\n       coverage={'\\x8c\\U0003a6ae\u00c2-\u00c0\u00d2\u00ee': [49_088_212_866_311_939_642_847_745_266_416_099_473,\n         81,\n         94,\n         -17899],\n        '\u00a7': [],\n        '\\x04': [5397, 103, -9134],\n        '': [-61,\n         2383,\n         -88,\n         -32291,\n         3_399_548_385_513_630_668,\n         21132,\n         7198,\n         -14352]},\n       timing={'': 1.7976931348623157e+308,\n        '\\U0001aeaa\\U001029ff\\U0009773b\u00e3\\xa0\\x88~': 8.809961766003244e+162,\n        '2f': -2.7354108305852535e-45,\n        '\u00aa\u00ff\\x01\\U00090cd5': -2.1847135705344765e-122,\n        '\\xa0\\x07\u00d9': 1.315966289757702e+25,\n        '\\x93*\\U000eaddcoF{\u00c9\\x087\\x05zTY\u00b0': -3.509868566340509e+16,\n        '\\x87': -2.179736044040806e-211,\n        '\\U00078d43': 0.1,\n        'F\\x82': 1.6183026438249965e-63,\n        'G\\U0003a2ea\\x98\u00de': 2.1051111010977944e+16,\n        '\u00b0\u00fa\u00be\\x94\\x17': 1.2079049623339784e+16,\n        '\ud883\udfd9\u00a6\\x9f': -3713429522247106.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=3600, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'`',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.402823466e+38,\n          constraints={'min_value': 3.894168941886884e+16,\n           'max_value': 8.659202369288904e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.023718914851772695},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xce\\x9d\\xa8\\xc0\\xb3x\\xf7KtW\\x91\\xc4V\\x10\\x1ek\\ny\\xf3\\x85*\\xa9\\xbc\\xd1\\x80r\\xf3\"2\\xbc\\x82\\x07\\x06\\x86]\\xbb\\x1f\\x0b\\xd4-\\xcc+J\\x9c>\\x15\\xd5\\x8a\\xc5\\x87\\xce\\x9c\\xaf\\xcc\\x14\\xf9Z\\xf3\\xe2\\xa2@|-\\xca\\x8f\\xf4>\\xd3*vxo\\xef\\x94\\xa5#\\x1c\\x04Y\\xdfC\\xacE\\xfa\\rd\\x8fc\\x10\\xe6\\xdd\\xb6SlyI\\xd2\\xcf\\x01\\x0f',\n          constraints={'min_size': 49, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=6973456128818177.0,\n          constraints={'min_value': -7.526650546500249e-80,\n           'max_value': 8871884022419005.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 2.220446049250313e-16},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u03eb',\n          constraints={'intervals': IntervalSet(\n               [(1000, 201693),\n                (398349, 439965),\n                (555389, 717477),\n                (840511, 1114111)],\n           ),\n           'min_size': 0,\n           'max_size': 36},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 148},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.5063090778435358e+38,\n          constraints={'min_value': 5.831977950827612e+16,\n           'max_value': 3.402823466e+38,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5860741633976089},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xc5(\\xe5\\xcf\\xf9N\\xb5',\n          constraints={'min_size': 0, 'max_size': 29},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.27319617738788243},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x98\\x90\\xc3\\x1b',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 2), ('c', 0, 3)),\n                 (('b', 1, 0), ('a', 0, 3)),\n                 (('b', 3, 0), ('b', 0, 1)),\n                 (('b', 3, 0), ('b', 1, 0)),\n                 (('c', 1, 2), ('a', 0, 3)),\n                 (('c', 3, 2), ('b', 2, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0069405409740284085,
          "overall:gc": 0.0,
          "generate:args": 0.07815720583312213
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287655.463802958,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287674.9795315,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\r\\U0009879dQ\\x9d[r\\rX\\U00035c9e\\x1d\\x1d\\x13\u00e4\\U0009d7bdH\u00d3\u00a3\u00d1,',\n       run_start=-1.1379697223237174e+110,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'YR': [61_585_092_396_776_387_832_608_552_436_392_391_112,\n         -43_922_170_778_449_425_678_416_064_806_484_839_470,\n         -8,\n         30,\n         2020,\n         1_078_508_247,\n         -29,\n         18],\n        '': [53_950_645_509_385_653_176_234_470_446_392_654_637,\n         -4_915_598_436_044_810_297,\n         -26990],\n        '\\xa0\u00be\u00d6': []},\n       timing={'': 1.7976931348623157e+308,\n        '\\U0006d282': -7.877336829446246e+215,\n        '\\x8b\u00fb': -4.634239787356845e+16,\n        '\\U0010d87dj\\x86\u00af\\x06\\U00099cdb\u00e0\\U000973ef\\U00107147\u00b7': 1.2599521776947481e+126},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(0, 79043),\n                (138082, 156050),\n                (164011, 176907),\n                (187910, 266054),\n                (288555, 302681),\n                (317210, 359635),\n                (426042, 433788),\n                (483719, 725908),\n                (777442, 830776),\n                (869717, 940349),\n                (992213, 1002308)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.3333333333333333},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2739186692734475},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('b', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00aa',\n       run_start=1.3227304983647274e+44,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={\"\u00b4'U\\U00106e9a\\U000751b0\\x96L\\U000b5a8d\\x7f\\x1b\u00b6\": -5.6997047953661145e+125,\n        '\u00f8\\U0009b870': 1.6767665900254244e+16,\n        '': 1.2319398736459086e+16,\n        '\\U0004d1a7\\x7f\\x85': 3.570529592082331e+63,\n        '#\u00d8\\x9a3\ud851\uded4\u00bb\u00a2\\U000f976b\\x92\u00e4': -4.505771227930784e+16,\n        '\\x00=7q*^': 4.522731784304871e+16,\n        'Default value for ': -1.4428389196279281e+72},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=511590306, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x9d',\n          constraints={'min_size': 1, 'max_size': 101},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.12908942795855152},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('a', 1, 2)),\n                 (('b', 2, 0), ('c', 1, 0)),\n                 (('c', 0, 3), ('c', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00a9\u00c5',\n       run_start=-4.804368101987492e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'D': 3.4741790618419564e-134,\n        '': -2.225073858507e-311,\n        'w\ud888\udcad=C': -7629,\n        '\\U000c1c70d\\x11\\x94\\x8d\\U00057635': -2.2250738585e-313,\n        'pytest_collect_file': -246600440866.20697},\n       coverage=None,\n       timing={'\\r\u00fc_:': -0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-12103, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x19\\xc0V~Q\\xb3\\x95\\x04M\\xc2\\xa1\\xea\\xc6\\x90\\x98\\x13b\\xf5=9\\xd75\\x80(-\\x82^\\x02\\xc9\\xa6\\xd0\\x80h \\xf7\\xc8\\xe2\\xc3\\x0b\\xe8\\x9e\\x1b',\n          constraints={'min_size': 33, 'max_size': 133},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'd\\xd8\\xdf\\x8e\\xa8E-\\x05\\x07/,j\\xe0\\x0cz&\\xabM\\xa9\\x9e\\x01q\\x96\\x82',\n          constraints={'min_size': 0, 'max_size': 95},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u2175\u21cf\u2154\u2145\u21a2\\U000a279a\u21c7\u2184\u2164\\U0004d498\u21ed\u2187\u2208\u21dc\\U000a29bd\u2178\\U000537f2\\U00100868\u217e\\U00013a6e\u2195\u21e2\\U00091a55\u2136\u21b0\u21c9\u21cb\u21d5\u21e9\u214f\u21fa\u21fb\u2218\u219e\\U000a61eb\u2137\u2159\\u218c\u218a\u21d2\\U0002f776\u2158\u21e3\\U000a6678\u2210\\U0007466c\u2134',\n          constraints={'intervals': IntervalSet(\n               [(8476, 15058),\n                (73119, 99667),\n                (167514, 353137),\n                (378053, 386404),\n                (470202, 494458),\n                (557244, 638893),\n                (658781, 708124),\n                (873914, 874967),\n                (904514, 962427),\n                (1045369, 1054821)],\n           ),\n           'min_size': 35,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-611,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8f',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.960464477539063e-08},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'v\\xd1\\x1b\\x16',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U00091eaa',\n       run_start=2363065.7492111754,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U0010870b\\x1da\\x1d,\u00b3\\U000f3259q\u00ea\\U000a0d80\ud834\udd48`\\x7f': 1042,\n        '\\x1d': 0},\n       coverage={'w2\u00c1': [28556]},\n       timing={'1\u00fd\\U0004a2f0\u00f0\u00e2\\x9f\u00af\\U000edf3b\\U000943ed\u00a4': -2.225073858507203e-309,\n        'X': -2783438699912509.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-5953, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('a', 3, 3)),\n                 (('b', 2, 0), ('c', 0, 2)),\n                 (('b', 3, 3), ('b', 0, 2)),\n                 (('c', 1, 0), ('b', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00d7\\U00060408i\\\\|',\n       run_start=0.005,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'vgH': -2.2294392498999996e+16,\n        '\\r_O\\U00013b32': 1.364673628727493e+240,\n        '\\U000ec2cd': -1.9942047250943006e-256},\n       coverage={'&6t': [3,\n         -121_135_524_671_750_946_840_703_866_006_168_385_937,\n         53,\n         -100,\n         2,\n         -106,\n         855171875,\n         35,\n         -26020,\n         1]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=22890, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'k\\xf7g',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-52,\n          constraints={'min_value': -7270,\n           'max_value': None,\n           'shrink_towards': 947991,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.876346693719677e-170},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 2), ('b', 3, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='s',\n       run_start=0.0001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 48,\n        '\\U0003d2b9>': 992213,\n        '\\U0005c036\u00e0\ud85c\udf65\u00a6\\x1b\\x138\u00e8\\x1ewh\\U000c8740-\u00a3j': 426042,\n        '\\U000af3df\\x98': -8.723633810058819e-82,\n        'n\u00e2\\x96\\x81': 1.0612143151806952e-47,\n        '\\U000381bb\\x856M\u00faE\\U000ba6d4\\x03\\x9ar\u00f4\\x8c': -8790591679497226.0,\n        'O': -8161,\n        '\\x90\u00f4\\x82\\x85\\U0003cf05\u00e6\\x9f\\x1a\\U000d0852': -27469,\n        'B\\r\\U00099afa\\U000f90f1\u00a6(x\u00aa2\\U000826b4g\u00bf': 9888,\n        'v\\U000381d7\\U00046b65KS<\\x9e\u00d3[&': 21291,\n        '-': 97,\n        '\\x89\u00b4\\x93\\U000e8467\\U000b66eeG{v\\U000ed08b\\x9e\\U0010511c\\x17\\x0e': -11483,\n        '\\x19\\x06\\x90\u00fbJs': 4.913452871161479e+94,\n        '\u00ff\\x8dg\\x88': 4413,\n        '\\U00086a72t\u00c2O': -inf},\n       coverage={},\n       timing={'\\U00095d13\"\u00d4\\x14\u00d8d': -7.078884518468403e+16,\n        '\\x9a\\U0001e484\u00c5\\U000be816\u00b0\u00d5\\x1f\\U000506f8\u00a7\\x02\u00ca\\U000bc94c': -6.703344030816105e+16,\n        '\\U0009e38f3\u00dc\\U000a8eee+\\U000aa6a0\\U00090196\\x03\\U0009c864\\x94u\\U000aafb9\ud805\udc0f\\U000bb498\\x7fh\\x84': 5.4334952183943976e+16,\n        '': -1.0755401791604924e+16,\n        '\\U00071a57\u00e5': -1.5928836479745436e+139},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-3494, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U0003ffc1\\U0003ccc2\\U0003cd5d\\U0003ccc9\\U0003cd41\\U0003cd3f\\U0003ccb2\\U0003ccbc\\U0003cd1f\\U0003ccc7\\U00071023\\U0003cd25\\U0003cd31\\U0003ccd2\\U0003cca0\\U0003ccd5\\U0005fbb7\\U0003cd1e\\U0003cd01\\U0003cd19\\U000616e6\\U0003cd46\\U0003cd63\\U0003ccff\\U000548e8\\U0003ccca\\U0003ccf9\\U0003ccce\\U0008f9cc\\U0003cc99\\U0003cc86\\U0004f3b5\\U0003cd02\\U0003ccb2\\U0003cd21\\U0003cd06\\U0003cd3f\\U0003cd2e\\U0003cd09\\U0003ccd0\\U0004487c\\U0004f772\\U0003ccd8\\U0003cd51\\U0003cd12\\U0003cced\\U0003cd05\\U0003cd4d\\U0005cf78\\U00095ebe\\U0003ccf9\\U00082915\\U0003cd31\\U0003cd2c\\U0003cd37\\U0003cd10\\U0003cd4b\\U0003cc77\\U0007d34b\\U0003cd66\\U0003cc73\\U00048e35\\U0003cd65\\U00046d2d\\U0004be82\\U0003ccb4\\U0003cc9c\\U0003cca5\\U0003cd40\\U000781fb\\U0003ccfe\\U0003cd0f\\U0003cd11\\U0003ccdc\\U0003ccce\\U0003cc71\\U0003ccdc\\U0003cd08\\U0007f030\\U000498f6\\U0003ccd0\\U0003cd05',\n          constraints={'intervals': IntervalSet([(248937, 616901)]),\n           'min_size': 38,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 1, 2), ('c', 0, 0)),\n                 (('a', 3, 0), ('a', 1, 2)),\n                 (('a', 3, 3), ('c', 3, 3)),\n                 (('b', 0, 3), ('a', 0, 2)),\n                 (('b', 0, 3), ('c', 3, 1)),\n                 (('b', 2, 3), ('a', 0, 2)),\n                 (('c', 1, 3), ('b', 1, 3)),\n                 (('c', 3, 1), ('b', 3, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=3.0713161767862543e-229,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000fba4bd': 27516,\n        '\\\\': 9241,\n        '\\U0010a602\\U0003c567\\x889\\U000bda7c\u00bc\u00eeT\u00ae\u00f5H\u00de': -6.103590503224076e+63},\n       coverage={'\\U000479b3\u00dc\\U000f3993\\x87\u00b3<\u00fb': [-7439,\n         78,\n         19416,\n         420,\n         -19525,\n         105,\n         -26018,\n         1000],\n        '\\U00107fc0\u00d6\u00cc\u00e3\u00f9\u00a4\u00b3\\U000770bb\\U0005031a\\U000edaf0X': [-66],\n        '': []},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-10487, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 2, 1), ('b', 1, 0)),\n                 (('b', 0, 0), ('b', 0, 0)),\n                 (('c', 0, 1), ('a', 3, 1)),\n                 (('c', 0, 3), ('c', 1, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U000d1693\u00be\u11d0',\n       run_start=-6.778050771591998e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'Z\\U0004c88f\u00c4': -112,\n        '\u00cc\\U000bc907\ua3fd': -4.243385631243e+279,\n        '\u00f51\u00e0': -84,\n        '\\U000bf9f4\u00d0': -63,\n        '': 2.984865458278339e-09,\n        '\\xa0Q\u00a7\u00fa\\x98\\U000dd0f8': -9007199254740992.0,\n        '\u00b8\\U00092e11j\ud842\udc51\u00f2\\x9e': -326,\n        '\u00a4\\n': 91,\n        '\\x94\\x8b\\x0f\\U000b00ef\u00d4\\x97\\U00088b08\u00fc5\u00e4\\U0010932c': 28,\n        '~_\\x9d\\x91\u00a3': -1701634364102682.0,\n        '\u00b4\u00e3)^\u00e81J\\U000908d2\\x1d\u00a8[!\\x9b\u00cd=,\\U000d0217\\x8d': 1_000_000_000,\n        '\\x9c\\U00045780\u00a9\\\\\\x15\\U00079bce\u00b6\\x9a': -49,\n        '\u00aa': -1.5,\n        '\\x12': -7.069772152338184e+16,\n        'Observation': 449965090,\n        '\u00d9\ud84c\udf81\\xa0\\x1c\\U000e40e3\u00a93\u00dc\u00c9\\U000e4f3e\\U0006e6f0]\u00af': 0,\n        '\u1fc7\\U000c1a74\u00a3\u00f6\\U000e6ace\u00c6d\\U000677a5\\n\u00b3\\U000e6707': 5.2403659736778584e+16,\n        '\\x8c\\x19\\U0008145c\u00b5\u00f6\u00b9\u00d2\u00da\u00ac\u00aewq\u00d3X': 0.01,\n        \"\\x89\\U000c80b3\\\\\u00b0\\U000bfad46,-\u00f0\\x13'\": 5.561402946782223e+170,\n        '\\x959\u00be\\U000568f0\u00a2\u00e9\u00ca\u00de': 581538486659824.0,\n        '\u00ee\\x15d\\x94': 1_011_354_362_140_977_265,\n        '\\U000f3f12\\x80\u00b7': -29945,\n        '1\\x97h': 5_101_789_795_706_442_969},\n       coverage={'\u00ff\u00eeI\\x9a': [-117, 16881, 122]},\n       timing={'\u00cc\\U0010ba9aL': 4.843310045943944e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-10, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 1, 0), ('b', 2, 3)), (('c', 3, 3), ('a', 2, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='/',\n       run_start=2.1416322007289244e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 1000.0,\n        '\u00cd\u00feD+': 5.025812624518226e+16,\n        '\\x16\u00ddk\\x14': -118,\n        'Inf': 1.1671351248009848e-96,\n        '\\x81\u00f2': -5.390509155476925e-10},\n       coverage={'Yt\\x03\\x86^\\U000f4327': [],\n        '\u00e0~\\x11\\x1b\\U0001c76a\u00c2g': [-5,\n         23997,\n         122,\n         32029,\n         -109,\n         3852,\n         2020,\n         14973,\n         -2_006_880_399_261_440_539,\n         135_909_189_168_590_199_075_265_588_805_595_528_084,\n         -6,\n         9593,\n         7631,\n         19562,\n         -95],\n        '\\x0e\u00fc\\U0008e876}\\U001018c1z\\U00042e71\ua792\\U00032dfb': [127,\n         111,\n         -20647,\n         -25461]},\n       timing={'\u00d3A\\U00013e96\\x97+e\u00b0': -1.6389841797008188e+16, '': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-29693, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U000a6135\\U000a286a\\U000a285c\\U000a2797\\U000a2793\\U000ab387\\U000a285c\\U000a2789',\n          constraints={'intervals': IntervalSet([(665461, 752419)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.203562874002257e+307,\n          constraints={'min_value': -2.1746601405635976e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.12379456646845946},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 0, 3)),\n                 (('a', 0, 1), ('a', 1, 3)),\n                 (('a', 0, 2), ('b', 0, 0)),\n                 (('a', 0, 2), ('b', 0, 3)),\n                 (('a', 2, 0), ('b', 1, 3)),\n                 (('a', 3, 1), ('a', 3, 0)),\n                 (('a', 3, 3), ('a', 0, 2)),\n                 (('b', 0, 2), ('b', 3, 1)),\n                 (('b', 0, 3), ('b', 1, 2)),\n                 (('b', 0, 3), ('c', 2, 2)),\n                 (('b', 2, 2), ('b', 1, 2)),\n                 (('c', 0, 1), ('c', 1, 0)),\n                 (('c', 0, 1), ('c', 2, 2)),\n                 (('c', 1, 1), ('a', 1, 1)),\n                 (('c', 1, 2), ('b', 1, 3)),\n                 (('c', 1, 2), ('c', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-8.807142221838601e+74,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 1_334_258_993},\n       coverage={'4C\u00c7\\U0004f7d780\u00e1\\x80\\x92\u00f1\u00a3\\x05\u00f7%': [-19507],\n        '\\x81\\x9b\u00c4\u00b4\u00d2\\U00048f18S\u00d4\u00e4\\U000f0bb9:': [23258,\n         -26177,\n         -17441,\n         29513,\n         18999],\n        '': [],\n        '\u00a3\\U00097a65\u00ec\\U000c822ci': [-7_242_223_854_483_993_302,\n         -8_688_210_804_291_666_953,\n         -27099,\n         -36],\n        '\\x8a\u00afy\\U00036dbb~': [-70, -31913],\n        '\u00c0P\\x940f\\x03.': [],\n        '\u00fe\u00c9\u00bd': [111, -31],\n        '\\x8e\\x98\u00d7': [25721, -651],\n        '\\x84A\\U0010ea81\\x1a+\u00cf\\x96-': [1_802_477_116, -84, 15944],\n        '\\U000b4644\\x95\u00ab\u00a5d\\U000e74d6p\\x18\\U000558ce\\x8b\\U0009e820\u00c3#\\U000d55aa\u00bfG\u00f3': [-14941,\n         8358,\n         1_882_140_570,\n         9215,\n         -16075,\n         -9966,\n         511,\n         99],\n        '\\x82\\x13\u00b0\\x1b\\x0c\\x9dE&': [-31985,\n         23710,\n         -6_505_319_665_968_720_458,\n         -1834],\n        '0/0': [-235, -24875, 6, 75, 30389]},\n       timing={'\\U0003f896\u00d6s\\U00066f256V\u00c2\u00b5\\x9c\\x80\\U0004cac5\u00e6/\\U000cdeccqI\ufa17k.\\x97\\U0006d905C\u00e9yX': 3822869677358176.0,\n        'J\u00d4\\x1d\u00c4\\U00015aa1o\\U000924aa\u00eb\\x10\\x90\\U000dc705\\x9a\u00b5\\U000d8715\\x16\\U0006e5a8U\ud86f\udd30b\u00e5\u00c3\\U00068d6e\\U000b1b5b\u00f6\\U0009eac5\u00ca\\\\\\x84\\x14\\x14\ud875\uded2\u00b2m\\U0009dbdc\u00cb': -7.180218637287043e-228,\n        '\\U0010457bVX': 3.5097933358004244e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=98, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=16391,\n          constraints={'min_value': 578,\n           'max_value': 65535,\n           'shrink_towards': 0,\n           'weights': {27026: 0.027657074142624232,\n            53440: 0.020103674040791115,\n            52904: 0.07005448595688196,\n            16148: 0.06698668339287114,\n            24695: 0.05756650514066025,\n            8203: 0.02948991660277276,\n            20217: 0.014382324240694432,\n            61335: 0.08348822444200542}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xa2\\xd7\\xca\\xf6\\x81\\xc9^',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.6012796547573218e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.99030932628945},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=1.9251451616982454e+289,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x8b\\U0002faee': 16647,\n        '\\x11': 6.347275779288888e-209,\n        '^\u00a5': 9999,\n        '\\x02': -7203},\n       coverage=None,\n       timing={'\\U00045f11\u00cb\u00da\u00f5': 1.6085165108174013e-101,\n        '\\U0003ffb7': -5.640494205821817e+16,\n        'n\\x10%\u00a9a\u00ef\u00ec\u00bc\ud871\udf28\\x0c\\x08\u00eai\u00f5uA\\U00080b94\u00d2\\x18a\u00ea\u00ee0\\U000aae3f\u00e0': -2.508346721786563e+117,\n        '': 7.161772385016329e+16,\n        '\u00ee\\x0eQ\\x10\u00a2\\U000cdb96': 5.741314726368406e+16,\n        '\\x8b': 2.225073858507203e-309,\n        '\\U000aa19ar\\x1f\\x87+\\r\u00b5\\U00012f18\u00cf\\x1f': 5.553710501500556e+16,\n        'W.\u00d7\\x10\\U00037aaf': -1.0368300851898558e+19,\n        '\u00c2\u00f6&': 5.615515358222681e-155,\n        '\\x83\\U0009fade\\U000811d6[\\U00078f99}u\\U00075eae\\x80\u00c9h0\\U00095a66\\x13\u00e9c\\x8c\\x1bh': 7.046027671122701e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-119, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=22054,\n          constraints={'min_value': 10854,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 2, 0)),\n                 (('a', 1, 1), ('a', 1, 1)),\n                 (('b', 3, 2), ('c', 3, 3)),\n                 (('c', 1, 2), ('a', 1, 2)),\n                 (('c', 2, 3), ('c', 2, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.00429799995617941,
          "overall:gc": 4.875002196058631e-05,
          "generate:args": 0.05475729616591707
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287653.488014833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.00001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'\u00d7\\x04\\x8dh': [-18915,\n         8525,\n         1_016_912_656_683_771_783,\n         104,\n         -2159,\n         3]},\n       timing={'': 4.525734059261676e+54,\n        '\u00dc': 1.2996631116582005e+34,\n        '\\x0c\\x90': -inf,\n        '.$\u00ae': 5.362851445221171e+78,\n        '\u00ea': 3.778870897227998e-188,\n        '\\x1d\\x16\\x1e+ ': -7.097567858846507e+16,\n        '\\n': 0.0001,\n        '\u00b2B\u00a2\\x01\u00b8': 2.5193621319643024e+166},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-6,\n          constraints={'min_value': None,\n           'max_value': 1,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.9886426504133176e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 1e-12,\n        '\u00d5.\\x80\\U000ff9c8|\\U00045369\\x8e\\x98': 20,\n        '?\\U0010349a': 33,\n        '\\U0010ea16\\U0001093c\\U000351fay\\x87|\\x96': 41,\n        '7\\U0008d50a\\U0005a805(\\U0003b7e7': -122,\n        '-': -2_058_579_674},\n       coverage=None,\n       timing={'\\x02\u0e36\\U0006474b': 0.02,\n        '\\x93\u00a8\u00b3)\u00ec\u00db6\u00bdD\\U0009847e\u00e3': 3.6049342359409e-131,\n        '\u00b8\\U0003e1dc?\u00ff\\U0010af1d?\u00ce\u00ff': -3.3366620756016286e+33,\n        '\\x89\u00df\\x0e': 1e-06,\n        'q\u00c2\u00b2t\\x93\\x97\\n\u00a8\\x11\\U00049214\\U00036341\\U000b18fe\\U000c6f73\u00d6': 217230071607279.0,\n        '\\U000ba468\\x02V\ud83a\udcb6\\x8b\\U000dd724': 6.905571507885186e+16,\n        '\u3952\u00f4\\x90\\x12\u00c8\u00ac\u00fd': 2.915659581584442e+288,\n        '\\U000fa8f9\\U000c5331\u00c2': 1.674630881802369e+16,\n        '': -1.0287613154495071e+231,\n        ':\\x0b\\U00039c2f\u00a6': 7.183853410186411e+16,\n        '\u00d9\\x96\\x8b\\U0004f885p\\x80\u00ccS\\x86\\U000409ec': -6.123295573133626e+148},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-4955, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=31042,\n          constraints={'min_value': 72,\n           'max_value': 32833,\n           'shrink_towards': 6887,\n           'weights': {8678: 0.24541660212050248,\n            31042: 0.05936039859954859,\n            2627: 0.13432244231063487,\n            17323: 0.14502170385688964}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u6fa4\u6fa9\u6fc9\\U000364fe\u704e\ud866\udd41\u6f91\u6f7d\u6faf\u6fb3\u703d\u7051\u6fb2\ud864\udf97\u7035\u6f76\u6fd9\u7014\u6f99\\U000126b1\u7064\ud81f\udc4f\u6fb1\u700c\ud863\udc6a\ud843\udc78\ud869\ude03\u82dc\u701d\u7017\u6f75\ud866\udd00\u6faf\\U00037d4a\ud835\udf82\u6ffe\u6f6e\\ue58b\u704a\u6fba\u6f9b\ud875\udfa3\ud855\udd7f',\n          constraints={'intervals': IntervalSet([(28524, 238184)]),\n           'min_size': 42,\n           'max_size': 98},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-10,\n          constraints={'min_value': -15478,\n           'max_value': None,\n           'shrink_towards': -29798,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8596060313123044},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.6361010319978995e+203,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.05251277338300865},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.4951288285829242},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006399999838322401,
          "overall:gc": 0.0,
          "generate:args": 0.015680916083510965
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287693.200227166,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000d786f\u00fc\u00f2U',\n       run_start=-4.808938403273279e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage={'\\U00039b53\\x0f_\u00a1\\U000c2127\u00ab': [-30139,\n         -28860,\n         -30063,\n         22120,\n         -38,\n         -563],\n        '@a0\\x98': []},\n       timing={'runxfail': 0.0,\n        'M\\U000712e5\u00dcL': -0.0,\n        'NUL': -3.443864360484479e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\x04\\U00105bf8\u00cd\u00cc\\x93\\x0f[\u00dd\u00aan\u00f7/\\x05\\U00013804M\\U000be9a9[\\xad\\U000aac90\u00c1\\x03C\\x06\\U000da06d\\U00097129\u00a2\\x0c',\n          constraints={'intervals': IntervalSet(\n               [(0, 219786), (587005, 723409), (727739, 1114111)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x08V\\xe5\\xe7\\xf9\\xfe\\x7f\\x0fn\\xe6L}zJ\\xaf\\xdb]b\\xe7\\xed\\r\\x98'\\xa9E\\xf2M\\xb0s*/Hq\\xc2\",\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u9989\u997f\u9976\u98cd\u9908\u98b9\ud807\udf48\u9928\u990a\u991a\u98da\u98ba\u98fe\u994a\u98be\u98e6\u99b0\u98cc\u9940\u99a8\u9963\u98b6\u98c6\u98f1\u98b7\\U0001ab55\u98b3\u98db\u999d\u98f2\u9988\ud81e\udd7f\u98fc\u98e4\ud80d\udc1e\u9936\u994a\u999e\\U00014819\u9961\u998e\u98ef\u9947\u992f\u98d6\u9939\u9965\u98ef\\U00014b4e\u99a1\u98bc\u99ad\u98e3\u98ca',\n          constraints={'intervals': IntervalSet([(39090, 193532)]),\n           'min_size': 43,\n           'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'3>\\xec\\xda/\\x99\\x97\\x1a\\xddG\\xca\\xe0\\x1a\\xdf\\x01\\x04d4WK\\x9c\\xe1\\xc0\\n\\xb9\\\\\\x8d\\x93u|7f\\x84k\\n(d\\xabg{',\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5616803017953412},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2166,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 124},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 2), ('a', 3, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0009543750202283263,
          "overall:gc": 0.0,
          "generate:args": 0.01317103998735547
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287690.999977333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=4.815754922818935e-72,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -6.795581058703873e+16,\n        '\u00d40k\u00fe!o\u00d0\u00d8\u00cdAB\u00e0\u00f5\ud801\udd9e)\\x0c': 3.402823466e+38,\n        '\\U0009651d\u00f8': 0.702540533879951,\n        '^\u00c3\\U000a0cb6\u00c0\\U0008a2a2\\x16\u00d41\u00af\u00eb': 1},\n       coverage={'\\U00039b1c': []},\n       timing={'': -894525096458913.0,\n        '\u8e22\\x80O4\\x8b': -4.471986628156272e+16,\n        '\\x1aa\\x1b8\\x97,': 2.1853587310064228e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=18, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('a', 0, 3)),\n                 (('a', 1, 0), ('c', 2, 2)),\n                 (('b', 1, 0), ('b', 3, 1)),\n                 (('c', 2, 3), ('a', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00d1\\U000f5ef5\u00faK\u00b1\\U0009488e',\n       run_start=-3.3317464382274076e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x8c\\ue526?n\u00d1': -4.067776144832604e+16,\n        '\\U00013bfc\u00d7\u00f2\u00e9`+\\x18\\U000c1013\u00e5l(\\x12': -3_424_599_370_568_330_989,\n        '\u00f1w\\U00043a93\u00d9\\U000f2dfc': 1.8910679663248594e-180,\n        '.\u00bb\u00db': 4.517422072437338e+16,\n        'S\\uf1a2\u00a1': -6.791423473392813e+16,\n        '\\x89\u00ee': 7.003133984573405e+64,\n        'q\\x88': 5.2526873852419625e+62,\n        '\\U00065a75g\"\\U000e142d\\U000dfe71\\U00091f4f\\x9bT\u00d4\u00c8\\x1c\\U00096853\u00c1\\U00095d29\\U000b9148\\U0008b05a\\U000d0083\\x13\\U000acb28': 0.0,\n        '\u00e8\\x85\u00db': 1.5588203817485418e+16,\n        '\\U000ee760\u00b5\u00f7S\u00d6\\x18': 26755,\n        'T\u00cd': 4.294932331062793e-39,\n        ')M?\\U000e9fef\\x0e': 2.2250738585e-313,\n        '\u00d0\u00e4y\\U000707852\\U000fca16\u00dbU\u00f2\\x9f\u00e1\\x8f': 2.4609490114853784e-76,\n        'T': -554074185,\n        '\u00d5\u00f3': -5_477_680_333_852_544_121,\n        'r\\U000d6318S3\\x87t\\x87': -30319},\n       coverage={'F\u00b1P\\x7f\u00dfr\\U00037a22\u00c0t\\U00034f2c\uf960\u00e3\\U000642a9': [25024, 57]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=24294, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=7.035428256254727e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.9991361741290441},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=5_023_086_738_857_606_706,\n          constraints={'min_value': 30,\n           'max_value': None,\n           'shrink_towards': -4146,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6665376951467509},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0001bdbe\\U0001bd6f\\U0001be0c\\U0001be0e\\U0001bdc6\\U0001bdee',\n          constraints={'intervals': IntervalSet([(113948, 196865)]),\n           'min_size': 3,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=134,\n          constraints={'min_value': -108,\n           'max_value': 7_499_540_115_299_767_021,\n           'shrink_towards': 0,\n           'weights': {16380: 0.015397898211841106,\n            3_792_324_753: 0.014512295120417391,\n            37533: 0.05164203928414642,\n            46: 0.018893798023423003,\n            1_656_820_805_521_389_060: 0.05271133389797826,\n            14431: 0.015040362074201475,\n            50077: 0.023404502138606405,\n            34578: 0.03976871902241024,\n            32: 0.0299310738684932,\n            14878: 0.0010542266779595653,\n            128: 0.05271080678463929,\n            1_282_946_240_729_250_891: 0.018266278229216937}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'3\\x99-:?\"\\xc2\\x16@\\xbab\\x87\\xaf\\xb3\\x89\\x16\\xf0\\x9f}3k\\xb8\\x9c\\x967\\xca\\xe6\\xc9_\\xd2c\\xdc\\xae6&v\\xa9-\\xd9\\x91V\\x15\\xf2\\xadx\\n\\x01\\\\',\n          constraints={'min_size': 43, 'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=8.169040588012798e+307,\n          constraints={'min_value': 1.7039642303697144e+121,\n           'max_value': 1.3545821159011482e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.11441062325943555},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('b', 2, 3)),\n                 (('a', 3, 1), ('b', 0, 0)),\n                 (('b', 0, 1), ('a', 1, 0)),\n                 (('b', 2, 0), ('b', 0, 0)),\n                 (('c', 0, 0), ('a', 3, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=\"'?\",\n       run_start=-1.1,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'t': 1.0,\n        '\u00ae5': 1_671_915_924,\n        'COM1': 4.0808435058448325e-137,\n        '\\x93\u00e0\u00c9\\x89\\U0008b001Gb\\U000590db\u00b8\u00c5\u00c0\\x0b\\U000caaba\\U00069b29': -5.593533327796543e+16,\n        '\u00c60\\U0003e508\\U000c0d8b': -3678295677604479.0,\n        '=\\U0005abd9.': -inf,\n        \"\\U00094312V\u00c8M\\U001098de\u00a4\\U00060009\\x8b\\U00019966\u00be\\x04\\x8bUf\u00d1\u00f42'\\x12\u00e6\\x1a\u00f2\": -82,\n        '\\n\\U000497a7K\\x92\\x8b\\U0010b320E': 2.0110071849714968e+291,\n        '\\U0004c1dd\u00f3\\x0e': 9_003_554_167_417_402_416,\n        '-%s': -68,\n        '\\U0007b2ee\u00a5\u00a8\\x86\\x96\u00b1\u00e2': 9494,\n        '\u00c0 M\\U000f7569': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0]},\n       coverage={'\u00ffR': [-66,\n         5853,\n         51,\n         -20520,\n         12331,\n         255,\n         14753,\n         23989,\n         -8371,\n         27382,\n         26],\n        '\\x1d\u00ab\\x1d\\U0006cff0\u00fb1\\U00010240\\x1b': [],\n        '\\x89(\u00bb\\U000f802f\u00a6G\\U00044888`': [-62,\n         -73,\n         14825,\n         10165,\n         47_348_640_134_097_957_906_066_336_279_978_553_892,\n         -32647,\n         105,\n         27089,\n         -3_889_098_753_065_069_990,\n         -42,\n         118,\n         -118,\n         59,\n         -88,\n         -32116,\n         -21907,\n         1_000_000_000,\n         -18140,\n         1_265_842_295,\n         -3_037_028_599_437_617_849_886_259_878_006_161_669],\n        '\u00d8': [-16476, 448, 524475981, -17433, -20998, 29128]},\n       timing={'': -1.5265174103899214e-181,\n        '\ud84f\udea4\\x18': 5.960464477539063e-08,\n        'HG': 2.3079413038787744e+16,\n        '\u00a3S\\U0007491c>\u00a1': 7.358016820548504e+265,\n        'E\\x98n\\U000c77e3': 6.284899274063364e+276},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-24786, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U00036d25\\U0003fade\\U000dd385\\U00036d51\\U00036d13\\U00036dac\\U00036d5f\\U00036d6d\\U00036d4d\\U0003eac7\\U000f8a3d\\U00036dbd\\U00036d57\\U00036d9a\\U00036d9c\\U00036d3d\\U00036dc8\\U00036d57\\U00036d39\\U000a81a0\\U00036ddc\\U00036d36\\U00036dd3\\U0006cec0\\U00036d7b\\U0004a39d\\U000d4698\\U00036d1b\\U00104f9c\\U00036d82\\U00036dcb\\U00036da6\\U00036d77\\U00036d90\\U00036d03\\U00036ddd\\U00036d2d\\U00036d31\\U00036d16\\U00036d1f\\U00036d12\\U000e8cec\\U00097996\\U00036d6b\\U0004075d\\U000b9ad5\\U00036d13\\U000a6620\\U00036d70\\U00036dcd\\U00036d19\\U00036d89\\U00036d76\\U00036d68',\n          constraints={'intervals': IntervalSet([(224504, 1114111)]),\n           'min_size': 36,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-48035,\n          constraints={'min_value': None,\n           'max_value': -25016,\n           'shrink_towards': -623102009,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 3, 1), ('c', 3, 0)), (('c', 0, 3), ('b', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=1e-06,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\U000fda11*%\\x88\u00f3': 5.764042633152904e+106},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-15088, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=7.035428256254727e+16,\n          constraints={'min_value': 9.000716361523315e-83,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.3035473611016655},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\xdfb\\x1c\\x0c\\xc3\\xbfeb^\\xe9\\xc8\\xcc&\\xfaT\\xe6\\xc2t;8\\xb4\\xbd\\xd5\\x8a[\\x90\\x8c\\xc8+E&l(\\x91\\xc9\\x8d\\xb3\\x9d\\x9f\\x9f\\x8b,\\xcc\\xa4h\\xf2\\xd6B\\xf8\\xcd\\xe2\\x91Zm\\x1f^I#Qo\\x0c;\\xf8\\xdf\\xae\\xae',\n          constraints={'min_size': 47, 'max_size': 128},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=30689,\n          constraints={'min_value': 11583,\n           'max_value': None,\n           'shrink_towards': 70_201_930_798_317_419,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.960464477539063e-08},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00ba\\U000994af\u00ab\\x18i\\U000d6b5d\u00ecG\u00f5x',\n       run_start=-4.56416193619576e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'B\u00e7\\x1d\u00ca\\x86H<\u456c\\U000c93b5': -1.3745189565612604e+16},\n       coverage=None,\n       timing={'\\n!\u00f0~\\n': 0.3333333333333333},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=9028, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6696067940417144},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 2, 0), ('c', 3, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u9a9b',\n       run_start=5123372063636615.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00a8\u00ec': 22579, 'o\u00ff\ud802\udf5c\\U000c7295\u00b4\\U00014a95': 24021},\n       coverage=None,\n       timing={'': 4.901118979580043e+223,\n        ')\\r2\ua906': -5.700897828619351e+16,\n        'S\\x11\\x01\\U000b7eba': -3.6433733265621416e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-92, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 0.001,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.41372501022306307},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\uac3e\uac59\uac3f\\U00046c18\uac7e\ud867\udf37\uac18',\n          constraints={'intervals': IntervalSet(\n               [(44029, 190015), (246148, 627334)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.354441141544875},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf6` 1\\xb4\\x0b\\x15#?\\xcf\\xff\\x81\\xa4|~\\xe5\\x16\\xc2Dya\\xa9\\xfdb`\\x0e\\xb0\\xe7\\xe6\\xce\\x10\\t1\\xdc\\xbaq[m\\xc3\\x88\\xb3\\xa4\\x80O\\x87\\xa8\\xe7\\xe98\\xe8W\\x08`\\xb4,\\x1d\\xa9\\x06\\xc4\\x1d\\xc3\\xd6o#r\\x14I\\x08\\x1b\\x86\\xce',\n          constraints={'min_size': 12, 'max_size': 112},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=722,\n          constraints={'min_value': -7,\n           'max_value': 2673,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud800\udc32\\U00010061\\U0001006c',\n          constraints={'intervals': IntervalSet(\n               [(65545, 620801), (886336, 893339)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x9a\\xdeW\\x8fzE.\\x08M\\xca\\x1f_\\x1b\\x82a\\xd1~\\xd1o\\xaeN\\x86\\x7f\\xaf\\x96\\xf7GWJ\\xea.b\\xb8\\x81\\xf2\\xc6P\\xc0Um\\xcc\\xae$\\x82?\\xe3/\\xbd\\xf9\\x1c\\x86\\xa3\\r2\\xd9\\xbd\\x11\\xfd.\\x84\\x93\\x04\\x9ebr',\n          constraints={'min_size': 37, 'max_size': 137},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.5469626133350748e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.4056294599547229},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-4_162_489_300_082_122_283,\n          constraints={'min_value': None,\n           'max_value': -127,\n           'shrink_towards': -24,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=59,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.656437780797334e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.05081394012813091},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=8.144303279343185e+307,\n          constraints={'min_value': -3.160610540985596e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9717501740552994},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.002700165961869061,
          "overall:gc": 0.0,
          "generate:args": 0.04812408291036263
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287684.07562025,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '': -3.4473521453251424e+16,\n        '\u00c2\u00b4\\x81}': -6.01264092168005e+16,\n        '\u00a5e\\U000e86f9zX3Q\u00c8\\x1d\\x9b': 2363065.7492111754},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('a', 3, 1)),\n                 (('b', 0, 0), ('a', 1, 0)),\n                 (('b', 2, 2), ('b', 2, 0)),\n                 (('b', 3, 1), ('b', 0, 3)),\n                 (('c', 2, 2), ('c', 0, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='7',\n       run_start=-1.7013763061811474e+133,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': -7.352576463136367e-299,\n        '\u00ba': -5.873680751063001e+16,\n        '`w\\x9c': 9365858511646402.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-2066240212, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.30868054568830666},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.35293286502504945},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xc7\\xc3\\x96wFp\\xb2\\x10\\xf8\\xee\"\\x98;\\x91\\xd0\\xdf\\x9b<\\xf5$C\\xf6\\xe3\\\\\\xfel\\xd1\\x0c\\xfa\\x99\\xf9\\xad\\xc0N(\\xdc\\x00T\\xc90\\xc8\\xff\\xdd\\xfc\\x1d\\x93\\xd9\\x8b\\xde\\xf4}\\xef\\x809\\xaa\\xef\\xa6\\xf7O\\xca\\x7f\\xde\\xb3\\x18\\xb3\\xc9>\\x10\\xae|vt\\x91\\xd6Go@\\xe9\\xdeP\\x8c\\x97on\\xdf\\x15\\xdc\\xca\\xd3\\xeb\\x91\\xe5\\x80\\x15,\\x05\\x1e\\xe5\\x8f\\x1f\\xaf\\xa4m\\xd2\\x87q\\xd4\\x8eo\\x98qx_\\xa2\\xc8#\\xf1E5\\xe6\\xd6\\xaf\\x88\\x07\\x1c\\xad\\x8b\\tpP\\xa8\\xc4$v|*',\n          constraints={'min_size': 43, 'max_size': 143},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_232_829_981,\n          constraints={'min_value': None,\n           'max_value': -1_232_829_865,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('b', 3, 2)),\n                 (('b', 0, 2), ('c', 3, 2)),\n                 (('b', 2, 3), ('c', 2, 1)),\n                 (('c', 1, 1), ('c', 2, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00cfQ\u00d8\u00a9(\\U0003b9c9\\x05!\\xad\\U000c876e&\u00f5\\U00014155\\\\',\n       run_start=-1.401298464324817e-45,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 7_963_806_600_599_852_043, '\\x0e\\x145': -26329},\n       coverage={},\n       timing={'\u00bc': 1.3091899111168202e-148},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=32099, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud848\ude73\ud848\udee9\ud848\ude27',\n          constraints={'intervals': IntervalSet([(139776, 547664)]),\n           'min_size': 0,\n           'max_size': 88},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.37731784899709553},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x1dU\\xdbJ\\xa3V\\x8c'\\xde,\",\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=10.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8230774799671405},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-44422,\n          constraints={'min_value': None,\n           'max_value': -19187,\n           'shrink_towards': -8895,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 110},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.822502031987994e+183,\n          constraints={'min_value': 2.2586146173540304e+79,\n           'max_value': 2.8021649304225273e+183,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.8238063494314403},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-5_728_572_684_754_958_790,\n          constraints={'min_value': None,\n           'max_value': -31109,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0010342500172555447,
          "overall:gc": 0.0,
          "generate:args": 0.021080123318824917
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287673.897546083,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': -60,\n        '\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='`\u00bd\ud801\ude8a\\x12\\U000ce76e\\x8f\u00c7I\\x08G\u13d4',\n       run_start=3.611010188554462e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -6.795581058703873e+16,\n        'git': -4.4621460466677174e-279,\n        '': -1.0822606287439578e+179,\n        ' \\U000b2d8c': 10919,\n        '\\x90 3\\x94G*\u6aa6': 30,\n        'q\\x84': -126},\n       coverage=None,\n       timing={'\u00cd\\x7f': -7.049272075424598e+16,\n        '\u00cb\\x81\u00c0\\x8b\u00f6\u00a6\\U000e90e8\\U0004e99e\\x8fJ': -3.3202407359740647e-307},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-12462, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=22,\n          constraints={'min_value': -2033,\n           'max_value': None,\n           'shrink_towards': 35,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"Xl\\xb1\\x02S\\x1e'l\\xbd\\x82U\\xb6\\xab>+w\\x1a\\xf8\\x8e\\xbbw\\xb8B\\x92\\x9f\\xea\\x1f\\xf0\\x00\\xfd\\\\\\xb8G\\xd2R%{\\xddYf\\xad,yE\\xdc\\xfd\\x00\\xa5\\x00\\x9a\\x96\\xdekZ\\xfb.3\\xb5r\\xe7\\xb73Mmr\\xafdE\\xc2\\xd2A\\xa8\\x1a\\x82:\\xba=\\xe0\\x8c\\x8bf\\x18\\xfbi\\xc1\\x83\",\n          constraints={'min_size': 43, 'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=300,\n          constraints={'min_value': 90,\n           'max_value': 593202243,\n           'shrink_towards': 0,\n           'weights': {279229569: 0.37148290604781997}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -1.2976249945073592e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.757268259393959},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-15350,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -48,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('b', 2, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='g0\\U000dec0aB\\x8aR2\\x98 E\\x01$',\n       run_start=4.310417763350441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'\\x1b\\U00064792': [101, 172800, 98],\n        '': [-13, 29280, 77, 267],\n        '\u00a8\\\\\u00da\\x02': [9418, -31518, -31038, -25634, 112],\n        'v': [-18219, 22451],\n        '\\x16\\x9e\\U0006e589\u00d2KW\\x19': [-25947],\n        '\\U0007bed4:\\x94A:B\u00c9E\\U00019051\u00fdB\u00a6f1Z\u00c9\\x96\\x05\\x9c\\U00058a44\\U000c1574': [-10351,\n         -7_312_620_696_337_107_130,\n         -28331,\n         22108,\n         110],\n        '\u00fe\\U000a16623\u00b3\u00d8': [89_938_126_939_545_424_331_101_265_765_272_218_900,\n         24603,\n         -127,\n         -70,\n         27,\n         -9278,\n         44_861_289_389_336_163_123_261_756_230_235_782_469,\n         27460,\n         1_355_702_494,\n         -31402,\n         15300,\n         19,\n         22634],\n        'jU': [70_008_712_519_847_607_074_534_957_694_836_357_628,\n         -2_442_225_696_106_597_061,\n         1732,\n         0,\n         16441,\n         11630,\n         2531],\n        '\\x8b\\x9b\u00f1\\U000770d2\u00a7\\x97\u00f5\u00ff&\u00ec\u00bd\\x06\u00d2,P\u00e7\"\\x97\u00bf\\U000fb0cfk\u00b3\u00e7\ud879\ude7d^': [524288,\n         14246],\n        '\ud821\ude00': [3220],\n        '\\x8d\\x8d[\\x11\\U000cdccb\u00d4&;\\x91\u00d1\\x00\\x1a\u00a8': [-15557,\n         -106,\n         -4147,\n         -42,\n         -2670,\n         20683,\n         5,\n         -61],\n        '\u00ee': [],\n        '\\U000d2962\\x7f': [-26183, -27],\n        '\\x9a\\x97\u00c0\\x180w\u00ea\u00fb;\u00c6<\u00b3\\U000764d5': [-7_353_307_060_880_992_056,\n         -1340,\n         28535,\n         -27491,\n         -1080,\n         100,\n         -7550,\n         2020,\n         29406,\n         88],\n        'd\\x89\u00c7\u00ea4\\U000a4264': [-40,\n         47,\n         105,\n         -24417,\n         112,\n         30138,\n         5_532_190_694_956_050_555,\n         -808490128,\n         32593,\n         -3_121_732_607_737_024_700,\n         65,\n         43,\n         -737117565,\n         6_029_099_934_171_579_561,\n         -1_979_881_121,\n         1_292_070_683,\n         2_836_568_817_436_278_080,\n         26425,\n         126,\n         -3_719_804_556_277_249_376,\n         5498,\n         -22648,\n         87,\n         -4979,\n         -48,\n         69,\n         30120,\n         -16570],\n        '\\x97\\x99/v': [100, 13463, -4821, -37, 47, 1552, -1_170_580_568, 117],\n        '__warningregistry__': [-73,\n         3_698_966_885_795_684_408,\n         -264_608_444_104_601_683,\n         -1_476_692_855]},\n       timing={'\\U000e536f\u00b8\\xadtN8': 0.1,\n        '\\U000c9080\\U00082ea6\u00c8\u52e6\ud858\udf64\\x92\u00a6': 4003499941410606.0,\n        '': -4.3910118437564184e+16,\n        '\u00c6': -inf,\n        '\u00cap\\U0005c25c{6\\U0001a130\\U0005b966E\\x0e\u00a8\\U0005d423': -6.0481065436256344e+16,\n        '\\U000f18cd\u00b7\\x9f\\U000b67463\\x90\\U000c9977~\u00e4\\U000dbf65\\U000fe7ab\u00b4\\U000df6dc': -4.156878299216644e+16,\n        '\u00af\u00f5\\x1d\\U00048667\u00d4': 2.5943230139146104e+16,\n        '\\U0004fa92': 9.415097221532013e+119,\n        '\u023a': 4.0447056909134523e-162,\n        '\\x94\u00a8\u00d6\\x18\u00eb\\x1d\u00d4[K\u00b4\\x99\\x05\u00af': -4.59492158616929e+16,\n        '\\U000d1697\\x98\\U00107516@\u00b2': 1.1105882039445803e-76,\n        '\\x08\u49df*': -2.1125362195976152e+71,\n        '\\U0003db5e|U\\x9b': -3.635280785845008e+172,\n        '\\x9bJ]S\\x90\u00aa\u00df': -5.348138487740454e+16,\n        '\\x82y\\U00101d14\\x02\\x7f': 6.179094949450942e-151,\n        'u\\x98': 6.084746104978171e-177,\n        'ra\u00ce\u00d9\u00d5)\u6c3c\u00acd\\x99\u00f8n\\U000e19b9\\x14': 1.2459120160360648e+16,\n        '\\x0e\\U000a40d8\\n': 4.097995589428432e+16,\n        'R\u00df': 1.9191487771953493e-258,\n        'oQW\u00f8n\u00c5\\x074(\\x13l': 1.05549730280733e+16,\n        \"'\": 6.587283580916653e-189,\n        '\u00e5\\x7f\u00d1': -9007199254740992.0,\n        '\\x18\u00f9Y\u00d0\u00fc\u00d3\\U000d08da\u00d8H\\x17\u00ab\\x11\u00db\\U000d3d42z\u00cb=\\x02\\U00016c06': -2.8771346363968204e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1555221698, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 0, 2)),\n                 (('a', 2, 2), ('b', 3, 3)),\n                 (('a', 3, 1), ('c', 2, 3)),\n                 (('a', 3, 2), ('c', 3, 2)),\n                 (('c', 1, 3), ('b', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000f38ac',\n       run_start=3.268945476797369e+52,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000a37a7': 8203,\n        '\u00f5\\U00107cb9\\x9a\\x94': 18779,\n        'Y\u00ccs\\x88\\x05': -76,\n        '\u00f9Z': -1.123613715977016e+116,\n        '\u00b8\ud857\udfb1\\x05': 12,\n        'K\u00e4': -3.720828713031647e+16,\n        '\\x96': -1.3735568596257144e+16,\n        'J:': 2.2026038526872465e-38,\n        '': 5.909712118144652e+16,\n        '0': 12565,\n        '\u00f3\u00b7\\U000848f0\\U000ab25e\u00dc\u00f7\u00bb%k\u00be6': -24784},\n       coverage={'': [852_734_050_784_758_996, 10469, -21365, -1_553_725_698],\n        '\\U000edbd7\\U000b4d25\\U0005d22a\u00cb': [29349,\n         51,\n         -555024515,\n         15537,\n         -12136,\n         31001]},\n       timing={'%\u00c8': 6.9512858981747896e+16,\n        '\"F\\U0008bf56\\x87\\U000ee301\\U00070f74\u00db': -1.1821732422119805e-94,\n        '\u00e9\\xad\\x81\u00dd': 4.813087790714511e+16,\n        '\\U000ad469\u00bf\\x88\\x85\\x9c\ud857\udf82\\x19_M\u00ef\u00d3\u00fe\\U00100698\\x0c': 4.605396655655481e-178,\n        '\\x04h\\U000d105ftj\\x91\u00c3\\x95\u00ed\\x93': -5.44838323650802e-236,\n        'q\u00ab\\U0010cc6b\\\\\\x0f\u00ffT\\x99U\\x13C\\U000d932c\\U00014c2a': -6.49449840127921e+206},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1539, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\uca38\\U00047346\uca7d\uca88\ucae3\uca4c\uca56\ucaf6\uca65\ucac3\uca60\ucad6\uca9f\\U00048aff\uca21\ucad8\ud865\udcd7\ucada\uca85\ucafa\uca28\ucad6\ucac6\uca17\ucac2\uca27\uca38\uca3e\uca37\uca18\ucaee\ucb04\ucaac\ucac6\uca10\ud867\ude5b\uca84\uca4c\uca0d\\U00045806\ucaeb\uca7c\ucaaf\uca1a\\U00046cdb\\U0002fb10\uca12\ucb04\ud85c\udeff\ucabf\ud821\udcca\uca83\\U000157bf\uca3d\uca54\ucad9\ucae5\uca4f\uca3e\ucab0\ucadc\ucafe\uca1a',\n          constraints={'intervals': IntervalSet([(51718, 305412)]),\n           'min_size': 33,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-1.3946354504726575e+267,\n          constraints={'min_value': -inf,\n           'max_value': 1.9737287072666552e+97,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.2735255917501845},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 6.103515625e-05},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00c9\u00b2\u00cc',\n       run_start=-2.90747598100986e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -74},\n       coverage={'c\\U000fe3ee\\U000f91c5M': [-25026,\n         -8_233_840_930_531_593_475,\n         -12178,\n         -2061,\n         -85,\n         38,\n         300,\n         7780,\n         -8_580_315_733_612_311_001,\n         24360,\n         80],\n        '\\x17\\U0010e76a\\x1e\\t\u00b6]': [-76, -11, 11418],\n        '\\x82\ua9cb\\x1d\\U000dbcf7\u00ddc': [127, -21344],\n        '\\U00050774': [13886,\n         1_485_042_621,\n         -4_789_156_902_454_884_249,\n         127,\n         -24,\n         -2445,\n         24,\n         32666]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-209354754, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.12434330842326793},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.34467020691017e+304,\n          constraints={'min_value': 0.5,\n           'max_value': 7.799379731063521e+305,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1e-12},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.2861740123094945},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-1.18791935917112e-89,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00106e69\u00c6|': -1.1255218929908226e+16,\n        '\\U000a7940\\x82v\\x9d\u00ff\u00e5\u00d0\\x91\u00f4': -60_165_054_552_753_666_477_897_641_247_961_614_699,\n        '\\U00085007\u00be\u00b0\\U0008f987\\U000d48ed7\\U000f5e82o\\xa0\\x13N\\x94\\x9f\\U00053554\\x14': -19497,\n        '\\U000a98bdq\\x1bY\\x89\\x0c\\U00107d2c\u00fcM\\U00099465': -1.1399077323221042e+16,\n        '\\U0009ca4a\u00ae\\U000eb45c\\x19\u00fe;\u00e2\u00e6v': 4},\n       coverage=None,\n       timing={'[>': 2.7441099732751984e+16,\n        '_\\U000c96e9\u00b8': -2.207479383432255e+168,\n        'X\\U000b69d1W\ud869\ude53H\\r\u00fc': -1.901501382625198e+16,\n        '\\U0003f519~': 4.1789302267372425e+282,\n        '\\x15\\x82\u00f6\\x9b': -1.9558938048444966e+169},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=3148, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=15275,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -119,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xfb\\n\\xb4\\x95\\x0fL\\x8e!'\",\n          constraints={'min_size': 9, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u08db',\n          constraints={'intervals': IntervalSet(\n               [(2020, 228400), (364455, 435039), (529678, 831044)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.00001,\n          constraints={'min_value': -2.1011239714119344e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9026202134338168},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'.hypofuzz.failures',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xcb\\xef\\xb7\\x84\\x07\\n\\xf0\\x93\\xae\\xd5\\x9f\\x9e\\xd7\\x89\\x88\\x98\"\\xf4\\x0fw\\xd9\\xd17\\x99\\xf4\\xcc\\xd3\\xdd\\xdf\\xa2hq\\xacPK2\\xb8\\xe6\\x13{\\x1e\\x98\\xa1(\\xbe\\xeaZ\\x0f\\xe5',\n          constraints={'min_size': 45, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=361445028,\n          constraints={'min_value': 361426024,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='`\\U00076918\ud804\ude00$\u00ae\u00e5\u00b9o\\x96\u00ec\u00b3',\n          constraints={'intervals': IntervalSet([(1, 38906), (65535, 486735)]),\n           'min_size': 0,\n           'max_size': 21},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9986716683701435},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.4558291501399233},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U000e40ba\u00d6\\x83\\U0008d811',\n       run_start=-0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000f527f\\x17\\x180^': 3.213449961751044e+16, '\u00a4\u00c5G': -3300},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-24706, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.7976931348623157e+308,\n          constraints={'min_value': 2.38040699247746e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.3525237516460196},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-17609,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -15600,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=6.501586754462763e+16,\n          constraints={'min_value': -inf,\n           'max_value': 6.912156520792751e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.1},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.180598584409248e+307,\n          constraints={'min_value': 3.402823466e+38,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.8088337333999289},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-13,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 524288,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-4.002134740749175e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -7.2400702827985956e-99,\n        '%\\U00050dc2\\U0005d768\u00c1\u00d3\u00b8\\x8aY\u00a9\u00f1%J\u00f2\u00c6': -744507496},\n       coverage={'j\\x10': [30341,\n         -44,\n         -7_209_835_589_617_602_289,\n         2_138_718_978,\n         27124,\n         -824_769_827_115_662_768,\n         -19635,\n         196969091,\n         -5547,\n         -41,\n         -32692,\n         16515,\n         3_842_357_185_599_553_031,\n         11532,\n         24005,\n         89,\n         -7,\n         127,\n         -66,\n         -20569,\n         2020,\n         -37,\n         323],\n        '\u00e41\\x8ao\\x81\u00ef\\U00093136\\x7f78\u00c8\u00ef': [-157_698_825_964_650_949_389_596_578_662_312_399_799,\n         -13,\n         -31983,\n         625967707,\n         -25,\n         13642,\n         -31246,\n         -72_292_397_918_854_855_955_302_772_763_237_645_898,\n         49],\n        '': [26828, -1575],\n        '}\\U000741c4\\U00042fc4': []},\n       timing={'\\x91D\u00f2\\U000328cb\u00ec\u00b4': -4.851557524299188e+16,\n        'a': -1.451378470601832e+16,\n        '': 0.02,\n        '\\x02\\U000b8f0a\u00e6\\x0b\u00d7e\\x8e\u00b6\u00c1\u00a5': -7.273983495996635e+214},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=997233827, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.26519455337630565},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=8.619619032913261e+307,\n          constraints={'min_value': -983021851967914.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1e-12},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.1798380704062206},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 2), ('b', 1, 0)),\n                 (('b', 1, 1), ('b', 2, 1)),\n                 (('c', 2, 0), ('b', 2, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-4.615694464683124e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'undefined': -1.6456408210438678e+180,\n        'S\\xa0': 6.357672893603163e+16,\n        '': 1_828_882_612,\n        '\u00f1\\U0010f7ee\u00b1v\u00a9\\U000c56ab@': 2.8558610448320096e+16},\n       coverage=None,\n       timing={'+e': inf,\n        '\\U0001eb8cs': 2.0970669052437164e+16,\n        '6\\U000a98c2\\x1c\u00de\\U00097c20': -3.563218583253223e+16,\n        '\u00dc\\U000cd8a9o\u00bf\ud888\udc9a$\u00fb?\\U000e30aa\\x83\\U00039924\\x13\ud886\ude43\\x10\\x0b\\x9e': 6.563116677014828e-34},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-56, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ubc51\ubc42\ubc35\ubbd0\ubc01\\U00045d8c\ud849\udf23\ubc56\ubb8d\ubc3a\ubbf7\\U000ca6c6\ubc4f\ubbe9',\n          constraints={'intervals': IntervalSet(\n               [(48013, 69873),\n                (102186, 240572),\n                (260265, 291558),\n                (497612, 524288),\n                (689185, 868298),\n                (888516, 960874)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00053d59\\U00046d18',\n          constraints={'intervals': IntervalSet([(289978, 414327)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('b', 0, 1)),\n                 (('a', 1, 0), ('b', 3, 0)),\n                 (('b', 1, 1), ('c', 0, 3)),\n                 (('c', 0, 2), ('c', 1, 1)),\n                 (('c', 1, 1), ('b', 2, 0)),\n                 (('c', 3, 0), ('b', 0, 0))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.0026684999465942383,
          "overall:gc": 7.079204078763723e-05,
          "generate:args": 0.06054770393529907
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287672.682060041,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.0688412668676196e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage=None,\n       timing={'': -6.934984149677416e+16,\n        '\\x0f-\\x8d\\U000a3d23(': -3.560507888610526e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\x04\\U00105bf8\u00cd\u00cc\\x93\\x0f[\u00dd\u00aan\u00f7/\\x05\\U00013804M\\U000be9a9[\\xad\\U000aac90\u00c1\\x03C\\x06\\U000da06d\\U00097129\u00a2\\x0c',\n          constraints={'intervals': IntervalSet(\n               [(0, 219786), (587005, 723409), (727739, 1114111)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x08V\\xe5\\xe7\\xf9\\xfe\\x7f\\x0fn\\xe6L}zJ\\xaf\\xdb]b\\xe7\\xed\\r\\x98'\\xa9E\\xf2M\\xb0s*/Hq\\xc2\",\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u9989\u997f\u9976\u98cd\u9908\u98b9\ud807\udf48\u9928\u990a\u991a\u98da\u98ba\u98fe\u994a\u98be\u98e6\u99b0\u98cc\u9940\u99a8\u9963\u98b6\u98c6\u98f1\u98b7\\U0001ab55\u98b3\u98db\u999d\u98f2\u9988\ud81e\udd7f\u98fc\u98e4\ud80d\udc1e\u9936\u994a\u999e\\U00014819\u9961\u998e\u98ef\u9947\u992f\u98d6\u9939\u9965\u98ef\\U00014b4e\u99a1\u98bc\u99ad\u98e3\u98ca',\n          constraints={'intervals': IntervalSet([(39090, 193532)]),\n           'min_size': 43,\n           'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'3>\\xec\\xda/\\x99\\x97\\x1a\\xddG\\xca\\xe0\\x1a\\xdf\\x01\\x04d4WK\\x9c\\xe1\\xc0\\n\\xb9\\\\\\x8d\\x93u|7f\\x84k\\n(d\\xabg{',\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5616803017953412},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2166,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 48},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x08\\U000768e7\\U00041f43V5c\u00d6',\n       run_start=0.5081124242163241,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00aa\u00d9#\u00f6\u00a8\\x9d~\u00d4\\x91': 54},\n       coverage={'\\U000db9f6': [-6,\n         0,\n         2_447_894_421,\n         -28127,\n         -19785,\n         -6,\n         29882,\n         20369,\n         -3_130_232_818_652_108_597,\n         85,\n         -27499],\n        '\\U00088d89': [-11282, -114, 2464, 63],\n        '9': [41,\n         -71,\n         1_538_639_160,\n         12888,\n         42,\n         -116,\n         -13483,\n         19533,\n         -899111321,\n         -10966,\n         125]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28177, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud805\udc29\\U000c01a2\ud805\udc1b\\U000113fa\ud805\udc2d\ud805\udc4c\\U000113c4\\U000ae8d7\\U000b9f3a\ud805\udc33\\U000113c1\ud805\udc0a\\U00094e63\\U000113cb\\U000113c2\\U000113b3',\n          constraints={'intervals': IntervalSet(\n               [(70559, 181008), (369285, 611030), (690036, 812382)],\n           ), 'min_size': 11, 'max_size': 111},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=24743,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-25347,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.09505691732372215},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=12369,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-5_247_597_246_243_199_003,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 2,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 0), ('b', 1, 2)),\n                 (('c', 0, 0), ('b', 0, 2)),\n                 (('c', 1, 3), ('a', 0, 0)),\n                 (('c', 2, 0), ('a', 1, 0)),\n                 (('c', 3, 1), ('c', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='.`^',\n       run_start=-1.66022872165979e+51,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ef': -5.302749539441829e+151},\n       coverage={'W\u00abB\\U000a0428': [-20347]},\n       timing={'': 6.398333604706395e+16,\n        '4': 0.02,\n        '5\u00ba\u00bf\\U000cb8f5': -9.879935630357416e+98,\n        'e\u00c2@\u00de\\x00>': 6.810106133084107e+198,\n        '\\x96\u00b6\\x92\\x16\u00d9': -5.070008794616543e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=226574512443928699, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=9.163172101371365e+184,\n          constraints={'min_value': -1.0976606777784282e-228,\n           'max_value': 1.4724626570260807e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 6.11089301306765e-90},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'+:\\x88{=\\xbf\\xc6\\xe2)\\xd5\\xda\\x8dq\\xa6|\\x90b\\x9f\\tS\\xca\\xc0\\xc4\\xd1\\xde\\xadh\\xae\\x93\\x14\\x1b]\\xb99\\x15\\x8b\\xd0\\xb6\\xc4\\x8c\\x1d@\\xf7\\xfb\\x88\\xb7X\\xab\\xca6\\x07\\xdd\\xb6\\xa0b\\x04\\xbf\\x9c\\x93\\xb8\\xe8',\n          constraints={'min_size': 32, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-18,\n          constraints={'min_value': -69,\n           'max_value': 75,\n           'shrink_towards': 0,\n           'weights': {40: 0.34185586896812536, -18: 0.5127838034521881}},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 2, 1)),\n                 (('a', 0, 2), ('c', 1, 3)),\n                 (('a', 1, 3), ('b', 0, 0)),\n                 (('a', 3, 0), ('b', 3, 1)),\n                 (('b', 0, 3), ('a', 3, 3)),\n                 (('b', 1, 3), ('b', 3, 2)),\n                 (('b', 2, 2), ('b', 0, 2)),\n                 (('b', 2, 3), ('c', 2, 2)),\n                 (('c', 0, 2), ('c', 0, 3)),\n                 (('c', 1, 3), ('a', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x1cW\\U000ad034U\\x01',\n       run_start=8.68725418294266e-62,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'_format_boolop': [8742,\n         86_363_024_003_521_988_694_209_940_693_782_686_367,\n         4_294_967_295,\n         1636,\n         -974,\n         -13733,\n         -9331,\n         -23932,\n         29330,\n         -2557,\n         15233],\n        '\\x81\u00cb)\u00f7\\U001008c8': [100, -75, -18]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=11053, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.20542754795681178},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0005fba4\\U0005fb85\\U0005fbeb\\U000951a9\\U0008b6ac\\U0005fb33\\U0005fb97\\U000b0ab9\\U0005fb41\\U0009ed93\\U0005fbfb\\U0005fbbb\\U0008b1ae\\U000b4389\\U0005fb56\\U0005fc01\\U0005fb26\\U0005fb9b\\U0005fb5f\\U000b8a44\\U0005fb4a\\U0005fb7e\\U0005fb7c',\n          constraints={'intervals': IntervalSet(\n               [(391950, 399800), (568995, 767347)],\n           ), 'min_size': 20, 'max_size': 120},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.002063666994217783,
          "overall:gc": 0.0,
          "generate:args": 0.035883497912436724
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287685.271854666,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.3065667261601386e+308,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7840189479806097},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=11831,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 8,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(0, 1)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 3, 2), ('c', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=4.383866235221346e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -76, '\u00be\\U00053c6c': -1.1125369292536007e-308},\n       coverage=None,\n       timing={'\ud820\udc73': -2.6849257433153476e+16,\n        '': -3.7161404199056197e+52,\n        '\u00ee': 0.0001,\n        'T\\x8a\ud86a\ude37': -5.606297728676653e+16,\n        '\\x15': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": -1.192092896e-07},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-5343828600099348910, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=4_715_676_941_197_531_773,\n          constraints={'min_value': -28344,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00a9\u00dad',\n       run_start=2.3887787566105204e+253,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 138_955_625_668_119_115_493_546_774_159_014_382_418,\n        '\\x8e\\U0005c0b7\u00cb\u00d1\\U0003ec41': 27448,\n        '\uc458\u00d0': 1e-12,\n        'r\\x02\u00de\\x9d\\U000883ea\\U000b24e3\u00bbA1': -24552},\n       coverage=None,\n       timing={'\\U0007250fA\u00d2\u00e3\u00d8': 1.820421304775132e+16,\n        '': -3.884414144800821e+16,\n        '\\x16\u00eb>': -3.230668149753387e+257,\n        '\\x89\\x90!{@\\x9f^': 4.0063728049491484e-116,\n        '\\x12\\U0008eeb2\\x99b\u00f0\u00bc\\U0008a9c3': -2.916015083515857e-36,\n        'Y\\U000becc2\u00c9@`W\\x99<\u00af,$\\x06\u3365.\u00d6\\x11\u00cd': 1.9,\n        '6\u00d3T': 1.2821188955089104e+227,\n        '\ud844\udebau\u00d4\u00a3\\U000ffae6\\x1d\u00fan\u00c7\\U000953a9': 7.018121404838279e+16,\n        ':\\x0f,;': 5.204635037763586e-227,\n        \"s:'m\\x18\\U000edf11O\u00a3\u00ee\\x11m\u00f2\\x9c,\u00d7\": -6.35406458501527e-181,\n        '\\U00067b6bo\\U000a76dd\\U000a9208': -6.564265144499441e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=10758, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x08V\\xe5\\xe7\\xf9\\xfe\\x7f\\x0fn\\xe6L}zJ\\xaf\\xdb]b\\xe7\\xed\\r\\x98'\\xa9E\\xf2M\\xb0s*/Hq\\xc2\",\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u9975\u995e\u996e\u9967\\U0005017c\u9972\u9946\u998f\u98eb\u9966\\U0004e2ba\ud836\udc75\u98cd\u994c\u996b\ud860\udcf3\u98ce\u992c',\n          constraints={'intervals': IntervalSet([(39090, 360049)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ub1ad\ub162\ub203\ub180\\U000c80e3\ub20e\ub1b5\ub236\\U000c6c66\ub194\ub20c',\n          constraints={'intervals': IntervalSet(\n               [(45390, 49885),\n                (84777, 235102),\n                (280342, 335453),\n                (363180, 390003),\n                (406659, 513885),\n                (773498, 986531),\n                (1075016, 1114110)],\n           ),\n           'min_size': 6,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.9634006267866544e+16,\n          constraints={'min_value': -4.382635558919333e+16,\n           'max_value': -1.65757757046508e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1e-12},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x84',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('a', 1, 1)), (('b', 0, 3), ('c', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\t\u00a5',\n       run_start=-inf,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -4.264955862492021e+16,\n        'I<\\U000b09a1G\\x18\u00cf': 1.6065136803419982e+242,\n        '\u00a3,<\\U000c6040\\x96\\x84': 0.02,\n        '\u00a8\u00eeq7': 2.718648545774305e+16,\n        '\\U00033fd6\\U00054cb1l\\x12\\x12\u00b7': 1.0916143445927012e+16,\n        '\\U000ee092n\\U000ea2b6KSp\\x05\u00a5\u00e3\\x9b\u00f4N\\U001018e6\\U000a6622\u00bc\u00d9\\x1d\\xa0': 8.457866179931404e-280,\n        '\"Z': 0,\n        '\\x95\u00d4\\U000d535b\u9eae\\U00042f4a': -2.3805138454079453e-280,\n        '\u4904L\\U000e577b\u00a6': -6.251471704178e+16,\n        '\u00df\\x03\\x9d\u00f1': 3.577927150385927e+16},\n       coverage=None,\n       timing={',\u00d9!\u00e3J\u00dc': inf,\n        '\\U00081ba0\u00a9\\U000624d0': 5.676502057055281e+16,\n        '\\U00047af7)4\\x18': -inf,\n        '\\x07': 4.267344138920692e-280,\n        '\\x07\\x8df\\x1b\u00b0\u00c0': -2.6276555286958785e-295,\n        '\u00ea': 2.3976081430761276e+223,\n        'I': -6169356574171489.0,\n        '\u00cc#x\\x83\\U0003dbab\u00ff\\U000b2561\ud869\udfad\\x08': 7.780847053153932e-141,\n        '\\U000b6e19': 9.601436480366217e-172,\n        '(\u00eb\u00ce\u00e3\\x13nK\u00ce\\x8a\\U000be42d\u00e0\u00e6\\U00082523\\U000abfbc\u00d1\u00dbIK\u00f8\u00ae\u00a1\u00b6\u00f6\\x14\\U000d56dfc': -1.0073866321420144e+125,\n        ';\\x0c': -inf},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-15132, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=42,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2237464743305020.0,\n          constraints={'min_value': -1.3756714651094942e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.11795271644112096},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 3, 2)),\n                 (('a', 0, 2), ('c', 2, 2)),\n                 (('a', 0, 3), ('a', 3, 2)),\n                 (('a', 0, 3), ('c', 0, 1)),\n                 (('a', 2, 0), ('a', 3, 2)),\n                 (('b', 2, 3), ('b', 3, 2)),\n                 (('b', 3, 3), ('b', 1, 1)),\n                 (('c', 2, 1), ('b', 3, 2)),\n                 (('c', 3, 0), ('a', 0, 2)),\n                 (('c', 3, 1), ('c', 2, 2)),\n                 (('c', 3, 3), ('a', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-1.132406317731177e+141,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00c2\u00de': -1_183_043_170,\n        '\u00f5\\x7f\u00e3E': 2.4204115617230988e+16,\n        '\u00a7\u00bc': 1.7575403804845295e+308,\n        '\\x92\\x9c\u00f2\\U00068591\u00c0': -20217,\n        '\u00bdd': 0,\n        '\\U00062228Pc\u00aa\u00e1\\x95\u00da\\x17\u00ff\\U000f8d0e\\U00058ea7\\x99\\U0006179fD\u00aah\\x1f': 3.991450057019636e+229,\n        '2': -5.903938007682954e+16,\n        '': 4.600688470611416e+16,\n        '3\\U000f0e0dWoA\\x8e\ud859\ude0aof\u00d5': 4.527019500612823e-282,\n        'LPT1': -21192,\n        '\\x05\u00b0': 1.9},\n       coverage=None,\n       timing={'K': 4.0768758711289606e-285,\n        '\\xa0>\u00fc\ud846\udd8b\\x03V\\x1c\\U000c6c8fM\\x89\\U0008bc00': -3.769147598014144e+129,\n        '\\U00097754\u00ab\u00eb': -4.1535333875625025e-80,\n        '\\x1a': -7.824550890717959e+259,\n        'h\u00a1': 6.717778152579164e+16,\n        '\\x1a\\x02\\U000b7b96\\x1b\u00ab\\x99Z\u00c9\\x84\\x93\\U000c5d51': -6.660223588277933e+16,\n        '': 1.115246217506583e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1905, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6258547835980578},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('b', 2, 2)),\n                 (('b', 1, 2), ('a', 0, 0)),\n                 (('c', 0, 3), ('c', 2, 1)),\n                 (('c', 1, 0), ('c', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00ac',\n       run_start=-1.3053787196854502e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000565f0\\x1d\u00b2\\x06|\\U000f8476\\x18\u00e1\\x88': 3.3453412305413828e+16},\n       coverage=None,\n       timing={'\\U00084eb9\u00be\\x86\u00f7\\x11B\\U00032a59': 8.169888625982362e+115,\n        'lorem \u0644\u0627 \u0628\u0633\u0645 \u0627\u0644\u0644\u0647 ipsum \u4f60\u597d1234\u4f60\u597d': 1.485097827688308e+16,\n        '\u00cd\u00a8\\x12`\u00a5\u00b4': 5.594524112173722e+16,\n        '\u00c3O?\ud883\udec5\u00ba\u00d8\\U000ef14b': 1.8237511861702172e+16,\n        '\u9db8\u00c2\\ue782,': 5.6752126923006776e+16,\n        '': 2986098220784605.0,\n        'C\u00cd\u00c8\\U00040b86': -2.9325808641099675e-132,\n        'H': 1.6918690889788702e+55,\n        ':\\x85\\x17': -1.7976931348623157e+308,\n        '\\U0001c0eaQ\u00bd': 1.6473150890454684e+16,\n        '\\U000ca2eb\u00c3X\\x0b\\x1aB\\x9e': -1.7186022007272442e+16,\n        '\\U00076a51\u00b9\u00e8\u00dc{\u00c0\\U00052d97\\x1a\\x86\u00d1': -1.1125369292536007e-308,\n        '\u00d0#\u00efM': 2.225073858507203e-309,\n        '\\U0005bba0\u00d2:\\x87\\x18\u00a3\\U000a4faf': 3.04884024509868e+94,\n        'r\\x08I\\U000b5d73/\u00d8`': -2.367516821580237e+199,\n        ')\\x0b': 3.238069105573293e+16,\n        'v': -5.825774703078142e+16,\n        '\\x17': -1.2507234766765392e+16,\n        '9': 1.4426443799892372e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=31, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xf6\\x80Y\\\\i)\\xcc\\x93\\x17\\x11Y\\x8f)\\xcd;T\"z\\xca.Aq\\x8ea\\xd2\\xfe\\xce\\xc1Q\\xefr\\x10\\x8a\\xf0\\xd9\\x10\\xf7\\x11',\n          constraints={'min_size': 31, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u7051\\U00089026\u6fac\u6fda\u703b\u6fd0\u6faa\u6fc7\u7077',\n          constraints={'intervals': IntervalSet(\n               [(28546, 82781), (445310, 522782), (523952, 943188)],\n           ), 'min_size': 8, 'max_size': 27},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6467182742379994},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 1, 0)),\n                 (('b', 0, 3), ('a', 2, 2)),\n                 (('b', 3, 1), ('b', 3, 0)),\n                 (('c', 0, 0), ('a', 0, 2)),\n                 (('c', 1, 2), ('a', 2, 1)),\n                 (('c', 1, 2), ('c', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='F\u00ae\\xad\u00dc\\x1a\u00b8\u00c5',\n       run_start=-5.217023056355167e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e1\\U000d2ec4\u00ceM\\U0004bdde\u00bd\u00db(\\x9c': -1.5818533154351344,\n        '\\x19\u00e3\\U000142b6\u00f9\\x8dV\u00b7\\ue5a6': -3.092974715207137e+99,\n        '\u00d3\\x91\\x9b\\x9e.f': 1.1472468145656374e-67,\n        '\u00ba[)V': 6.09862383532198e+16,\n        '$\u00de\u00f2\ud849\udef2\u00be\\U0009d054\\x7f\u00dcJ\u00da\u00d4tc\\U000f7c33': -106,\n        '\u00d3\u00c9\\ue1c1': -17534,\n        'C\u00e4\\x9a': 4.13355851597742e+228},\n       coverage={'': [8288,\n         96,\n         24941,\n         8704,\n         -27801,\n         -122,\n         43,\n         -27270,\n         46,\n         512,\n         -353,\n         29,\n         -6470,\n         -162_791_902_522_188_883_908_596_855_977_558_723_094,\n         511,\n         8_886_838_898_912_635_657,\n         -7_026_434_525_959_860_158,\n         -3_797_189_573_167_996_208,\n         79,\n         -5_800_821_702_481_814_562]},\n       timing={'\u00d7\u00b1<\u00de': 2.0896197125186806e+131},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=15610, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00085287\\U0008527f\\U000b6185\\U00085277\\U000852bb\\U00085230\\U00085265\\U0008ffdc\\U0008530d\\U00085329',\n          constraints={'intervals': IntervalSet(\n               [(545322, 677314), (701730, 760697)],\n           ), 'min_size': 10, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6207764941478652},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=3914,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 10,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xa9\\xcdgpZ',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-90,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.943303573461679},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud83c\udd32\\U00044d96',\n          constraints={'intervals': IntervalSet(\n               [(127253, 141856),\n                (166333, 389489),\n                (408834, 588541),\n                (871755, 942294)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.1754943508222875e-38},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x9f4\\xb9\\nQ\\xf3BVp\\n\\x18\\xb1LE\\xf7\\xf8#\\x82wjb\\xfaL\\x94\\xd7Vt\\x18\\x0e\\xb9\\x0fj9\\x18@4(\\x0f\\xef\\xb0_\\xb4\\xe7\\x85<K\\x85\\xab\\x99\\x91\\x19Nj\\\\\\x85\\x86\\xee+',\n          constraints={'min_size': 38, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0006728f\\U000672dd\\U00078d3d\\U00067272\\U000672a0\\U000672d5\\U0006724a\\U00067223\\U000672d4\\U000672bf\\U0006720a\\U00067211\\U0006722d\\U000672e3\\U000672bb\\U00067290\\U00080fe4\\U00067201\\U0006720f\\U000672b5\\U000688cd\\U000671fd\\U00067268\\U000672bd\\U0006723a\\U0006723f\\U000672eb\\U0006729c\\U00067261\\U0007eb23\\U000672a5\\U000927b3\\U0006727a\\U000672aa\\U00067267\\U000672e6\\U000b381d\\U000a3f2a\\U00067252\\U00067214\\U0006723a\\U0006729e\\U000672c1\\U00067243\\U000672c2\\U000672b4\\U000672ab\\U000672ce',\n          constraints={'intervals': IntervalSet(\n               [(422383, 474766), (484878, 782714)],\n           ), 'min_size': 47, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.0116700809518636e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.99999},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 126},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9254141883449902},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd4^\\x11\\x14',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('a', 2, 3)),\n                 (('a', 3, 2), ('b', 2, 1)),\n                 (('b', 1, 2), ('c', 3, 3)),\n                 (('b', 1, 3), ('b', 2, 3)),\n                 (('b', 3, 1), ('a', 3, 0)),\n                 (('b', 3, 3), ('c', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=':\\U0006d7b3\\U0007a52c',\n       run_start=1000.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'A\u00e5\\U0010a5d8': 6.714413810720748e+16,\n        '[XPASS(strict)] ': 2.9839860572725386e-300,\n        '\\U000f7525I\u00b2\u00cbH\u00a5': 4.560182994213085e-225,\n        '\u00f4W{\u00c0q\u00c9\\x98r\u00c9U': 49,\n        '': -4.82721358324024e+16,\n        '\\U0009ee18\\x83\u00ec(\\x0f\\U00057304\u00de\u00aa4\u19fcOZ\\x8a\\U00055533\u00d3\u00d9\u00ac\u00e3': 7_423_828_084_295_710_277},\n       coverage=None,\n       timing={'\u00afx\ud863\udf64': -251177387879403.0,\n        '\\x8b\u00b3\u00ee\u00b7\\x83\u00d42\u00d9': -6.862462852111041e-274,\n        'Q': -2.586442069251836e+16,\n        '': 0.001,\n        '.\u00be\u00d3\\U0003ad19\u00ef*\\U0009eddc\\x11c\\x0c \u00eb': 0.5,\n        '\u00e2,\\U000e2a0c\u00cc\\U00094112\u00e2\u00camA\u00c8M\\x01\ud80c\ude62.': -8.857234911076321e+284,\n        'W\\x96!\\\\\\x9a#\\x00': 4.44588459377769e+16,\n        '\\x96\u00e3\u00d8y\u00cf\u4356\\n\u00df\u00a5\\x95\u00fb\\x19r\u00ac\u00f9Iu\\x82\\U0001ea8e9': -1.0603714603701563e+291,\n        '\u2ae0\\U0001daf4': -5.535985103340904e+16,\n        'G': 6.143407538222911e-208,\n        'd': 1.7976931348623157e+308,\n        '\\U00085418\u00cam[': -7.104603481225985e+16,\n        '\u00a8\\x9c\u00e2\u00fd': -2.2352104028674556e-246,\n        '\\x14\u00b6\u00b3': 3.416583387546748e-74,\n        '_\\U000b8859\\x15\u00a2rK\\x80\\U0005f1cb\\x92\u00c2\u00bdJ': -5.8616289249192216e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-887, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 3, 0), ('a', 3, 2)), (('c', 2, 3), ('b', 3, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.002978542004711926,
          "overall:gc": 0.0,
          "generate:args": 0.1030954549787566
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287662.124172291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\x1b\\U000e5810\\U000d0999y',\n       run_start=1377199369426153.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'U': [-22, -9324, 13607, 20683, 62, -70, 136, 13710, -13422]},\n       timing={',./;\\'[]\\\\-=<>?:\"{}|_+!@#$%^&*()`~': -nan,\n        '\u00fb': -2.214425719176716e+16,\n        '\u00cc\\x0f\\U00011393\u00cb\u00ccS\u00ea\u00cc\\x91': 5e-324,\n        '': 1.595419519185399e-97,\n        '\u00fa\\U00048348': -1.9,\n        '\\U000f90fa': -3.4846250200228256e+16,\n        '\\U0001d3f4': 8168681972950451.0,\n        '(\\U00083c50\u00c1\\x17\u00d4\\x89\u00c7\u00ef': -5.960464477539063e-08,\n        'HOSTNAME': -9085476454381164.0,\n        '=\u00ce\u00d5\\U00108d5b': 5.810281773761443e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 2, 3)),\n                 (('a', 1, 0), ('c', 2, 0)),\n                 (('a', 1, 1), ('c', 2, 3)),\n                 (('a', 1, 3), ('a', 2, 0)),\n                 (('a', 2, 1), ('a', 3, 3)),\n                 (('b', 1, 1), ('a', 3, 0)),\n                 (('b', 1, 3), ('c', 3, 1)),\n                 (('b', 3, 3), ('a', 3, 0)),\n                 (('c', 0, 0), ('a', 1, 0)),\n                 (('c', 0, 0), ('b', 0, 0)),\n                 (('c', 0, 2), ('a', 1, 1)),\n                 (('c', 0, 3), ('c', 0, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00c3\u00c0',\n       run_start=-1.0180077601264852e+40,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'V\\x02\\U00054863\\x14': 2.4861176656405348e+16,\n        '\\U00097db4\u00caL\\U0006d9cd': 1.261541285889396e+51,\n        \"{\u00ef\\U00103ae8\\U0009410f\\x7f\\U0010c631'9\\U0005f0b5\u00a1V\u09ab\": -12304,\n        '\\U0006357d\ua361N\u00c2': 47},\n       coverage={},\n       timing={'\u00f7\u00f2': -5e-324,\n        '\u00ee\u00c7': 4.849786978451532e+16,\n        '\\U000644d7\\x18': 0.00010905553514999474,\n        '\\x06\u00f4p\\x83': -5.639917823382856e+16,\n        'm\\U000e91f1': 1.99587958786028e-226,\n        '\u00d87x': -inf,\n        '': -1.1754943508222875e-38,\n        '\\U000a30f9:\\x8a\\x8e\u00f5\u00df\\U0010767d': 3456887799617247.0,\n        '\\U000d11ed\u00cf~\u00a9': -3.348870448709122e-126},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-493815869721874347, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'U9\\x86k@{\\x04\\xe1\\xc8\\xea',\n          constraints={'min_size': 8, 'max_size': 108},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('b', 2, 3)),\n                 (('a', 3, 0), ('b', 2, 1)),\n                 (('a', 3, 1), ('b', 1, 2)),\n                 (('b', 0, 2), ('b', 2, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'\\x18\u00df^': [8238,\n         -114,\n         3_102_681_273_526_428_517,\n         -158_682_309_272_286_527_112_784_195_344_473_081_069,\n         -29612,\n         25745],\n        '': [15219, -1, -43],\n        '\\xa0TE\\x97\u00d1': [-52, 97],\n        '\\U000cc46cA\\x86\u00ab\u00dbd-\u00ae\u00b5\\x90\\x83\\U000e48aa@\\U0005978b\\U0001cdca\\U000f9f0b\u00cc\\U000a2eaa\\U00039986\u00a40\\x89\\U000136ae3\u00ea\\x07': [-42,\n         -13002,\n         12614,\n         25652,\n         22918,\n         8422,\n         10007,\n         8201],\n        '6\\x99\\x955\\U00040971\\U000ac2c2\u00a1U\\x14\\U0001ebff\u00abe6*3\\x85z': [-21730,\n         7,\n         10857,\n         -8000,\n         -5657],\n        '\\U00040249\u00e0\ud84b\uddc5': [23087,\n         -5_947_586_360_022_626_614,\n         80,\n         3600,\n         28015,\n         -14913,\n         -30083,\n         -30028,\n         -29629,\n         1213,\n         134_005_889_089_270_956_796_650_220_359_285_807_737,\n         -184_480_973_065_077_747,\n         -8737,\n         -904080890,\n         31654,\n         13852,\n         5133,\n         10460,\n         3144,\n         25342,\n         -4,\n         15008,\n         28,\n         -21567,\n         0,\n         -9214,\n         -45_670_093_704_769_350_203_791_042_875_102_866_466,\n         -31]},\n       timing={'x': -3.0834047358695513e-69,\n        '\\U0004b41a\\t\\x00': -5.62728094538203e+153,\n        '\u00cd|*': 1.7136465803720538e+16,\n        '\\U000bc4a1n\u00f0\\U0009b9ec': -3.3157221058865574e-245},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-21, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00dd0&\\U000ff0c7\\x0c\u00c1\u00c5\u00a8\\U0007950eMB\ud800\udce9\\x84EZ\\x8e\u00f7\ud862\uded1B\\x93\\x85\\x97',\n       run_start=3.209102902345316e-66,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 1566},\n       coverage={'\u00b0\\U00082216z\u00d5\u00a6\\x11\\x98s +\\U000a7cbe\\U000c8ff4\\x06\\x82': [],\n        '\u00bf;\u00a7\u00ea\\x97': [24672,\n         6296,\n         31030,\n         -23531,\n         -17635,\n         -76,\n         1367,\n         18293,\n         28063],\n        'r': [26,\n         -90,\n         -93,\n         4515,\n         -5827,\n         -3_540_088_846_328_878_296,\n         153_935_437_945_864_942_390_129_384_681_347_408_877,\n         27432,\n         -88,\n         17959,\n         -6405,\n         16494]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-7545, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='1e3',\n       run_start=6.894826420396177e-298,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'failures': 0.0001,\n        '': 5.610711314791343e+16,\n        'G\u00de\\nB\\x8aW\\U000e407bQ': 4.857160134443782e+229,\n        '\u00df\u00c8%\\U000ff062\u00c0\u00c5\\U000cb5c3\\x04#\\xa0\\x9c\\U000d48d2\u00ae\u00cd\u00cf\\x1f\\U000b71b7\ud85c\ude11': -17835,\n        '\\x8a\\x9b': -5.479965745857133e+16,\n        'r\\U00106c22\u00fc?\u00bbn,\\x03\u00ae': 5552,\n        '\u00a1&\\x14\u00ca\u00dd\\U00098245': -5.688379124446837e+16},\n       coverage=None,\n       timing={'\u00c5\u00f7': 2118612430024521.0,\n        'X\u00ccL\u00b2\\xa0F\u00b5': 7.275486328704324e+158,\n        '\\U0009e233\u00bf7': -4.231138038456623e+224,\n        'xn\\U000cc035\\x96d\\x1d|\\U000458ad': 1.175494351e-38,\n        'I3': -2.225073858507e-311},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-2281001043737133315, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 1, 1), ('b', 3, 2)),\n                 (('b', 2, 3), ('c', 1, 3)),\n                 (('c', 0, 3), ('c', 1, 0)),\n                 (('c', 3, 1), ('b', 1, 2)),\n                 (('c', 3, 3), ('b', 0, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.000941749953199178,
          "overall:gc": 0.0,
          "generate:args": 0.013333540875464678
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287665.73067675,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000acbfa\\x11\u00b6a\\x7f9',\n       run_start=-1.384846180481668e-294,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -6.795581058703873e+16,\n        '\u00d40k\u00fe!o\u00d0\u00d8\u00cdAB\u00e0\u00f5\ud801\udd9e)\\x0c': 3.402823466e+38,\n        '\\U0009651d\u00f8': 0.702540533879951,\n        '^\u00c3\\U000a0cb6\u00c0\\U0008a2a2\\x16\u00d41\u00af\u00eb': 1},\n       coverage=None,\n       timing={'\u00bc\u00a1\\U000ca2e5\u00cc\u00d6\u00cb\u00be\u00d8': 1.625980013105823e-196,\n        \"'b\": 6.152672606423289e-132,\n        'jn\u00ae\\x07\\U0007a531\\U0010d869\u00bb\\n\u00f1Z\u00bc\\x8a\\U0006a2771\u00f6\u00de\u00b9\u3d53$\ud865\udff1': 5.865669692030213e+16,\n        'i\\x12\u00f0\u00a7K\\U000db7b8\\U00049b9c\\U000c2b16\u00e9_\u00f9r\\x93\\x11': 5.5200808992863464e+16,\n        '\u00c9\u00a8\u00a1t\\x80': -1.5580581414300565e-249},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.16365610948779932},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=39,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7127430189864891},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=32991,\n          constraints={'min_value': 23491,\n           'max_value': 2_447_894_421,\n           'shrink_towards': 0,\n           'weights': {23583: 0.24948741243898437,\n            1_304_721_908: 0.04672130590122351}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'B\\xf2\\x07\\x89\\xa47\\xd6\\x84\\xe3\\x1d\\xdc\\xeay\\xfa\\xd9\\xad\\x03\\x1c\\xdb\\xe9\\xd0m\\xb5\\x1e8\\xf9\\xe0\\xb5\\\\\\xc7\\x91\\xbf\\xf6\\xbbu\\xe6(Z6\\xd8P\\xa5e\\xb5@U\\x02*\\xbb\\xd7c\\x9f\\xe4!\\xcdK',\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.7046164756058518},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.141332755981229e+16,\n          constraints={'min_value': 3.031264196410321e+16,\n           'max_value': 4.735143992279532e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.43533537495561003},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-1.7976931348623157e+308,\n          constraints={'min_value': -inf,\n           'max_value': -4.583142822558385e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.11056774209712719},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.02},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.7050203987182644e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7861056027870377},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7790638778103707},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.0838196678909052e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.1125369292536007e-308},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00015ece\\U00015f3a\\U00015f07',\n          constraints={'intervals': IntervalSet(\n               [(89783, 107931), (495474, 606723), (665422, 728672)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.855301020566052e+16,\n          constraints={'min_value': -inf,\n           'max_value': 1e-05,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.1125369292536007e-308},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-4.572989683881794e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 9.207403152960701e-59},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*5f\\xd7(\\x8e\\x1e\\xf2Y\\xa7\\xf9\\x11bj\\xb4.\\xa2',\n          constraints={'min_size': 6, 'max_size': 94},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('c', 3, 1)), (('c', 1, 0), ('c', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='ur\u00da\u00d4\u00f6\u00a6\u00f3\\U0007c503\\U00059fb6\\x02-\u00d5',\n       run_start=1e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'D\u00c2\\x9a3J\\U000e3a11\u00a3\ud84e\uddfc\\U000e1436\\U00059a53\u00be': -2.4542524521126036e+16,\n        '\u00a4\\x84': -1.6135051502097378e+16,\n        '': 3312,\n        '\\U0002f150p\u00da\u00a4': 0.001,\n        '\\x18\u00cc\\x06j': -864778791,\n        'W': 1.536980846963043e+171,\n        ')\u00d3]\u00b7\u00e76': -3.048866455162532e-160,\n        '}': 6518107506786594.0},\n       coverage={'\u579c\u00e6A\\U001048bd\u00ab\\x95\\xad\u00dcN\u00fd\\x81Z9\\U00035c4c': [9523,\n         34,\n         -39,\n         -123,\n         -18869,\n         66606656,\n         -24514,\n         -29144,\n         -7_078_961_014_341_539_203,\n         -116,\n         -7870,\n         -20961,\n         96730327]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=128, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=29229,\n          constraints={'min_value': 15742,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud85e\udf32\ud85e\udf5a\ud85e\udf05\ud85e\udeef\ud85e\udf98\ud85e\udf85\\U00075b56',\n          constraints={'intervals': IntervalSet(\n               [(162506, 693380), (772564, 837063)],\n           ), 'min_size': 5, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.01},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xc1\\x0c\\xf4%\\xa0\\x04E\\xc7\\x9cS>\\xbe<\\x17\\xf2U\\xc9',\n          constraints={'min_size': 10, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 1, 1)),\n                 (('a', 1, 0), ('b', 3, 0)),\n                 (('a', 2, 0), ('a', 1, 0)),\n                 (('a', 2, 1), ('b', 1, 1)),\n                 (('b', 1, 1), ('b', 3, 0)),\n                 (('b', 3, 0), ('c', 1, 1)),\n                 (('c', 1, 1), ('a', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='x\\x9b\\x1eO\u00b3\u00fbI\u00d5\\U0009e843\u00f0',\n       run_start=-7.003132743190975e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'Decrease verbosity': -3.1014967825577023e+178},\n       coverage={},\n       timing={'\\x0f^\\U0009c7a2\\x9eq\u00cb\\U000fad62\\x05\u00ca\\U000ce82b\\U0006d04e\u00c5\\U0003e93b': 2.116147911346741e+179,\n        '': -4.68641701365791e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=112, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9186309292982129},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7036870041559301},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 4.9975716930647975e-191},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud801\udc2e\\U000ac5bb\\U000103ec\ud800\udf81\\U00071f96\ud800\udfb3',\n          constraints={'intervals': IntervalSet(\n               [(66381, 91116), (271196, 720396)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(305278, 1061775)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 0, 0), ('a', 2, 1)), (('c', 2, 3), ('c', 2, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.2250738585072014e-308,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00c7': -3577,\n        '\u00d0\u00a5v\\x93': -5.46847886279538e+16,\n        '\\x9f': 32403,\n        '\u00be_': 128,\n        '\u00ab\u00e7|\u00d0\\U00054410': -706_397_817_137_695_960,\n        '': -113,\n        '\\x0e}': -21898,\n        '\\x97\u00a8sKD95\u878b\u00a2)\\x9f\\U000c22e6F\\x05\u00b8=\u00a6\"\\U0004b7bc\\x0c\\x9e': -5.4499988763224314e-93},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=13508, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 2), ('c', 2, 3)), (('b', 3, 2), ('b', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='*',\n       run_start=-3.787364807695994e+279,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00f4\\x03\\x02\\x953\u00acp': -29727,\n        '\u00ff\u00e2.*\\x11\\U000589f7J\\U0008ebb8d\u00deO#Z\u00ca': 2.0646661694599964e+16,\n        '\u00d3\\x84\\x81\u00ae': -572019496},\n       coverage={'5J\u00da\\x8bc\\x8a\u00deK\u00c9\\x971\u00b7\\rp\\U000fd502\\U000f2bb7\\x9c': [2020,\n         23061,\n         20254,\n         18,\n         5_685_898_949_025_834_172_455_816_870_166_650_039,\n         3643,\n         6400,\n         -82,\n         -18326,\n         -72],\n        '\\x8e\\U000b77b6': [-17692, -16602, -18182, -84, -1655, 13553]},\n       timing={'': -3.7684451678238024e+16,\n        'importlib': 5.787523694682913e+16,\n        '\u00faG(': 3.1926879167760444e+16,\n        'j': 1.5636807142210652e+16,\n        ')\u00e0\u00dc\\x9bj\u00ec': 3.745343448979954e+16,\n        '\u00bc\u00baW\\U00054a85\\U000b4799\u00dal\\U00085401\u00d7\\x80': -5.630129273794694e+227,\n        '\u00e4\\U0008a376\\n': -9.807102828542661e+224},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1879802292, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 3, 3), ('c', 0, 1)),\n                 (('c', 0, 1), ('b', 1, 1)),\n                 (('c', 0, 3), ('c', 1, 0))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0022042489727027714,
          "overall:gc": 6.46670232526958e-05,
          "generate:args": 0.04464929405367002
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287671.536722333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u00fc.\\U00058669\u00fa\\U0005f55f\u00d8',\n       run_start=-2.179102727109425e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'\ud84d\udc46\\U000d5700\u00d0\u00ab\u00d1\u00d3~': [-76],\n        '\\U00058255\\U000dd9aad\\U000a29be\u00b7&\\x1a\u00d4\\x84\u00ef4P\\x10': [10949,\n         3,\n         -14183,\n         23491,\n         -1981,\n         4]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=9.300337184363672e+307,\n          constraints={'min_value': 657548.1617419294,\n           'max_value': 1.7976931348623157e+308,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.8423252587874418e-242},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('b', 0, 0)), (('c', 2, 3), ('b', 3, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='TRUE',\n       run_start=6.471858627947658e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=20, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 128},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5690319304005104},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 2), ('a', 0, 2)), (('b', 3, 0), ('b', 0, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.0688412668676196e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\\\;\u00ffI\\U00100ec9\\x88': -1.9861620787995412e-25,\n        '\u00ff\\x8f\\x1e\u00f9\\x18\u00d9': -1.269632942391971e+192},\n       coverage=None,\n       timing={'': -6.934984149677416e+16,\n        '\\x0f-\\x8d\\U000a3d23(': -3.560507888610526e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-56, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u3053\u307b\u305c\u302c\\U000b938b\\u2fe1\u2fc7\u305d\u3043\u2fb1\u305e\u3078',\n          constraints={'intervals': IntervalSet(\n               [(12169, 36854), (748071, 771798)],\n           ), 'min_size': 3, 'max_size': 103},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=83905,\n          constraints={'min_value': 62026,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 1.647872052003846e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 2.4513920340289938e-188},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='E',\n       run_start=-1.0168119723664804e-59,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00aa\u00d9#\u00f6\u00a8\\x9d~\u00d4\\x91': 54},\n       coverage={'\\x17\u00b8': [],\n        \"\u00ec\u00ca\u00d9C\u00aa\\U00042f62\u7b0f'\\U00038439\u00bc\\x83\": [-74,\n         6000,\n         -20626,\n         21112,\n         -27457,\n         -17598,\n         -1_746_262_319,\n         -77,\n         65,\n         -62,\n         48,\n         28010,\n         -21615,\n         -20406,\n         -22680,\n         8288],\n        '{\u00a6\u00ba\u00d5\\U000aee6b': [2_839_423_120_281_438_045]},\n       timing={'\\U0003b59c': 5722237699228911.0,\n        'm': 4.933092208817275e+16,\n        'A\u00a89\\x12p\\U000a4d65\\U00063426\\U000edaedv$\\U000ce14dH\ud869\udd9e\\x9e\\xa0\\U000f0937': -3.0976966406627724e-107,\n        '\u00fb': -3.667857151853274e+16,\n        '': -4.863923263726058e+16,\n        '/': -6.040628807495863e-76,\n        '\u00e7\u00ee': 1.6029060563645244e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28177, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud805\udc29\\U000c01a2\ud805\udc1b\\U000113fa\ud805\udc2d\ud805\udc4c\\U000113c4\\U000ae8d7\\U000b9f3a\ud805\udc33\\U000113c1\ud805\udc0a\\U00094e63\\U000113cb\\U000113c2\\U000113b3',\n          constraints={'intervals': IntervalSet(\n               [(70559, 181008), (369285, 611030), (690036, 812382)],\n           ), 'min_size': 11, 'max_size': 111},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=24743,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-25347,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.09505691732372215},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'<HN\\x08\\x07{9q\\xbd\\xb8ps\\x13\\xc6\\x04\\x1a\\xefk\\x12\\xf4}\\xab\\x834]\\xb3?\\x82V\\xf8p',\n          constraints={'min_size': 31, 'max_size': 131},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.4672072516921873e+307,\n          constraints={'min_value': -6.9909291375333064e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5896120487992685},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -2.9926973542637463e+24,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6842640245802379},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-47,\n          constraints={'min_value': None,\n           'max_value': 0,\n           'shrink_towards': 3_738_853_512_414_327_764,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('a', 0, 0)),\n                 (('c', 0, 1), ('b', 0, 0)),\n                 (('c', 1, 3), ('c', 3, 3)),\n                 (('c', 2, 2), ('a', 1, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\ud835\udc13\ud835\udc21\ud835\udc1e \ud835\udc2a\ud835\udc2e\ud835\udc22\ud835\udc1c\ud835\udc24 \ud835\udc1b\ud835\udc2b\ud835\udc28\ud835\udc30\ud835\udc27 \ud835\udc1f\ud835\udc28\ud835\udc31 \ud835\udc23\ud835\udc2e\ud835\udc26\ud835\udc29\ud835\udc2c \ud835\udc28\ud835\udc2f\ud835\udc1e\ud835\udc2b \ud835\udc2d\ud835\udc21\ud835\udc1e \ud835\udc25\ud835\udc1a\ud835\udc33\ud835\udc32 \ud835\udc1d\ud835\udc28\ud835\udc20',\n       run_start=1.8977257180249186e-156,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000f51d7AP\u00f8\\x07': 30266,\n        '_\\x03\\U00047317': -3.3371787411866564e+16,\n        '\\x1fX\\U000a376f6': -2.4007288933851266e-180,\n        '': -6117515155536434.0,\n        '@6\u00f9\u00c2\\x89p\\x85\u00f5\\U000d8d79\\U000a9225': 6308,\n        '\\x1c\u00eb\u00fd?': 1.6211591897617568e+16,\n        '\\U000eca02k\u00f8\\x8d\\x8d\\U0006451f\\x04\\U0005c6e2\\U00056139': 10394,\n        ':\\U000dc2df\u00c5\u00cc\u00c0': 20754},\n       coverage=None,\n       timing={'': -0.0,\n        'I\u00f5\u00f0\\U00108f49': -5.815252319768148e-145,\n        '\u00b9\u00f3W': -3.733013333288098e+16,\n        '\u00e7UP\\U00094b26\u00eb\\U0001419e\u00b3\\r\\x88': 1.5242286619505328e-118},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-14704, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=9.42091318148365e+307,\n          constraints={'min_value': -4572123770125110.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.4802891303358604},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb5\\x04\\x93X',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\u20f7\u2121\\U000f699f\u2156\\u206e\u2125\\U0005a91f\\u2060\u20db\\u20ce',\n          constraints={'intervals': IntervalSet(\n               [(0, 1),\n                (8288, 75558),\n                (87246, 142430),\n                (337666, 598574),\n                (603778, 743871),\n                (798706, 929962),\n                (944145, 1081149)],\n           ),\n           'min_size': 8,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 3, 1)),\n                 (('a', 0, 2), ('a', 1, 2)),\n                 (('a', 0, 2), ('c', 2, 0)),\n                 (('a', 0, 3), ('b', 2, 1)),\n                 (('a', 0, 3), ('c', 2, 3)),\n                 (('a', 1, 0), ('a', 1, 3)),\n                 (('a', 1, 2), ('c', 2, 0)),\n                 (('a', 2, 0), ('a', 3, 2)),\n                 (('a', 2, 1), ('b', 3, 2)),\n                 (('a', 2, 2), ('a', 1, 3)),\n                 (('a', 2, 2), ('b', 1, 3)),\n                 (('a', 2, 3), ('a', 2, 2)),\n                 (('a', 3, 1), ('b', 1, 2)),\n                 (('a', 3, 3), ('b', 2, 0)),\n                 (('b', 0, 0), ('a', 2, 3)),\n                 (('b', 0, 0), ('b', 0, 0)),\n                 (('b', 0, 1), ('a', 2, 1)),\n                 (('b', 0, 3), ('a', 1, 1)),\n                 (('b', 0, 3), ('b', 1, 0)),\n                 (('b', 1, 2), ('a', 2, 2)),\n                 (('b', 2, 1), ('b', 2, 3)),\n                 (('b', 2, 2), ('c', 3, 1)),\n                 (('c', 0, 3), ('c', 2, 3)),\n                 (('c', 1, 1), ('b', 0, 2)),\n                 (('c', 2, 3), ('b', 0, 0)),\n                 (('c', 3, 0), ('a', 1, 3)),\n                 (('c', 3, 0), ('b', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.7671024953389804e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'NUL': -1.0131074171916079e+149,\n        'Z\u00fe': 54,\n        '\\x1d\\U0006d037;\\U000955a6': 3.4890348957611544e+16,\n        '\u00f7\\\\\\U000dc26f\u00cf!': 8555,\n        '\\U0005eb1b\\U00012aae\u00a3\\U0006de43D\u00e1\u00da\u00dd\\U000edff0\u00c2\\x02\\U00064b3e\\U0001056b\ud822\ude56': 1_000_000_000,\n        'B\\U000d18c9s': -4.968781156824649e-252,\n        'Z\\x1e': 8232,\n        '.\\U000d3cd4\u00b6\u00d6\u00c8\u00df': -7.107198169965877e+16,\n        '+\\U000834ee': 19,\n        '\\x80\\U0006f47a\u00a7\u00dcNQm\\r\u00d6\\x82': -21487,\n        '\\U0006ce88P\\x97\\U00106f41\u1b3e\\x8e\\U000cd00e\\U0005929c\\x93NhD': -19365,\n        '\u00b2\u00c5I@\\x87?\\U0003b29b\"\u00d5lj\u00e6\u00c6i]': -98,\n        '\\x05': 0.01,\n        '': 6.484571974456351e+16,\n        '\\x92\\U000c4177\\x01Y\\x86=I\u00b4}': -541_554_793_506_241_264,\n        '\\x17\u00f7\u00e7\\x01\u00c0\\U00064a9e\\x80$\u00a3\u00ee': 3743},\n       coverage=None,\n       timing={'none': -3.1229520639663412e+16,\n        '\\U000d0845\\x98\\U0009d900[': 0.02,\n        '': -0.0,\n        '\\x9a_\u00c3': 4.346260424538328e+37,\n        '\ud84a\udfd9\u00e9\\x9e': 1e-12,\n        'd\\U00036b55\\U00109b7cb\u00e4\\x97\\x81\u00ce': -5.960464477539063e-08,\n        '\\U000e7cc5': -2.105904846932022e+268,\n        '\u00bf\u00c6\u00d3': 2.00001,\n        '\\U000bedbe\\U000abb73\\U00077428\\U000a5918\\x9c': 1.5761700935846315e-235,\n        '\u00f7\u00c3\u00bd\u00fe': -1.9274838058989136e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-113, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=57,\n          constraints={'min_value': -15752,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'$\\xb2\\xff\\xe2\\x9d/\\x1el6\\xb2\\x86',\n          constraints={'min_size': 0, 'max_size': 97},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=219,\n          constraints={'min_value': 43,\n           'max_value': 7_811_429_724_705_283_830,\n           'shrink_towards': 18713,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud880\ude73\\U000339f9p@\ud82c\udeee',\n          constraints={'intervals': IntervalSet(\n               [(1, 8203),\n                (29357, 133502),\n                (189063, 237991),\n                (337002, 376213),\n                (579942, 630635),\n                (1020376, 1114110)],\n           ),\n           'min_size': 0,\n           'max_size': 15},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 2, 2)),\n                 (('a', 1, 2), ('b', 3, 1)),\n                 (('a', 1, 2), ('c', 2, 3)),\n                 (('a', 2, 1), ('b', 0, 0)),\n                 (('a', 2, 1), ('b', 2, 1)),\n                 (('a', 3, 1), ('a', 1, 3)),\n                 (('a', 3, 1), ('b', 1, 3)),\n                 (('b', 0, 1), ('c', 3, 1)),\n                 (('b', 0, 2), ('a', 2, 2)),\n                 (('b', 1, 0), ('b', 3, 3)),\n                 (('c', 0, 1), ('b', 0, 0)),\n                 (('c', 0, 2), ('c', 1, 3)),\n                 (('c', 2, 0), ('a', 3, 2)),\n                 (('c', 3, 1), ('a', 1, 3)),\n                 (('c', 3, 2), ('a', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='O\u00b4\u00b2/\u00f0\u00d1\u00e4',\n       run_start=1000.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'?': -19374,\n        'KK\u00fb$': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0]},\n       coverage={'\\x90\\U000d71eb\\x10K': [19511, 12393, 24241, 788670163],\n        '\\U000f6c80': [123_244_871_917_257_151_912_856_131_647_344_308_394,\n         -23733,\n         300,\n         31845,\n         5524,\n         -4_562_735_566_613_661_319,\n         -27251],\n        '': [2020],\n        '\u00fa\u00ecAH\\U00061ff0\u00deH\u00dd\u00ba\u00d0\u00dfF': [777766527,\n         26745,\n         25221,\n         -8178,\n         -115,\n         300,\n         -91,\n         25669],\n        '\\x9108\\x99`\u00c4I\u00f5%\\x83\u00a6>\u00cc>\\x9c\\U0007e406': [21492,\n         -20797,\n         22383,\n         5_541_485_586_465_403_390,\n         -112,\n         -127,\n         -20648,\n         -24918],\n        'RaisesGroup': [-9326, -3, 300, 1_024_981_546, 6725],\n        '7': [2821, 29552, 8232, -12110, 8238, 3805, -1_245_711_424, -19411],\n        '\\U000fadbd\u00df\\x8ft\\x93': [33,\n         20267,\n         -9_545_249_532_728_783_123_687_658_649_385_588_640,\n         -2_760_692_820_668_847_418,\n         -20036,\n         -11573,\n         70,\n         5_586_583_875_133_052_452,\n         -727,\n         -13499,\n         11487,\n         87,\n         32,\n         28,\n         30345,\n         -1753,\n         -6_682_858_339_547_448_169,\n         100,\n         256,\n         26764,\n         99,\n         -94,\n         -15,\n         17216,\n         -1_940_170_503,\n         -26024,\n         17181,\n         -13865,\n         -47,\n         26677],\n        'f\u00a9': [-40,\n         -209,\n         91,\n         -32013,\n         15780,\n         -106,\n         18130,\n         5380,\n         16337,\n         -2,\n         20,\n         -40,\n         76,\n         -108,\n         -26418,\n         59],\n        'A=\u00de@\\U00056af8\u00be@': [-21407,\n         2237,\n         -1_755_744_199,\n         52,\n         -382,\n         1_891_142_634_962_569_432,\n         2646],\n        '\u00f1': [],\n        '\\U000f6f68jrMv>,': [255, 123],\n        \"\\x92i?\u00de\u00e2'h\u00c0\": [1_080_315_491, -6828, 12, -31233],\n        '\\U0008e61a\\U000fa1c56': [1071,\n         -60,\n         3722,\n         -32,\n         88,\n         2468,\n         512,\n         10386,\n         1696,\n         127,\n         -12677,\n         5403,\n         -17702,\n         14462,\n         20865,\n         -93,\n         150075945,\n         17605]},\n       timing={'\u00f4\\U000424b4\\U000f6aae': 1e-12},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-14035, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U00065986\\U000fc98f\\U000658d6\\U00065943\\U0006599a\\U0010bb01\\U000658cb\\U00065966\\U000658ad\\U00065991\\U00065938',\n          constraints={'intervals': IntervalSet(\n               [(415915, 485047),\n                (629944, 649024),\n                (831437, 908976),\n                (993892, 1114111)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5841087442513905},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\ud861\udcbf\\x9b1',\n       run_start=1.4784500706977188e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'~U': -2.2100147092702892e+16,\n        'd\u00bf': -4.959061447427295e+16,\n        '\u00d9#\u00b3<\\x00\\x81(\u00ec\u00d4\\U000c02ba\\U00106c01\u00a1\\U0004dc68@': -1.698173022578204e-187,\n        '\u00b9': 1.1,\n        'B\\n\\U00094429\\U0010fa97G=\u00c2': -1.3424039959554942e+293,\n        '\\x07': 8653151107911919.0,\n        '\u00a5\u00e5h\\U00075150\\x07\u00c4\\x81\u00aa\u00be': 4.593618869987484e+16,\n        '\\n \u00e1\\x0f\u00f1': -1.6606647262374e-188},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=25815832298383473781490024719595413985, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xa2\\xef)\\xcfl\\x9f\\xe2\\x98\\x85\\xcb\\x99#\\xa6y\\x85\\x01\\x13iY\\x8e,B\\x9f\\xd6lk\\xecyX4\\x94\\x10\\x1bu\\xad\\xb8\\x8aC\\x8f\\xd1\\\\\\xbc\\x86\\x89fh\\xabF\\xa0\\xb3\\xf6il\\xa5\\xcc\\xb2\\xa5\\x15\\xb5\\xd3.\\x17',\n          constraints={'min_size': 45, 'max_size': 145},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 3, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0005d549\\x9d+',\n       run_start=4.013028822843197e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U0010a003=\u00dc\\U0010de55B\u00e4': -3.7126118632437384e+16,\n        '\u00fe\\U000576a5\\x8e\u00bd\\x1c.r\u00deG\u00c7\\x0c\\x951w\u00f4\\x1e\u00d3\\x04m\u00d8\u00a9@\u00bb\u00bdC': -10588,\n        '\u00d0\\U00086b30\ud864\uddbb': 10000000.0,\n        '#\u00d9`\\x8d\u00d4\\U0003e2826\u00b2\\U00056cd4\\x84s\u00b1\\x80W\\xad': 5_313_015_366_495_626_407,\n        'H\u00df\u00d1\ud85e\udd22': 1755,\n        'b': -5.116423407276994e+16,\n        'X>\\x1e\u00ab\u00df\u00c2': 7.710571895444807e-203,\n        '': 2.240119532266134e+260,\n        '\\x01\\U0007c996\\U000c37f2\u00a8\u00c3\u00bb\\U000ece5b~\\U00035dec\\U000e7e5b`\\x17\u00af\u00f0\\U00071bb4V\\U000909bc\\U0006c400\u00a2\\x89\\U000c43ea80:\u00bf': -25933,\n        '\\x99\u00e6\\U000fb46c5\\U0003e012': 2.325861584429072e+16,\n        '\u00a3': 104,\n        '&d\u00b5\\x82R\\U000ff054': -6.267816473434983e+16,\n        '\\U0001ffd4\\U000e24cc\\x93\u00df\\U000ec8b7\\U00097cad\u00be': -13209,\n        \"{U\\x9eB\\x03\u00e6\u00bc\u00fcJ'7Bv4\u00c4\u00fb\u00be\\x18\\\\\u00cd\\x03\\x11\\U000fb0b8\ud844\udeec\": 1291},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-27659, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xec\\xf8w\\x82\\xc8\\xdb3E\\x12\\x91\\x9a\\xe4\\xb9\\xbeq\\x9d~\\n\\x99\\xc8d@S\\x0c\\xa1\\x16b\\xbd',\n          constraints={'min_size': 19, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.5894859456005777e+211,\n          constraints={'min_value': -inf,\n           'max_value': -3.648473890733932e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.20030974783749095},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='g\\x05*U\\x93=\u00e7\\U0003fff4',\n       run_start=1e-06,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e4z\u00b9\u00d6': -111,\n        '\\U0008be95\\U00051a6a': -10459,\n        'E\\x8b\\x1e\u00af': -2.088326501028775e+16},\n       coverage=None,\n       timing={'\u00edab\u00a1\u41a2>\\x92/\u00ce\u00dez\\x8f\\x97\u00ed\u00ef\\n\\U000cff88': 1.9753341313334997e-22,\n        '': 7.147029635879428e-218},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-29691, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='3|\ua19d\\x7f\\U000f0912\\U000d051a)\\U000934ba\\x90\\U001091b7\u00df\\U00048aee\u00cc',\n       run_start=9.27095140546371e-234,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x8e\u00a3\u00a8\u00c9\\x8f': 1.883968037423528e+165,\n        '\\x02\u00c5@': 30831,\n        '\\x9e\\x0b\\U000f8e3e\\U0001f8c5\\x92\\U0006184d': -3975,\n        '\u00e5\\x8f\\U000de117\\U0006c72e\\U000c8b1eYXc\u00e6': 6.501481114441311e+16,\n        'l\u00b7D': -3.753434076911222e+16,\n        '\u00c2\\x97\u00d2': 68,\n        '': 1e-12,\n        'r\\x17\\x87\u7165A': -1.5,\n        '1/0': 3.241064707425463e+161,\n        '\u00b5\\U000accf2': -2.242417588956582e+78},\n       coverage=None,\n       timing={'\\x8b': -7710388995144921.0,\n        '\u00da\\U00054666\\U0004e691\u00fe\\x0c\u00df\\x0b': 2.2568418026242278e+18,\n        '': -inf,\n        '\u00f0F\\xad\u00fa': 43210065295046.59,\n        '\\U000bc6fe7\\x7f\u00ce(N\u00d5\\U000c05f8\\x112+\\x1c': -3218948199003509.0,\n        '\u00b1\u00cbc': 1000.0,\n        '\\U000f9a6aH\\U0007b3ec\\x10\u00f9\\U0007c5ca!c\\x0fF': -5.459337039756962e+109,\n        '\\x95z': -inf},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=23699, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=4097557725603244.5,\n          constraints={'min_value': -9.125397994000045e-249,\n           'max_value': 3.0241075683044464e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.32580377584764536},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2_494_958_565_118_129_596,\n          constraints={'min_value': 101,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0004e781\\U0004e6f0\\U0009bc19\\U0004e78c\\U0004e6e9\\U0004e761\\U0004e71e\\U00088ad3',\n          constraints={'intervals': IntervalSet([(321179, 682619)]),\n           'min_size': 6,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.02235988941493e-227},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6466648762304078},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 1), ('a', 0, 0)),\n                 (('b', 2, 2), ('a', 3, 1)),\n                 (('b', 3, 0), ('c', 1, 3)),\n                 (('b', 3, 3), ('c', 1, 2)),\n                 (('c', 0, 1), ('a', 2, 3)),\n                 (('c', 0, 3), ('b', 0, 0)),\n                 (('c', 0, 3), ('c', 1, 3)),\n                 (('c', 3, 1), ('c', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.520942580692026e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00073140\u00ca\\U000e6d36)\u00a7v\u00c3': -12953,\n        '\u00d4\u76f4\ud84f\udf28r': 7.083812467168324e-198,\n        '\\x0c7\\U00015f3ceU%r\u00e4': 111},\n       coverage=None,\n       timing={'': 2.9420451711576944e+102},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=524288, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 3, 2)),\n                 (('a', 0, 2), ('b', 0, 3)),\n                 (('a', 0, 3), ('c', 3, 0)),\n                 (('a', 1, 0), ('a', 0, 2)),\n                 (('a', 1, 1), ('a', 1, 1)),\n                 (('a', 2, 0), ('a', 3, 2)),\n                 (('b', 2, 1), ('b', 0, 0)),\n                 (('b', 2, 2), ('c', 3, 3)),\n                 (('c', 0, 0), ('c', 0, 2)),\n                 (('c', 0, 1), ('c', 0, 2)),\n                 (('c', 1, 1), ('b', 2, 2)),\n                 (('c', 3, 2), ('b', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x0b\\U000b35ec~',\n       run_start=4.573063347744003e-172,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00056b69\u00d4\\U00059ac0\\x94\\x01': 16966,\n        '\u00f9': 4.4321606904165274e-300,\n        'false': 1.401298464324817e-45,\n        'V': 40,\n        '\\uefe4': 6977764032830637.0,\n        \"s\u00e3\\x9c\u00e4:\u00d4\u00ce\u00f0\\U000f0f59'\\U0006ce9a\": 5.079252032681299e+16},\n       coverage={'\ucfee': [16508,\n         14549,\n         62,\n         -20937,\n         -7_685_467_786_082_016_135,\n         15963,\n         -234189586,\n         -983409677,\n         20174,\n         -21822],\n        '\u00f0': [21398,\n         18333,\n         -5405,\n         -4378,\n         -92,\n         24299,\n         -5_253_735_846_915_029_101,\n         -1577],\n        '\\x8bE\ud872\udc25h\u00e7': []},\n       timing={'5': 1.0,\n        '\u00e9\u00ff\u00ca': -7.175365391586973e-87,\n        ')\\x90\\x9fw\u00d3\\x9cE\\x86\\x1e2S\ud82c\udc7b\u00b8z\\U0004b1b8\u00e0\u00cf^\\x04\\x04': 1e-05},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-8231375713486951592, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 9.043130456175722e-295},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.11944350726813371},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=17857,\n          constraints={'min_value': 10758,\n           'max_value': 18966,\n           'shrink_towards': 4_294_967_295,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.001},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('a', 0, 0)),\n                 (('b', 1, 0), ('b', 2, 1)),\n                 (('b', 1, 1), ('c', 3, 0)),\n                 (('b', 2, 0), ('b', 2, 1)),\n                 (('c', 0, 2), ('b', 3, 0)),\n                 (('c', 1, 1), ('b', 2, 3)),\n                 (('c', 3, 2), ('a', 2, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x80f',\n       run_start=1.862109400591061e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00b9\\x82\\x7fY': 2.185686533692536e+277},\n       coverage=None,\n       timing={'': 3.561532766493572e-308, ',N': -3.0982690857046873e-16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-24219, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=7525,\n          constraints={'min_value': None,\n           'max_value': 10629,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=359337642,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe7\\xa7',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 2, 3)),\n                 (('a', 2, 2), ('b', 1, 0)),\n                 (('a', 2, 2), ('b', 1, 2)),\n                 (('b', 0, 3), ('c', 3, 1)),\n                 (('b', 1, 1), ('a', 3, 0)),\n                 (('c', 3, 0), ('c', 0, 2)),\n                 (('c', 3, 2), ('b', 0, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.006073332973755896,
          "overall:gc": 5.670898826792836e-05,
          "generate:args": 0.08005195623263717
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287688.636483791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=4.815754922818935e-72,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -6.795581058703873e+16,\n        '\u00d40k\u00fe!o\u00d0\u00d8\u00cdAB\u00e0\u00f5\ud801\udd9e)\\x0c': 3.402823466e+38,\n        '\\U0009651d\u00f8': 0.702540533879951,\n        '^\u00c3\\U000a0cb6\u00c0\\U0008a2a2\\x16\u00d41\u00af\u00eb': 1},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=18, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 1, 0), ('a', 1, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0013652080087922513,
          "overall:gc": 0.0,
          "generate:args": 0.00811133295064792
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287670.472241083,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=1.0993674384951983e-71,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='b\u00bf\\x19',\n          constraints={'intervals': IntervalSet(\n               [(0, 79043),\n                (164011, 187910),\n                (266054, 288555),\n                (302681, 317210),\n                (426042, 433788),\n                (483719, 630797),\n                (830776, 869717),\n                (940349, 992213),\n                (1002308, 1045878)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0006fdda\\U0006fdb0\\U0006fd6f\\U0006fe3c\\U0006fe63\\U0006fde7\\U0006fe54\\U0006fdb8\\U0006fdc0\\U0006fe34\\U0006fe34\\U0006fdb9\\U0006fe31\\U0006fdcd\\U000a3389\\U0006fdf6\\U0006fe21\\U0006fe19\\U0006fd8e\\U0006fd6a\\U0006fd89\\U0006fd86\\U0006fe16\\U0006fd8a\\U0006fe04\\U0009ba21\\U0006fd69\\U0006fdac\\U0006fde4\\U0006fe0e\\U0006fde0',\n          constraints={'intervals': IntervalSet([(458086, 933927)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2_447_918_694,\n          constraints={'min_value': 2_447_894_421,\n           'max_value': 2_447_924_715,\n           'shrink_towards': 23491,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 2), ('c', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x1au\ud81a\ude28\u00b6',\n       run_start=1.674428997471031e-145,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'if': 3.125554985800641e+16,\n        '\u00fe\\x04': -16490,\n        'Y^\\U0005ac2a\\x90\u00d8\u00c7\u00c9[W\u00aa\u00a1\ubd29|\u00f4\\U0005cfecS\\x15\\U0004d61a': 1.4654017346507882e+279,\n        '\\x8f\\U000be9c4w\\U0009970a\u00cb\\U000d4ff9': -2769218281592379.0,\n        '\u00f9i\u00b7\\x18\\x9e': 3.8909334524084216e+16,\n        '\\U000f47cd^7\\U000c5829\\U000f4da1~': 267},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-16989, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xfaE',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00063071\\U000c1d03\\U00063110',\n          constraints={'intervals': IntervalSet(\n               [(405614, 553663), (603530, 905956)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.776267669765726},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000456b4\\U000456a0\\U00045653\\U0004562d\\U0004561f\\U00045615\\U00045603\\U000456c0\\U00045692\\U000455cb\\U00045617\\U00045682\\U000456a8\\U0004563c\\U0004568c\\U0004567c\\U000706f8\\U000455c6\\U000456a7\\U000455d2\\U0004581d\\U0004563f\\U000456a5\\U0008dfb3\\U0008ad19\\U000456c4\\U00053eac\\U000455d0\\U0004569f\\U00045602\\U000455e5\\U000456a5\\U0004563d\\U0004560d\\U000456bd\\U000455f6\\U0004568b\\U0004567d\\U000590d7\\U000456b0\\U00045657\\U000456a9\\U00075c4f\\U00045660\\U00045638\\U000455ca\\U00045676\\U0005dc6b\\U000455e5\\U000455e3\\U0004562a\\U0006671d\\U0008c68f\\U0004567f\\U00045603\\U0004566e\\U00045663\\U00045690\\U00045667\\U00051c18\\U0005bc91\\U00067812\\U00045643\\U000455e2\\U00045671\\U0004566e\\U00045605\\U000456af\\U0005c9b7\\U000459f3\\U00045695\\U000456a2\\U0004563b\\U00045677\\U0004564a\\U0008d140\\U000455e0\\U000455d1\\U0004567f\\U00048a9b\\U00045678\\U0004564c\\U00045650\\U00045694\\U0006f786\\U000455fb\\U0004b106\\U000798f2\\U0004560f\\U0004565b\\U0004564a\\U0004565c\\U000456ac\\U00045663\\U00045609\\U000456c3',\n          constraints={'intervals': IntervalSet(\n               [(284101, 286870),\n                (296339, 432064),\n                (451757, 533224),\n                (559701, 584866)],\n           ),\n           'min_size': 36,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'XB\\x9d\\x00C\\x13`t\\x10>\\x02avl\\xc5\\xe9C\\x8f!\\xdf\\xd8\\\\]\\x18\\xd06\\x0e\\xfe \\xcb\\xc1\\xdb\\xe9\\xa3\\xbbM\\xc8l\\x16\\x05',\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xea=\\xef\\x96\\x80\\xeb\\xc5\\xce\\x9cMz\\xa0v\\x95q\\xc0s;\\xfb\\x06\\x97\\xe8\\xf9\\xa5}\\xf6\\x9fb\\xba\\x94\\x05\\xe7\\x85O\\x880\\x91D\\x85\\xce\\x1e2Yv\\x11\\x1b[Y&G+\\xcb\\xfe\\x10\\xc7\\x18Q\\xa1ra\\xee\\xa8\\x89\\xfc{\\xd2\\x8d&`k\\xcb|~+\\x84\\xd6\\xda/\\x96\\x0e\\xb9\\x8e\\t\\x85;\\x1a\\x95\\xd9\\x02Y\\x02\\x92\\xde\\xca\\xb5\\x94\\x83^c\\xd6\\x0f\\xdc\\x82/\\xddS',\n          constraints={'min_size': 39, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.741758785622424e+16,\n          constraints={'min_value': -inf,\n           'max_value': 7.134915586261029e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.954063841540219},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-25,\n          constraints={'min_value': -119,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('c', 2, 3)),\n                 (('a', 2, 0), ('c', 0, 0)),\n                 (('a', 3, 0), ('b', 2, 0)),\n                 (('b', 0, 1), ('c', 3, 1)),\n                 (('c', 1, 0), ('c', 0, 0)),\n                 (('c', 2, 3), ('a', 0, 3)),\n                 (('c', 3, 0), ('b', 0, 3)),\n                 (('c', 3, 0), ('c', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='INF',\n       run_start=-8.977866048448874e-293,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={'\"': -inf,\n        '#u\u00da': -1.5552266013756352e+16,\n        '\u00f5\\x96': -4.5611093507111675e-67,\n        '\\U001047c3\\x8a\u00c7\"\\U00089b7cW': 7.69000630018542e+23,\n        '': 9009910031595560.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-26293, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 3.256044080720132e-257},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 0, 1)),\n                 (('b', 1, 2), ('c', 0, 0)),\n                 (('b', 3, 2), ('b', 3, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x99',\n       run_start=4.6334065725655176e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -1_361_270_787,\n        '\\U000518a4': -4.727438043161864e-167,\n        \"'!\\U000941f4E\\U000eeae0\u00b2\": -1.4855997997028433e-290,\n        'T\u00c5\u00ddL\\U000b9e3b': 558,\n        '\u00f48\\x0f\u00e7\u00a9': 9.231993523884155e-127,\n        '1e-6': 10385,\n        '9\\U000a2673\\x8b': -3957},\n       coverage={'\\x7f': [-36]},\n       timing={'\u00ab\u00b5\\U00064c1eH\u00b2.': -3.8778198630777084e+86,\n        '': -9.094262211304888e-169,\n        'I\ud863\udda5\\U000a3887': -8.272358489980628e-91,\n        '\u00b2\\x01\u00e3\\x8a\\U0004f9dc\u00ac\u00dc\ud81d\udddd\\U000552d1\u00e8\\U0007f916l\\x07\\x83\u00f3': -6.823224592333495e+206,\n        '\\x89Z\\U0003612d\\U0008e84f\\U000c9f3c': -5e-324,\n        '\u00b6\u00a4;\u00b3\u00d8\\x8c\u00f2j\u00e3': -2450870254883319.0,\n        '\\U000b03de\\x9b': 1806385548.5013454,\n        '\\x0bT': -1.3946329583280287e+132,\n        'B\\U00037d49\\U000ba3d5\u00f7': 0.0,\n        '\u00ba': 1.0,\n        '#': -3.4748476557940033e-32,\n        '\u00e6k\\U0001c2bdC>': 1e-05,\n        '\\x99\u00cc\\U0010c47f': -3.2713051660549058e-170,\n        '\\x92\\U000f3f9b': -1.709038346234976e-64},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=129569660067672923379090744674969461827, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 8.446015805646444e-246,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3031251024836082},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x96s\\xa7',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0221\u0255\u0215\u02d0\u0284',\n          constraints={'intervals': IntervalSet(\n               [(512, 55236), (124030, 128063), (433789, 953124)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 3, 2), ('a', 3, 2)),\n                 (('c', 0, 2), ('a', 1, 1)),\n                 (('c', 2, 1), ('b', 1, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='a',\n       run_start=3.02102648690225e+124,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x01\u00f7A\u00c0\\U000123af\\U000bdf46': 389911722,\n        '\u00e59\\x80\u00b7\\U0007357e\u00cd]\\x99k`8\\U000dc941qH\\x9c\\U0010e9e9': -0.3333333333333333,\n        '': 9.370972237038589e+300,\n        '\\x1e': -5.392426137935744e+16,\n        '\u00dbHs\u00be\\U0009ffd8\u00a4\\x07\u00d6b\u00b0X\\x15': -1.0095255203968176e-54,\n        '\u00bf': -9803,\n        '--last-failed': 4.4606282883132713e-299},\n       coverage=None,\n       timing={'\u00b4': 9.320737878386892e+94,\n        '\\U00012b9b\\x06\\x851\\U0005d28d\\x02*\\x00\u00a2x\u00bb\u00e9JS\\U00051f21\\U001017c6=\u00c1\\U000b23a5\\U0010d8ddaVr\\x11': 3.093677072035952e-207,\n        '?': 1e-12,\n        'W\\U0005a636': 3.0998619981616068e+16,\n        ';\u00d1': -1.086700819015919e-224,\n        \"R\u00fe!O\u00c1\u00c4\\x9f'4X\\x86m\u00f5\\U0010e9ec\\x07\\ue828\u00d7C\\U00013528\\x11V\\\\\u00eb''\\\\\": -2.3855323587060157e-157},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=106, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6159198604322543},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1017350743580245.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.220446049250313e-16},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 131},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 2, 0)),\n                 (('a', 3, 1), ('a', 1, 0)),\n                 (('a', 3, 1), ('a', 3, 0)),\n                 (('a', 3, 3), ('b', 3, 2)),\n                 (('a', 3, 3), ('c', 3, 3)),\n                 (('b', 0, 0), ('a', 1, 2)),\n                 (('b', 3, 1), ('c', 2, 3)),\n                 (('b', 3, 2), ('b', 2, 2)),\n                 (('b', 3, 3), ('a', 3, 2)),\n                 (('c', 0, 0), ('b', 0, 0)),\n                 (('c', 0, 3), ('b', 0, 2)),\n                 (('c', 1, 2), ('a', 0, 2)),\n                 (('c', 1, 3), ('b', 1, 3)),\n                 (('c', 2, 2), ('b', 0, 0)),\n                 (('c', 2, 3), ('b', 3, 3)),\n                 (('c', 3, 0), ('b', 3, 1)),\n                 (('c', 3, 3), ('b', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='H\u00a7\\U000b3d48a\\x11\u5457\\U00083a1c',\n       run_start=-1.5029963674644041e-280,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00047dab\\x0f\\U000f09c4\u00f4<\\U00077676\\x93\\U000b0720\\U000ff7ac\u00b4\\U000c1a4f3L': -30515,\n        '': 2020,\n        '\\x1e\u00f0\\x0bw\\x80\u00df\\x80jt\\U00057455\\U0010978bC,': -7229,\n        '\u00df\\x06\u00b5e\u00a4\u00e6$\u00f0\u00a2': -2.572481684922617e-12,\n        '-\\U000b256c\\U000b4551\u00aa\\U00037107\u00f8\\U000f576a\u00ceD\\x04`\\U000bd3dd': 0.99999,\n        '\u00f5': 7_913_915_461_534_910_954,\n        '9\u00d4\u00b7\\U000f6653': 2025,\n        '\u00da\u00f7n=%\\U0010e9f7\u00b2\\U000520f8': 3.930232381801963e+194,\n        '\u00e3\u00b4\u00d5D\\U0007a4f6M\\U000c1ca4\\U000a3ee9|\u00d1\\U000dea81[': 4.3627061972801505e-281},\n       coverage=None,\n       timing={'\\U0003caed\u00b64\u00e9_!C\\x00J\\x95E\u00db\u00aa': -6.704002037442882e+16,\n        '\\U0003af66': 0.001,\n        '\\x86\u00aewn\\x9a\u00e0%6': -9026517540795168.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=51, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-22865,\n          constraints={'min_value': None,\n           'max_value': 8291,\n           'shrink_towards': -9,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9073614404442565},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x9cgf*\\xef\\xce\\n\\xfd\\xee\\xac.\\r\\xab\\x84N\\xaf!\\xfcF\\x8a6rf\\x00\\xf7|h6+\\x15FL\\xc0Ua\\xf9\\x1e-\\xd4\\x85\\xb0\\x7f\\x13VB\\x11^C\\xfc\\xbbYd\\x07\\t\\xfc9xV\\xe7_=\\xf0g\\xcb\\xd5\\xec~\\x9c\\x15\\x0c\\xef\\xd7\\xd8\\x9b\\xf7\\x0c',\n          constraints={'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.5511380952699805e+142,\n          constraints={'min_value': -1.0167540618512387e+202,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.36102998174500006},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=113,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=23,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -96,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00060bb8\u58a6\u5880\\U000bcbce\u5848\u5863\\U000c9a68\u590d\u58ef\\U000e5847\\U0005c5ed\u587f\u58fc\u585e\u58ca\u58b9\u5915\u5877\u588a\u5873\u58f3\\U000d02a1\\U000efa9b\\U000d3826\u58dc\\U000b3b81\u590d',\n          constraints={'intervals': IntervalSet(\n               [(22586, 77005), (322705, 460739), (671461, 999958)],\n           ), 'min_size': 23, 'max_size': 123},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-9.270197568365643e+152,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571683327885266e+258,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.44530014907174886},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.18485450501807502},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u270f\u27e7\u2763\\U000bc2c5\u2755\u273f\u2727\u27a6\u2733\u279b\u2718\ud823\udc9f\u27cf\u2720\u2767\u2805\u2799\u27d9\u27e0\\U00091cf4\\U000d4144\u27ea\u27dc\\U000197d8\u271c\u27eb\u2729\u27cd\\U000fc3df\\U000ae02b\u2769\u27c3\u27c8\u27dc\u2803\u27d1\\U00094530\u276e\u273d\\ue254\\U00011b28\u27fb\u27c7\u27f4\u27d3\u275e\u27f9\u27bc\\U00063829\u274d\u276b\u276f\u2790\u2795\u278e\u27bd\u2799\u27b7\\U0005d216\ud834\udc38\\U000b2bf4\u277a\u27e4\ud835\udf01\u27b8\u2775\u2776\\U000ba840\u27e9\\U0009f518\u27e0\ud845\udec3\\U00102fc2\ud820\udd0f\u2756\u27fd\u2773\u2724\u2728\u273c\u276f',\n          constraints={'intervals': IntervalSet(\n               [(9999, 153541),\n                (322999, 464029),\n                (588277, 678952),\n                (697321, 869139),\n                (953528, 1042512),\n                (1050869, 1090847)],\n           ),\n           'min_size': 48,\n           'max_size': 148},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud2d8',\n          constraints={'intervals': IntervalSet(\n               [(53865, 316632), (413155, 766835), (966506, 1057553)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'1%\\xeb\\x87\\xb2C\\x91\\xc0\\x8dX\\xe1\\xf9 \\xed\\xfd',\n          constraints={'min_size': 0, 'max_size': 44},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.42241275765576447},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 2), ('c', 0, 1)),\n                 (('b', 0, 3), ('a', 3, 1)),\n                 (('b', 2, 3), ('b', 3, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x82R\u00fbw\u00c2\\U0009bc7b\\\\',\n       run_start=2.7788216520179252e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -4_738_960_650_197_254_924,\n        '}': -2.2250738585072014e-308,\n        'nil': 18208,\n        'vm\\U000c5a71\\U0005bd82\\x8e': -16982,\n        '\u00ab\u00aa': 8203,\n        '\u00e7\\U000c7e7c': -21,\n        '\u00b7\\U001079f2kC\ud820\udf2fT?\\x0c\u474b`\\x02\\xad\\x89\\x1e': -108},\n       coverage={')\u00d5|K\u00b8\\U000d40d4\\x88\\x17Z\\U000e3277': [],\n        '\u00ee': [-24981, 5_824_205_260_572_976_859],\n        \"{\u00d0'\\U000d2932\u00a3\\U000a0add\\x9c\\U00034f84\u00bf6i\u00ef\u00d1\": []},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-9411, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'+)\\n=',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('c', 1, 1)),\n                 (('c', 0, 1), ('a', 3, 2)),\n                 (('c', 1, 3), ('a', 3, 1)),\n                 (('c', 2, 0), ('a', 3, 2)),\n                 (('c', 3, 2), ('a', 0, 3))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.003921791969332844,
          "overall:gc": 0.0,
          "generate:args": 0.06225337745854631
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287658.791784583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U0006a1d3\\U00056c07\\x01rd\u8467e\\x18\\x03I)',\n       run_start=-3.770859174232638e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e5\u00bb\u00dd\\x7f\\x13%?-\\x96': -1_068_973_686},\n       coverage=None,\n       timing={'\u00c1gK\u00a7\\U000a4463/R\u00ab': 5.147502584432102e+16,\n        '': 3.035102185382788e+141,\n        'lorem \u0644\u0627 \u0628\u0633\u0645 \u0627\u0644\u0644\u0647 ipsum \u4f60\u597d1234\u4f60\u597d': -5.663331749630977e+216,\n        '\u00c4w': 4.473589801880931e-138},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-3010, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=7.58810836130648e+307,\n          constraints={'min_value': 1.388864608126013e-129,\n           'max_value': 1.7700244536861823e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7497145982198236},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.751892545278451e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.13427451598372334},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=26242,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9190261429311064},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0001ee5c\ud83b\udea1\\U0003dca2\ud83b\ude64\ud83b\ude1f\\U0001eec4\ud83b\ude1f\ud83b\ude2e\\U00032baa\ud83b\udea9\ud83b\ude57\ud83b\ude7a\ud870\udcb9\ud83b\ude7e\ud83b\ude98\\U0001ee78\ud85a\udda5\ud83b\udeaf\ud83b\ude0f\ud83b\ude05\ud83b\ude61\\U0001edfd\ud83b\ude6e\\U0001edf7\ud83b\ude85\ud83b\ude97\ud83b\ude4b\ud83b\ude57\\U0002f1d1\\U000338f6\ud83b\udeab\ud83b\ude52\\U0001eebd\\U0001ee73\ud83b\udead\\U0001ee56\\U0001eec3\ud853\udd9b\\U0001eec4\ud876\udc61\\U0001ee04\\U0001eedc\ud83b\ude72\\U0001edef\ud83b\ude13\ud83b\ude8f\ud83b\ude1c\\U0001eed5\ud852\udc57\ud83b\ude87\\U00048cd1\ud83b\ude17\\U0001ee53\ud83b\ude21\ud872\udcbe\\U00046a3a\ud83b\udead\ud83b\udeb0\ud83b\ude8b\ud83b\udeb6\\U0001ee33\ud83b\ude2f\ud83b\ude8d\\U0003968c\ud83b\ude7a\ud846\udfd9\\U00040efe\ud83b\ude4f\ud83b\ude0a\ud83b\ude4b\\U0001ee50\ud83b\ude82\ud84a\ude1a\ud83b\ude52\ud83b\ude71\ud83b\ude19\ud83b\ude09\\U0001ee38\ud83b\ude32\ud83b\ude71\ud83b\ude06\ud83b\ude10\ud86c\udcc8\ud83b\ude76\\U0001eea0\ud866\udde7',\n          constraints={'intervals': IntervalSet([(126430, 307409)]),\n           'min_size': 45,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.0,\n          constraints={'min_value': -inf,\n           'max_value': 2.225073858507e-311,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5839268673560342},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.36948801101091583},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=218,\n          constraints={'min_value': 96,\n           'max_value': None,\n           'shrink_towards': -9727,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=115,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -114,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'5\\tB\\xd3\\xa9<\\xa1]\\xed\\xc7\\xa4\\x8f\\x1fX\\xc5\\xcb\\x85\\xf3\\x90Q\\xaa\\xc6jy\\xffO\\xb2\\x8a\\xa6\\x80,b\\xe0',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('b', 1, 1)),\n                 (('a', 3, 2), ('c', 0, 1)),\n                 (('b', 1, 0), ('b', 3, 3)),\n                 (('c', 0, 2), ('c', 3, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0006487089558504522,
          "overall:gc": 0.0,
          "generate:args": 0.011345626786351204
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287661.062034791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u00d7\\U0003eec6\\x937b\\U000a9dd7\\U00052fe8R\u00af\\U00044f25\\x03\ud840\udd52\\x1b\\x1e\\U000a637d\\\\k\u00cd\u00b4\\x05\u00c4t',\n       run_start=1855397033976122.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x11\\U000b2990': 5071,\n        '': -4.89275274312823e+16,\n        '\u00db\u00f6\\U0004de28_': -6},\n       coverage=None,\n       timing={'k\u00e1\u00dcA4': 1.0792019661804232e+16,\n        '': -4.5957678624966104e+16,\n        '\u00be\\U000eb3b3-` ': -2.99502971339417e-47,\n        'NUL': 2302234771391256.0,\n        'f\\U0002efa6': 1e-05,\n        '\u00df\u00a29': -1.5382704377132743e+220,\n        '\\x86\u00ca\u00d0': 2.745976910742132e+128,\n        '\\x8a#\u834c\u00e2\u00a8\u00cd\\x0e\\nP\u00a3\"!9': 5.465913924748718e-32,\n        '\u00d8': -5.958776911962221e-115,\n        '\\x1a\u00c8\u00b3P': 5.1291504000790445e+152,\n        '\\x84': 2.225073858507e-311,\n        '\\U0001588f': -5.759981668465624e+16,\n        '\\U00060ce1': -5.4205164142658025e-134,\n        '\u00d8\\U000ab0b4\\x08\\x0f\u00bd$': -1.3483654816088138e+19},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=64, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 0, 0), ('a', 0, 0)), (('b', 3, 1), ('a', 0, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0007482079672627151,
          "overall:gc": 0.0,
          "generate:args": 0.001818750984966755
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287666.848442416,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287656.954078625,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.0688412668676196e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage=None,\n       timing={'': -6.934984149677416e+16,\n        '\\x0f-\\x8d\\U000a3d23(': -3.560507888610526e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\x04\\U00105bf8\u00cd\u00cc\\x93\\x0f[\u00dd\u00aan\u00f7/\\x05\\U00013804M\\U000be9a9[\\xad\\U000aac90\u00c1\\x03C\\x06\\U000da06d\\U00097129\u00a2\\x0c',\n          constraints={'intervals': IntervalSet(\n               [(0, 219786), (587005, 723409), (727739, 1114111)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x08V\\xe5\\xe7\\xf9\\xfe\\x7f\\x0fn\\xe6L}zJ\\xaf\\xdb]b\\xe7\\xed\\r\\x98'\\xa9E\\xf2M\\xb0s*/Hq\\xc2\",\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u9989\u997f\u9976\u98cd\u9908\u98b9\ud807\udf48\u9928\u990a\u991a\u98da\u98ba\u98fe\u994a\u98be\u98e6\u99b0\u98cc\u9940\u99a8\u9963\u98b6\u98c6\u98f1\u98b7\\U0001ab55\u98b3\u98db\u999d\u98f2\u9988\ud81e\udd7f\u98fc\u98e4\ud80d\udc1e\u9936\u994a\u999e\\U00014819\u9961\u998e\u98ef\u9947\u992f\u98d6\u9939\u9965\u98ef\\U00014b4e\u99a1\u98bc\u99ad\u98e3\u98ca',\n          constraints={'intervals': IntervalSet([(39090, 193532)]),\n           'min_size': 43,\n           'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'3>\\xec\\xda/\\x99\\x97\\x1a\\xddG\\xca\\xe0\\x1a\\xdf\\x01\\x04d4WK\\x9c\\xe1\\xc0\\n\\xb9\\\\\\x8d\\x93u|7f\\x84k\\n(d\\xabg{',\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5616803017953412},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2166,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 48},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x06\u00d4',\n       run_start=3.412168945391002e+292,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00aa\u00d9#\u00f6\u00a8\\x9d~\u00d4\\x91': 54},\n       coverage={},\n       timing={'': -1.8624467216394424e+16,\n        'j\u00f9': 9.418205004329221e+299,\n        ' ': 1.412628150806558e+167,\n        '\\x08': -2.824525573846098e-194,\n        '\u00d5Vor\u00cf\u00ae\u00d4': 0.3333333333333333,\n        ')^': 1e-12,\n        '\\x8ab\u00de': -602923237790426.0,\n        'H': -5.771056539131005e+107,\n        '\u00d3': -3.2595485905802975e-189},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28177, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud805\udc29\\U000c01a2\ud805\udc1b\\U000113fa\ud805\udc2d\ud805\udc4c\\U000113c4\\U000ae8d7\\U000b9f3a\ud805\udc33\\U000113c1\ud805\udc0a\\U00094e63\\U000113cb\\U000113c2\\U000113b3',\n          constraints={'intervals': IntervalSet(\n               [(70559, 181008), (369285, 611030), (690036, 812382)],\n           ), 'min_size': 11, 'max_size': 111},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=24743,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-25347,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('c', 1, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0007822919869795442,
          "overall:gc": 0.0,
          "generate:args": 0.01824058301281184
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287663.318637166,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U000e2225\\x93\\U000116fdo\u00ab',\n       run_start=0.0001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\xad\\U0004beba\u00c1V\\U000e62e4|\\x00': 1.4578783696517008e+275,\n        'T?\\U00064483': 1,\n        '\\x93': 0,\n        '\\U000fe568\u00c5\u00c3\u00b9\u00f5(\u00d5\u00aaR\\U000f33c0\u00d2': 2.8130915564018364e-118,\n        '\u00db\u00d2': 7.119084405879865e+16},\n       coverage=None,\n       timing={'': 2.2250738585e-313},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23032, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 0, 0), ('a', 3, 0))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00022237497614696622,
          "overall:gc": 0.0,
          "generate:args": 0.0012678339844569564
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287678.013397708,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.3976475024046998,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'\u00ae\u00e0\u00c6': [127,\n         4_904_134_589_540_890_258,\n         4,\n         947991,\n         624536,\n         982629,\n         623344,\n         215533],\n        'NUL': [26363, 26185, 26200, 30],\n        '\u00e2\\x02l-\\U000fc338\\xa0': [2, 25903, 103, -4, -7864, 1]},\n       timing={'o\u00ee\u00d6\u00c3\\r': 1.9,\n        '\\U00065b1dZ\\x8a\\U00090347\\U000deda86': -5.2361781857011176e+16,\n        '--dashboard-only': 4.3506065800054504e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='0',\n          constraints={'intervals': IntervalSet(\n               [(0, 83091),\n                (187910, 302681),\n                (317210, 426042),\n                (513840, 555417),\n                (805085, 830776),\n                (940349, 988315)],\n           ),\n           'min_size': 0,\n           'max_size': 2},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('b', 3, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\ud85f\udc50\\U00106c6a',\n       run_start=0.5,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'e\\U000334c4O\\U00040a32&\ud863\udcd8`L\u8166': 3.199345183622357e-17,\n        '\\U00059c63g\u00b3\\U00015255pwj\u00fb\u00d4\u00a9': 1.3348106452769908e+16},\n       coverage={'\\U000d6188\u00f6;\\U00092633\\x1e': [256], '\u115a': [9858]},\n       timing={'\\x8d\\U0007ae1d\u00b7\u00fc': 1.1604523204216419e+89,\n        'False': -1.1754943508222875e-38,\n        '\\U0005acb7\\x02\\x10\u00f9': 9.36874059497169e+150},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-92, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.3263200701363809},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd6B',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-29353,\n          constraints={'min_value': None,\n           'max_value': -13537,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.260781328757461},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-5.16732569570168e+16,\n          constraints={'min_value': -inf,\n           'max_value': -7443791421157650.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.2548791314720283},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 1), ('b', 0, 0)),\n                 (('a', 3, 3), ('b', 0, 2)),\n                 (('b', 0, 3), ('a', 0, 0)),\n                 (('b', 1, 0), ('c', 0, 2)),\n                 (('c', 0, 1), ('c', 0, 2)),\n                 (('c', 0, 2), ('c', 0, 0)),\n                 (('c', 1, 3), ('a', 1, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\ud801\ude1e',\n       run_start=0.1154889278548106,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'\u00c2^': [-42],\n        '\u00f5A\u00d40\\x9a~\\x7f\u00e1': [-32,\n         -521,\n         0,\n         247,\n         19498,\n         -5360,\n         91_957_979_913_682_960_388_196_820_787_354_543_628,\n         3,\n         3,\n         21150,\n         30096,\n         31032],\n        '\\x19': [-22_479_708_831_776_132_550_828_506_862_408_777_671,\n         31985,\n         24242,\n         27911],\n        '': [71],\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': [-12958, -23, -46],\n        ']B\\U00012d77\\U000f9ecd`*\\x89=\u00c9\\x07\u00e5\\U000ae1cc\\x0bO\u00c7\\x9e': []},\n       timing={'\\x9d': 5.455603059629367e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1764650457, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 2, 2)),\n                 (('a', 0, 1), ('b', 3, 2)),\n                 (('a', 0, 2), ('a', 2, 0)),\n                 (('a', 1, 3), ('b', 0, 0)),\n                 (('a', 1, 3), ('c', 1, 3)),\n                 (('a', 1, 3), ('c', 2, 0)),\n                 (('a', 3, 1), ('b', 2, 1)),\n                 (('b', 2, 1), ('c', 1, 1)),\n                 (('b', 3, 1), ('a', 3, 1)),\n                 (('b', 3, 2), ('b', 1, 2)),\n                 (('b', 3, 3), ('b', 1, 1)),\n                 (('c', 0, 0), ('a', 1, 0)),\n                 (('c', 0, 2), ('b', 3, 2)),\n                 (('c', 0, 3), ('c', 1, 0)),\n                 (('c', 2, 0), ('c', 0, 3)),\n                 (('c', 2, 1), ('c', 0, 3)),\n                 (('c', 2, 2), ('b', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\\\\\x9b\u00c29\u00b8\u00f1\\x1b',\n       run_start=-4.933156256306768e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U0005ff64\u00cb%@\\U0007e3b0\\U000ce79c\\U000f8514': -4.274348492875587e+16},\n       coverage=None,\n       timing={'x\\U000e6791': 1.555965989868787e-26,\n        '\u00ab\\x02#\u00a2\u00e9/k\u00c29': 3.4750982569910904e+16,\n        '': 8.346235894928989e+95,\n        '\\x86\u00e44\"\\x8f\u00e3\\x00CN`\u00b1+': -5.2163887564871144e+16,\n        '\\U0005870b\\U0009aa50\\x17\u00ac\\U000502c5\\U000dba08Ge\\x95\u00bf\\x86>sj\\U000faa28:\u00d4ER{': -4.0808195416690725e+256,\n        '\u00ef\\x10\\r`\u00af-\u00f4\u00f7': -4.037499939949981e-158,\n        '[\\U0005922c%\\U0010249d`-\\U00073766\u00c0\u00cf*\u00f4o\\x97\u00f5S': -2.4682070782082904e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=40, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-4.2769085244123976e+16,\n          constraints={'min_value': -inf,\n           'max_value': 1.2359126549428441e-307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'n]`\\xce\\nu\\xc5n>',\n          constraints={'min_size': 9, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.225073858507e-311},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-32122,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.90764175812622e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.934205545992975},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe8\\xa8\\xbf\\xa8\\x12N',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 0.0001,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.41542962359049296},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 2.2250738585e-313},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.5,\n          constraints={'min_value': -inf,\n           'max_value': 5.7530558746147976e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.3973835239526903},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-180,\n          constraints={'min_value': -8755,\n           'max_value': 32728,\n           'shrink_towards': -100,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'p\\xc0\\xe5\\xd3\\x88\\n\\xe59\\xc7MTS-\\x0f`\\xde\\x82\\xb5<\\xc0\\x96\\x1atv\\xfd\\xe0\\xa5\\x82\\x93x\\xf48\\xa7\\xfc\\xef\\xf2\\xf6\\x96',\n          constraints={'min_size': 16, 'max_size': 116},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-1.1253877873184667e-152,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'debug': 3.862690800339448e-189, '': 1.24321128450363e+18},\n       coverage={'\\x83\\U0010eb95\\x0f': [52,\n         798758899,\n         -84,\n         -5_411_490_254_502_886_195,\n         110_793_314_187_885_362_951_896_494_516_431_917_036],\n        '\\U000e0b71\u00a7}-\ud888\udcf9\ud856\uddd5e%0\ud886\udff8\u00e0\\x7f': [-25341,\n         1_748_704_952_786_067_150,\n         -4429,\n         -28358,\n         2982,\n         -11633,\n         -101]},\n       timing={'': 3.7569402202156585e+162,\n        ':\\x07H\u00dd\u00c0\\x02': 2.3535263542656824e+16,\n        '\u00deNM\u00ab\u00a3i': -5.6501501122288856e+16,\n        '(\\x88\u00e1\\x0fE\\x99\\U000964e3\\U000a5736q\\U000bb93d': 2.225073858507e-311,\n        'Kw\\x1a\u00a2\\x0b\\x11\\U00076065\u00f9\u00c8F\\x97': -6.5298448027339484e+125,\n        '\\U000ec3ee': 2.9056325993168863e-89},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=22883, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.29836534010474064},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.40451443620287597},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb8\\xd1\\x13',\n          constraints={'min_size': 0, 'max_size': 33},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(62599, 234954), (793935, 1065398)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=12052,\n          constraints={'min_value': None,\n           'max_value': 22824,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 2.225073858507203e-309},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=28307,\n          constraints={'min_value': -10603,\n           'max_value': None,\n           'shrink_towards': 4891,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 2.2250738585e-313,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8363592524310663},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"I\\xa6\\xb2`\\x1fG'\\xf4,@p}\\x1af\\x91P6\\x012b{\\\\\\xdb_\\xb0\\xb3fZ\\xf1\\xe0T\\x10\\xe1w#'\\xc5\\xdb:\\xfe\\x07K\\x92\\xe8t!F\\xd4\",\n          constraints={'min_size': 27, 'max_size': 70},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb7c\\xa2O\\xc5\\x7f=\\x99\\x13\\xab\\xbf\"~\\xbb,h\\x12B\\x18g\\xdf?C5 \\x87@\\xc5\\x0c\\xcd\\x11\\xe3\\x84\\xa4)\\xf6\\xe4\\x01mW\\x06\\xec\\xf7^\\xa0\\xe4s\\x08\\xba\\xe0\\xd1\\xb4\\xb5\\x8d\\xcb\\x16\\x14\\x17\\x12\\n$|n~\\xfd9\\x94\"\\xf4&\\xec\"\\xe6\\x8c\\x8c(\\xfd\\x1b\\x0b\\xcdJ\\x8c\\xdc\\xc6',\n          constraints={'min_size': 47, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=6.368979689949787e+307,\n          constraints={'min_value': 1.345382260628669e-195,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.19391826482188007},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0289066776407978e+16,\n          constraints={'min_value': -9007199254740992.0,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.9999999999999999},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1000.0,\n          constraints={'min_value': 10.0,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5954955370514438},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 2), ('b', 2, 3)), (('b', 0, 2), ('a', 1, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='w,',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ed\u00c5\\U0001c12f\u00ff\u00caW\u00f2\u65e3\u00f0\u7078*\\x05\u00e8\u00ea\u00e3': -2.4564294637870314e+89,\n        '\\xad\\x97\\x81%\u00b4\u00a9\\x80': 1.458419137540609e+16,\n        'S\\x8d\u00d5\\U00097065=': 5_729_856_384_170_395_745,\n        '\\x81\\x85': -1.5967295282648704e-98},\n       coverage=None,\n       timing={'\u00c2[': 10000000.0,\n        '/s\\x95o\u00c0\u00da\u00f6\\U0007ce2fs\u00d3\u00f8\\x12': -3.5136190786902906e+22},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=300, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U000850bd\\U00085171\\U0008514d\\U00085148\\U00085120\\U000c20b1\\U000850d2\\U000850ee\\U000850d1\\U00085126\\U000a4b1a\\U000b6aa5\\U000850e3\\U000850b5\\U000850da\\U0008512d\\U000850cc\\U00085153\\U0008509c\\U0008512f\\U000850df\\U0008511a\\U000850f3\\U0008513b\\U000a43c9\\U00085123\\U000850a6\\U000aba48\\U000b77a9\\U0008512d\\U00085163\\U00085186\\U000850b4\\U00085098\\U000850cc\\U00096bd5\\U0008518b\\U000850b8\\U00085171\\U000850e1\\U00085147\\U00085103\\U0008511e\\U000850d7\\U00085101\\U000a9c44\\U000850b1\\U0008513b\\U0008512a\\U00085099\\U000850c6\\U000850de\\U0008510d\\U00085103\\U0008517d\\U000850e7\\U0008515c\\U000850f5\\U000850d8\\U00085150\\U000850bf\\U000850ad\\U00085150\\U000850c5\\U00085164',\n          constraints={'intervals': IntervalSet([(544920, 807094)]),\n           'min_size': 44,\n           'max_size': 144},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 7.676449183983794e-292},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 1, 1), ('c', 3, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.002412875008303672,
          "overall:gc": 0.0,
          "generate:args": 0.04520475183380768
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287655.784473125,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\x86I',\n       run_start=2.465620146739623e-82,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'\u00b6': [],\n        '\u00ce\\x97': [-85, 0, 56203, -28155, -26],\n        '(N\\x8c\ud81f\ude6e\\U000a4354': [982629, 623344, 215533],\n        '\u00e9T': [26363, -18271],\n        '\\U000f3790': [53],\n        '\u00ba\\U000845cb\\U000a2115\\U0008d1a4\\\\Fa\\x15%n\u00cb': [29646,\n         -1282,\n         20508,\n         132,\n         14309]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-24359,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 25682,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6918067398367272},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='j\\U000a34b4\\x07',\n       run_start=-8.744518218080536e+267,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000d6188\u00f6;\\U00092633\\x1e': 256},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=46213, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 1, 3)),\n                 (('a', 0, 0), ('c', 2, 2)),\n                 (('a', 2, 3), ('b', 0, 3)),\n                 (('c', 2, 3), ('a', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.5177232028600824e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 359635,\n        '2n\\U000e6db4^\\U00012b6c\u00f9G\\x9a\u00f5\\x8dj\u00e9\\U00061524\u00f5y\"\\x1bw\u00db': 777442,\n        '\\U000c4162\ud81a\udeb4\\U000bcdb6': 1000.0,\n        \"\ud848\ude9c\u00cc\\x98'\u00e72\\x19\u00d8\": -2.1006189971525995e+113,\n        '\u00b2\\x17\u00ae\\x08\\U00074d95': 0.001,\n        'tee-sys': 6869110875293591.0,\n        '\u00d0\u00c0\\x94': 758},\n       coverage={'': [-8637, -23, 1_022_744_366, 31276],\n        '\\x94\\x878\u00a9': [1],\n        ')[\u00a4': [16681],\n        'venv': [16534, 1, 11_090_397_047_524_259_947],\n        '\\U000b13d6\u00ac\u00b6': [87, -24173],\n        '\\U00033da4C\u00fb\\x08': [-76, 95],\n        '\\x06\ud82c\ude0dN': [9014, 691818013],\n        '#\u00d8\\x9a3\ud851\uded4\u00bb\u00a2\\U000f976b\\x92\u00e4': [-32557,\n         -13405,\n         6_382_343_965_293_089_825,\n         -34,\n         1,\n         0,\n         1,\n         172800,\n         0,\n         2,\n         3,\n         0,\n         3,\n         1,\n         -29,\n         0,\n         76,\n         1]},\n       timing={'\u00d2\u00b1\\x1c~\u00caV\u00f3\u00d30\u00a9': 7.007737443305011e+159,\n        '\\U000e0b30(\u00bf': 1.0386037985075829e-112},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-10, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=9007199254740992.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.1154889278548106},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.23229526103184744},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.1754943508222875e-38},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.27904852507153294},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xcc\\xaa+\\x95\\xc71',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8f\\xca\\xad\\x02',\n          constraints={'min_size': 3, 'max_size': 103},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 1, 3)),\n                 (('a', 0, 1), ('b', 0, 0)),\n                 (('a', 0, 1), ('b', 0, 2)),\n                 (('a', 2, 1), ('b', 2, 3)),\n                 (('b', 2, 2), ('a', 2, 1)),\n                 (('c', 0, 3), ('a', 3, 0)),\n                 (('c', 1, 3), ('b', 0, 2)),\n                 (('c', 2, 0), ('a', 1, 3)),\n                 (('c', 3, 1), ('b', 1, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0009279169607907534,
          "overall:gc": 0.0,
          "generate:args": 0.013512168021406978
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287656.610100541,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=-3.8789593808575547e-137,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'d\\xad\\x82]\u00c1$\\U000140e5\u00b0\\U0005c2a7\u00fe\\x01E\u00aes\u00ba': -0.014769195756760887,\n        '\\x7f\u00acf': -6.8229389557615416e+16,\n        '\\x0e@R\\x07B\\U00082bd2\uc326\\x98\\x04\\U000ab758\\x9b': -6.725330236222842e+164},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.665562008781934},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5797466592927506},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 2, 3)),\n                 (('b', 2, 0), ('a', 0, 3)),\n                 (('b', 3, 1), ('a', 2, 3)),\n                 (('b', 3, 1), ('b', 2, 3)),\n                 (('b', 3, 1), ('c', 2, 3)),\n                 (('c', 0, 0), ('c', 2, 3)),\n                 (('c', 3, 0), ('c', 0, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='^\\x1d\\x8b',\n       run_start=-1.5761741035448928e-11,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x85\\U000d91c55\u00d5': -154_424_433_848_107_817_651_630_055_819_984_972_378,\n        '\\U0010c90c': -16526,\n        '\\U00018e6d\u00e4\u339et\u00cfC': 3.952401335491606e+16,\n        '\u00d4\\x84\u00cf\u00c7R\\x16\u00dc\\xad\u00ec\\x11p\\x86\\U0010dcd1\\U00096d69H\u00d3H\ud888\udda5\\U0007e51f\\U000514f9\\U000b6699\\x98,Y': -4.6673283743518344e+16,\n        '\\U0001dcff\\x92,L\\x0b\\r\u00cb>hQ\\x87\\U00014356': -109,\n        '\u00a4[\\x19\\xad': -2.00001,\n        'Ux': -10986,\n        '\u00ff\u00f7\u00f7': -31654,\n        'A\\x1e\u00ab\u00f0\u00c6': 448},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23921, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 2, 1)),\n                 (('a', 0, 3), ('c', 0, 3)),\n                 (('a', 3, 2), ('b', 3, 1)),\n                 (('b', 3, 1), ('c', 2, 3)),\n                 (('c', 2, 1), ('a', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00c7Y\u00d5\u00db',\n       run_start=-8.63081665595303e+284,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d4\u00ccu\\x01n': -32,\n        'x\u00c9y': -31650,\n        '\\U001014c1\\x18': -1.7976931348623157e+308,\n        '': 15009,\n        'X\u00d4\\U000906b6\u00b4\u00ab\\x82\\x19\\U0003d054': -1.814606828575055e+16,\n        '\ud849\udd48E\u00ee\\U000584bf\\t\u00d9\u00a7w\u00ff#>\\U000f005fz': -24339,\n        '+\u00a6\u00c7\u00ea\u26589\\x04\u00e8/\\U0010dd16\\x14\\x99\u00a7\\x96\ud805\uddc6\\x1c\\x87U\\x97\u00f5\u00b4\\U000e574d': -3.0400410470943372e+16,\n        \"\u00ff\u00fb2\\U000fc7c0'\u00bc4\u00a5\\U000a7703\": 0.5,\n        \"\u00a8'\\U0006c532\u00df\u00ba\\x13$\\x9f\u00ed\": -5.690189984133319e+16,\n        '~\\U0001c464\ud805\udc51u\u00ab\\x07\u00bb': -1_183_930_854,\n        '*': 1.9988228846367028e+149,\n        '+8\\x97\u00f4\u00e6': 2.8072604193605148e+16,\n        '@\u00a2\\x9c': 18479,\n        '\\U0004d118': 32504,\n        '\\x8e\u00e7!\\x03': -1.8789694332621052e+16,\n        '\\x03\\x0b8': -25994,\n        '\\U000edeb8\u00e4M\\x06+\\U00100308\u00a7\u00b2)a\\U000cdb71\\U0007e1feA': 126,\n        '=t\\x92': -38116614045067.64,\n        '\u00f6\\x81\u00e5\\x90X\\x96': 15779,\n        '\u00a7\\x13\u00ef\\x93\\U0005221a,\\x0b\\U00102324\u00ef\u00b3\\x93\u00f5\\x92\\U000c30e4\ud855\udcc49\\x0f\u00b4\\U0006c7cf\u57b2\\U000c4f0ea\u00e9': 2.517574050295347e+16},\n       coverage=None,\n       timing={'': -1.0063478191619684e+24,\n        'x|\\x82': 0.005,\n        'h^\\U000a401ey': -9.881167355060442e+21},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-31779, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x1f\u00f8\\U0004cca3\u00ca\\U000989f5\\x04!R\\x8b\ud841\udfd7gF\\U0006571b\\U0003edd2\u00ce\u00e1\ud882\udf11\u00b9\u00bd**\\U00040007',\n       run_start=2.225073858507e-311,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 1.0706599477280014e+286,\n        '\u00b5': -4.157712726240448e+70,\n        '0 \\x96\\x19l\ud81c\udd3e\\x96\u00b7U': 3.78805488016487e+16,\n        '\\xa0\u00c8*\u00e4\ua23a\\x99|\\x0f': 4_178_693_159_537_716_777,\n        '\u00e1S': -5229,\n        '\\t\u00ec\\x89\u00bc': 0.5,\n        '\u4787': -31208,\n        '9': 19826},\n       coverage=None,\n       timing={'\u00deq\u00a7[': -1.9831159456734732e+16, '\u00d2\u00e8q\u00c1%': 9007199254740992.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-2566, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('a', 0, 3)),\n                 (('a', 2, 2), ('a', 0, 2)),\n                 (('b', 0, 0), ('b', 2, 0)),\n                 (('b', 1, 0), ('b', 0, 2)),\n                 (('b', 2, 2), ('a', 1, 2)),\n                 (('c', 1, 1), ('a', 2, 0)),\n                 (('c', 1, 2), ('b', 3, 2)),\n                 (('c', 3, 0), ('b', 1, 1)),\n                 (('c', 3, 0), ('c', 0, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from TupleStrategy((TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))), TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))))).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0007922090007923543,
          "overall:gc": 0.0,
          "generate:args": 0.012271416955627501
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287659.974822125,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='I\\U0001974c',\n       run_start=0.5081124242163241,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'\u00ed.\u00f2': [20040, 0], '': [4]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1000.0,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 2},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 0, 0)),\n                 (('b', 0, 2), ('b', 3, 0)),\n                 (('b', 0, 3), ('a', 1, 0)),\n                 (('b', 1, 3), ('b', 0, 2)),\n                 (('c', 1, 3), ('b', 1, 0)),\n                 (('c', 2, 3), ('b', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.0688412668676196e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'<\u00e1\u00c3\u00de\\x8c\u00e1': -4.434581505593191e+16,\n        '\u00b6\\x99\\U000de084': -inf,\n        '\\x05\u00fa': 4.650318353424457e-178},\n       coverage=None,\n       timing={'': -6.934984149677416e+16,\n        '\\x0f-\\x8d\\U000a3d23(': -3.560507888610526e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=58810, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.734766523876856},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 136},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'setuptools',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=31,\n          constraints={'min_value': 18,\n           'max_value': None,\n           'shrink_towards': 12991,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5616803017953412},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2166,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 48},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x06\u00d4',\n       run_start=3.412168945391002e+292,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00aa\u00d9#\u00f6\u00a8\\x9d~\u00d4\\x91': 54},\n       coverage={},\n       timing={'': -1.8624467216394424e+16,\n        'j\u00f9': 9.418205004329221e+299,\n        ' ': 1.412628150806558e+167,\n        '\\x08': -2.824525573846098e-194,\n        '\u00d5Vor\u00cf\u00ae\u00d4': -1.401298464324817e-45,\n        '\\U000469816*\\U000faf67': 3.462085648025375e+208,\n        '\u00b9\u00fc\u00b4\u00ed\\U0001577a\\xa0\\U000b03b1\\U000371df\u00a2\u00cd>{': 5.493233919351694e+16,\n        '.\u00eb\u00e1\\x03': 6.513907633183395e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28177, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud805\udc29\\U000c01a2\ud805\udc1b\\U000113fa\ud805\udc2d\ud805\udc4c\\U000113c4\\U000ae8d7\\U000b9f3a\ud805\udc33\\U000113c1\ud805\udc0a\\U00094e63\\U000113cb\\U000113c2\\U000113b3',\n          constraints={'intervals': IntervalSet(\n               [(70559, 181008), (369285, 611030), (690036, 812382)],\n           ), 'min_size': 11, 'max_size': 111},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=24743,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-25347,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('b', 2, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x16\\U000b4951H\\x90[\\x1er\\U000ceccd\\U00081b3c\u00bf\\U0010835d',\n       run_start=-4.9628619731537113e-188,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x11\u00d1\\U0008ce45)\u00fb\u00e27': 378942234686974.0,\n        '\\x9c\\n': -5568,\n        '\u00c4_\\U000c8dfd\u00c6QJ\u00e8\\x9bn': -5.908668898021301e+16,\n        '|\\U000952ec\\U0007bd04\u00e0\u00f3': 7587771468644571.0,\n        '\u00b1\u00f5\u00d5_': 9.577047221480226e-08,\n        '0..0': 0.0,\n        '': 2.220446049250313e-16,\n        '\\x97_=\\U000ab32d\\x8e\u00d99\u00f5F\\U0004170d\\U000b9e9c]~8\uaeeb\u00b9V\u00a4\\x9f\\x96': -6.3934123024650824e+16,\n        '\u00a2': 68,\n        '\\x94': 1.1609095002015536e-213,\n        '\u00e2z\u00c2': 63,\n        'j\\x18\\U000d48fc\u00d0': -9007199254740992.0,\n        '\\xad-': -4.592598283551608e+16,\n        '\\U0006091feZ\u00e4\\U000f0aaek\\U000d9766': 0.1,\n        'no tests collected': -9.241941476899898e+208,\n        '\u00e1\\x83\\U0005c5a9\\x12\ud849\udf8e\\U0001a897\u00bd\\x91\\U000c3ce4\\x0c': -3143044456636166.0,\n        '\\U000e398bT': 2.25392127377164e+22,\n        'r]\\U00015946': inf,\n        '\\U000d9491\\x14\u00fd': 4.77631084424392e+16,\n        '%\\U000ed872\\x85\u00d9\\U000363eaX\\x16\u00a3\u00dc': -8528652717144254.0,\n        'LPT1': -8.131971061470063e-202,\n        '\\x1d=\u00a8\u00c6\u00b5;R\\U0009390d_mC\\x85\\U00093710\\x14I\\x01\\x9e': -780651291,\n        ' ': -20548,\n        '}\\U000e6971': -1.964414408435966e-126},\n       coverage={'Fa\\U000e8fb7\u00f5\u00f0p\u00b1:\\U000ac762Y\\xa0\\x11R': [-2729,\n         -50,\n         -9392,\n         -63,\n         17499,\n         -1],\n        '\\x01J!\u6512$0\\x05\u00a6Cn\u00a1\u00d7\u00d2': [26153, -18484, 524288],\n        '\\x80\\x96': [-83, 22615]},\n       timing={'H': -4.181797444968572e+16, 'Rb': 1.3920870476079314e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=3310, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.772477017881018e+16,\n          constraints={'min_value': -6.414295340324316e-211,\n           'max_value': 6.024244892503162e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.19363733003711509},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.6028124441227665e+172,\n          constraints={'min_value': -2.1326530410559117e-137,\n           'max_value': 1.2674496794225608e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.9597626935988128},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.957748955467294e+307,\n          constraints={'min_value': 1000.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.8089079525020648},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1000.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7903680569722213},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-39,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -17202,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5097898940264162},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5079512429155115.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 2.225073858507e-311},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb1\\x1b\\x85\\xff\\x1b\\x92\\xe5\\x1fh\\xe0\\x84\\x18FZxa\\xe7\\xb2,\\xa7\\xb0I\\xab\\nD.\\xc1:Y*\\xdeD\\xb6',\n          constraints={'min_size': 27, 'max_size': 127},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8867996639664202},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 6.103515625e-05},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.2816371208166492e+16,\n          constraints={'min_value': -1.4373310604771582e+64,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.1754943508222875e-38},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf7,\\xbf<',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u1cbd\u1ca2\u1c80\u1ca1\uce10\u1d2c\ud883\ude95\\u1ccb\u7254\u1d21\u1d02',\n          constraints={'intervals': IntervalSet([(7266, 219412)]),\n           'min_size': 0,\n           'max_size': 79},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 1), ('c', 2, 3)),\n                 (('b', 1, 1), ('a', 0, 3)),\n                 (('b', 2, 0), ('b', 2, 0)),\n                 (('b', 3, 1), ('a', 2, 3)),\n                 (('c', 2, 0), ('b', 1, 3)),\n                 (('c', 2, 2), ('c', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=';',\n       run_start=0.5,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'Bc8Do\u00df\\U001045fb._\\x1d\u00bb\u00bd': [],\n        '\u00e8\\x19\u00b1\u00e8V\\U00057b7b': [24643, -29840, -125, 15, -13062, 14],\n        '\\U00082596h\\x04\\x01\\U0006f612l\\t\u00fa\u00d3{\\x08\u5e25': []},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-111417857836871083382736715135425684438, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.4080030303504424},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xeb',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'>\\x1f`7\\\\C',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00db',\n       run_start=6.988234121303933e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00bd\\U000432e4 \u00a8\\x93\\x9f\u00a4': 2.2755090949441194e+96,\n        '': 31,\n        '\\U00075b3b\\x83\u00f0\\x10\u00cf\\U00072e8a\\x81\\U00033673\\U000b3852': 3.638594023697475e-119},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1477409231, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 3, 0)),\n                 (('a', 0, 2), ('b', 0, 0)),\n                 (('a', 0, 3), ('c', 2, 2)),\n                 (('a', 1, 1), ('a', 1, 0)),\n                 (('a', 2, 0), ('a', 2, 3)),\n                 (('a', 2, 2), ('c', 1, 2)),\n                 (('a', 3, 1), ('a', 1, 2)),\n                 (('a', 3, 1), ('c', 3, 1)),\n                 (('a', 3, 2), ('b', 3, 3)),\n                 (('a', 3, 3), ('a', 0, 0)),\n                 (('b', 0, 0), ('b', 0, 1)),\n                 (('b', 0, 1), ('b', 3, 3)),\n                 (('b', 0, 2), ('c', 3, 0)),\n                 (('b', 1, 0), ('b', 3, 1)),\n                 (('b', 1, 1), ('a', 3, 3)),\n                 (('b', 1, 2), ('a', 0, 3)),\n                 (('b', 1, 3), ('b', 3, 2)),\n                 (('b', 2, 3), ('b', 2, 3)),\n                 (('b', 3, 1), ('a', 0, 3)),\n                 (('c', 1, 3), ('b', 0, 1)),\n                 (('c', 1, 3), ('c', 0, 2)),\n                 (('c', 3, 0), ('a', 3, 0)),\n                 (('c', 3, 1), ('a', 3, 0)),\n                 (('c', 3, 1), ('b', 3, 3)),\n                 (('c', 3, 3), ('b', 1, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='D\\U000598fd\ud81d\udd3f`\\x17\\U000b2992f\u00d5\\U0006097a7h~\u00dd',\n       run_start=-2.619213213059655e+98,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'Y': -2.3454030336408753e+198},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=20996, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 1, 3)),\n                 (('a', 0, 3), ('b', 3, 2)),\n                 (('a', 2, 3), ('a', 1, 2)),\n                 (('b', 0, 3), ('b', 0, 1)),\n                 (('b', 1, 2), ('a', 2, 2)),\n                 (('b', 3, 2), ('a', 2, 2)),\n                 (('c', 2, 3), ('b', 1, 2)),\n                 (('c', 3, 0), ('c', 2, 0)),\n                 (('c', 3, 1), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=1e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 29521,\n        '\u00b8\u00b1w\u00aa\\x85\u00d2\\U000d9548\\xa0': -89,\n        '\u00d3\\x93': -4.996023511079737e+16,\n        '\\U00105263\\x8c': -1.175494351e-38,\n        '\\x06': 25,\n        '\\x95': 16345,\n        'P{': 1.083028321170585e+16},\n       coverage=None,\n       timing={'\\x19\\U000c49cd': -9232369390550168.0,\n        '\\x19': 7.111657076989628e+16,\n        '!\u00ea\\x16\u00be\\x94': -2.9542900227458444e+16,\n        '\u83e5\\U000eede8u': 2.333574360328547e+178,\n        '\ud883\uddb9\\x8c\\x0fE\u00f8\\U000c99c8': 1e-12,\n        '': 5.2590964134933777e-82},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-81, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 3, 2)),\n                 (('a', 0, 3), ('c', 3, 2)),\n                 (('a', 2, 1), ('a', 0, 2)),\n                 (('a', 2, 3), ('c', 0, 2)),\n                 (('a', 3, 2), ('a', 3, 1)),\n                 (('b', 0, 2), ('b', 0, 2)),\n                 (('b', 3, 1), ('b', 1, 3)),\n                 (('c', 0, 2), ('c', 3, 1)),\n                 (('c', 1, 0), ('c', 1, 1)),\n                 (('c', 1, 0), ('c', 2, 2)),\n                 (('c', 2, 1), ('c', 0, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000a6493\u00db\u00a7\u00eb\u00b4\\x9ad\\U000f3d0b_6',\n       run_start=1.1767206185843352e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x84\\x8f\ud85a\uddc9\\U0009a36e': -1.5739423942421485e-146,\n        'A\u00e4\u00f7T': -31873,\n        '': 1.1738676890256469e-55,\n        '\\x0e': 1.657565896200575e-205},\n       coverage=None,\n       timing={'\u00bc\\x12': 2.5330908314070207e-20,\n        'a\\r': 0.01,\n        \"C'\u00d24\u00bf4\u00cb\u00db5z\\U0004565ch\u00ae\": 1.5390808778095526e+16,\n        '\u00c1G\\U00046b3c': -2.4734985598122183e-238,\n        '': -6.007039172100275e+16,\n        '$\u00ac\\x93': -inf},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-76, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8414824703814148},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-24187,\n          constraints={'min_value': None,\n           'max_value': 4993,\n           'shrink_towards': -62,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.26100273841813043},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xa1\\xf9*W\\x15\\x8c\\xc2\\xd0N\\x1a\\xdc\\xb9\\xb3\\r\\x08\\x04)\\xe3Hbf{\\x9a\\x8c<t)\\xdaB^\\xdd-\\xac\\xc8\\xf1\\xb4\\xc6\\xc0k\\tGK\\x02\\x9f\\x17\\x81\\xe48\\x9b\\xcb',\n          constraints={'min_size': 29, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=11458,\n          constraints={'min_value': 91,\n           'max_value': None,\n           'shrink_towards': 18391,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 3.1750548618315403e-83},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1_971_888_977_131_004_223,\n          constraints={'min_value': 1_971_888_977_130_988_916,\n           'max_value': None,\n           'shrink_towards': 7276,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.345203931798632},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.066861279062504e+308,\n          constraints={'min_value': -3.001864485203966e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.0296367253711698},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-19760,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=162,\n          constraints={'min_value': 124,\n           'max_value': None,\n           'shrink_towards': -2961,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"p~/@\\x85\\x034r\\xef\\xab\\x87\\n\\x16\\xaf\\xbb19\\xdf\\xd7yO{7c\\xfcG\\x87\\x1b\\x94\\xedG'K\\xdfw\",\n          constraints={'min_size': 19, 'max_size': 64},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 5.29409162121266e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9048900878171511},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('c', 3, 0)),\n                 (('a', 3, 1), ('c', 2, 2)),\n                 (('b', 2, 2), ('c', 3, 2)),\n                 (('c', 0, 2), ('a', 0, 0)),\n                 (('c', 1, 3), ('b', 1, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00f5q',\n       run_start=6713286.099080231,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 26,\n        'g\u00d5\\U0001bf03\\x026S\\x9f': -72,\n        '\\U00068711': 5.851565150262908e+29,\n        '\u00b1b\u00a2$': 7682},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23482, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=4.747676758546696e+307,\n          constraints={'min_value': 0.0001,\n           'max_value': 5.67009298026724e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6089413816869739},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 9.132018819639165e-46},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.24652396371912638},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 6.103515625e-05},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 3, 0), ('a', 0, 1)), (('c', 0, 2), ('a', 2, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U000f60bf\u00d0d\\x92',\n       run_start=-5.403605942643026e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'1\\x93c\\x8a\\x08}E\\U000d239b\\U00085d16\u00a9\u00dc\\t\\x1b': -14277,\n        '\u00df\\U0003d4e4': -4.313198513614599e+16,\n        'P\\x10\\x07\\x0f': 9751},\n       coverage=None,\n       timing={'^\u00fd': -7164579059148163.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=91, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(8238, 98350),\n                (121000, 577774),\n                (757154, 846023),\n                (970490, 1043719)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud855\udcd5\ud855\udce2\ud855\udc25\ud855\udcf2\ud855\udc61\ud855\udcd5',\n          constraints={'intervals': IntervalSet([(152599, 675292)]),\n           'min_size': 6,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.1665232828792285},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=153,\n          constraints={'min_value': 41,\n           'max_value': None,\n           'shrink_towards': -635670075,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=79_835_668_592_425_971_905_229_972_678_865_453_552,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 8288,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 1, 0), ('a', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=5.274485141183186e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 1.1964551882699662e-283},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=4610213023242611614, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xb6N\\x85R\\xf9\\x90\\xe5\\xc7\\xf2p6\\xf1\\xab\\x90,\\xb0Eu\\x9a[\\x90\\xf3T4-\\x95',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd8\\x16X\\x04',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='{',\n       run_start=-1.3420620848229324e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'[n\u00b7\\U000eaf13\\U000d2dcdu\\U0006015b\\x83\\x88\\x9bHy\ud822\udfa5\u00e6\\U00073b65\u00bf3\u00bd{\u00c8?\\U0010124a\u00f0\\U0007c6f4\u00a2$\\U00057d42\\U000a383f\u00c1\\U000fb447': [-33_043_043_197_147_594_226_543_685_455_222_079_561,\n         15836,\n         -76,\n         9,\n         -131_802_793_324_574_882_205_630_447_628_770_583_801],\n        '\\x97': [-3_566_458_696_962_490_086, -43, 12960, 23606, 1894],\n        '': [-7914,\n         -61_205_749_592_668_099_668_991_719_674_333_699_267,\n         1029,\n         -11409,\n         32346],\n        ':u\\x15': [],\n        '\\x87\\U0008bcdc\\U000c1aad\u00d2': [-44, 300, 32],\n        '\u00c7': [6570,\n         -131_899_193_951_272_275_306_951_321_867_661_681_540,\n         2747,\n         19_659_590_622_273_615_706_028_331_123_976_670_335],\n        '\\U0004088e\\x0b\\U00093084xx\\U000f5b48\\x91\u00c2t)\\x11\\x92\\x19\u00a4^\\x82\u00aa\\U0003ebcb\\tY\u00eb\u00fd\u00ac\u00c7E\ud848\udd67\u1daf\\U000c3611\u00c5': [21978],\n        '\\x99@2\\x1b\\U000ebac2\\U00103c94h\\x00\\x0b\ud84e\udcd4': [32480,\n         1_545_416_315,\n         22,\n         -17985,\n         -437232478,\n         76,\n         -2116,\n         1467,\n         -20975,\n         -7106],\n        '\u00a6\u00fbc\u00f9\u00ed\\x9d\\U00035659\\U000a48d1\\U000dc2ea\u00c3\\U00064a0fNN\u00b0\u00cb\\x81\u00e3\\U000ea294P\\U000d1bd0\u00bd\\x93\\U0008c3e3\\U000b436f\u00c5\\U000fecb7Q\\x16_\\x83\\U000429fc': [66,\n         -669833013,\n         107,\n         -27957,\n         98],\n        '\u00d7\\U00078feb\u00d5L': [],\n        '\\x83': [],\n        '\u00c8': [-11179],\n        '\\x06\u00c3[\\x10\u00c4\ud802\udc8b': [3_432_671_051_978_671_817]},\n       timing={'&': -3.146708521306459e+16,\n        '\\U000f5ae8\u00a5\\U000fc356S#\\U00090ba2\u00e6Z}': -6.240732378094191e+16,\n        '\u00bb': 7.282733690011847e+306,\n        '\u00bb$\\n\u00fc\\U000673905': -6.724324865781329e+16,\n        '\\U000ba292f': 0.0,\n        '\u00ba': 2.2250738585e-313,\n        '\\x14\\U000c2140\\xad': -3.2620302424680264e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-16961, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.0,\n          constraints={'min_value': 0.01,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5434180215107008},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('a', 2, 2)),\n                 (('a', 1, 1), ('a', 2, 3)),\n                 (('a', 2, 0), ('c', 0, 1)),\n                 (('a', 2, 2), ('a', 2, 1)),\n                 (('a', 2, 3), ('c', 3, 2)),\n                 (('a', 3, 1), ('b', 3, 0)),\n                 (('a', 3, 2), ('b', 3, 3)),\n                 (('b', 1, 1), ('b', 1, 1)),\n                 (('b', 2, 1), ('a', 3, 1)),\n                 (('b', 3, 0), ('c', 3, 2)),\n                 (('c', 1, 2), ('a', 1, 0)),\n                 (('c', 3, 3), ('a', 0, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x05H\u00f4',\n       run_start=3.202733127579768e+108,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x93\\x19J': -16591, '': -79},\n       coverage=None,\n       timing={'\u00a7': 6.169040349074886e+261},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-18621, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-3609,\n          constraints={'min_value': None,\n           'max_value': 5333,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-117_649_344_320_351_289_073_675_252_564_308_134_674,\n          constraints={'min_value': -117_649_344_320_351_289_073_675_252_564_308_156_634,\n           'max_value': 5,\n           'shrink_towards': 0,\n           'weights': {-52_494_038_716_579_850_790_960_549_202_476_393_847: 0.1097038422644701,\n            -60_955_562_479_244_969_159_376_520_455_503_645_607: 0.041411605172739674,\n            -117_649_344_320_351_289_073_675_252_564_308_148_111: 0.22534938716818698,\n            -117_649_344_320_351_289_073_675_252_564_308_134_674: 0.07379725243769658,\n            4: 0.1615983375046665}},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('a', 0, 2)), (('a', 2, 0), ('c', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U000bb58f',\n       run_start=1.7976931348623157e+308,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'B\\x82\u00dfZ\\x7fVD@J\u00c6j4S\\x15': -121,\n        '\\x05\\x82a\u00acb\u00ff': -22592,\n        'J@\u00ea)N\u00de\\U000d7a88F': -6892,\n        '\\x88': 2.6399879293485306e-71,\n        '\ud808\udece': 6.342103999457163e+16,\n        '': 1.478329797399317e+297,\n        '\\x1f>}\\U00066eeaP': 2.2106885387540097e+159,\n        '\\U0004e950Q\\xa0\\U000b7d60': -18897,\n        '#\u00e4': -521773652,\n        'RRA': 3.28423117451712e+16,\n        '\\x17': 2.304382888847895e+162,\n        '\\U00060419\\U000e8d7c\\U000c2214{.\u00a6\\U000cac93\\x0c\u00b8\\x81\\x88': 5.8317849027174856e+16},\n       coverage={'K\\x94\u00a45N\\x04s\u00f1\\U00037fd3\\U00055cee\u00e3\u00ef\\x13': [17287]},\n       timing={'\\x98\\x9bY\\x85\u00f5?\u00e1\\x0f\u00e2\\U000846d9': 6.377653047192012e+16,\n        '\\U000d50f8\\xad\\x15': 1e-05,\n        '\\x8c\ud880\udd83\u00bb\u00dd\u00b1\\x1c\u00e0\u00db!z\\x12\\x89i\u00ba': inf,\n        '': 1.9595327206634132e+16,\n        '\u00f5\\x0f[\u41e0\\U0010962f\u00d0\\x86\\\\\\x83\u00b6+': -4995272939904091.0,\n        ' ': -2.363257124362641e-220,\n        '\\U0006cb0c*\\U0010fc7d\u00d0v\\x13W\u00c2\u00b0\\x17\\U000fdc25\u00bd\u00b2\u00a8': 1.64133842584526e+195,\n        '\\U00108049\\U00090064\\U000ecd5d\\U000bcd4a|\\U00094a5b\u00ccu\\U0004f335\\x99': 5.960464477539063e-08,\n        '\ud881\uddf0.\u00bd\\x82\u00bf\u00ed': 6.67132357481515e+16,\n        '\u00f2j\u00f8\\U0007a3e2q\u00f5\\U00064e5a\\U0007e730N\u00ba\u00b8\\U000993b0': -3.3254376283661536e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-20418, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x94\\xed \\\\\\xaa\\xba\\xfb\\xe3\\xcbZ\\xa7\\xca\\x1b7\\x9a\\xd8q\\x0e\\x82\\xc1\\xa2Ge\\xc96\\x94\\xc4\\xc4\\xaf\\xc6\\x96\\x98i\\x11\\xbc\\xb3\\xbf\\xe0k\\xdfO\\xd8\\xafwwM\\xe6G\\x8bXS\\x12\\xdf\\xb7\\xb2*\\xbdx\\xa7\\xc1\\xda\\xdfni\\xb2@\\xeaP\\xdb\\xf8\\xbc\\xb5\\x98\\xc6]\\xc4nSh\\xc3\\xdc\\xe7Y\\xed~<\\x13\\x9c\\xb1\\xf0A,q^\\xec\\xf1\\x1c0\\x8a\\xa5\\xa6O\\x88-j7\\xdf(4\\xcaJ\\xfd\\xed\\xe5\\x10\\xec',\n          constraints={'min_size': 49, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 2, 2), ('a', 1, 0))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from TupleStrategy((TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))), TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))))).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.007189751078840345,
          "overall:gc": 5.54159632883966e-05,
          "generate:args": 0.09263674810063094
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287680.347586625,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U0009173a\\U000d567c\\x8f\\U0008e37e',\n       run_start=-inf,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={},\n       timing={'': -4.869347072274681e+16,\n        'n\\U0007394c3\\x01,m\\U000fb6f7B\u00ceE\\U0010c8be\\U000ce4bf': -2.5812910006690816e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x10',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x06\u00bf',\n       run_start=-3.8690707957026764e-225,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'>\\U0006cbe3\\U00037318\\x90\\r\\U000b1c19\\x1e\\\\\u00ec\u00cc=': 27343,\n        '\u00a8': 255,\n        '\\U0007d061': -4.118229470734212e+16,\n        ',\\U000ef0dc\\U000414ed\\U000f8ba6\u7984\\x86\\x8b': -7.054020328855982e+16,\n        '': 3_966_133_104_106_488_536,\n        '\u00d9\\U0009e8cc\\x97\u00b1l': 30725,\n        '\u00df\u00c2\\x94\\x0f\u00f3\"\u00dc:l\\x05\\U0010e573\u00b5\\x00\\x19\\U000781a6w\u00c7t\\x80\u00b7;>\\U000677f2\u00acu': -1.4095772969855142e-183,\n        '\\U00046533': 17839,\n        '\\U000baf5e\\U0009fe9d~': -879_547_794_532_636_501,\n        '\\x98{\\x88\u00da\\x1fRV': -0.0,\n        '\u00af\\U0005797a': 1.7095629667609196e-28,\n        'PYTEST_CURRENT_TEST': -5.93003258752622e+16,\n        '\u00a7\\U000a05f5\ud884\uddab\\x88\u00b0': 679379488},\n       coverage={'!': [-19530],\n        '\ud880\udcbe\\U0001a365': [-8062, -118, 240, -14528, -30244, 190246263]},\n       timing={'\u00c1': 6.773795205337622e+16,\n        '^|/\\x9f\u00e6Sa': 1.8391388307946293e-131,\n        'x\u00fe\\x1a\u6953b\u00d1\\U00044639\\x06\u00e1\\U000ece21': -4.20892813859113e+16,\n        '\\U0010ee19\u00f4\\U00087d9a\u00e6\\U0008ba2d': 4.935329085072509e+16,\n        '|\\U00033fd3z\\x8d\u00e0\\x8b': 9.039294072864252e+23,\n        '\\x81': -7197343967811696.0,\n        'f\\U000e4602\u00c2': 1.7976931348623157e+308,\n        '\\x0f\\U00099077\u00cb': 1.66330761842878e-90,\n        '': -2.36387165471735e+69,\n        '\\U000fe5ca\u00c8\\U001035d8\\U000e7805': 4.267006873543302e-121,\n        '\\x8c\u00dd)\u00a67': -3.33860308569538e-228,\n        '\u00c5\u00c6B_\\U0007ec23\\x02J\u00eb\\x87': 6.171325670002322e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-32466, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-2.5550206478592164e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.46064054179505975},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0001a08e\\U00019ffd\\U0001a026',\n          constraints={'intervals': IntervalSet(\n               [(106412, 682642), (723404, 887105), (983860, 1080773)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5486950935001237},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0862\\U0008881a\\u07b5\\U000d0997\u07e7',\n          constraints={'intervals': IntervalSet(\n               [(1921, 27883),\n                (164767, 198372),\n                (291356, 618373),\n                (800509, 971251),\n                (1003284, 1061885)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 0, 1)),\n                 (('a', 0, 0), ('b', 1, 0)),\n                 (('a', 1, 2), ('b', 1, 3)),\n                 (('a', 1, 3), ('b', 1, 3)),\n                 (('a', 3, 1), ('a', 1, 2)),\n                 (('b', 2, 1), ('a', 1, 0)),\n                 (('b', 3, 3), ('b', 1, 2)),\n                 (('c', 0, 0), ('c', 0, 0)),\n                 (('c', 0, 3), ('a', 0, 3)),\n                 (('c', 2, 2), ('a', 0, 2)),\n                 (('c', 2, 2), ('c', 2, 1)),\n                 (('c', 3, 3), ('a', 3, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00bb\u00ec\\x08',\n       run_start=-1333645479155009.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'.\\U00014a9d\u00b5`Y': -1.0040088902368734e-262,\n        '\u00be\u00cfs\\U000ac325\u00b8': 23788,\n        '': -31442,\n        '!a\\x11\u00b3\u00e2': -101612.66607168621,\n        'h\\U000c0b0f_': -38,\n        '\u00a8\\x7f\u00a6\\U00098bba\u00c0\u00fd>\\U000dcb6aIp\u00e8\"': 1.1281321320079746e-21},\n       coverage=None,\n       timing={'\u00c9)': 0.99999,\n        '\u00a5\\U000ceb71m\u00a2z\\x1f\\x05M\\U00091125l\u00b8\u00ce}\ud83c\ude16\u00d9\u00d1\u00e7$`\u00b0\\r': -4.117865153515678e+16,\n        '\\U00043e99\\x993': 1.192092896e-07,\n        '<\\U000f4cf7Q\u00ff\\x15\\x88t\\x10\u00c8\\U00065d71\\x91\\x01t': 4.5123480454149155e+218,\n        '': -6.537874111232915e+16,\n        '\\x10': 5.1206516011083865e-65},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23016, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x00\\xa9\\x0b\\xe2M\\x08X6\\t0\\x87M',\n          constraints={'min_size': 9, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.00001,\n          constraints={'min_value': -4.1573446701889497e+98,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.589544684713378},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0004e245\\U0004e1cf\\U00080cf4\\U0008761e\\U0004e262\\U0004e25a\\U0004e272\\U0004e2bd\\U0004e29a\\U0004e265\\U0004e244\\U0004e1cf\\U0004e26d\\U0004e1db\\U0004e277\\U0004e1cf\\U000d3c8c\\U0004e1e7\\U0004e239\\U0004e2b8\\U0004e20a\\U0004e229\\U0004e248\\U0004e261\\U0004e265\\U0004e24b\\U0004e2c8\\U0004e275\\U0004e1f7\\U0004e2b2\\U0004e281\\U00088cb0\\U0004e213\\U0004e230\\U0004e224\\U0004e257\\U0004e20e\\U0004e1d1\\U0004e288\\U0005d221\\U0004e27a\\U000e1274\\U0004e213\\U0004e296',\n          constraints={'intervals': IntervalSet([(319947, 976173)]),\n           'min_size': 42,\n           'max_size': 142},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xc0!\\xbfW\\xdd'In\\xf7@\\x91\\x0f\\xbf\\x86\\xc1\\xdc\\xed\\xccF\\xa7]\\xce\\xb7\\xeb\\x95\\xee\\xc0\\x18]\\x02\\xf4\\x83\\x02\\x18\\xb8~_\\xbb\\x06\\x7f<\",\n          constraints={'min_size': 39, 'max_size': 139},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 3), ('a', 2, 3)),\n                 (('c', 1, 3), ('b', 1, 0)),\n                 (('c', 3, 0), ('a', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x9c',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'$': -1.6676538217351372e+185},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28226, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u0157',\n          constraints={'intervals': IntervalSet(\n               [(256, 18099),\n                (36769, 71728),\n                (125268, 174209),\n                (278265, 292650),\n                (323994, 359356),\n                (371458, 455944),\n                (491746, 597166),\n                (617242, 624127),\n                (652067, 678295),\n                (697744, 708238),\n                (754021, 839191),\n                (879380, 940472),\n                (946325, 1024714),\n                (1078027, 1080951)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud14e\\U000a3a75\\U00097b62\ud0bd\ud0c2\ud175\\U000ab40b\\U0009e322\\U00014c69\ud0f8\ud132\ud129\ud0e6\ud11f\\U000192bc\ud0ba\ud17a\ud1aa\ud18e\\U00098eab\ud19a\ud189\ud10a\ud15d\ud101\\U0001a62f\ud179\ud118\ud162\ud0d3\ud840\ude2c\ud12e\\U0004c7b3\ud14d\ud188\\U000b16de\ud17c\ud17e\ud104\ud167\ud0c9\ud0db\\U00015233\ud162\ud0c8\\U00035681\ud141\ud1a8\ud180\ud1a8\ud13e\ud11f\\U000958fa\ud125\ud109\ud19e\ud0c0\\U000404df\\U000b316c\ud126\ud166\ud119\ud133\ud0b5\ud17e\ud0e5\\U000bb474\ud0eb\\U000a78b9\\U000aabfb\ud102\ud15c\ud0fc\\U0004327e\ud1aa\\U000ae4e8\ud17a\\U00098ac5\ud1a5\ud0ee\ud0e4\ud0eb\ud11f\ud190\\U00037026\\U0004e481\\U000b5faf\ud111\\U0009660f\ud11f\ud142\ud1b1\ud10d\\U000a4a6e\ud148\ud14b',\n          constraints={'intervals': IntervalSet(\n               [(53428, 112198),\n                (113336, 163701),\n                (186141, 339488),\n                (607896, 767149)],\n           ),\n           'min_size': 26,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-27262,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x19KM\\x06\\x82',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'q_',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-7.735970979938922e-06,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1e-323},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-4,\n          constraints={'min_value': -26310,\n           'max_value': None,\n           'shrink_towards': 1_529_541_296_235_830_346,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.0799590066032683e-73},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 3, 3)),\n                 (('a', 0, 3), ('c', 2, 1)),\n                 (('a', 3, 2), ('b', 0, 2)),\n                 (('a', 3, 3), ('c', 0, 0)),\n                 (('b', 0, 0), ('b', 0, 3)),\n                 (('b', 2, 2), ('a', 1, 1)),\n                 (('b', 3, 3), ('b', 1, 3)),\n                 (('c', 1, 2), ('c', 0, 1)),\n                 (('c', 2, 1), ('c', 0, 3)),\n                 (('c', 3, 1), ('c', 2, 2)),\n                 (('c', 3, 3), ('a', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=5.430721218340489e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x8d0I\ud847\udd06\u00e3\u00c3': -27789},\n       coverage={'\u00cfg/': [-9_062_833_575_792_739_095, -23141, -72, -15944],\n        '8\\U00010dfd\u00b3\\U000615cb\u00e7\\x9e\\U000c41a6\\x1f\u00e4\u00bc\\x10': [2_065_040_962,\n         122,\n         25906,\n         -13642,\n         -977320705],\n        '\\x99\u00db\u00e7': [],\n        '\u35c4\\U000aa72f\\U0004df6f1\u00a7\u00fb': [-27848,\n         90,\n         24471,\n         -6_635_027_233_705_319_581,\n         79,\n         27797,\n         52,\n         91],\n        '': [87,\n         -114,\n         -9,\n         8238,\n         3644,\n         118_689_740_077_696_965_821_186_465_182_908_026_707,\n         69,\n         20249,\n         6663,\n         312,\n         14024,\n         58,\n         16451,\n         -112],\n        '~pE\\U000f168f\u00f6\\x1c\\x00#\u00c9': [32665,\n         103,\n         -24636,\n         25477,\n         -7518,\n         331480188],\n        '\\U000c3466\\x8a\\x88Vb': [],\n        '\ud84a\uddde\\x15V': [-18761,\n         8238,\n         11,\n         -67,\n         -7893,\n         -21,\n         -16636,\n         23399,\n         3,\n         26254,\n         -15472,\n         2020],\n        '\\x95v\\U00077e8b\\x00\\x84\\U000b2ca9\\U0008e260': [4,\n         12994,\n         21257,\n         20311,\n         -13799,\n         -4443,\n         -48,\n         77,\n         13235,\n         15377,\n         -63,\n         -9399],\n        '\\x86': [-28153, 94, -24592, 21188, -34, 31106, 567482202, 22253],\n        '\\U000b2403\\U000e594dC': [-15, -1348, 11, 255, -117, 4642, -76, -9651],\n        '\u00c9': [-695895629,\n         -97_686_912_556_187_909_655_155_810_169_368_755_225,\n         1_598_019_171],\n        '\u00db\\x84\u00bb\\x02\\U000eed46': [23019,\n         -140_558_163_047_829_130_047_564_943_063_911_205_787,\n         21407,\n         -123,\n         -10973,\n         1819,\n         4332,\n         172800,\n         21812,\n         -116,\n         -67,\n         -190,\n         -21629361,\n         -1692,\n         26545,\n         -1_387_207_799,\n         3189],\n        '\u00b2\u00b0\\x94\\U000bfb93\\U00046f6c': [12253,\n         128,\n         2377,\n         118_008_975_174_983_923_780_106_542_865_284_783_969,\n         30,\n         -26175,\n         -106,\n         -86]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-28193, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(43168, 485364)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6041173773775946},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(751, 13901), (184280, 1106703)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 0, 2)), (('b', 0, 2), ('a', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-8959848466802494.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x87F\\x8d\\x96\\U000ff0e6\u00ef\\U00077db0\u00cf\u00bb\u00dbB': 2.620377131671507e+107,\n        '': 2.992644128299102e+16,\n        '\\U000c7865\u00dd\u00d07\u00d1': 308913696,\n        '<\u00c8\\U0003c4ae\\U00066541(\u00af\\U000f1caaE\\U000e1985': 31066,\n        'addopts': 103,\n        '\u00f6\u00a5\u00f0\ubeaf\\x15': -4.770420068881877e+16,\n        'S\u00e6\\U000a3746\u00f8\\U000dae7e': 0.0001,\n        '_\u00fa\u00e4\ud87a\ude5a*7^f': 5.3294086489154616e+16,\n        '\u00d2\\x01\\U00062248\u00c0': 1356,\n        '\\U0010bcf5\u00cc\\U0005c70b': 4_408_928_695_990_392_056},\n       coverage=None,\n       timing={'': -6.33314957614801e+16, '\\\\n': 3.818064376827212e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=87, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'/%zz\\x1b\\xfc\\xe3\\x9f\\x89\\xac\\xf2\\x18\\xd4xE?g\\xad\\x95',\n          constraints={'min_size': 14, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x19\u00e19\u00d1M\u00b26\\U0003c99b\\x0e\u00b6',\n       run_start=inf,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d7\u00c9\\x99\\U0001ba2c]\\x85\\U0003b647': 25816,\n        '\u00b0\u00c3\u00f2\u00ee\\x81\\U000c3657': -3_657_308_192_641_769_619,\n        '\u00ed': 2.8605993269089964e+16,\n        'else': 1.2521695737179604e-151},\n       coverage=None,\n       timing={'\u00e2B\u00d4\u00de\u00d2;~\u00a9T\\r\\U0003fcb8@\\U000bb099': -9.635217041713258e-237,\n        '#\u00e6\\x97\u00a2\\t;\\x12\u00b3\\x95\\U000b4d63\\x1b\ud855\udc95\u00bbPa': -1.175494351e-38,\n        '\\x02M\\x0e\u00b5\\x07': 5.29445720771066e-181,\n        '': -1.6547725858791186e+245,\n        '\u00cd\\U00055d763\ud856\udc55($Bp\\U0006bc5a': 7211531841414456.0,\n        '\\U00041c8d\u00e3\\U000d9849\\x1a\u0664&\\U000f7259Z6': 2.3648402825566784e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=24208, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\x8c\\x87v\\U000c2e64\ud836\ude9d\\udfc7\\x88\\r\\x17\\U000e8789\\U00019730\\U000cf5ab\\uf4f8\ud84c\ude06\ud806\uddc7\\x9fo\\x10\u00c8\\x11\u8c45\\x12\\U00015d68\\x11\ud81d\udd7a\u00eb\\x17+\u00d2\\udfef_\\U0004f107\u00bb\u00fa\u00d6e\\U0001bed2|\u00f4\u00f1\\U0001ab8f\u00e7<\u00be\u00f1N\\x0c\u00a1\\U000c4c28\\x82',\n          constraints={'intervals': IntervalSet(\n               [(0, 300),\n                (8912, 190926),\n                (300397, 357737),\n                (791379, 972311),\n                (1014680, 1063097)],\n           ),\n           'min_size': 38,\n           'max_size': 138},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 1, 2)),\n                 (('a', 0, 1), ('a', 2, 1)),\n                 (('a', 0, 1), ('c', 2, 2)),\n                 (('c', 0, 0), ('b', 2, 2)),\n                 (('c', 0, 1), ('b', 3, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00dcG\u00b4\\x86\u00ec\u00ca\\x11\\U000f18aa\u00c7\\U00061bb6\u00fb@\\x00:',\n       run_start=-6.1289756499076716e+262,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'M': -14071,\n        '\\U000e02e4\u00d3\\x96\\U0005e272': 519,\n        'd\\x89\\x991': -31171,\n        '\\x0b\u00e8\u00d5\u00f7\u00bd\\x0eU': 9007199254740992.0,\n        '\u00d0\\x0f\u00d2': 19191,\n        '\\U00056aaf9;\\U0005222b\u00bd\u00ba|\\x9f': 1.2087606695139859e+157,\n        '\u00d0\u00ed)\u00b3\u00b1\u00b0\u00f1': -0.09818602705009313,\n        '\\x02\\x11\ud84c\udd36\\U0009f1e1R)\u00e5m?\"': -168_375_334_413_523_291_220_173_107_218_983_898_999,\n        '[?\u0d3a\\x96W=t\\U00041bdcy\\U000b4c4a\\U000bde798Y+\u00c2\u00cb\u00a3': 7.60806917577164e+101,\n        'function': 7.197216608181198e+16,\n        \"\u00fe\u00c6\u00e7\u00c9\\U0007e9a6\\U000b973ay\\U000e1f61'\\U000ec68e\\x13\\x9b\\x89\\U000fd4619\": 1921,\n        '>\u00d7': 1.7976931348623157e+308},\n       coverage={'\\x19\\x92\u00e3\\U0005e562\\x83\\\\\\x14cF': [28972,\n         229,\n         1500,\n         -866787420,\n         32662,\n         -7472,\n         -6932,\n         2,\n         7_644_424_145_795_120_463,\n         121,\n         -9_048_775_506_369_125_215,\n         23325,\n         104,\n         -123,\n         -11239,\n         587748185,\n         -23648],\n        '\\x91\\U00099e08p': [-30934,\n         -29997,\n         -1_812_892_926_403_802_547,\n         2193,\n         1_615_072_805_866_869_494,\n         110,\n         6151,\n         24,\n         512,\n         -19861,\n         22279,\n         -64,\n         1_167_069_802_605_519_420,\n         -11363,\n         341,\n         116,\n         15115,\n         -8_734_253_830_954_630_432],\n        '': [-125]},\n       timing={'\u00ca': 0.99999,\n        '\u00fc\\U000ef2f6': -5.944516196869774e+302,\n        '\\U000415f4\u00d1\\U000685e9\\x0b': 10.0,\n        '\\U00094c60^V\\U0001d39f': -2.2250738585e-313,\n        '\\U0004743c\ud862\ude7f': 1.712491043586829e+178},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=9, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8332118946081397},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00b1\\U0003c726\ud841\udef6K\u00d7\u00e7\\U000a7dc7\u00fe\u00c7q\\U0003960f\\U000cc923\\U00037b15\u00ff\u00c2\\U0004b549*\\xa0\\U00077acd\u00cb\\u0df5\\x10b\\x03~\\U000498a9*\\x17\u00c1\u00af\\U0007b351\u00c6hx\\U000590f4\u00c5\\x90\u00ddg\\U00079fea\u00fc\ud86b\udc9e\\x14',\n          constraints={'intervals': IntervalSet(\n               [(1, 13495),\n                (19072, 270803),\n                (281329, 414014),\n                (457762, 508696),\n                (664732, 838418),\n                (897728, 1008661),\n                (1026432, 1054465)],\n           ),\n           'min_size': 22,\n           'max_size': 122},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.8074912127294254},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd9',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0,\n          constraints={'min_value': -4.644331704699658e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=240,\n          constraints={'min_value': 121,\n           'max_value': 31102,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud83c\udf26\\U0001f257\ud83c\udf25\\U0001f29c\ud83c\udf3b\\U0001f299\\U00037ee1\ud83c\udf1f\\U00032c72\ud83c\udf44\\U0001f2f3',\n          constraints={'intervals': IntervalSet([(127575, 259097)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd0\\x91\\xbc\\xff\\x0c\\x0e\\x96q\\x8fvg\\xdfKq\\xe2[\\xea\\xfd\\xe8*\\xb5\\x87\\xf2nJ&\\xcc\\xaf\\xe7\\xecI\\x112\\xf8\\xae\\xa0n\\x84}\\xa2\\xf0\\xd2\\x1f\\x1e?z\\xbe\\xa0\\xc2\\x7f\\xfc\\xe4\\xe8!\\xe8\\xe6\\x9cZT\\x8f\\xbe\\xb8\\x1f5\\x84\\xb2\\x18\\xc02\\x87\\xfdO\\xd0\\xf8H\\xcbc\\xda\\r\\x04#1\\xffW9U)\\xddUE\\x90o\\xa3\\xb2\\x9e\\xfc)^DJ\\x8a~\\x066e\\x144\\xd3Pn\\x86\\x86\\xc7\\xb3\\xd2\\x1c\\xba\\xf7:A\\x1c\\xab\\xe5\\x14M\\xea\\x02A\\xe5\\xed\\xbe\\x12\\x18\\x10\\x15\\xe3^\\xd5\\xf8\\x98\\xa9&\\x9c/\\x12\\xf1',\n          constraints={'min_size': 39, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1_502_451_954,\n          constraints={'min_value': 1_502_451_938,\n           'max_value': 1_502_452_002,\n           'shrink_towards': 0,\n           'weights': {1_502_451_951: 0.20999941459393462,\n            1_502_451_950: 0.22915840821103953,\n            1_502_451_944: 0.11562778173580147}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.533415810835071e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.2565744085262061},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.003561291960068047,
          "overall:gc": 4.008301766589284e-05,
          "generate:args": 0.06779778911732137
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287681.514633916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U000a1fb4Z\\U000dc00fG\\x08<\\U000a4f2a\\xad-',\n       run_start=-1.7976931348623157e+308,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'\u00dd': -9.068258340851851e-129,\n        '\\U0004a9c5\u00dcZ\u00e8': 4.028537017315608e+16,\n        '\\x8c': -6.838087704779425e+16,\n        '\\x96i\\U000a8869\\x99\\x12p': -6.42844844645717e-214,\n        '\\U000891bf\u00cf\\\\{\\x0b': -4.370790384671175e+174,\n        '\\x1e\\x8d9\u00f8\\x1b\\x91\u00f4\\x02': -1.48764602100761e+16,\n        '|\\x84\\U00083589`>\\x8c\u00af': 1.0654972228953289e+170,\n        '\u00d8\\U0006f3c8\u00a4%U0\u00b1': -9299958826001890.0,\n        '\u00cf8\\U000a8984\u00d8\\x9a\u00a9\u00e1\\n': -9007199254740992.0,\n        '\u00a7': -1.1066352111576034e-272,\n        '7\\U000d41bd\u00a2\"\u00d7\\U0007447a\\x19M': 7.97210220601632e+206,\n        '': -1.1550960444501624e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'5i\\x7f\\x1d+',\n          constraints={'min_size': 0, 'max_size': 71},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.2250738585e-313,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={'\u00d1\\x8e\\U0006852bhx\u00bf\\U000d6035\u00d74': 0.01,\n        '\\U0006b1e8\u00f6\\U00063b98S': nan,\n        '\\U0004e05c': 0.01,\n        '': -6.737811931085986e+16,\n        '\\uea6d\u00e2\\xad\\x1c\\x08': 4.219262226488165e+27,\n        '\u00ffv\\U000648a7O': 4009248086282.9536,\n        '5\\x82\\U00065fec\\x82\ud858\udee6\\U0007e299&\\x1aE\\U00015a1fML3\\t)!E\\x8a&\\x9cW\\U000a866b(': -1.3653267673313042e+16,\n        '\\x11\\x06\u00ecl\u00f4\\x93\\x8e\\x84}z`\\x98': -5.91247416227682e+16,\n        '7H\ucf59\u00a6tT>\\U0006ab12\u00af\u00ben\u00e5': 1.0627207091655067e-267,\n        '\u00fb': 2.3208041622437764e+16,\n        'x\ud83e\udd49\\U000135ad\u00b5': 6.807717788878963e-256,\n        '\\U0007f4ef\u00ba\u00f5': -9.040724751885885e-116,\n        '\\x0f': -2.1519827331002068e+192},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-24787, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-4_812_627_647_564_105_529,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 1_733_228_323_091_679_978_546_505_643_872_027_173,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud822\udf8a\ud822\udfa3\ud878\uddfd\ud822\udfcb\ud822\udfff\ud822\udfe7\ud822\udf81\ud853\uddfc\ud822\udfc4\ud823\udc24\ud865\ude83\ud822\udf49\ud823\udc0f\ud822\udfd8\ud823\udc18\ud822\udfa7\ud822\udfe1\ud822\udf46\\U0001aa10\ud822\udfc0',\n          constraints={'intervals': IntervalSet(\n               [(101168, 169795), (175147, 297233), (695126, 917921)],\n           ), 'min_size': 0, 'max_size': 76},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 3, 3)),\n                 (('a', 2, 2), ('b', 2, 0)),\n                 (('c', 0, 2), ('c', 2, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0004916660254821181,
          "overall:gc": 0.0,
          "generate:args": 0.009004664840176702
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287686.37061525,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\r\\U0009879dQ\\x9d[r\\rX\\U00035c9e\\x1d\\x1d\\x13\u00e4\\U0009d7bdH\u00d3\u00a3\u00d1,',\n       run_start=-1.1379697223237174e+110,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'YR': [61_585_092_396_776_387_832_608_552_436_392_391_112,\n         -43_922_170_778_449_425_678_416_064_806_484_839_470,\n         -8,\n         30,\n         2020,\n         1_078_508_247,\n         -29,\n         18],\n        '': [53_950_645_509_385_653_176_234_470_446_392_654_637,\n         -4_915_598_436_044_810_297,\n         -26990],\n        '\\xa0\u00be\u00d6': []},\n       timing={'': 1.7976931348623157e+308,\n        '\\U0006d282': -7.877336829446246e+215,\n        '\\x8b\u00fb': -4.634239787356845e+16,\n        '\\U0010d87dj\\x86\u00af\\x06\\U00099cdb\u00e0\\U000973ef\\U00107147\u00b7': 1.2599521776947481e+126},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(0, 79043),\n                (138082, 156050),\n                (164011, 176907),\n                (187910, 266054),\n                (288555, 302681),\n                (317210, 359635),\n                (426042, 433788),\n                (483719, 725908),\n                (777442, 830776),\n                (869717, 940349),\n                (992213, 1002308)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.3333333333333333},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2739186692734475},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('b', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00aa',\n       run_start=1.3227304983647274e+44,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={\"\u00b4'U\\U00106e9a\\U000751b0\\x96L\\U000b5a8d\\x7f\\x1b\u00b6\": -5.6997047953661145e+125,\n        '\u00f8\\U0009b870': 1.6767665900254244e+16,\n        '': 1.2319398736459086e+16,\n        '\\U0004d1a7\\x7f\\x85': 3.570529592082331e+63,\n        '#\u00d8\\x9a3\ud851\uded4\u00bb\u00a2\\U000f976b\\x92\u00e4': -4.505771227930784e+16,\n        '\\x00=7q*^': 4.522731784304871e+16,\n        'Default value for ': -1.4428389196279281e+72},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=511590306, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x9d',\n          constraints={'min_size': 1, 'max_size': 101},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.12908942795855152},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 3, 2)),\n                 (('a', 0, 3), ('a', 2, 0)),\n                 (('a', 2, 1), ('c', 1, 2)),\n                 (('b', 0, 1), ('c', 2, 2)),\n                 (('b', 2, 0), ('c', 1, 0)),\n                 (('c', 0, 0), ('a', 3, 0)),\n                 (('c', 3, 0), ('c', 3, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=1.3594237783351069e-204,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x86': 3.402823466e+38,\n        '\u00d9\u00e0\u00c6': 4.6143965841277064e+16,\n        '\\U000f4a75m\u00d5\\U000f36fc\\x08j\u00c9\\U000da984:\\U00055401\u00a6': 947991,\n        '\u00f1\\U000dfa5dw': 3.498232270716896e+16,\n        '\u00c4\u00db\u00ac': 215533},\n       coverage=None,\n       timing={'\\x0f;r\\t\u00ba,9': -3.791310637347898e+16,\n        '\\x93\\U00054ce24\\x9f\\x87\\x8a\\U0010dd36.\\x86\\U00090dbf': 4.997928123029958e+16,\n        '\\x92\u00c7/\u00c2\u00d5V': -1.0538450015402266e+16,\n        '--log-disable': -8.046237007649702e+245,\n        '\u00f5`': 8.37960442411422e+307,\n        '\\U000d7776)\\x1aT(\u00f3\\x15\u00a3\\x85': -4854587396883270.0,\n        'Y\u00bc\u00a4Z': -0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-6548473853586512626, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='d9[\u00f1',\n       run_start=-2.7411809305305955e-263,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -1.6292020694063737e-81},\n       coverage={},\n       timing={'': -3.207852669392908e+16,\n        '\u00b6\\U0001c7c9}G\u00faq\\x97i\u00db\\x1d?\u00cdU': -3.402823466e+38,\n        '_\\U000f88d1\u00ff\\U00063db4\u00d0e\\r': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0],\n        '\u00a8yRT': -6.123322676629607e-24,\n        '\u00e5p\\xa0~\\U0010b9657g': 8.997324928920847e+306,\n        '\\U00018d50`': -2.0773645383822636e-256,\n        '\\U0009af2b\\ueae5': -6.120692551425542e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=46213, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 2, 1), ('c', 3, 0)),\n                 (('a', 2, 3), ('b', 1, 2)),\n                 (('a', 3, 0), ('b', 1, 1)),\n                 (('c', 0, 3), ('a', 3, 2)),\n                 (('c', 3, 2), ('c', 1, 3))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0012217920157127082,
          "overall:gc": 0.0,
          "generate:args": 0.020497831923421472
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287652.333348333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.0688412668676196e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage=None,\n       timing={'': -6.934984149677416e+16,\n        '\\x0f-\\x8d\\U000a3d23(': -3.560507888610526e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\x04\\U00105bf8\u00cd\u00cc\\x93\\x0f[\u00dd\u00aan\u00f7/\\x05\\U00013804M\\U000be9a9[\\xad\\U000aac90\u00c1\\x03C\\x06\\U000da06d\\U00097129\u00a2\\x0c',\n          constraints={'intervals': IntervalSet(\n               [(0, 219786), (587005, 723409), (727739, 1114111)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x08V\\xe5\\xe7\\xf9\\xfe\\x7f\\x0fn\\xe6L}zJ\\xaf\\xdb]b\\xe7\\xed\\r\\x98'\\xa9E\\xf2M\\xb0s*/Hq\\xc2\",\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u9989\u997f\u9976\u98cd\u9908\u98b9\ud807\udf48\u9928\u990a\u991a\u98da\u98ba\u98fe\u994a\u98be\u98e6\u99b0\u98cc\u9940\u99a8\u9963\u98b6\u98c6\u98f1\u98b7\\U0001ab55\u98b3\u98db\u999d\u98f2\u9988\ud81e\udd7f\u98fc\u98e4\ud80d\udc1e\u9936\u994a\u999e\\U00014819\u9961\u998e\u98ef\u9947\u992f\u98d6\u9939\u9965\u98ef\\U00014b4e\u99a1\u98bc\u99ad\u98e3\u98ca',\n          constraints={'intervals': IntervalSet([(39090, 193532)]),\n           'min_size': 43,\n           'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'3>\\xec\\xda/\\x99\\x97\\x1a\\xddG\\xca\\xe0\\x1a\\xdf\\x01\\x04d4WK\\x9c\\xe1\\xc0\\n\\xb9\\\\\\x8d\\x93u|7f\\x84k\\n(d\\xabg{',\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5616803017953412},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2166,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 48},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x06\u00d4',\n       run_start=3.412168945391002e+292,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00aa\u00d9#\u00f6\u00a8\\x9d~\u00d4\\x91': 54},\n       coverage={},\n       timing={'': -1.8624467216394424e+16,\n        '\\U00039b1c': -5.29136161354909e+16,\n        '\\x8a': 1.7083525242430648e+16,\n        '\\U0010a910!': -7834347434224799.0,\n        '^\\U000b01c1': -7293365916364910.0,\n        'orelse': -3.8783799247807384e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28177, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud805\udc29\\U000c01a2\ud805\udc1b\\U000113fa\ud805\udc2d\ud805\udc4c\\U000113c4\\U000ae8d7\\U000b9f3a\ud805\udc33\\U000113c1\ud805\udc0a\\U00094e63\\U000113cb\\U000113c2\\U000113b3',\n          constraints={'intervals': IntervalSet(\n               [(70559, 181008), (369285, 611030), (690036, 812382)],\n           ), 'min_size': 11, 'max_size': 111},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=24743,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-25347,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=3.030081654326503e-291,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'1\\x03\"`': 24,\n        '\\U00034ce6\u00ffs\u00e3\u00da\\x1dV\\x82\\U000c5319\ud880\udd51': 81,\n        '\\U000f35fdp\u00f4\\x92}': -23026},\n       coverage=None,\n       timing={'\\x91\\x1e\u00f4L\u00e7': 2.405138142992489e-64,\n        '': 8.06867504629151e+301,\n        '\u00d1\u00baV\\U000eb558\\x00\u00d3\\U0006f888c\\U000997e6': 0.5,\n        't': -1.281994389110914e+16,\n        '\\x1b': -1.103413379679864e+16,\n        '\\U000ffde5\u00a6\\U00014f6b\ud863\udf7f\\x8d\u00c2': -3586090948187119.0,\n        '\\x18\\x85': -8.028504961136383e+222,\n        '\\U000db1a8\u00cc': -3.077970918981791e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=5954429076454616739, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 2, 3)),\n                 (('b', 1, 1), ('a', 1, 2)),\n                 (('b', 1, 3), ('a', 1, 1)),\n                 (('b', 3, 1), ('c', 0, 0)),\n                 (('b', 3, 2), ('c', 3, 3)),\n                 (('c', 0, 1), ('c', 3, 2)),\n                 (('c', 0, 3), ('a', 2, 1)),\n                 (('c', 3, 3), ('c', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.9861040646222492e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'M': [-22187, 23087, -9989, 32105, 12606],\n        '\u00d4\\x9d\\x0b\u00fc\u00c8': [-1_342_269_086,\n         -12151,\n         -8317,\n         87,\n         103,\n         -24716,\n         -46,\n         1_708_323_135,\n         -730137671,\n         -83_684_916_345_294_214_734_845_682_446_250_719_520,\n         -111,\n         -20521,\n         -10174,\n         -96],\n        '': [30297],\n        '\\x8f': [],\n        '\\x90\u00a2\u00c5\\U00012c4a\ud85a\udd63': [-41,\n         -15306,\n         8372,\n         120,\n         -123,\n         11576,\n         512,\n         -26013,\n         7_664_223_918_129_232_852,\n         -17329,\n         -11011,\n         13663,\n         -23245,\n         7817],\n        's}!\\U000c81d6\u00f15\u00fd\u00a2': [-13598,\n         8489,\n         -31,\n         72_424_512_426_911_555_262_888_727_487_670_838_239,\n         7008,\n         -72],\n        'r\\U0004b052': [27333,\n         136_435_678_057_679_864_049_870_012_347_312_664_349],\n        '\u00f3\u00bf\u00b3\\U000efcec\\U0006c254': [267]},\n       timing={'\u00ba:\\t.': 1.5831268515405262e+201,\n        '\u023e': -3.626776178571976e+16,\n        '.\u00b3E\\U00089ed4\u00b2\\x02\\x06': -3.672008853791545e+16,\n        '': -2.3560446852932384e+16,\n        '\u00b8]\u00b1\u00a6': -2.8277969196649484e+16,\n        '\u60cc\\x02\ud873\ude91': 0.02,\n        '1B`\u00c4\u00dd\\U000a7086\\U001039d9\\U0004ed87\\xad\u00e8': 1.1587337413909188e+143,\n        '\\x14#\\x8cZB\\x08\u00e5M\\U0007ca3e\\x9b\\x9f\\x10\u00a8\u00f5\\x87\\x12\\x02\\x17': -5.8069729987964616e+16,\n        \"\u00ae'\\U000f49ae\u00e8\u00d9\u00f8\\x83\u00ae\u00cc8ed\\U00058052\\U000ac2cc\\U00066fb1\": -2.143575146049511e+225,\n        '\u00d4\u00bfW\\U000632f4\u00c5\\U000c08ce\u00b1': 0.02,\n        'FK\u00ce\u00b3\\x03\ud83b\udd04B5\u00c7C\\U00076480\\x80\u00aa': 3.893198906395563e+16,\n        '|\\U0002f3ec%\u00bc\u00f6\\x05': 5.4572042129686936e+16,\n        'QK\u00e0\u00c3': -5.730141315901571e+16,\n        '\\U000e352c\u00d8\u00fc\u00b4\\U0001c064v\u00d7\u00e5': -6.903531142302291e+16,\n        'rM\\U0008ec69\u00f4\u00c0\\U0006ececM': -2.2114481624278184e+247,\n        '\u00d0': -6.621328096340144e+16,\n        '\u00cc': 1000.0,\n        '\u00ea\\x98+2\\U000bf70a\u00b8': 2.745231105630995e+166,\n        ')\\U001023a7\u00fdb\u00b6': -4.274540936443424e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28697, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('b', 3, 1)),\n                 (('b', 1, 2), ('a', 1, 2)),\n                 (('b', 1, 3), ('b', 1, 2)),\n                 (('c', 1, 2), ('c', 0, 3)),\n                 (('c', 1, 3), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='D',\n       run_start=0.01,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000c69c9\\x96\u00dd\\x9f\\x1adQK\\x1a\\x90\\U000ad4e5\u00fe\\rG}\u00f4\\x80s+': 28263,\n        'jQW': 88,\n        '3\\U000a5601\\U00108dc0\\U0010fba8\\U000cdffd\\U00055384': -13331,\n        \"\\U0007c833\ud843\ude56'\\x04r\u00d2\\U000a13ca(\\U000ab996\\x97\u00d6\": 1978,\n        \"'\": 1.2386560445165657e+123,\n        'S\u00bb\u00c16)\u00b1\u00b6': 1.9050518769319344e+16},\n       coverage={'\\x91\\x03\\x9b\\U000f86d7\u00a3H': [136,\n         -108,\n         8207,\n         -5373,\n         45,\n         -79,\n         102,\n         -8965,\n         -31581,\n         -76,\n         5895,\n         755183061,\n         -17970],\n        '': [25934, -86, 99, 106, -17568, 24, 64, -44, -75, -17357],\n        'Z\u00d9Cv\\U0010b5f4i\\U000a215aB\\U00046e63\u00f7MckG-\u00ce-\\x7f\u00fcN\\x94x\\x90,\\x19t\u00f4\\x97D\u00fa-': [],\n        'BaseExcT_co_default': [-94, 18080],\n        '\u00cc\u00e6': [-118],\n        '\u00ef': [18321,\n         2_753_296_524_339_908_996_885_349_554_735_503_412,\n         2_416_241_991_651_102_555,\n         -23,\n         20437,\n         -880,\n         115,\n         23822,\n         -23,\n         12334,\n         4321],\n        'True': [-27819, -27019, 31606, 18192, 16778]},\n       timing={'\u00f2\u00c8\u00f5': 1.932733376535776e+16,\n        '\\U00049d0a\ud822\udc20\\U0006b790^\\x9c\u00ea': -8791678360381887.0,\n        '': 1.0095746545069674e+167},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=8232, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud871\udff1\ud872\udc9d\ud872\udc2a\ud872\udcbb\ud872\udc75',\n          constraints={'intervals': IntervalSet([(182224, 588970)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-5_158_601_072_123_526_258,\n          constraints={'min_value': None,\n           'max_value': -5_158_601_072_123_513_150,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.01},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 2.3043122355359668e-229},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b',\\xab\\xc4v\\xf2qy^\\xefk\\x8b(\\x9e\\x17u\\xcc=\\xea5h\\xab4\\x9a&xs\\x1a\\xb4}\\x9fyq\\xe9\\xda\\xd7\\xe3\\xfa\\xc0\\x06LN\\xa0\\x83\\xd8\\xad>\\xe0K\\xb9',\n          constraints={'min_size': 28, 'max_size': 128},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000c8958\ud856\udda9\u0116\u015e\u0174\u6e44\u01e2',\n          constraints={'intervals': IntervalSet(\n               [(256, 179666),\n                (212617, 225590),\n                (354322, 363191),\n                (611559, 690562),\n                (728037, 825367),\n                (881196, 890250),\n                (920775, 944228),\n                (1029995, 1063052)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('c', 1, 0)),\n                 (('a', 1, 1), ('c', 3, 1)),\n                 (('a', 3, 0), ('a', 3, 1)),\n                 (('b', 1, 2), ('c', 3, 2)),\n                 (('c', 0, 0), ('a', 0, 0)),\n                 (('c', 0, 2), ('c', 0, 3)),\n                 (('c', 2, 2), ('a', 0, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00e5\\x9a\\x14\\x16u\\U000ae5ff',\n       run_start=-6.9926634740443e+121,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x16\\U000f9625\u00d2\\U00069d6b': -18,\n        '\\x92\\x1f': 4462,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': 4.525534228712285e+16,\n        '\u00ba': 13070},\n       coverage={'\\U00048ca7F\u00cb\\U00013781': [418105014, -108, 30067, 6702],\n        '|\u00beP\u00da\\x1b\\U000a10bb\u00be\u00aa\u00c5(\u00ac': [-1_516_815_678,\n         1_467_210_811,\n         29550,\n         -62,\n         -101_874_224_466_816_989_598_626_225_367_131_503_704,\n         14126,\n         210075823,\n         122,\n         83]},\n       timing={'\\U0001ef4f<;\u00c6': 0.5,\n        '\\x91#f\u00c0\u00e0\\x16!': -3.224309555019202e+79,\n        '\ud847\ude76\\U000a8fa7<\u00f2+\\U000a168e\\U000b8b71\\x0ewf\ud844\udde9D\u00af\\U0004b5af\\x0e\\U00101502': 2.258958034506268e-99,\n        '': -6.103515625e-05,\n        '\\U000727b5\\x13\u00f6|\u00b8\\U000b47c8\u00b8\ud862\uddb5\ud850\udff6\\U000ed8a3\ub128\u00df2\\U0008395c\\x02\\U00043b4ey\\U000dde03c]\\U0006196b\\U000e1079\\x92q=o\\x91\\x98#\\\\\\x95\\x0f\\U000cb38b\\U000e406c\\x8aR': -1.4503987536760177e-37,\n        '5#': -547.188023083506,\n        '\\U000f4938\\U000d2d40\\x06*': 7.083752629634144e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-13, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-1.7976931348623157e+308,\n          constraints={'min_value': -inf,\n           'max_value': -3.178661726158377e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.99599467501683},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'V\\x01*\\xc6M\\xd8\\xfd\\xb5Or(\\x0cw\\xf9\\xe5\\x96;\\xad\\x82\\x8c\\xec\\x93I\\x8e\\x8d\\tS',\n          constraints={'min_size': 12, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.580534659037093e+16,\n          constraints={'min_value': -9.64526777145803e+222,\n           'max_value': 5.674147128084885e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6469646476720917},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.12643000768269544},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.524629760213171e+59,\n          constraints={'min_value': -5.614662430790736e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.4121168538144787},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('a', 1, 0)),\n                 (('b', 2, 3), ('a', 0, 3)),\n                 (('c', 0, 3), ('c', 3, 3)),\n                 (('c', 1, 2), ('b', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00e8\\U00047299q}',\n       run_start=-inf,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'Y$0\u00c6': 57,\n        'i\\x16\\x87\\x95\\x95\\x9e\u00e1\u00f9\u9577\\U000e4374:-\u00d2\u00fce\\x0c`\\U000ed9caq\\U0010debb:\\x1c': 0.02,\n        '\u00d32\\U00086e6e\\U000c9592\\U000cfcdd\\U0003addb\u00df\\U0006d7cb\\U00046b55': 5.228004969026658e+191,\n        \"\u00f6\u00e0KU\u00da\u00easV\u00af'\\t\u00af\u00a2\": -31368,\n        'f\u00afO\\x00\u00b9D': 72,\n        'c&Mk': 255,\n        ':': -9976,\n        '\u00f6': 6.103515625e-05,\n        'required_plugins': -2.2924927332414343e+102,\n        '1/0': -2.118862809390009e+16},\n       coverage=None,\n       timing={'\u2876': 2.0251507825242725e-303,\n        '\\x8a\\U000ed3d5f\\x1f\u00f3': -4.221542998295237e-79,\n        'Q\\x05\\U0004f16f^\u00ac\u00fe\\x00\\U000e55ca\\xad\\x05\u00be\u00e4\\U000756b4\u00e7': -1.5609456821427734e-246,\n        '\\x1b\ud868\udde2\\x95\\x8bE\u00e5': 1.400584259126315e+16,\n        'Vi\u00e4\\x02\\x8f': -1.788081488143394e+16,\n        'False': 3.7168086462258693e+177,\n        '--pyargs': -4.190340791542071e+16,\n        '\u00d64': -1.5186844956951214e-111,\n        '\u00ee\u00e4#7=': 3.105057673757513e+16,\n        'false': -5.244428764330653e+16,\n        '': -7.185075714440678e+16,\n        '\\U00040054\\x85\u00d1|\\U000f03f6X\\U001093c1\\U00067753\u00aa\u00de\\U000976314;': 2.1913743898084051e+74,\n        '\\x84Gd\\x95\\U000d01cag': 4.0128615277382563e-289,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -3.6621117144049784e+16,\n        's\u00ac': -82855746532197.0,\n        '\u00fa': -3.0235412796751076e-292},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=127, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=7.150223050271887e+307,\n          constraints={'min_value': 3.806364520376678e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5683263608708792},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9204687687813049},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xc3\\x0b+H\\x97\\xfd\\xa6\\xbe\\xde\\xaaR\\r\\xc5O\\xdb@3\\x92\\x89\\x81\\x0b\\xb4\\x87\\xb1\\x91<\\x13\\x82%\\xb2\\xc8',\n          constraints={'min_size': 27, 'max_size': 127},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-4.320651183462716e+16,\n          constraints={'min_value': -inf,\n           'max_value': 2.3808459361750123e-25,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.000728115003602703},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8710728018124876},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x7fX',\n          constraints={'min_size': 2, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 89},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.402823466e+38,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7895607095014985},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf4\\x86\\x08\\xdf\\xf6\\xbd\\xad\\x1e\\n\\x00x',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 0, 3)), (('b', 2, 2), ('a', 2, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x00\u00bc',\n       run_start=-2.5556441101491692e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\n': 68,\n        '\u00e7Z\\U00046790\\x0e': 7194668030360573.0,\n        'K\\U0004f321\\x9bqS|\u00fb\\x02\u00aa\u00a9\u00aa\u00fc\u00e3\\U0008eb6f\\x9d\u00c2\u00db\\x10:\u00b0': 1_718_211_462,\n        '\u00e0\\x16M\\U000d89ff\u00bdfV\\x11&\u00d6Rt\u00ef\u00dc\\U0005bd60:': 0.0,\n        '\\U0006e888\\n': -9_191_167_240_737_313_141,\n        '\\x89\\U000b639ac\\x0c\\x15\"': 1_614_478_396,\n        '\u00d4\\U000ac223\\x85\\U000a1c90\u00e4f=-\u00df\"\\U000a39b4': 25057,\n        '\\U00046720!': 2.737730606877128e+16,\n        ')V\u00b4\\x8dd\\x99[': -7.639970111497793e-31,\n        '': -30,\n        '%\u00d8\\x02I\\xa0': 1000.0},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=60, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.0025063339853659272,
          "overall:gc": 0.0,
          "generate:args": 0.05639979208353907
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287667.95644275,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -3.4717506562414284e+16,\n        '\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property=\"\\U000b6ff6\u00ff\u00ee\u00a4x\u00f4\u00b8'\",\n       run_start=-6.309993663094765e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -6.795581058703873e+16,\n        '\u00d40k\u00fe!o\u00d0\u00d8\u00cdAB\u00e0\u00f5\ud801\udd9e)\\x0c': 3.402823466e+38,\n        '\\U0009651d\u00f8': 0.702540533879951,\n        '^\u00c3\\U000a0cb6\u00c0\\U0008a2a2\\x16\u00d41\u00af\u00eb': 1},\n       coverage=None,\n       timing={'\\U0010d980\u00a2\\x1cx\u00d7\uc0e7\u00bd\\U0008c61cy>\\U0010ec47': 1.17148321077776e+172,\n        '\u00c7od\\U000ba3eckiE\u00c01\\x87\\U00072d5b6\\U000600a2\\U000b37c7\u00a7\\U000fe500!\\n&': -2.2408548939740733e-229,\n        '\u7d33\u00f6\u00da\u00be': 834428064880629.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=18, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 1, 3)),\n                 (('a', 0, 1), ('b', 2, 2)),\n                 (('b', 2, 2), ('c', 0, 2)),\n                 (('c', 1, 0), ('c', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='xh\\x08\\x01\u00aa\\U00074805s',\n       run_start=-3.842588893722254e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00072c9cj\\U000b6711': -8652,\n        '\\U0005fd12\\x82/': -28327,\n        '\\x90': -1.5057649059273364e+16,\n        '\ud867\udea9\u00af': 29418,\n        'else': -22483,\n        \"\\U000bf42a\u00c3\\U0005de45'\\x0b8\\U00064a96\\U000f5f5c\u00dc\\U0004fc82\u00dfz\u00d2\\x14\\xad\": 529,\n        'V': -16,\n        '': 4.983422603238918e+54,\n        'H\\x05\\U0003c175i\\U000d2902\u00ca\\x8d\u00d2\\U0007a9fb\u00d9\\x17': 4.208278112471986e+16,\n        'E~\u00a3O1\u00b3N\\x8f': -3.4118963996371988e+16,\n        'G8\\x98\\x8aq\\U000b885c': -4.3182139113168914e-144,\n        'nomatch:': -8.66011852974413e+120},\n       coverage=None,\n       timing={'\ud85b\udc98\u00e0\\x01': -1.3754846284017904e+103,\n        '\\x8f': -3.466464346958042e+16,\n        '\\x1d\u00c3\\U00102e0aY\\x85\\x9f\u00ab\u00da\\U0003de6f\\U0007bed5_\\U0008e1d9\u00caW\u00af\\x1b\\U0005ee65l': -3.17345826957119e-264,\n        ',': 7.17450540508395e+16,\n        'x': 1.1623301713430548e+16,\n        '\\U000e1f57D': -7.48103000101424e-214,\n        '\u00fd*': -1.6809977622410438e+16,\n        '\\xad\\U000da664-_\u00cd': -0.5,\n        '\\U000f4279\u00e3\u00d8 \\U0007e4e9aY\\x10\\x8aI': -273115880.3445235,\n        '\u00c2\\x96\u00db\\U000fc7e1.\ud878\udddf': 2.451529038643825e+16,\n        '': 5.07537157237432e+16,\n        '\\U000b2a8ab\u00eb': -9.844953709727197e-175,\n        '\\x83\\U00051008w\u00b9B\\U0007e6ddV\\U00109e47YS\\U00041ffb': 3.429205412964194e+146,\n        '\u00f0r\\U000a2f38': -8.436227879622795e-111,\n        '\\U00094d9c\u00a2\\x1f\u00fe': -1.540794509390393e+170,\n        '\u00b2': 4.9106195724078266e-110,\n        'Q(\\\\\u00d7F\\U000cd934\u00a9>Y\u00d0\u00c7\u00cd\u00cd\\U000db2dcA\u00a7($t\\x10\u00c0[_\u00ee!\u00eeo\\x15\\U000ef7a5': 0.1,\n        '7\u00c2;tI\u00f1': 1000.0,\n        '\u00ca': 5.07860308694561e+235},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-4491, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.0,\n          constraints={'min_value': -inf,\n           'max_value': 1.99060506178551e+128,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.3201126792129044e-244},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1e-05},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 1, 2)),\n                 (('a', 0, 3), ('a', 2, 2)),\n                 (('a', 2, 0), ('c', 0, 3)),\n                 (('a', 3, 0), ('a', 0, 2)),\n                 (('a', 3, 2), ('c', 3, 0)),\n                 (('a', 3, 3), ('b', 3, 3)),\n                 (('b', 0, 2), ('c', 3, 3)),\n                 (('b', 0, 3), ('a', 2, 1)),\n                 (('b', 1, 2), ('a', 2, 3)),\n                 (('b', 1, 2), ('c', 1, 0)),\n                 (('b', 1, 3), ('c', 2, 2)),\n                 (('b', 2, 2), ('c', 2, 2)),\n                 (('b', 3, 2), ('b', 0, 1)),\n                 (('b', 3, 3), ('c', 3, 0)),\n                 (('c', 0, 1), ('b', 0, 0)),\n                 (('c', 0, 3), ('b', 0, 1)),\n                 (('c', 2, 3), ('b', 0, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0006c92d\\U000e7c11',\n       run_start=1.8611349147241664e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e5\\x0e': 1.9,\n        '\\U000d1d61\\U000919a9\u00b0\\U000383d8\\U000ae99e\\x8b:=\u00a7\u00ab': -35_335_248_150_417_562_917_754_607_339_310_182_354,\n        '\u00f4-\\t\\U000bab93\u00c6\u00c3\\x8b': 26397,\n        'zqk': 1.139391624882178e+16,\n        '\u00ef\u00e2\u00a4': -773181403421948.0,\n        '': 5266,\n        '\\x9e)\\x90\u00cb\\x1fic\u00e6\u00ef\u00c3\\U00056c312\\U000e5b5b81': 0.0001,\n        '\\U000c9f97=\u00d6\\x14^': 1_369_165_849,\n        '\\x82Q\u00feG\\U0001c8f9\u00b8': -5_150_637_613_379_444_205,\n        '\u00c0\u00ab\\x87|\\x8f\u00c5\\U000e981d\u00a2\u00be\u00d3\\U000b4bdcg': -108,\n        '\\U000e5772': -6_629_831_773_627_753_233,\n        's\\x14ND\\x9co\\x1b\\U000e5fe9\\U0009e975Z\\U000b54ad\\U0001aaff\\x92J': -16,\n        '\u00b4\\U00042c4aN6\u00ffQ*\u00ecy\u00c7': 2.6538551344737526e+109,\n        '\u00a1\\U000ab2fc\\x8e\u00d4\\x12': 107,\n        '\\x8c\\x96': -nan,\n        'w\\x19\\x82\\x9cy\u00c3r\\U0005b840D\\U00012be2\\x16\u00dc\\U00088769\\x8e\\x9b\u00c5\u00c85\\U0009a362\\x1bk': -4718,\n        '\u00c1j\u00a4\\x9a\\x98\\x1c': 17444,\n        '\\x9c\\U00071c8b\\x8b\u00d0': -0.3333333333333333,\n        '\\\\\ud851\udf03aV\\\\\\U001026f4\u00ac\\x07\\x00\\x80\\x95\\U0008aebb\\U000642d5a': -2.7874875364114136e+16,\n        '$\u00b4': 5,\n        'p\u00a6\u00e8\\U0009f252': -8.963645009983078e-187,\n        '\u00b0': -4.889612536757694e+16,\n        '\u00df': 2.1796371785084764e+16,\n        '\u00db': 4834721299150204.0,\n        '\\x8fp\\U0006d8c4': -2.5487490774135847e-66,\n        '\\U00056219\u00fc\\x88\\x93': 1.1754943508222875e-38,\n        'lines': -23499,\n        '\u00c0\u00ffC\u00bc\\x8d\\x91\u00f6\\U00070a37\\x90\\x13\u00dd\u00b8g\u00f1\u00c1\\x9b': -2_111_365_015,\n        'x': -8.793324724498561e+95,\n        '\\r\u7c90\u00fd\\x8a\\x8e6': -23647,\n        '\\x99\u00f1\\U0009daba\\U000a503d\\U00041f87\u00bf\\U00102856\u00e2\u00d7\u00e2\\U00094b25\\U0005779e]': -373_384_249_411_538_088,\n        \"\\x9b.\u00c9\\x12\uaa70R\u00f2\\x84\u00b6'\": -2036,\n        '\u00b5\u00a3k\u00d2yN\\x85\\x1e\\x17\u9bc2\\x869\\x15\\U00086560`\u00b5\u00af\u00d6\u00d0': 14,\n        '\u00cc\u00e1\\t\\U000a119a\\x94': 1.629894870405899e-157,\n        '<\u00d3\\x9c\u00e4\u00f1\u00ca': -1.0579981975384531e+37,\n        '\u00eb\\U00034aa9\\x01\u00d1\u00ef': -1.1754943508222875e-38,\n        '\\U00037a35\\U000b1a27\u00c8\\x02l\ud81e\ude8f(\u00ed\\U000b44e4e\u00f8': 1.2664786516775792e+16,\n        'D\u00fe\u00d5\\x8f': -21769,\n        'g': -7.967603213725642e-13,\n        '&\u00d9l.\u00c0\\U0006e8f9\u00aa\u00f5\\U000c3d66': -23478,\n        'l^\\x02\\U0007851f\\U000b7748\u00b3\\x8d\\U0005c4c4\\U000e4ed3\\x94W\\U000e6ce9\\U000f63a1': 28668,\n        'if': 1.6651301781349937e+155,\n        '\\U0001da8fa\\x96S@\\U000fdcad\u00c3\u00a9\\U00065bdfD': 73,\n        '\\x1d\u00a7\\x92\\x88': 2.2250738585072014e-308,\n        '\\U00044042\u4dc7\\x15\\x02\\U000a583dw\u00a3\u00e0\u00d9\u00ed': 1.1612115815896559e+259,\n        'USERNAME': -6.910074521664705e+16,\n        '\u00bb\u00be\\x89\\x08\\x7f\\U0007e13f\\t\\x92\\x81': -8,\n        '\\x05X': -2744,\n        '\\U0008ae90Wy\\U0009a3ae': -52511143},\n       coverage=None,\n       timing={'\u00e3\\U0003fb47\\x15\u00f1\u00bb\u00f4\\U000e904dJi%': 3.792313610017431e+35,\n        '\u00b0\\r': 1.2023438137597547e-30,\n        '': -1.735359309964499e+216,\n        '\u00a5\u00e4\"\u00dd': -1.1,\n        '\\x9c\\x8f\"\\U00053f30\\x9c<\\U0003cb08oP\\x84\\U0007d63f\u00e5\\U000d54b6\u00e6': -2.7233027773460236e+16,\n        '\\xadY#\\U00019b5f': -4.306659688881776e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=19418, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=8232,\n          constraints={'min_value': -103,\n           'max_value': None,\n           'shrink_towards': -8337,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.2656888419604873},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.0014108329778537154,
          "overall:gc": 0.0,
          "generate:args": 0.025861161935608834
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287692.116107333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='!\u00f4\\U00106d0c\u00e8',\n       run_start=-3.347726978299107e+49,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage={'': [-47, 16338, 3557, 88, 1_014_080_190, -1_906_803_401, 17],\n        '<unknown>': [122, -31221, 65, 28802],\n        '\\x17\\rM\u00fd\\x9c\u00b5J\\x8f\\xad\\U0009767f\\x1e\u00f8\u00c1\u00c7\u00a7Y\\x1fq\\x8fGG\\x8d\u00a1': [-18491,\n         10149,\n         80,\n         27763,\n         6404,\n         52_149_892_599_250_694_303_405_158_101_788_416_159,\n         -13793,\n         -27806,\n         -80,\n         8490,\n         8288,\n         5_895_108_065_128_781_636,\n         98,\n         26810,\n         3_593_655_668_047_901_323,\n         1_025_378_467],\n        'OM6\\x9d': [24],\n        '\u00b4&\\x89\u00de,\\U0003e4b4\u00b8\u00a8y\u00ff\\U000735b8\\x9dgq\u00d0\\x7f)\\x8a': [],\n        '\\U0010eb3b\u00ac\u00cc\\x1dh\u00a1\\x9c': [1_000_000_000,\n         -20454,\n         19281,\n         -30564,\n         93,\n         23342,\n         12098,\n         66],\n        '$EN\u00cc\u00d1': [-9541]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -5.858123779057774e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3976475024046998},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6815377591630659},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00034a8d\\U0005e013\\U000d26d0\\U00034a86\\U00034a6f\\U00034a38\\U00034ae9\\U00034aa6\\U00034a45\\U00051865\\U00034ac9\\U00034a7e\\U00034abf\\U00034a76\\U00034a8f\\U00034a6b\\U000c1af2\\U00034a01\\U00034a8a\\U00034a5b\\U00034ae2\\U00034a38\\U00034ae2\\U00034a0d\\U00052dd5\\U000c2646\\U00034a24\\U0006cb4d\\U0007ff70\\U00034a98\\U00034a95\\U00034ae6\\U00034a58\\U0005143e\\U000c2a1f\\U00034a5e\\U00034a86\\U00034aab\\U00034aa6\\U000d3935\\U00034add\\U00034a67\\U00034a6e\\U00034a08\\U00034ae2\\U00034a3c\\U00034aa6\\U000861c8\\U00034a9e\\U00034a44\\U000a276c\\U00034ace\\U000e0b72\\U000cd76b\\U00034a64\\U00034a83\\U00034a92\\U00034ab9\\U0004603f\\U00034a36\\U00034a53\\U00034a47',\n          constraints={'intervals': IntervalSet(\n               [(215533, 623344), (624536, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(0, 79043),\n                (138082, 156050),\n                (164011, 176907),\n                (187910, 266054),\n                (288555, 302681),\n                (317210, 359635),\n                (426042, 433788),\n                (483719, 725908),\n                (777442, 830776),\n                (869717, 940349),\n                (992213, 1002308)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.458246213336211e+16,\n          constraints={'min_value': -1.7381719970938748e-304,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.11394205130253379},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-21550,\n          constraints={'min_value': None,\n           'max_value': 54600,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00a4\\U00014b97\ud859\uddd3\u00d8\\x86\\x0f\u0100\u00bd\\\\\\ue7c0\u00e0\\x95\u00d6\\x8d\u00a6\\x82\\U000e5834D\u00a1r\u00f9\\x0f\u00f9P\\uf278\\U000e5dde#\\U0001c134\ud856\udf45\u00af\u00ac\u00fdo\\ue5ac\\U000e5fcau\\x9d\u00c2\u00bd\\U0001e498\u00c3\\U0001eb57\\x85K\u00f9\\x0b\u00bd\ud863\udc71\u00b5[\\U000d5e71\u00e5\\U000db5ec\ud884\udd7f\ufb36\u00a9\u00d0\u8bad\\x11j^',\n          constraints={'intervals': IntervalSet(\n               [(4, 215533), (623344, 624536), (868376, 947991)],\n           ), 'min_size': 40, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'em\\x92\\x9d\\xaeg*\\xaf\\xd4W8K\\xfb\\xf9\\xe9\\xed*\\xb6\\xbe\\xf0\\xe6^\\x7f\\xf3)\\x1f\\xe6\\xab\\xfb)k\\xb1b\\x91;\\xde\\x96\\x9f\\xe8\\xed\\x10\\xbd',\n          constraints={'min_size': 30, 'max_size': 53},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.571241265407568e+16,\n          constraints={'min_value': 4.3441970795696344e+16,\n           'max_value': 8.37960442411422e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.702540533879951},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14638,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(0, 79043),\n                (138082, 156050),\n                (164011, 176907),\n                (187910, 266054),\n                (288555, 302681),\n                (317210, 359635),\n                (426042, 433788),\n                (483719, 725908),\n                (777442, 830776),\n                (869717, 940349),\n                (992213, 1002308)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.3333333333333333},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('a', 1, 2)),\n                 (('b', 1, 0), ('b', 1, 1)),\n                 (('b', 2, 0), ('b', 0, 3)),\n                 (('c', 0, 0), ('c', 2, 2)),\n                 (('c', 1, 1), ('a', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='C\\U000fb38c\\x93\u00be\\U00033871\u00a6@\\U000363b2',\n       run_start=2.4705914755252845e+130,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'|\u00d5': 5_153_250_594_204_894_010,\n        '\\x8cp\u00e5': 1.5358218091649245e-179,\n        '': 21246,\n        '\u00e6\\U00069d9c\\U000ae1608': -24880,\n        '\u00ceC': -1.0435713635156303e+58,\n        'f\\U000efdec\ud85b\udec1\\U0007df8d\u00c5\\U0006c387\ud836\udd29\u00eb; \\x03': -6.020970785881015e+16},\n       coverage={},\n       timing={'\\U0002fe28': 1.7976931348623157e+308,\n        '': -3.353045783001474e-220,\n        '\u00ea': 10.0,\n        '\u00d2\\x1b\\x05': 1.192092896e-07,\n        '\\U000e0fb0R\\U000500edA\\x1c': -2.7318856454142076e+16,\n        'module_path': -1.1715068251977932e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=30930, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xde\\x1e\\x85\\x8d\\xb0z\\xee\\xa7\\xed\\xdb\\xa1\\xf2Y\\x97\\xcd\\x82\\xcf5\\\\X\\xfd\\xc6\\x14\\xbf\\x03z\\xe7\\xd51',\n          constraints={'min_size': 28, 'max_size': 35},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud83c\uddfa\ud83c\uddf8',\n          constraints={'intervals': IntervalSet(\n               [(44758, 560546), (923605, 923825)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'g\\xd0%\\x8f\\xfd0\\x86k\\xfag\\xb2\\xe7!\\xf5Q\\xdd\\xb78',\n          constraints={'min_size': 17, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 3, 0)),\n                 (('a', 1, 1), ('c', 2, 2)),\n                 (('a', 1, 3), ('c', 0, 0)),\n                 (('a', 2, 2), ('a', 1, 2)),\n                 (('a', 2, 3), ('b', 3, 2)),\n                 (('a', 3, 0), ('c', 1, 1)),\n                 (('b', 1, 3), ('a', 2, 1)),\n                 (('b', 2, 0), ('a', 1, 0)),\n                 (('b', 2, 0), ('c', 1, 2)),\n                 (('c', 0, 1), ('a', 3, 0)),\n                 (('c', 0, 3), ('b', 3, 0)),\n                 (('c', 1, 2), ('a', 3, 1)),\n                 (('c', 1, 2), ('b', 1, 1)),\n                 (('c', 2, 3), ('b', 2, 0)),\n                 (('c', 3, 0), ('c', 0, 1)),\n                 (('c', 3, 1), ('a', 0, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00f9\\U000d4806 \\x87xd\u00d0i\\\\\u00fa\u00aa\\U00066ffa\\x0cJ\\U000782fc\u00d1\\x96\uc292\\U00068b9c',\n       run_start=3.4457415747928404e+187,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00f40\u00f2\\x9a\\x8d\\x83%\u00b4\\U00036d38\\x14\\rB.\\U00108115C\u00b9\u00ae#\\U0007f216\u00c0\\U000c1550\\x0c\u00f7\u00a1': 1_810_174_146},\n       coverage={'': [-51], '\\t\\x1f\u00e4\\U000ac67a\u00c3\u00b3\\U00061fe5\u00d0\\x10': []},\n       timing={'\\x9a\\U00033e76\u00f0\u00b29': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-47, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 8.464749308778268e-240},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('c', 0, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-6.449880732096517e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'g\u00bdi\u00a8': 3.2457510023324433e-80,\n        'x': -2.755479683438568e+274,\n        '8\\x8e\ud878\udc86': 16_177_154_384_012_155_006_902_044_792_738_650_125,\n        '\u00d9\u00e6\u00fa': 6.931922395309262e+16,\n        'K\\U000f2bcf': -8.369555910600407e+304,\n        '\u00d3\u00c2\\x8a\\x7f': -4.4740159217188504e+16},\n       coverage=None,\n       timing={'\u00e6': 0.001,\n        '\u00b6\\t\\U0006752f\u00f8\\x84\\U000de0ff*/\\x12\u00d5\\U001080d2': 1.7735104697765172e+16,\n        '\u00a1\\U000ce054\u00a9\\x1d': -2.605513530478404e-101,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 1e-05},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=4294967295, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('c', 0, 0)), (('b', 0, 1), ('a', 3, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U000f52c1F',\n       run_start=-3749150228111128.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ce\u00e1\u00dd': -93,\n        '\\x8bLn\u00c7\\x8f\\U000b3d16\u00d9\u00c7\\U00035372\u00f9A\\U0005f54fk1\\x11\\x02P7\ud834\udd14\\U0007a98f)o': 2.859585857616735e+16,\n        \"\u00b5\\U000db26bS\u00c7N'\\U00034f3c~\u00b5{\\xad|\\x05\u00c9qJ3\": -6.035835151356149e-128,\n        'assertion': -2.956929338412357e+16,\n        'j\u00a1\\U0001a7dc\\x97\\x81\u00e7\u00e4}\u00c0\u00a1q': -124,\n        '7\u00fdf\\x99\\U00106076\\U000c6436\\U000ff212': 23394,\n        'u\u00aeK\\x06\u00dc\u963c\\x0b\u00f7\\U000ab8d3;\\U000b9234\\\\P\u00a2\\U00053b48c\u00f2\\U000df93a\u00cc`0Mq': -1.8008728278614748e+16,\n        '\\x88\\U000148fa\\U000b57de!\u00bc\u00fcS\u00b8\\xa0\\x8eR(\\U0005d72e\u00d6]': 6.207742990895392e+16},\n       coverage={'\u00c2\\U000b67c4\\U00094aae\ud802\udd2e\\U0005e832\u00f2\\x94\\U00099647\\U000ab5fb/o\u00de^\\U000423d6xa\u00e7': [],\n        '\\U0003297b\u00e8\\x80<s': [25,\n         -28897,\n         30072,\n         33,\n         -83,\n         -1_777_772_521,\n         -260447162,\n         10533,\n         -32172,\n         168_464_579_280_637_756,\n         -8_981_721_919_085_854_536,\n         31770,\n         -106462904,\n         -1_258_547_681_747_238_313,\n         -26714],\n        '\u00f38\u00be': [-22,\n         42,\n         -19,\n         -23881,\n         8238,\n         -22130,\n         -372533814,\n         8232,\n         -12207,\n         -14384,\n         4659,\n         -31450,\n         4973]},\n       timing={'\\U000d996b\\x1a\u00ef\u00e6\\U00075870\\U0008dffd\\U000b226fM': 1.0277261513555271e+248},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-72, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=3.402823466e+38,\n          constraints={'min_value': 6.221510272314467e+16,\n           'max_value': 3.402823466e+38,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5990275620905446},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=42,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.3105928844007316e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0417244345002137e-208},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5104735320245158},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=20965,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8854479165526401},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'c\\xa9{\\xc1lpGC',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0017387919942848384,
          "overall:gc": 0.0,
          "generate:args": 0.039861164113972336
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287654.674862,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=4.815754922818935e-72,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F~\\x82': 15041,\n        'M': -6.795581058703873e+16,\n        '\u00d40k\u00fe!o\u00d0\u00d8\u00cdAB\u00e0\u00f5\ud801\udd9e)\\x0c': 3.402823466e+38,\n        '\\U0009651d\u00f8': 0.702540533879951,\n        '^\u00c3\\U000a0cb6\u00c0\\U0008a2a2\\x16\u00d41\u00af\u00eb': 1},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=18, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "updated size": ""
        },
        "timing": {
          "execute:test": 0.0004946250119246542,
          "overall:gc": 0.0,
          "generate:args": 0.005207667010836303
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287659.212572666,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 9.81249613687396e-05,
          "overall:gc": 0.0,
          "generate:args": 3.975001163780689e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287656.350465708,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='-M\u00bfvf\\U000961e3\\x9b\\U00040555e\\nt\u00cc\u00dd\\x1d\\U0005af7by\\x1a\\U000c5149P5\\U000d8aa1',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={'X\\U000aab32\u00c8\\t\\x9a\\x8e\u00bb\\x96\u00a1\uc883H\ud849\ude34\u00f1': 1.9081007112548965e+307,\n        '\\U000e7171\u00d8': -2.427413109556808e+16,\n        '': 4.735143992279532e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd7\\x07',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.0688412668676196e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'b\\U0004ed09': 70,\n        '': 1e-12,\n        \"@\u00c5\u00c5\\U000e4ef3\\U0008bb1b\\x1c\\\\\\U0010f857'\\x9b\\U000ef349\\U000988f8\": 4},\n       coverage=None,\n       timing={'': -6.934984149677416e+16,\n        '\\x0f-\\x8d\\U000a3d23(': -3.560507888610526e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19415, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\x04\\U00105bf8\u00cd\u00cc\\x93\\x0f[\u00dd\u00aan\u00f7/\\x05\\U00013804M\\U000be9a9[\\xad\\U000aac90\u00c1\\x03C\\x06\\U000da06d\\U00097129\u00a2\\x0c',\n          constraints={'intervals': IntervalSet(\n               [(0, 219786), (587005, 723409), (727739, 1114111)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x08V\\xe5\\xe7\\xf9\\xfe\\x7f\\x0fn\\xe6L}zJ\\xaf\\xdb]b\\xe7\\xed\\r\\x98'\\xa9E\\xf2M\\xb0s*/Hq\\xc2\",\n          constraints={'min_size': 34, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u9989\u997f\u9976\u98cd\u9908\u98b9\ud807\udf48\u9928\u990a\u991a\u98da\u98ba\u98fe\u994a\u98be\u98e6\u99b0\u98cc\u9940\u99a8\u9963\u98b6\u98c6\u98f1\u98b7\\U0001ab55\u98b3\u98db\u999d\u98f2\u9988\ud81e\udd7f\u98fc\u98e4\ud80d\udc1e\u9936\u994a\u999e\\U00014819\u9961\u998e\u98ef\u9947\u992f\u98d6\u9939\u9965\u98ef\\U00014b4e\u99a1\u98bc\u99ad\u98e3\u98ca',\n          constraints={'intervals': IntervalSet([(39090, 193532)]),\n           'min_size': 43,\n           'max_size': 143},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'3>\\xec\\xda/\\x99\\x97\\x1a\\xddG\\xca\\xe0\\x1a\\xdf\\x01\\x04d4WK\\x9c\\xe1\\xc0\\n\\xb9\\\\\\x8d\\x93u|7f\\x84k\\n(d\\xabg{',\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5616803017953412},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=2166,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 48},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=9.300181559788807e-183,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00aa\u00d9#\u00f6\u00a8\\x9d~\u00d4\\x91': 54},\n       coverage=None,\n       timing={'\u00f6\u00b8\u00b5!}\\x05\\x0f^\\x97\\x80\\x8a\u00e4\\x0cW': 2.0187321305571658e-200,\n        'S\u00fb': 0.3333333333333333,\n        '\u00a1\u00e0': -2.7432802866903356e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28177, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud805\udc29\\U000c01a2\ud805\udc1b\\U000113fa\ud805\udc2d\ud805\udc4c\\U000113c4\\U000ae8d7\\U000b9f3a\ud805\udc33\\U000113c1\ud805\udc0a\\U00094e63\\U000113cb\\U000113c2\\U000113b3',\n          constraints={'intervals': IntervalSet(\n               [(70559, 181008), (369285, 611030), (690036, 812382)],\n           ), 'min_size': 11, 'max_size': 111},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=24743,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-25347,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x8b\\x8dQ',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.09505691732372215},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'<HN\\x08\\x07{9q\\xbd\\xb8ps\\x13\\xc6\\x04\\x1a\\xefk\\x12\\xf4}\\xab\\x834]\\xb3?\\x82V\\xf8p',\n          constraints={'min_size': 31, 'max_size': 131},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0009303750121034682,
          "overall:gc": 0.0,
          "generate:args": 0.020369082980323583
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287683.805113875,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.00001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\xad\\U0004beba\u00c1V\\U000e62e4|\\x00': 1.4578783696517008e+275,\n        'T?\\U00064483': 1},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-741467413, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 1, 0), ('a', 0, 0))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0003292909823358059,
          "overall:gc": 0.0,
          "generate:args": 0.0007861669873818755
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287683.173723958,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_covering_nodes(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\x07\u00b7\\U000b937f\\x87f\\x1b\u00a5\\x9d',\n       run_start=-6.4802279743523176e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00039b1c': -1_012_653_619_561_192_612,\n        '': 2363065.7492111754},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-11104, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.853546964486062e+16,\n          constraints={'min_value': 0.0001,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5081124242163241},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'<',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb9',\n          constraints={'min_size': 1, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.00031004101037979126,
          "overall:gc": 0.0,
          "generate:args": 0.0029829989071004093
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_covering_nodes",
        "run_start": 287674.844086791,
        "stability": null
      }
    ]
  },
  "tests/test_corpus.py::test_corpus_consider_coverage": {
    "rolling": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705,\n         29491,\n         1,\n         2020,\n         0,\n         62_221_212_182_388_038_060_686_249_643_409_667_426,\n         1,\n         -866667455,\n         0],\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': [-25879],\n        '\u00fd\\U00058b1f\u00b5SL\\U0009452b\u00d1,\\U000a765b\\U0007d28e': []},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 1, 1)),\n                 (('a', 0, 1), ('c', 1, 3)),\n                 (('a', 0, 2), ('c', 0, 0)),\n                 (('a', 3, 0), ('b', 0, 0)),\n                 (('a', 3, 2), ('b', 3, 1)),\n                 (('b', 0, 0), ('a', 1, 2)),\n                 (('b', 0, 1), ('c', 1, 0)),\n                 (('b', 1, 0), ('a', 2, 1)),\n                 (('b', 3, 3), ('a', 3, 0)),\n                 (('b', 3, 3), ('b', 2, 2)),\n                 (('b', 3, 3), ('c', 0, 3)),\n                 (('c', 0, 0), ('a', 2, 1)),\n                 (('c', 0, 0), ('b', 2, 1)),\n                 (('c', 1, 0), ('b', 2, 3)),\n                 (('c', 1, 2), ('b', 2, 0)),\n                 (('c', 3, 3), ('a', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='xe\\U000621a3}\u00d1\u00d8X\\U001058b5\u00cc\\x1f\\x80\u00d0\\U000ed4e8\u00e7',\n       run_start=6.480997806782116e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e1\\x82\\x96\\x85': -4.3715977522574495e-86,\n        '\\x1dH\u00e2': 8288,\n        '\\x80c\u00db\\U000b45e7\\x86\\x96\u00b4\\x93\\U00076e96\\U000fb135\\U0006d6b4\u00c1\\U000b8353\u00f1\\xad\\U00041271\\U00060632': 1715},\n       coverage={'\u00fa\\U00063fedB\\U000cf752\u00f5\\x14U\\U000852f5\u00dd\\U0003ffb7\\x8d\u00cf\u00acNb^\u00a3@\\x8f\u00b7': [70_762_640_188_847_201_112_321_872_716_152_090_996,\n         -27007,\n         29877,\n         17987,\n         11002],\n        '\\x8fh\u00be\ud881\ude00\\U0003f0d5\\x8ew;\\U0001279d\\U000ad2b3f\\x9cP': [-22386,\n         -108,\n         46,\n         -532848937,\n         -15,\n         24614]},\n       timing={'\\x91\\x07P\\n\u00fb&\u00cd\\x17\u00f9r\\x1a\\x81\u00cc\u00bf\\xa0\u00d7\u8dddk\\xad\u00d0\\x83S\\x0e\\U000e44aa\\U00089828\"\\U000daa52\\U0008a093\\x92\ud801\udc79v\u00a9\u00b2': -inf},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=5884093998804382123, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.4602744369595039},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.11249376004268166},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0097946591040712e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0455491869310406e-291},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=29240,\n          constraints={'min_value': 16177,\n           'max_value': 38954,\n           'shrink_towards': 0,\n           'weights': {37564: 0.5425733733367207}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=32468,\n          constraints={'min_value': 32391,\n           'max_value': 32484,\n           'shrink_towards': -70,\n           'weights': {32475: 0.13596677935079726,\n            32429: 0.05859449093139516,\n            32398: 0.3871887077159221,\n            32468: 0.1251791138822326}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0005dff6',\n          constraints={'intervals': IntervalSet(\n               [(207399, 478413), (644250, 677291)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 2), ('c', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.2216281287073616e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e0\u00e3\\x83\\U00016665\u00e7&\\x19\ud84b\udeeb': 11687,\n        '3': 127,\n        'y>-\u00bf\\x0f}\\x04\u00dd\u00b8\u00ca\\x89\\x07\\U000b67e7\u00a6\\x82\\U000349a5\ud853\udd09\\x15\\x1e\\U000f8945\\x96': 9.751462055070188e+150,\n        'HA\\U0008e6fc\\U0004ed84\u00f7c0': 1e-06,\n        '\u5722\\tc\u00dd\\x94;\ud84d\udc0a': 7.440200514408813e-163,\n        '+0.0': -21780,\n        '\\U000da190\u00f6': 12507,\n        '': 19837},\n       coverage=None,\n       timing={'\\U0004fbbf\\x8c\\U00049392\\x90\u00aa\u00fe\\x18\\U00058f1b\\x92': 6.421834579516552e+30,\n        '\u00c0(\\U00084728\ud871\udf28\\U001072ad\u00ae\u00eb': -5.678796858415605e+16,\n        'Scunthorpe': 4.091414062531345e+16,\n        '\\x01\u00f9\\U000920e6\u00e1': 1.1117079758434472e-18},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-15, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x1e\\xd2\\x81!\\xde\\xf0',\n          constraints={'min_size': 5, 'max_size': 95},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('c', 3, 3)),\n                 (('a', 3, 3), ('b', 3, 1)),\n                 (('b', 0, 2), ('a', 1, 0)),\n                 (('b', 2, 0), ('a', 3, 0)),\n                 (('c', 1, 2), ('c', 2, 3)),\n                 (('c', 3, 0), ('c', 0, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.003925999044440687,
          "overall:gc": 0.001853459922131151,
          "generate:args": 0.01630557986209169
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287684.037792875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287694.944784291,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=1.2282104355578043e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('c', 1, 3)),\n                 (('b', 2, 1), ('a', 2, 0)),\n                 (('b', 3, 2), ('c', 0, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=2.0167544598448653e+296,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x0b8!G\u00f8\\U0006a5cfL\\U00053213\u00a8\u00ac4\u00ed\\U000fcaab\\U000bd20a': 5.892154266079422e+16,\n        '\\x95\u00a3I': 2.356122694886229e+293,\n        '\u00d8\\x06H': -1.1089436050096487e+265},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-9766, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -1.3872603814651334e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7048144654339218},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('c', 1, 2)),\n                 (('c', 0, 2), ('c', 0, 3)),\n                 (('c', 2, 1), ('c', 2, 0)),\n                 (('c', 2, 2), ('b', 2, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0025595390470698476,
          "overall:gc": 0.001366001961287111,
          "generate:args": 0.004149792017415166
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287655.064236208,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705,\n         29491,\n         1,\n         2020,\n         0,\n         62_221_212_182_388_038_060_686_249_643_409_667_426,\n         1,\n         -866667455,\n         0],\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': [-25879],\n        '\u00fd\\U00058b1f\u00b5SL\\U0009452b\u00d1,\\U000a765b\\U0007d28e': []},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('a', 3, 1)), (('a', 3, 1), ('b', 1, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0004f765&8z\u00afU\u00d3M\\tR',\n       run_start=4.819143968147377e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x03\\U00058a04': -1.0436506131079125e-73},\n       coverage={'': []},\n       timing={'x\u00ec_\ud834\udc5ck\\U000b2c93\"\u00cd\\U000d72ea': 2.154490827571395e+16,\n        'Scunthorpe': 7856058728776124.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=69, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 1, 3)),\n                 (('a', 1, 0), ('b', 1, 1)),\n                 (('a', 3, 2), ('c', 1, 3)),\n                 (('b', 0, 2), ('b', 1, 2)),\n                 (('c', 0, 0), ('c', 2, 1)),\n                 (('c', 0, 1), ('b', 2, 3)),\n                 (('c', 0, 3), ('b', 2, 3))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0026038748328574,
          "overall:gc": 0.001195667136926204,
          "generate:args": 0.0028758750413544476
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287669.252773958,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='=i\\U00043db2\\U000921bcsJ<\u00abW\u00c7Z\u00c1\\U000de984:',\n       run_start=3.3392947007962066e-110,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x85\\x8d\\xa0-0\\x06[\\xfd.P\\xdd\\x8c\\xf1\\xb33\\x8cA\\xdd\\xa4\\xc4\\xa1\\x14;T\\x15\\xa6{ap\\xbbC}\\xfb\\x8c\\x83:\\xea\\xcb\\xad\\xb0f\\xed\\xab\\xd5\\x1f9+\\xfcYm\\x10\\xa5\\xd8\\xd3$\\xd4Z9c\\xdd*\\x1f\\xaf',\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9471208615952857},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00f2\\x0c\u00ec\\x15\u00ef',\n       run_start=3.855755434547051e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x01\\U000b1c4an(})\\x08\ud848\udf68\\n': 2.6232355645685914e-132,\n        '\u00ba': -97,\n        '': -100,\n        '\\x93\u00bc\\x83\u00ca\\x10v\\x7f\\x9a\\x8f\u00e0\\U000ca531\u00be\\U000808a8': -29087,\n        '\\U00043e0a\\x0f': 1.0,\n        '.\\x876': -127,\n        's\u00ae\\U0010242c\\x88\\U000ee0f4e': 1.20178533222362e+229,\n        'm\u00e4': 3.0082608151749796e+186,\n        '\u00cc': 3.972354008333465e-33,\n        '\u00e5\u00a2': 1.4454759389293346e+16,\n        '\u00e4\u00fb.\u00f5\\U000e0e7d\u00d8\u00a7\u00b2B\u00cf\\U000e7ba5\\xad\\x96VB\u00ac\\x92': 1},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=64, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=8302,\n          constraints={'min_value': 8203,\n           'max_value': 3_937_315_831_758_505_468_976_087_236_658_210_058,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 2, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x05',\n       run_start=6.202714381919395e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x07\\x1c\u00b1i': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 29951},\n       coverage={},\n       timing={'c\u00e0v\\x99\\x81': 3802913997431139.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-82974354444417236560872667241877919757, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 0},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('c', 1, 1)),\n                 (('c', 0, 2), ('a', 2, 3)),\n                 (('c', 2, 1), ('a', 0, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='y\u00c8',\n       run_start=1e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'z\\x846\\x11\u00a4\\U000c97a4qg\u00cbu': -1_478_905_477,\n        '\ud844\udf68\u00a5\\U000867fa\\U00085f3b\u00ee\ud884\udea3\\x9e\\U00088a0a\\x03\u00afL\u00ccd': 196748153,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': 1_355_859_316,\n        '\u00db\\x12\u00b7\\x14': 23204},\n       coverage={'\u00f1': [114_277_698_454_872_437_829_586_223_012_083_441_027,\n         52],\n        '\u00aa\\x1b\\x02\\U00099a5a\u00bf\\x99\\x02\\x87QV': [54, 18076, 300]},\n       timing={'\\x03': 9198974455047204.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-922526786, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=5620,\n          constraints={'min_value': 1,\n           'max_value': 18491,\n           'shrink_towards': 2,\n           'weights': {3390: 0.0015197878934209569,\n            10001: 0.19062752236012376,\n            16146: 0.06789497266252204,\n            2117: 0.17963254312776789,\n            1309: 0.060325173956165316}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x947U\\x91w\\x15q\\xdb\\x9d/\\x82\\x9c<\\xc7+\\xb3\\x8cF$i\\x8cB$\\xea\\x17\\xd6.\\x8fo\\xf4',\n          constraints={'min_size': 19, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=22,\n          constraints={'min_value': -1998,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.3105928844007316e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.09741371428132853},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=10102,\n          constraints={'min_value': 39,\n           'max_value': 23872,\n           'shrink_towards': 0,\n           'weights': {21180: 0.013781002635162605,\n            9045: 0.03912879906578099,\n            9917: 0.02508531062058037}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b' \\n\\x18\\x9c+z\\x19^\\x01v\\x91\\xd4\\xfc\\xa5\\xeb\\x0e\\xde\\x01YH\\xc3',\n          constraints={'min_size': 12, 'max_size': 112},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00f2\\x0c\u00ec\\x15\u00ef',\n       run_start=3.855755434547051e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -2.8528822651926244e+16,\n        'B\\U0008f696': 9007199254740992.0,\n        '\\U000c1d54': -2.724921180861979e+16},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-29087, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xba6e\\x80Q\\x9d\\\\V\\x82\\xc3\\x8f)\\xa4\\xd3\\xae\\xe6@\\x164\\x81\\xfa\\\\1\\x9aq\\xd1\\x7f\\x9e\\x90\\xfe\\x04\\xcc\\xd2\\xe0\\xbd\\xc0;5!\\xa9e\\x97~\\x08\\xaeJg,\\xc3\\x83rl',\n          constraints={'min_size': 36, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8282566901589561},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=16234,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -22118,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0034411060139620817},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7162167519329478},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8302,\n          constraints={'min_value': 8203,\n           'max_value': 3_937_315_831_758_505_468_976_087_236_658_210_058,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 2, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x05',\n       run_start=6.202714381919395e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x07\\x1c\u00b1i': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 29951},\n       coverage={},\n       timing={'c\u00e0v\\x99\\x81': 3802913997431139.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-82974354444417236560872667241877919757, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 0},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('c', 1, 1)),\n                 (('c', 0, 2), ('a', 2, 3)),\n                 (('c', 2, 1), ('a', 0, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00e2e\u00a6\\U00070b84',\n       run_start=-1.9452442704022673e+278,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'z\\x846\\x11\u00a4\\U000c97a4qg\u00cbu': -1_478_905_477,\n        '\ud844\udf68\u00a5\\U000867fa\\U00085f3b\u00ee\ud884\udea3\\x9e\\U00088a0a\\x03\u00afL\u00ccd': 196748153,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': 1_355_859_316,\n        '\u00db\\x12\u00b7\\x14': 23204},\n       coverage=None,\n       timing={'z\u00c8\u00d2\\U000b3a85': 2.024936673358963e-191,\n        '': -2.579692036388626e+16,\n        '\\U000b00be': 3.1196261877261336e+16,\n        '\u00d0f\u00b4\\xa0\u00fd\u00c9': 6.709085999760917e+229},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-922526786, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=12539,\n          constraints={'min_value': 1,\n           'max_value': 18491,\n           'shrink_towards': 2,\n           'weights': {3468: 0.1719583427186646,\n            10609: 0.009489968354499011,\n            17205: 0.1232099364954814}},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 3), ('c', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='8',\n       run_start=6642789224723369.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ae\u00b1e7w\u00e9\\x95FYh': -6.611576556553979e+16,\n        '\\\\': 4.868509215149997e-144,\n        '\\U0009002f\\U000d1204\u00a1x\u00e2\u00dd_\u00c2\\U0010431c\\x98\\U000d1aca\\x1a\\x95]\u00b7=U': 85,\n        '': -0.99999,\n        '\\U0006cf02\\U000badd3p\\x9f\\x12': -5.087689605733193e+16,\n        '\u00ff\u00d7\u00af\u00f3lch': 0.5596054377910753,\n        '\\U000a4c49\u00a2\ua4a1\\x95\\U0008a68a\u00cf\ud863\udcc8\u00e6\\U0005ce53\\U000aebd3\\U0005c5a9': 0.637556310692301,\n        '\u00a9\\U000a61a4\u00eb\\x8b\u00c8I\u00e0': -1.7976931348623157e+308,\n        '\\x16\\x8c!\\U000fb829\u00d5': 7.63925892814873e-123},\n       coverage={'\u00e8': [0, 99],\n        '\\x1a': [509456,\n         298618,\n         140165,\n         694621,\n         9999,\n         434829,\n         1026275,\n         998333,\n         558207,\n         91644,\n         0,\n         937662,\n         938046]},\n       timing={'': -3.5367381440460427e-236,\n        '\\xa0\u00c4\u079b\\U000db785\\\\\\x9e': 0.0001,\n        '\\U00073761|\\U00094923\u00a1\\U000cd04e0': -7.1497865097989624e+16,\n        '\u00f0\\U00079438d\\U000bbb64R\u00fcd\u00e57\u00e6\u00f3': 1.7300711281198476e+114,\n        ']~\u00a9[': 10.0,\n        'x\\xa0\u00b1\u00dbY': -1.401298464324817e-45},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=71, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x82\\x15D\\xbf\\xf4g\\xd4\\x97\\x15<J\\xd1\\x0bQ\\xe5\\x99\\x86m\\xf6\\x92K\\x04s\\xd3\\xfc\\xf3\\xe6\\x18\\xc1\\xe7\\xbe_\\xb8Eq\\xbb\\xc3v\\xe5\\xf74uC\\x92o1\\x00I\\x88\\xd4?\\xe4\\xad',\n          constraints={'min_size': 18, 'max_size': 118},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6349978550098072},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.09542973743799807,\n          constraints={'min_value': -1.192092896e-07,\n           'max_value': 0.11879869129554341,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.08678908687289152},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u02dc\u026b\u02fc\u0227\u0259\u0227\u028f\u0208\u02da\u0204\u029b\u0274\u02bf\u02f3\u0226\u02e3\u020c\u02be\u02c7\\U0009f414\u02a3\u02c4\u0281\u0299\u027c\u022d\u0258\u029b\u028b\u0204\\U000b0224\u0290\u020a\u022c\\U00012f4d\u0281\\U000b13fc\u025c\\U000e30fd\u0247\u0286\u024b\ud859\udcbf\u02fb\\U000b1332\ud84f\udde5',\n          constraints={'intervals': IntervalSet(\n               [(512, 10351),\n                (21786, 251959),\n                (610328, 775386),\n                (926094, 946861)],\n           ),\n           'min_size': 36,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property=\"'4\\x8f\",\n       run_start=-2.2073302387149372e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\U0005070c\u00b7': 0.9612067633681967,\n        '~\u00caL\\U00063afd \\U000ac48e\\x86\u00a9': -4.6490653730412285e+289,\n        'runpytest-': -9.505690692442124e-154,\n        '\u00bb': 5.300956612537619e+16,\n        '': -inf,\n        '\u00f9\u00e3\\U000c0e14': 6.3669737579983416e+16,\n        '\\x98\\U000be650\u00f5\"\\xad&': 3.977304217228102e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-19296, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-3_077_963_317_805_720_231,\n          constraints={'min_value': -3_077_963_317_805_773_823,\n           'max_value': 19825,\n           'shrink_towards': 0,\n           'weights': {-3_077_963_317_805_720_231: 0.19125393500351903,\n            -3_077_963_317_805_773_733: 0.18481089750983992}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-27500,\n          constraints={'min_value': None,\n           'max_value': -4024,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x1bq',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='y\u00e7\u00c5\u00e0',\n       run_start=-5.8880580451541715e+60,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x9fLH\u00ca?\\x06\u00a4F': -2.2250738585072014e-308,\n        '\\x84\u00b4': -3.170599567567805e-173},\n       coverage={'\u00cd\u00a5j2\u00f3\u00d5\u00b1\u00ae\\U000426a5\u00ff\\U0006adc7\\x91': [29956],\n        '\\x9eJ\u00a7P': [],\n        '\\U000ea412\\x1c\u00c2@[\\U000638c0\\\\\u00c7\\U00075655\u00cfS\u00b4\\U000880dbXT': [-14178,\n         -9965,\n         30854,\n         31811],\n        's\\x95w': [-30577,\n         8203,\n         -20202,\n         15870,\n         -5_376_641_358_083_931_279,\n         19441,\n         23585],\n        '': [-8862, -6512]},\n       timing={'\u00a5\\x05|': -1506267612284265.0,\n        '\u00f7': 2.096608426475774e+16,\n        '\u00c8\\x1a\\U000fdf42': 2.4956609181904628e+250,\n        '\\x08g\\x179\\n\u00f8\u00de': 1.6493477224841992e+16,\n        '': 1.3201584547763896e+16,\n        '!\u00ff&a\\x81\\x8b': 1.271984394405787e+107,\n        '\\U00075d8f\"\\x86z*$': 8.058640460119145e-187},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-17299, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=240,\n          constraints={'min_value': -2335,\n           'max_value': None,\n           'shrink_towards': 29002,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00b5\\x06\u00d3\\x88\\U000c4704\\x1d9\u00e7\u2dca',\n          constraints={'intervals': IntervalSet(\n               [(0, 170647), (644116, 861417), (1030981, 1089778)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 2), ('c', 3, 3)), (('b', 2, 2), ('c', 0, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00cb',\n       run_start=-2.926676785470262e-293,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00a3': -1.2115364673966831e+237, 'Z': -13},\n       coverage=None,\n       timing={'t\u00c3\u00fe\u00f1\\x07w\\x8eJ\u00a2\\x1c\\U00035ff8`A': 1e-12,\n        '\u00deFy2y<A\u00f5 S': 5.92469218566698e+143,\n        '\\x8e\\x9d\\x89\u00bc': -3.043755038488236e-47,\n        'C\\U000fd029#\u00b2x\u00cc\\x05[': 8.488604715098158e-05,\n        '\\xa0\\x02\u00a9Af/\u00ac\"S w;\u00be\\x01\u00be': -1.8962336023899242e+79,\n        'false': -2.4194708764951836e+16,\n        '\\x8d\u00a2': 6.660055989429831e+16,\n        '\\U000382b6\\U001091be\\U00047130\u00a3^\\U000e0786\ud847\udc7cv\\x9eq\\x8c\u00cd': -1.4530550035318106e+16,\n        '\\x97\ud871\udc6b\\U000f15e1': -3.188060390638845e+16,\n        '\\U000d6bd3\\x1f\u00dc': 5.730901823252843e+16,\n        '': -3.152449726775626e-273,\n        '\\xad\u00bf\u00fcW|': 2.812226876988463e+16,\n        '<': -4.14292309362465e+16,\n        '\u00f0\\x0f\u00f6\\U00097ede\\U000efb30f,S\\U000f0a6f\\U000d93ca': 3.692392302237473e+16,\n        'Ci?\u00d5\u00f9\\x98\"': -3.0099187752222824e+16,\n        '\u00d2\u00d1\\x9dk\u00e2': -6.489341533073402e+16,\n        '\\x97\\x86\\x97': 6.378650534689966e+16,\n        ',\u00d0': -6.902610885019836e+280,\n        '\u00bb\u00de\\x8d': inf,\n        '\u00a1+\\U00052974\u00cbg': 2.225073858507203e-309,\n        '0': -2.4657084761353068e+16,\n        'See issue #2366': 1.7329083946541685e+192},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-94, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 1, 0)),\n                 (('a', 1, 1), ('b', 2, 2)),\n                 (('a', 2, 0), ('a', 3, 2)),\n                 (('a', 3, 0), ('a', 1, 0)),\n                 (('a', 3, 3), ('b', 0, 2)),\n                 (('a', 3, 3), ('c', 3, 1)),\n                 (('a', 3, 3), ('c', 3, 3)),\n                 (('b', 0, 0), ('a', 1, 2)),\n                 (('b', 0, 0), ('a', 3, 1)),\n                 (('b', 0, 2), ('c', 2, 0)),\n                 (('b', 1, 0), ('c', 1, 2)),\n                 (('b', 1, 2), ('a', 2, 1)),\n                 (('b', 2, 1), ('c', 2, 1)),\n                 (('b', 2, 2), ('a', 1, 2)),\n                 (('b', 2, 2), ('c', 2, 3)),\n                 (('b', 3, 1), ('b', 0, 1)),\n                 (('b', 3, 2), ('c', 0, 3)),\n                 (('b', 3, 2), ('c', 1, 3)),\n                 (('c', 0, 1), ('a', 3, 3)),\n                 (('c', 0, 2), ('a', 0, 0)),\n                 (('c', 1, 0), ('b', 1, 2)),\n                 (('c', 1, 2), ('b', 3, 1)),\n                 (('c', 1, 2), ('c', 3, 1)),\n                 (('c', 1, 3), ('b', 1, 3)),\n                 (('c', 1, 3), ('b', 3, 0)),\n                 (('c', 1, 3), ('c', 0, 3)),\n                 (('c', 2, 2), ('a', 2, 0)),\n                 (('c', 3, 0), ('b', 0, 2)),\n                 (('c', 3, 0), ('c', 3, 2)),\n                 (('c', 3, 3), ('a', 3, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.014600418217014521,
          "overall:gc": 0.006334373785648495,
          "generate:args": 0.042023129062727094
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287656.740456791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\ud885\udf6cID\u00f0\\U000ba694': 6.265638056569538e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 2, 0)),\n                 (('b', 2, 0), ('b', 3, 0)),\n                 (('c', 1, 1), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00de\\x8c\u00ec\\U000acebdA\u00fc\\x97\u00f8',\n       run_start=-2.237127400395916e+286,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 1e-05,\n        '\\n[\u00b8\u00d5\\U000d2957\\x8b|': 7.512038773078553e-37,\n        '\u00c0\u00cd': -2.888433751603581e-222},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=0, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\xbf'\\xf7\\x0f\\xc1\",\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 2, 1)),\n                 (('a', 0, 3), ('b', 0, 3)),\n                 (('a', 2, 1), ('a', 2, 1)),\n                 (('a', 2, 2), ('b', 2, 2)),\n                 (('a', 3, 1), ('b', 1, 1)),\n                 (('b', 0, 2), ('a', 2, 2)),\n                 (('b', 1, 1), ('c', 0, 2)),\n                 (('b', 2, 1), ('b', 0, 0)),\n                 (('b', 3, 1), ('b', 0, 0)),\n                 (('b', 3, 1), ('c', 3, 0)),\n                 (('c', 1, 1), ('b', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\"{\u00d3S\\U000efaa4\\U00070b2e\u00b4\u00bf\\x9b{',\n       run_start=3087790132179916.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\x9f<\\x96\\U0003279f;\u00cc,': -1.813304138775616e+16,\n        '\\xad\\U000a9581\\U000ed517\\x83': -3.604223698132376e+16,\n        'S\u00a1-\u00b8': -2748844592635361.0,\n        '': 0.3333333333333333,\n        '\"': -7.081649575860083e+16,\n        'if': -2.0853355106291652e+16,\n        '\u00d4L\u00f1\\U000987beQ\u00ed\u00c4\u00d4\\x17<\u00a5r\\U00069133\u00ebi': 3.62700438655174e-196},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-16085, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud823\udc12\u022d\u02b8\u0287\u02cc\u0237\u02b5\u02a5\u02f0\u0227\u02cd\u020d\\U0004415e\u0284\ud858\udd04\u0269\u02ad\u0238\u028a\u02d8\u0238\u02af\u021f\u02b2\u02a5\u02b0\u0256\u024f\ud84c\uddb1\\U0003a892\u0222\ud84d\udc37\u02aa\u022c\u02f5\u078a\u0254\ud85c\udc3d\u0267\u020e\u02de\u025f\\U0003ffe8\u028b\u02f4\u0297\u0221\u02b0\u021b\u02d7',\n          constraints={'intervals': IntervalSet(\n               [(512, 4387), (64229, 279143)]),\n           'min_size': 11,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-8702748041331566.0,\n          constraints={'min_value': -inf,\n           'max_value': 2.2250738585072014e-308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.0026788423230257323},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00083de2\\U00083e91\\U00083e9e\\U00083de8\\U00083e10\\U00083e8a\\U00083e9d\\U00083e7e\\U00083e69\\U00083e6c\\U00083ea8\\U000b8f57\\U000bf413\\U00083e15\\U00083e02\\U00083ea9\\U00083e8a\\U00083e9d\\U00083dfd\\U00083de7\\U00083e02\\U000929aa\\U00083ec8\\U00083e3a\\U00083e0c\\U00083e5d\\U00083ecf\\U000a95ff\\U00083ddd\\U00083e86\\U00083ecd\\U00083e49\\U00097c0c\\U00083eb7\\U00083ddd\\U00083e90\\U00083ddc\\U00083e42\\U00083df4\\U000a6fce\\U00083ea6\\U00083e8d\\U00083ded\\U00083ea7\\U000a71d8\\U00083e25\\U00083e1e\\U00083ddb\\U00083dff\\U00083e62\\U00083e41\\U000a7d80\\U00083e3d\\U00097541\\U00083ecb\\U00083ddc\\U000aa63a\\U0008e62d\\U00083de0\\U00083e77\\U00083ed0\\U00083df1\\U00083e61\\U00083e68\\U00083e3b',\n          constraints={'intervals': IntervalSet([(540115, 827958)]),\n           'min_size': 32,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00d0\\U000fe3c9\u00e9o\u0114\u00a7\u0117\u0147\u00fc',\n          constraints={'intervals': IntervalSet([(100, 1048835)]),\n           'min_size': 6,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 3, 3)),\n                 (('a', 3, 1), ('a', 0, 0)),\n                 (('b', 0, 3), ('c', 0, 2)),\n                 (('c', 1, 2), ('c', 1, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000b47c7\\U000ad0e6]\ud86d\udffc\\U0009897d]\\x03u<\ud860\udf1f{\\U0008b346\u00cf\\U000a8c8d',\n       run_start=4.3234590661992616e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000638a8\u00bc\\x9fM': 6.141871045046171e-160,\n        '\u00c5\u00f6': -23584,\n        '': 2.181195884493969e+16,\n        '\\x10!\u00d0\\n\\x03M\u00c2\\x18C\\U00050520\\x0c': -544489142},\n       coverage=None,\n       timing={'\\x85.\\x98\\U00079ed2\u00bf4\u00a2': 3.109992657390055e+16,\n        '\u00ef': 1.4716993923070084e+222,\n        '!\u00e2\u00d2l\u00c0\\x0f\\x8e': -5.589735847367312e-276,\n        '\\x9b\\x91\u00b2': -9.293913049931925e+101,\n        '\\r0.\u00c0\uc473\u00fe\u00b6': -1.3565830993037737e+185,\n        '\\U00100771\\U000ff514\\x89\u00a8\u00d4\u00d7S': -4.06627860723221e+16,\n        '\u00f6\u00b9R\\xa0\u00d34\u00fa\u00c9\\U000a9084lj\u00b0': -1.7976931348623157e+308,\n        'Differing items:': 6.554530780893122e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23684, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=557636198,\n          constraints={'min_value': -63,\n           'max_value': None,\n           'shrink_towards': -4545,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-7481940625919904.0,\n          constraints={'min_value': -1.767644400468033e+16,\n           'max_value': 49242915194120.805,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.9514673805023246},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-7974866329272605.0,\n          constraints={'min_value': -inf,\n           'max_value': -2.5310196482947156e-162,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.45017441808004766},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 1, 0)),\n                 (('a', 3, 1), ('b', 2, 2)),\n                 (('b', 1, 2), ('c', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00d5d\u00f2\\x03g',\n       run_start=6064767961959554.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F': 87,\n        'U': 1_282_963_972,\n        '\u00d0{\\x03%\u00f0': -12873,\n        '\\U00074da3\\x0c\\x9e\\x0f\u00b3\ud860\ude8a\u00bd': -687972514,\n        '': -2379,\n        '\\U00047969S': 5.786164364305158e+16,\n        'G\\U00049b9a': 9007199254740992.0,\n        'A': 398199741,\n        '\u00ab.WiU\\U000b8c81\\x1c\\x83`': 2.245070959276655e+300,\n        '\\xa0': -8.285733037317445e+122,\n        '\u00e0': -11636,\n        '\u00b4\\x90\u00b1\\x9fL\\x8b\"': -72,\n        '\\x1e<': -4919,\n        '#': 2.2250738585072014e-308,\n        '\\U000eb533\u00bd\\x16\\x86p\\U0007b6bf\u00e1M0\u00ecR': -5210,\n        '\ud83d\ude0d': 1.3807023333631585e-40,\n        '\\x08': 3.239134099899839e+16,\n        '\\U00106283\u06c6:lB\\U000c1799\u00af\u00af1\u00db\u00e4`\u00f2\u00f47\\x05\u00cf\\x1c\\x02_M56n\\x80\\\\#c\\U0001c95e_\u00ff}#': 56},\n       coverage=None,\n       timing={'\\x87\\x02\\x8fU\u00f9\\x8c\u00c7\\U000cc2f3\\x97\\x1c\u00d6': -3.3139502325472456e+16,\n        '\u00af\u00a7\u00e5\\x14\u00e2\u00e7\\U00109c4c\\U00013695C =': 7.416757516788054e+127,\n        '\u00ef\u00e8h\u00a9\\x1e': -1.9347595198595524e+16,\n        '\\x06f1': 0.02,\n        '%\\U00039e4d': 2.9556754438932902e-43,\n        'u\\U00059872\u00da\u00d1\\x92': 4.050756473800736e+16,\n        '-Infinity': inf,\n        '\\U00032c6c]kY': 5.06509743874041e+16,\n        '\u00af': -1.7001526626078543e-270,\n        '\\x8f\\U0006cfd6u{\u00c6\\x12\\U00052b178': -5.036018533478812e+16,\n        '\ud806\udc18\\x06\u00ef': inf,\n        '\\x86': 7.255015175529472e-73,\n        '\\x1e': -7.147752940749952e+16,\n        '\u00bf\\x1f\u00e0': 1.764385946048795e-295,\n        '': 893732441613.3528,\n        '\\x17F\u00fd\u00d7\\U0004cab3\\x93a\\x84\\U00075c51\u00cd\\x1a\u00c5': 1.2676310123583626e+16,\n        '\u00ce\u00cb\\x9e\u00d5\\U000dc835': 2.744494504068865e-196},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-25935, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5100695704091046},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x91@\\xe0\\x056U\\x1cV\\x85\\xe1\\x19',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.0729843037075144e+16,\n          constraints={'min_value': -7.426669375615684e-40,\n           'max_value': 9.947821387690309e+213,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.012973582144038213},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0003914f\\U000391af\\U00039132\\U0003919f\\U00039139\\U00039161\\U000390f6\\U00039187\\U000390f9\\U00039179\\U000391e9\\U000391ee\\U000391c0',\n          constraints={'intervals': IntervalSet([(233712, 720923)]),\n           'min_size': 8,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'XK3\\xad\\n()',\n          constraints={'min_size': 7, 'max_size': 107},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00090d77\\U00090d30\\U0009a9d7\\U00090df6\\U000bd7f1\\U00090da0\\U00090d46\\U00090d94\\U00090d4f\\U00090d6f\\U00090d9e\\U000bfb51\\U00099e3f\\U00090d3a\\U00090e03\\U00090e12\\U00090dd2\\U00090daa\\U00090d90\\U00090da6\\U00090dcf\\U00090de8\\U00090de8\\U00090dda\\U00090dd7\\U00090dd8\\U000cbcca\\U00090dc0\\U00090de6\\U000c1a99\\U000c979a\\U000c78cf\\U00090d87\\U00090e1a\\U000a2bac\\U0009ce18\\U000c9397\\U00090e0b\\U000b6eb0\\U00090dce\\U000b7359\\U000931bc\\U00090dfc\\U000c5ead\\U000bb464\\U00090dd2\\U00090d4c\\U000c740d\\U00090d5a\\U00090e05\\U00090d90\\U000cce8f\\U00090d57\\U00090d47\\U00090dd0\\U00090dfe\\U00090db9\\U00090d8f\\U00094eeb\\U00090dd9\\U00090dd1\\U00093eb2\\U00090d3c\\U00090d5a\\U00090d35\\U00090dfb\\U00090df9\\U00090d6e\\U00098c37\\U00090db9\\U00090e0e\\U00090e17\\U00090e02\\U00090dbf\\U00090dc7\\U00090d48\\U00090de2\\U0009c446\\U00090d6d\\U0009ae55\\U00090d93\\U00090d66\\U00090e12\\U00090dc1\\U000bf608\\U00090dc4\\U0009e792\\U00090d24\\U00090dec\\U00090e19\\U00090d7a\\U00090d60\\U00090dd6\\U000b4eff\\U00090d4e\\U00090dcc\\U00090dbd\\U00090df1\\U00090e05\\U00090d49\\U00090de5\\U00090d39\\U00090d21\\U00090d86\\U00090e18\\U0009fd84\\U000b5bbb\\U00090d59\\U00090d50\\U00090d79\\U00090d5e\\U00093099\\U00090dc2\\U00090daa\\U00090dd0\\U00090dc2\\U00090dcc\\U00090db6\\U000c8800\\U00090db6\\U00090d4d\\U00090d88\\U00090d5f\\U00090dc6\\U00090d4f\\U00090d6d\\U00090dee\\U00090da1\\U00090d93\\U000a21c2\\U00090d31\\U00090db1\\U00090dd3\\U000b5836\\U00090d5f\\U00090d88\\U00090e16\\U00090d9e\\U000b646f\\U000bcf72\\U00090d78\\U00090d63\\U000c796b\\U00090daf\\U000bd36b',\n          constraints={'intervals': IntervalSet(\n               [(593185, 670189), (733805, 841339)],\n           ), 'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-11170,\n          constraints={'min_value': -32287,\n           'max_value': 106,\n           'shrink_towards': 448,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xfcX\\xdd\\xc2\\xcd\\x8d\\x1c\\xbb\\x16\\xfc\\x15\\x13\\xa3\\x1dc.\\xb8\\xb4\\x9aC\\xae%\\xcf\\rr\\n\\x15\\n\\x89\\x87BS\\xf3\\xa0W\\xdeq',\n          constraints={'min_size': 29, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8714,\n          constraints={'min_value': None,\n           'max_value': 31616,\n           'shrink_towards': 1_627_496_426,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1_941_989_974,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 123,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8232,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 5.161167902642452e-153,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.02},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=6514,\n          constraints={'min_value': 4777,\n           'max_value': 8238,\n           'shrink_towards': 32274,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'F\\xfe\\xc6S\\x854\\xc3k\\x04\\xdd&\\x90\\x9a+G\\x01\\x04',\n          constraints={'min_size': 7, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7896376960767277},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf0\\x81\\x18w\\xcc\\x88\\x18\\xb3\\xed\\xe7\\xe1\\xd6\\\\|\\x90\\xd2r\\xfd\\tg\\x8f\\xf1\\xd3IW\\xe4\\xa3*`\\x85\\xb7?V\\x07\\xac\\xd5#=\\x02\\x13\\xfcI\\x19_\\xde\\x01\\xc7~\\xd7hX(\\xfc\\xe8\\x8a~&\\xc9tvN\\xe8v\\x90Zc\\x12\\xbb$\\xea0<\\xaa\\xa6',\n          constraints={'min_size': 37, 'max_size': 137},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-20994,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -11,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0,\n          constraints={'min_value': -inf,\n           'max_value': 2.7942076972693148e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.30620522287057234},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 3, 3), ('c', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0007841d\\U0008783f~i',\n       run_start=-7.030624441290879e-61,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00bf\u00b6\u00f43': -41, '\\\\\\x10': 4.759003196615936e+16},\n       coverage={'': [113],\n        '\\ue3fa\\U000eb7ef\u00d1!\\x13\u00c9\\x1d\\U000e624a\\U00096c34\u00f0\\U000703cd\u00e5\u00e9\u00f5': [],\n        '\u00c8\\U0004973a*\\x94\\n,': [28604, -9451, -68, 16107, 23453, -23236, 54],\n        'True': [],\n        '\\x16': [-61,\n         -1_310_435_052,\n         -55_710_157_810_582_270_980_142_943_808_197_160_189,\n         1_386_655_251,\n         -71,\n         -25053,\n         -117,\n         -17564,\n         -16123],\n        '\\U00064cd3': [18048, 2275]},\n       timing={'\ud860\udc91\u00dfb': 6.121679185498091e+16,\n        'D\\x16\\x94\u00d4\\x0f': -2.225073858507203e-309,\n        '\\x14\u00d0': -4.84091452217719e+16,\n        '\u00b1\\x8b': 8.611300176678744e-64,\n        '\u00d3.0Q': inf,\n        '': -5.809753296812317e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 1, 2), ('a', 3, 1)),\n                 (('a', 2, 0), ('b', 1, 3)),\n                 (('a', 2, 1), ('c', 2, 1)),\n                 (('a', 2, 2), ('c', 1, 2)),\n                 (('a', 3, 1), ('b', 2, 0)),\n                 (('b', 0, 1), ('c', 2, 1)),\n                 (('b', 0, 2), ('b', 3, 3)),\n                 (('b', 1, 1), ('b', 3, 2)),\n                 (('b', 3, 0), ('c', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x16\\x1c\\x1a',\n       run_start=5.542859120596082e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'fixed': -18},\n       coverage=None,\n       timing={'\\U000c8e48': -9076753184628872.0,\n        'jv\\x98': -6.11146582354647e+16,\n        '\\x89\u00f3\\U00075d19\\U0006409ch\\U000cbb01': 2.90215547023811e+71,\n        '\\x92\u00fe\u00fbN\u00b2\u00bc\\x19\\U00082eab': -5.704820002698001e-115,\n        '\\U00097da5\u00e4': 7.366069399389036e-200},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-3322, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 0, 2)),\n                 (('a', 1, 2), ('c', 2, 0)),\n                 (('c', 3, 1), ('b', 1, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.01024241594132036,
          "overall:gc": 0.004176084068603814,
          "generate:args": 0.05095550121041015
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287689.442437541,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '\\x0f\\x02': 4.770608920857617e+225,\n        '\\U000a3e31': 6.854389257191733e+271,\n        '\\x9d\ud821\ude7a\ufba3\\x16!\\x8eb\u1bc3\\x88c\\U0008f8d7\u00e9%f\u00a4\u00d0\\x0c\\x88\u00d5\\U000e73b2\\U0006d103:g\\U0007451c\\U00037641\u00bb\u00ef(\\U000a7208\\n\u00e4': 2.2250738585072014e-308,\n        '5\u00cc\u00c8\\x16': -5.5560558427610216e+16,\n        'NUL': -2.7991524829019027e+179,\n        'b\\U000843ee\u00b4': 0.6592881803895249,\n        '\u00bbi\\U00037e8b': 4.183269448372786e+16,\n        '\\U000b35c2\u00dc': -4.090905539545805e+166},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x9c\\U00095f26i%\u00ab\u00b6\\U00103b7dh\\t\u00abg\u00b5\uc00b5\\x93\\x16\\U000c3eca,\u00bc\\U001067c6\u00c1X/1',\n       run_start=2.780527480919442e+48,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x87\\x83': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 6.760365878370153e+16,\n        '\\U000631e2\u00fc': -4.735158345753919e+16,\n        'a\u00d6': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': -3.469840054759399e-72},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=30332, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u3cf8\u3d1e\u3cdb\u3d70\u3daf\u3ce1',\n          constraints={'intervals': IntervalSet(\n               [(0, 1), (15542, 110774), (111784, 135628), (719549, 1045768)],\n           ), 'min_size': 4, 'max_size': 18},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('c', 0, 3)),\n                 (('a', 1, 1), ('b', 2, 0)),\n                 (('a', 2, 3), ('b', 1, 1)),\n                 (('b', 1, 3), ('a', 0, 0)),\n                 (('b', 1, 3), ('b', 0, 0)),\n                 (('b', 3, 0), ('c', 0, 3)),\n                 (('b', 3, 2), ('a', 3, 0)),\n                 (('c', 0, 1), ('b', 1, 3)),\n                 (('c', 1, 0), ('b', 1, 3)),\n                 (('c', 2, 0), ('a', 0, 1)),\n                 (('c', 2, 2), ('c', 3, 1)),\n                 (('c', 3, 3), ('b', 2, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x90\\U000706ee',\n       run_start=-5.249178384673545e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'': [2618]},\n       timing={'': 5.900800324223478e+16,\n        '\\x00\ud85c\ude1cG\u00ae\\x17M\\U00106b83\u00be\\U0004ba50\\U000d1e0a\u00b2\u00f9\u00ba': 1.4384562535473037e-50,\n        '\u00dej5\u00a4\u00c4': -2.00001,\n        '\\U000eea28\\U0008bfe5#\\x80': 2.2250738585e-313,\n        'o\u00be\u00a4\u00d9\\U000aff5e': -2.398587619186164e+16,\n        '\\U00014a58\\U0006b641\\x14d': -2.8856310379831176e+16,\n        '3\\U000c9df2\\U000509ef\u00ac\\x80S\u00dd\u00a9': 5.770667844841917e+16,\n        '\\x8f\\x16\u00e7': -2.332945866332286e+16,\n        '\u00de\u00be3\\x91Rd\u00bf\u00a9': 2.214398867779528e-155,\n        'Rs\\x1c': -1.089826957731167e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=13632, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.4731622510644473e+307,\n          constraints={'min_value': -1.5059195926680595e-42,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1e-323},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.402823466e+38,\n          constraints={'min_value': 4.6358277320266536e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2131305482973001},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-6.214499315360484e+16,\n          constraints={'min_value': -inf,\n           'max_value': -6.770258934240162e-270,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 2), ('b', 0, 3)),\n                 (('c', 0, 3), ('c', 2, 1)),\n                 (('c', 1, 3), ('b', 2, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='_\\x02&\\x89',\n       run_start=2.225073858507e-311,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x11\u00b7\\x1cO': nan,\n        '\u00d1\\x9aR\u00e9*\\x82\u00e3\\U000d85f4\u00ff\u00fe\\x94': -85,\n        '': -5.5328654747082824e+16,\n        'NULL': 127,\n        '\u00f9': 0.01,\n        '\\U000cfd6e\u00e6\\\\': 8587,\n        '*\\U000d3087Y': -6.103515625e-05},\n       coverage={},\n       timing={'\u00df\\x9c\",\u00dd\\x16\u00af\u00eb\\x1f\"': 3.269772186231443e+34,\n        '\u00bfO\u00de\u00f7\u00c2\u00a8{<Z\\U00034838\u00cc\u00be': -4.38513518290104e+16,\n        '\\U000acfaa\\x12\\U0009b3a9\\x92\\x8a\\U0005176a\\U0009bb96\\x83\u00d89\\U001039aa\\xadE\\U000873c3\u00d3\\x8d\\xa0\\U000a398eS*3\u00deIy': 1.0,\n        '': -1.3629686010442061e-31,\n        'p\ud867\udf11[^W\\x9a\u00a1': 4.298705765305303e+16,\n        '\\t': 5.100573306454278e+16,\n        '\u00ab\u00e9bu\u00b1\u00c8\u00cc': -2.846983581608029e-85},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=22930, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\uc697\uc687\uc647\uc653\uc666\uc6f7\uc62b\\U00072dbf\uc6ba\\U00085740\uc695\uc6c5\uc6bd\uc601\uc6f1\\U000b652d\uc665\uc60f\uc64b\\U00098726\uc6a7\uc6be\uc6ee\uc6d4\uc6f9\uc699\uc672\uc66b\uc635\uc651',\n          constraints={'intervals': IntervalSet(\n               [(50685, 77226),\n                (91871, 93452),\n                (130682, 136593),\n                (314511, 315782),\n                (372440, 372946),\n                (388565, 473625),\n                (531902, 565066),\n                (594281, 752832)],\n           ),\n           'min_size': 8,\n           'max_size': 108},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=92_438_915_450_775_249_265_192_311_359_434_891_121,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xab\\xd1\\xc7\\xce\\xb8\\xdf\\x82\\x98]\\xe3\\xdc>h\\xb8\\xb6\\x00Y\\xb2\\x01&\\xbcs\\xf7't\\xd5\\xa0\\xae8\\xbb1\\x13\\x95\\x91\\xbb\\xe6\\x00t\\xf8%Pb\\x19\\xc6b1N\\x1e`\\x81t \\xae\\xa8h\\\\\\xb2\\xd7\\xc1ux\\x93\\xb4\\xa2\\xf7K\\xe8\\x8b\\x94\\xb0\\x8a\\xd3\\xf5'\\x9b,\\xf9F\\xc0\\x8c\\x1e\\x13\\x9b\\xa8^HU7\\xd4l1l\\xbc\\x1c\",\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=5651,\n          constraints={'min_value': 5564,\n           'max_value': None,\n           'shrink_towards': 3777,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.045304710149242e+308,\n          constraints={'min_value': 2.3617049579192176e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8288408575306012},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.436014759241919e+307,\n          constraints={'min_value': 4.389259959120278e+16,\n           'max_value': 7.360439416933718e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.016277259764429623},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 2, 3)),\n                 (('a', 2, 1), ('c', 3, 0)),\n                 (('b', 0, 3), ('b', 2, 0)),\n                 (('b', 1, 0), ('b', 0, 0)),\n                 (('b', 3, 3), ('b', 0, 2)),\n                 (('c', 0, 1), ('b', 3, 3)),\n                 (('c', 0, 3), ('c', 1, 1)),\n                 (('c', 1, 0), ('a', 3, 3)),\n                 (('c', 2, 2), ('a', 2, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\ud875\udcc5w\u00c8\\U00087dba',\n       run_start=-6.883862835298341e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\ueb8c\\x15\\U00046150\u00ac\u00cd\\x93@\\U00083566V': inf,\n        '\u00c0\u00db\\x0c': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0]},\n       coverage={'': [8232],\n        '\\x18\\U000807aa\u00d0\u00b9\u00a9\\x1f\u00eaR\\U0010079b\\x91': [-3660, 77, -12211],\n        '\\U0008ceb1U\\U00093680$S': [],\n        '>\u00c3\\x9d': [66_385_259_020_628_596_379_415_727_777_418_698_305,\n         24446,\n         4_294_967_295,\n         13061,\n         30380,\n         1_789_544_755_829_592_162,\n         -916,\n         -29593,\n         -13400,\n         -32354,\n         -32209],\n        '\\x87.\u00ec7\u00fd': [24_047_910_447_171_609_448_594_280_067_336_892_850,\n         -101,\n         17686,\n         40,\n         4_294_967_295,\n         -26124,\n         -103],\n        '\u00cav\u00a3\\x8a:\\x98\u00d4': [],\n        '\\U000a844c\u00fe\u6e19\\x9f\\x1f\\x80\\x84\u00b2': [28190, -26]},\n       timing={'': -3.602164756596248e+52,\n        '\u00ff': -3.739195642508751e+16,\n        '\"\\U0001c9c8\\x1b\\x9a': 4.060860501445043e-201,\n        '0/0': -5.607943268121816e-181,\n        '[0\u00d8\u00c8': 5.002901106667193e-39,\n        'zV\\U000e04e4d': 1e-12},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=2752135228558263094, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 3, 3), ('a', 0, 1)), (('c', 2, 3), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00d2\\x18\\x19\\U00081517\u00bbj\\x1c\\x04M',\n       run_start=7.034045398602216e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'(V': 1_000_000_000, '\u00c6': 7552},\n       coverage={},\n       timing={'\\U00067a8c': 1.9459326443806745e-75},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-13, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.4798144248200353e+307,\n          constraints={'min_value': -1.639450547473955e-19,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.192092896e-07},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-9.503169388114189e+103,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1e-323},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-76,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 65,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0008571c\\U0008578b\\U000857a3\\U000ec56d\\U000857a1\\U0008579f',\n          constraints={'intervals': IntervalSet(\n               [(546515, 705636), (927682, 983102)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7550872239117474},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 0), ('a', 2, 2)),\n                 (('b', 3, 0), ('b', 0, 2)),\n                 (('c', 0, 0), ('a', 3, 2)),\n                 (('c', 1, 2), ('b', 3, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-2.04707719460339e-64,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'[_:\u00d2\"\\U000a453a\u00e2*': 1.5331657623104246e-170},\n       coverage={'\u00b9\\x86B\\U0007bdcd\\U000a29bc\\U000d243d\\U0010c90c\u00cf)\\x88\\x0c\u00e0\u00f6h\u00eb\\x9d\u00b2\u00e4\u00e7{\u00b1\\x03\u00a1\u00bcj)\\x83h\u00b8\u00ab0\u00d1\u00b8\\x93j': [23256,\n         -4653,\n         -4_143_520_471_443_049_414,\n         12919,\n         -65,\n         21536,\n         -16531],\n        '': [17396],\n        '\u00e3': [-52,\n         -89,\n         137_780_251_987_175_467_650_360_761_904_912_053_664,\n         15562,\n         -30407,\n         93,\n         -13924,\n         2051]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=267, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xb4\\x1c\\xf9eT\\x9a<\\xa3\\xb6\\xbdL\\xc7\\x82\\xdb',\n          constraints={'min_size': 10, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xdc\\x19\\xa7\\xe8Y\\x84\\xbau\\x8b\\x12\\x94\\xa5',\n          constraints={'min_size': 0, 'max_size': 62},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=19204,\n          constraints={'min_value': -63,\n           'max_value': None,\n           'shrink_towards': 27193,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe4\\xb8\\xd1i/\\x9c~\\x04\\xeb\\xa9\\xfb\\xc3M\\xa1\\xac\\xff\\xb9q\\x93U\\xcf',\n          constraints={'min_size': 11, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 2.225073858507e-311},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('a', 3, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00c1P\\U000a6565\\x9d\ub15a',\n       run_start=-1.4157998580286045e-241,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={'\u00eb\\x90\\U000dd2d2\u00f0': 0.02, '-\\U0009ac46w': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=20977, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\x08w\\x90\\xfddR\\\\\\xbf\\x1d@\\xd3I\"\\x08\\xcf+[\\x98\\xf7\\xdfW\\xc9y)\\xa3\\xcb\\x98(\\x08\\xb3w\\xe8\\x06\\x95\\xe6\\x19\\xc05)\\xa2\\xb1\\xd8PW\\x1a\\xbf\\xe8\\xe9f\\xbe ]\\xbe\\xd3\\xc8\\xe4\\xd8;s\\t\\xd8\\x1c[\\xee\\xe4a\\x0c\\xc3\\xf5P?@\\xc4\\xa8\\xe6=\\xe5K\\xabh\\xb8$\"\\xdb\\x1e\\x8f\\\\p\\xc1O\\xa7\\xfd\\x81\\xe5\\xa5\\xf2p\\x14\\xdb\\xeb\\xe0\\xd3S\\x99H\\xfb\\x03\\x12\\xb1\\x13s \\x02\\xbc\\xa5\\x91[\\x1e\\xcf;\\xdb\\xfa\\xc4\\x1d\\xb14\\x85\\x9c\\x00\\xd2\\xd3\\xf9_H7\\xc5\\x08\\xa2\\x8a\\x03p_y\\xfdc\\xea\\xcfW',\n          constraints={'min_size': 48, 'max_size': 148},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0008637f',\n          constraints={'intervals': IntervalSet([(549627, 572933)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=6.97804014731044e+16,\n          constraints={'min_value': -1946.9818861882134,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9086396491334405},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-12645,\n          constraints={'min_value': None,\n           'max_value': 9999,\n           'shrink_towards': -81,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 7.369476405593676e-291},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=524303,\n          constraints={'min_value': 524288,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 2.1724922872696612e+216,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.02357470821923969},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.5894859456005777e+211,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1e-323},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'.',\n          constraints={'min_size': 0, 'max_size': 56},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8441,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -3785,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.3742834818727443e+308,\n          constraints={'min_value': 2.8787287155703746e+57,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.16014529945033054},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0004e5ff\\U0005599a',\n          constraints={'intervals': IntervalSet(\n               [(320908, 493413), (654681, 1007161)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9061501432275996},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x19\\x18\\U000c250c\\\\\\U000f33ad\ud84d\udf95\\U000d8374\\x80\u00c0<\u00c2',\n       run_start=-1.1754943508222875e-38,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -1.746310818948573e+16,\n        'q:\u00bf\\t': -55,\n        '\\U00013c1d?\u00a4\u00f4': 5845,\n        '\\U0005d0c9': 106},\n       coverage={'': [-39, 21700, 703884255, 29334, -56, 8045, 17],\n        '\\U000cf7e3-}\u00fc\\U0008c631u\\x02\\U000a1b15\u00c6': [-13449,\n         -28,\n         -715_796_741_338_393_752,\n         -19568,\n         109,\n         7289,\n         25885],\n        '\u00f1\u00a8\\x86\"\u00df\u00c8\\U0010457a\\U0003f2e1\u00e2\\x8cuf\\x9e\\x82i\u00b5z\\U0003b426\u00efI\\x7f\\x14}': [],\n        '\\U000e0b28\u00d8': [31678,\n         11618,\n         21,\n         2407,\n         4404,\n         -4_257_241_126_184_591_968,\n         -7853,\n         -6984,\n         -29870,\n         -53,\n         1680,\n         -7367],\n        '\u00e9p.\u00d4\u00d7x': []},\n       timing={'y\\U000f4907\u00df8\u00a2\u00bac': -5.098687848317294e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-5757, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('a', 2, 1)),\n                 (('a', 1, 3), ('a', 0, 1)),\n                 (('a', 2, 2), ('a', 3, 0)),\n                 (('a', 2, 2), ('b', 0, 3)),\n                 (('a', 3, 0), ('b', 3, 3)),\n                 (('a', 3, 1), ('c', 0, 0)),\n                 (('a', 3, 2), ('a', 1, 2)),\n                 (('b', 0, 1), ('c', 2, 0)),\n                 (('b', 0, 3), ('b', 0, 3)),\n                 (('b', 1, 2), ('b', 0, 0)),\n                 (('b', 3, 0), ('c', 2, 0)),\n                 (('b', 3, 2), ('a', 1, 0)),\n                 (('c', 1, 0), ('a', 0, 2)),\n                 (('c', 1, 1), ('c', 0, 3)),\n                 (('c', 2, 0), ('c', 3, 2)),\n                 (('c', 2, 1), ('b', 0, 0)),\n                 (('c', 2, 2), ('a', 2, 0)),\n                 (('c', 3, 0), ('b', 1, 2)),\n                 (('c', 3, 3), ('a', 3, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x85',\n       run_start=-6.722518221964702e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e6\\t': 13693},\n       coverage={'\\t\\x7f\\t\\U001080fd': [-40_922_187_615_455_242_453_110_491_283_996_667_154,\n         119,\n         14778],\n        'F_\\U0008467a\\xa0\u00ab\u00e8\\ueb2a\\U000d3942\u00c8\\x9aX\\x14\u00da\\x0fk\u00de\\U000fa6c0\\x03\\x1a\\x94//\u00bb\\U000f89c6\\U000e1a30\ud81a\udd11vv\u00fb\u00cb': [-20165,\n         -10185,\n         -27953,\n         93,\n         -12383,\n         20059],\n        'N\\U000ad14d\\x05\u00fd\\x16\\x94\u00c4': [99, -5, -2_061_468_591, 107, -19990],\n        '\\x07=': [28077,\n         -6159,\n         15,\n         31_368_343_497_615_792,\n         -29610,\n         -14114,\n         8798,\n         -1_199_230_792,\n         -27015,\n         1_000_000_000,\n         -20030],\n        '': [5780],\n        'zK\u00b61\\x82': [21531],\n        'x\\x8c': [],\n        '\u00dc': [8,\n         3087,\n         14,\n         -5609,\n         27489,\n         -21145,\n         51,\n         19168,\n         -12710,\n         13320,\n         -32415,\n         -3952,\n         105],\n        '\u00d66&\\U000d28dc\\n\u00f8': [],\n        '|': [-89,\n         -6_602_609_125_257_499_932,\n         29157,\n         6_020_253_538_237_679_421,\n         448,\n         33,\n         -23674,\n         -1389,\n         -1_275_786_452],\n        '[t\\x1f': [667, -28, -21942],\n        '-Infinity': [-12940, -88]},\n       timing={'\u00d89\u00a6\u00b1\\x05CU': -2.2752966983747597e-216,\n        '\u00eeF\u00c1': -2.6336360673998024e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=16638, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=6.065664862674147e+307,\n          constraints={'min_value': 6.2259634375424216e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.4564043915263253},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xeb\\x12\\t\\xd8\\x08\\xd4\\x83b\\xa1\\xb3\\xfb\\x8ag\\xe5\\x8a\\x9b\\xfd_\\xd9Q\\x13\\xfaO\\x9b@\\xa1\\xde\\xcfqQ4\\x06`\\xbb\\xc0\\xf1,\\xc0\\xc7\\xdc\\x96O\\x06[H\\xd3\\xcc\\xd3!\\x0b\\xa7X',\n          constraints={'min_size': 49, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.2802064385140635},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xa2\\xcb\\xf8',\n          constraints={'min_size': 3, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=2730109594458706.5,\n          constraints={'min_value': -8.726685225368139e-57,\n           'max_value': 3.884572025201956e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.44502134021027884},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 2.347601674054745e-258},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'9\\xfd\\x00\\xc0\\x9da',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 1, 3), ('b', 1, 1)), (('c', 1, 1), ('a', 3, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00c5\\x8eQ\u00d3\u00e2\u00cc\u00c7U\u00ed',\n       run_start=-1.7992287342848714e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 7.131008546185829e+16,\n        '\u00b7\u00c8\ud820\udc50s': 70,\n        'U\u00dc': 4181730456327295.0,\n        '\\x17!\u00ba\\x04\\x16\\U0005d4669': -13010,\n        'log_level': -2.5365363916669234e-84},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=11138, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xcbo=?\\x89>\\xd6\\xb7\\n(3\\xde\\xaa\\x0b\\x94\\xc7\\xb9g\\x10Y2\\xaf\\x01|\\x83*9n\\x9f\\xa2Q\\x9d>\\x85b\\xf7CNy\\xe7\\x0c\\xcdl\\xfb7\\xa4\\xa8B\\xb7\\t\\x9b:\\xf4\\xd7\\xb6]\\r;\\xdb\\x0f\\xf2\\x0b>\\xd7.m\\x8e`\\x8d',\n          constraints={'min_size': 32, 'max_size': 132},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.3550616905348004e+16,\n          constraints={'min_value': -5.800408482942186e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9034979270670087},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.7976931348623157e+308,\n          constraints={'min_value': 8.681742264913865e+219,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7758702975085081},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00049ad2\ud851\udc44\ud851\udcca\ud850\udfea\ud851\udc16\ud851\udc68\ud851\udc0a\ud850\udff5\ud851\udc6b\ud850\udfea\\U000b7f4e\ud851\udc0a\ud851\udc5b\ud851\udc12\\U0003f657\\U000a8084\ud85c\udc97\ud851\udcc2\ud851\udc3d\\U000a7d96\\U00033971\\U0009699d\ud851\udc3f\ud851\udc2b\\U000ae530\\U00096971',\n          constraints={'intervals': IntervalSet(\n               [(148449, 305342), (562129, 761583)],\n           ), 'min_size': 23, 'max_size': 26},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.8077879016196077},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd0\\xf4\\xaf^\\x14r\\xd0=\\xbeji\\x18\\xab\\xd7\\xe2',\n          constraints={'min_size': 11, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=63,\n          constraints={'min_value': -24703,\n           'max_value': None,\n           'shrink_towards': -3702,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5037750863618066},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.0387945493883612e+307,\n          constraints={'min_value': -2.2202527643875548e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.4970139310114231},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8962207697456168},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=6574,\n          constraints={'min_value': 6560,\n           'max_value': None,\n           'shrink_towards': 32,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-1.1,\n          constraints={'min_value': -6.029131544578048e+119,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.045793711306909575},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 1.2896865345210852e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.012986068060005577},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_554_173_063,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.083313643806496e+16,\n          constraints={'min_value': -0.6238348902859212,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.21987209697411153},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.402823466e+38,\n          constraints={'min_value': -1.2018653615719033e+176,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5499381696561328},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.001796369208928e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.16869336287986017},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.06933310117329562},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0006fbbe\\U0006fb85\\U0006fb71\\U0006fb6b\\U000b2336\\U0006fbc7\\U0006fb6b\\U0006fbed\\U0006fc10\\U0009e2ed\\U0006fc05\\U0006fbb5\\U0006fb81\\U0008f584\\U0006fba3\\U0006fb7d\\U00089f82\\U000b48dc\\U000a289f\\U0006fbd4\\U0006fbf8\\U0006fc0d\\U0006fb65\\U000884f3\\U0006fb78\\U0006fb86\\U0006fbb8\\U000b1d8c\\U0006fb69\\U0006fb41\\U0006fb6b\\U0006fb5c\\U0006fc0c\\U0006fbf4\\U0006fb7b\\U0006fba6\\U000a8b6f\\U0006fbd6\\U0006fb49\\U0006fb3c\\U0006fb90\\U0006fb7f\\U0006fc04\\U0006fc0e\\U0006fc07\\U0006fb19\\U0006fbb2\\U0006fbef\\U0008f11d\\U0006fbf8\\U0006fba4\\U0006fb4d\\U0006fbcf\\U0006fb29',\n          constraints={'intervals': IntervalSet(\n               [(457493, 459653), (504916, 748392)],\n           ), 'min_size': 26, 'max_size': 126},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 0, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U00048514\u00a7S\\x8b\\U000e702c',\n       run_start=2898507977720954.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 20080},\n       coverage={'\\x80-': [-80,\n         17571,\n         -12_430_224_809_365_069_575_873_740_720_047_809_824,\n         -25976,\n         -32123,\n         13063,\n         -81]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-75, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 93},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb7D\\xfb\\x95\\x9e}\\xd5w\\xa5\\xc9(r\\x02\\xbd/#\\xb2\\xb3E\\xa8\\xdb\\xa8\\x915\\x03O\\x13\\xf9,\\x89\\xebI6\\x8c\\x08\\xb2\\xf4\\xd1\\xdb\\xce\\xc3\\x12\\x10\\x02\\x9f\\xe2U\\xab\\xe2t\\xd0Va\\x0b\\xa0E\\xad\\x81\\x11\\xb6\\x93\\x0b\\xee\\xd7\\xaf\\x03\\xe3\\x89\\xfc\\xdf\\x12x\\xda\\xccD\\xb9\\x1e\\xea\\x92\\x81ry\\x8f\\xa3?I',\n          constraints={'min_size': 39, 'max_size': 139},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9211028875192855},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.018693910362126868},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u169b\u1684\u1693\u1690\u168b\u1692\u1684\\u1680\u1691\u1684\u1682\u1691\u168f\u1685\u169c',\n          constraints={'intervals': IntervalSet(\n               [(255, 260957), (481876, 495533), (573721, 899038)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x80\u00a2\u00e4\u00bd;\\x94\u00d8',\n       run_start=1.5936974454049273e+207,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'2\\x91\\U000a03ae39\u00d1Y\u00e7\\U000f6602\u00dc\\U00095e39\\x07': -1_216_057_317,\n        '\u00b7\ud875\udcef': 20481,\n        '*': inf,\n        '\u00fe\\xad\\x13\\x07\u00eb\\U0007eec9\\x13\u00be\u00a2': 30312,\n        '\\x8f\\U000d988cK': 22558,\n        '\ud84f\udeeb\u00c1': -7.533450338955804e-221,\n        '\u00a2\\x05}\\x18\u00f7\u00cf\\U000793c3': 5728,\n        '\u00e6\u00b8\\x99': 1_556_909_079,\n        '\u00dc\\U00100cfd\\x89\\x0e\u00d1\\U0006438a\\U0010908a\\x94cw\\U0006a248\u00c9\\U000a2da0\\U000ddc97\\x92a\\x00\u00e0*d\u00b3~': -125,\n        '\\U00040dbcq\\x8c\\x98\u00ec\\U00057888\\U00059834': -5897,\n        '--showlocals': -21557,\n        '': -9.391672102367139e-14,\n        'y': -12990,\n        '*?[': 6840},\n       coverage=None,\n       timing={'': 5.42095916168874e-57, 'x': 1.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=31686, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5686409564119527},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-12151,\n          constraints={'min_value': None,\n           'max_value': -12113,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=667521079,\n          constraints={'min_value': 667497543,\n           'max_value': 667522891,\n           'shrink_towards': 46_645_091_463_744_082_862_620_934_774_066_231_784,\n           'weights': {667521079: 0.9270699366452668}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 0.0,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.16163418931123966},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\u1afa',\n          constraints={'intervals': IntervalSet(\n               [(6732, 251900), (673552, 865676)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-13826,\n          constraints={'min_value': None,\n           'max_value': -8400,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 0, 1)),\n                 (('a', 2, 0), ('c', 3, 3)),\n                 (('a', 2, 1), ('a', 1, 1)),\n                 (('a', 3, 2), ('b', 2, 2)),\n                 (('b', 1, 2), ('b', 3, 1)),\n                 (('c', 3, 3), ('a', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='&W;5\u00fd/\u00cb',\n       run_start=1.5359091011594256e-294,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00db\\U000d21f6\u00fa\\x83X\uc4be': -1_241_599_731},\n       coverage={'\\x03': [],\n        '\\x12\\U0007e511\\U0007edbe\\x18\\x90\u00b7\\x1e': [-31043,\n         -22177,\n         30,\n         -12832,\n         -6471,\n         -8598,\n         9409],\n        '\u00daO&\\U00034208M(wf\u00fb\\U000373fb': [-4]},\n       timing={'\\U0006aea6\\U000d7801\u00aan\\U00057d37\\x9d\\x9b;\\x12\ud872\udfc1\\U00104647\\x84\\x8e\u00ac\\x8d%\\U000504dd\\U000e8d6d\\U000fb265\u00de\\x98\\n0\u00af': 0.0001},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=8238, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u0107\u0154\u0159\\U00093ebe\u014b\u0197\\U000d1b6d\u012c\u0189\u0160',\n          constraints={'intervals': IntervalSet(\n               [(256, 137164),\n                (414983, 448549),\n                (479775, 492483),\n                (523774, 1103411)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=13428,\n          constraints={'min_value': -6,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(256693, 384197)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=27715,\n          constraints={'min_value': -15254,\n           'max_value': None,\n           'shrink_towards': 19949,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'(!I',\n          constraints={'min_size': 1, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9252843216694651},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 7.209518684343185e-99},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.1493797531806418},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5105795893894965},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5770073525021518},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=8.39001745890807e+239,\n          constraints={'min_value': 3.538594143824706e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6804599410067752},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-13486,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 7,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 1, 2), ('b', 2, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.021821288159117103,
          "overall:gc": 0.007716961845289916,
          "generate:args": 0.12490690976846963
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287686.007190833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U000eea2d\ud847\udd48',\n       run_start=-7.16960537907108e+152,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'m\ua59f`)\\x82\u00e5f\u00e3Xc\u00fb1\\U000c76a0\u00b6j': -1.2220628993644207e-138,\n        'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 4.8808271348816056e+16,\n        '\ufb27': -2.225073858507e-311},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x93'C:\\xce{w\\xe2U\\xf9\\xe5\\n\\xca\\xeb\\xdc\\x17\\xaa\\xdb/'c\\x0b=\\xa3\\xcb\\xe6\\x02i\\xca\\xb9*!N\\x9f\\xa0&\\x8e\\x0c\\x1b\",\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8030321147111537},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('a', 2, 0)),\n                 (('c', 1, 1), ('a', 1, 1)),\n                 (('c', 3, 1), ('a', 0, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='NUMBER',\n       run_start=-2.736508254555205e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x7f\\r\\U000d2c34': -8586892357061863.0,\n        '=': 0,\n        '\\x0c': 1,\n        '': -1_389_539_180,\n        '\\x04': 7.012378807547859e+16,\n        '\u00fc\\U00106363': -10000000.0,\n        'a': 5.4819477355015624e+16,\n        '\u00ce': -26387,\n        '\\U000e48fb': -5.998259176654741e+16,\n        'j \u00ba\u00f6F\\U0006b76a\u00c7\\x8b \\nx\u00fb^': -6.375538132999001e+16,\n        '\\x14\ud870\ude6b': -49_547_982_426_955_817,\n        '2': 0.0,\n        '\\x9c': 40,\n        '\\U0001b478\ud840\udd45}(\\x19\u00a2\u00cc>\"\u00b5\u00f3\\x05@\\U0006383f': 154.53074284458873},\n       coverage={'none': [],\n        '\u00b9\u00ba\u00b8': [19486, 51, 2_644_274_733_374_175_645, -114, -18],\n        '\u00a4\\x87\\xad\u00ee': [],\n        'C)': [30056, 2_145_550_857],\n        '\u00e7\\x90A': [-4_657_801_255_599_686_903,\n         -16846,\n         -21442,\n         7661,\n         17,\n         20182],\n        '\u00ebn\u00fe\u00c7\\U000f9661': [363471125, 93, 23855],\n        'KG': [],\n        '\u00ee\\U0007d9b2\u00ef\\x89\\U00100a35\\x98': [6788],\n        '\\U000a2f07\u00e0\\r\\t\\xad': [],\n        '\\U00090e43': [-2678, 19677],\n        '\\U000195f2': [],\n        'u\\U0001abb8\\x1d\u00fe\\x85': [23278, -72, 16334, 128, 29749, 127, -26535],\n        '\u00a7': [-27848, -24583]},\n       timing={'': -4.986038519603615e+16,\n        '\u00b9\\U0004c3a3\\U0003633f\u00f9\\r\u00dd\\U000cebbc\\x02D\u00f4/\\x1f&\\U0007d5b9\u00bd\u00ea\\U0006c927\u00ba': 6.814125087800497e+16,\n        '\u00cfb\u6066\u00f1\\x0f': -5.7726692463943656e+16,\n        'q\u00a8': -5e-324,\n        '\ud842\udeb0': 6.529046485434366e+182},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-98, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.19944563424383827},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-24443,\n          constraints={'min_value': None,\n           'max_value': -84,\n           'shrink_towards': 14261,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('a', 3, 2)),\n                 (('a', 0, 3), ('c', 3, 0)),\n                 (('a', 1, 0), ('b', 3, 2)),\n                 (('a', 1, 1), ('a', 3, 2)),\n                 (('a', 3, 3), ('b', 2, 2)),\n                 (('b', 0, 3), ('a', 3, 2)),\n                 (('b', 1, 0), ('a', 1, 2)),\n                 (('b', 2, 0), ('b', 3, 3)),\n                 (('b', 2, 2), ('c', 1, 3)),\n                 (('b', 2, 3), ('a', 2, 2)),\n                 (('b', 3, 1), ('b', 3, 3)),\n                 (('c', 0, 3), ('a', 1, 1)),\n                 (('c', 1, 1), ('a', 2, 1)),\n                 (('c', 2, 2), ('b', 0, 1)),\n                 (('c', 3, 1), ('c', 1, 2)),\n                 (('c', 3, 2), ('a', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x83\\U000aebc3\u00f9Z\\x03\u00bc\u00f7\\x0c\\U00065b39',\n       run_start=1.9255326117748183e+208,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'& n\u00fb\u00df\\U000bf363\u00ff\u00e3\u00af\ud841\udfbbK\u00a5U\ud887\udea6': 4.367402681897113e+16,\n        '': 1.6970215673661746e+60,\n        '\u00f6\\U0004d2ee\\U000edf9c\u00c8H<\\U000fba76\\U000b0542k\\U00095b73Z\u00d3': -3.70248648986369e+16,\n        '\\U0010921a\u00c03q': -1.3094150100611684e-202,\n        '\\U000a82bc': -1.9,\n        's\\U000f7177\\x11,\\x11\\x8e\\x1b\u00e8\u00e8\\U000d9f6a\u00a8\\U000af03d\u01810\\x89o\u00f4\u00df\u00b3\\U000f83936\\x005': -2.8092494330721495e-12,\n        '\\x92\\x8a\\x9a\\x19\\x08': 1.7223494882261153e-60},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-77, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=2.5082374329621148e+16,\n          constraints={'min_value': -1.0982577298556181e-126,\n           'max_value': 5.9959580789470344e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.3923150474517566},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u2cff\u2d87\ud80c\udf0d\\u2d6b\u2dad\u2cd6\u2cc6\\u2d77\\U00046bf1\u2cd6\u2d8e\u2cc5\u2cc1\u2d36\u2cc5\\U000f4515\\u2d7d\u2ce6\u2d17\u2cf3\u2ce4\\U0009b11a\\U000b809e\u2d33\u2cd6\\u2d7e\u97d3\u2d32\\u2daf\\u2d2a\\U0005c298\\u2d2f\\U00056bdb\\U0008e5dd\u2d21\u2ccc\u2d1d\u2d3b\u2d0c\u2cd1\\u2d68\\U00092e12\u2d64\u2d8a\u2cb5\u2cef\\U0004532d\\U0002ed09\u2d70\u2cce\\u2d76',\n          constraints={'intervals': IntervalSet(\n               [(11444, 763774), (957513, 1015646)],\n           ), 'min_size': 49, 'max_size': 68},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.4794175854828812e+308,\n          constraints={'min_value': 1.3425291652989856e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.20598068171502742},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0175\u00b2\u0114\ud82c\ude41\u013e\u00fe\u0130\u00a3\\uf8bb\u0127\u00c1\u00c7\u0116\u00d4\u013c\ud863\ude1a\u0140\u0111\u00b5\u0130\u00c7\u016c\u0164\u00d9\u00a2\\ufffb\u0151\\U0001fe4b\ud853\udff3\\x8f\ud822\udc2f\u00fd\u00b5\u0185\u00c3\u0131\u00e3\u00f2\\x95\\x95\u0144\u0130\u010a\u016b\u013a\\U00012e82\u0130\u0115\u013f\u00f8\u0184\u00fc\u0103\u00bd\u00cc\u0123\\x93\\x9c\ud882\udd04\u016f\u0106\\x8d\u00d5\u0168\u0165\\uee11\u00e9\ud820\udff0\u0136\u015d\ud85e\udc71\u012f\ud805\ude52\\x9f\u0159\\U00019120\u00ca\u014d\ud822\udf1b\u0160\u0166\u0144\u0168\\x88\u0155\u013a\\U00033ab0\u00f2\u00a6\u0149\u0172\u0157\u00bb\u0156\u0103\ud804\ude3d\u00f8\\x8c\u0141\u0127\u0174\u00ce\u010c\u013f\u0169\u00fb\u014d\u0133\\x8a\u0107\u017f\ud806\ude9f\u0158\u00e3\u0119\u00e6\u00e0\u0119\u010a\u00fd\\x8d\u0136\u0182\u0172\\U00038d3b\ud876\udc2c\u0157\u02f6\u0154\ud85a\udf60\u0137\u0103\u0166\\x99\u011c\u0102\\U000198d3\ud844\udd88\ud862\udee6\ud809\udd26\u0151\u017d\u0170\\U0001c6c5\u00d4\u0166\ud843\udf48\u00d1',\n          constraints={'intervals': IntervalSet(\n               [(136, 1000), (59596, 239305)]),\n           'min_size': 48,\n           'max_size': 148},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb5\\x04\\x93X',\n          constraints={'min_size': 0, 'max_size': 46},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.02217361117325201},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-13851,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 30917,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='(\\U00038ca6\\x89\\x169)\\x9e!\\U000d7782)\\U000dc846\\x95\\x16\\x04\\U0003b8b9M\\U00098420',\n       run_start=4.100455335471439e+75,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e7\u00ec': 22456,\n        '\\U000a183c^0f`\u00daX\u00a8\u00e6': -332016682205801.0,\n        'I\\U000dc0c7\u00ec3\ua1b7Pw\\U000c3f8eZ\u00a2\u00f0\u00beb3\u00ee\\x0c:\\x89o:\\U000e0c47\\xa0\u00c4': -6_949_880_684_404_613_707,\n        '': -3.293112049303508e+16,\n        '\\x9a\\x05\\x08j\\x19\\x8aJ\\U0001dec5\u00a2\u00a9\\xad\u00d0\ud876\ude63': 1.8435369291636433e-76,\n        '\u00a8\\U0003b0e8\\x93\u9c78f\\U0006e03a\u00f1\u00d7\u00fb\u00d1': 98,\n        '\\U000f7737<\"q\ud835\udfc3\u00aa\u00fbb\u00eez\\x14\\x8e[\u00e4R\\U000679e0\\t': -6.197235750229625e+236,\n        '\\U000eee83\\x8b\u00f6\\U000ff7c4rg_\\U0008fe2a@7': -inf,\n        '+\\x05A\\U000aeb52': -1.805333535100124e+16,\n        '\u00f2': -3.2841561297619504e-131,\n        '\\x1f\u00eb\\U000eab421\\x80\u00d2\u00b9\u00eb\u00cd\\xa0\\U000c7589': 127,\n        '=&\\U000f45ba': -2.00001,\n        '\\x11S}': 39_014_287_694_660_731_725_251_825_732_200_500_655,\n        '\\x91\\U000ecdad': 11,\n        'I/A\u00fb\\U0009e7a9F0\\x83\u00f7': 2.549161158809478e-05,\n        '\\U000b462a\u00f6\ud857\udc46B,\\x19\\x81\\x13(8b\\x05\u00d4a\\x0e\u00c6d\\U0009a6e7;\u00d6\u00e2x\\U000a6f18X': 28129,\n        '\u00b9\\tg\\U000943a3': -13373,\n        '\\U000e3e39': -120,\n        '\u00d7\u00f3': -6.183795813766498e+16},\n       coverage={'\\U00109d09\u00e7D\\x1e': [-593763321, 4349, -83],\n        '': [],\n        '>\\U000ff15a\u00c9\\U000ad1a2': [28780,\n         2_647_852_430_692_956_855,\n         24955,\n         26632,\n         145_672_416_201_424_145_781_808_984_383_598_275_118,\n         -31374]},\n       timing={'\\x8d\u00a8\\x99\ud882\udf87\u00ab3': -5050080065059392.0,\n        '': -2.646273677195607e+16,\n        '\\x07\\U000ca1dd': 6.103515625e-05,\n        '\u023a': 7.164053920683356e+16,\n        '2\u00e9\\x19w\\U000c422c\\U0006d746\\U000c8665\\x08': 1.7976931348623157e+308,\n        'b||': -4.938592989975224e-204},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -7.708074061775868e+304,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 5.960464477539063e-08},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='w',\n       run_start=-3.5145931139776405e-193,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1e\\U000dfa55\\x9c': 102623812.41981524,\n        '': inf,\n        '\\U000605f9\\uf07a\u7103\\x93\u00b9\\x0en': -5.9024544475730056e+16,\n        'D\\x94\u00a3\u00f1\\x87\\xad\\U000eee0e\\x1e': -3.587690448085959e+16,\n        '\u00c9': -5.478608076453551e+74,\n        '\\x83\\U0008fb99.\\U0002fcdf\u00b0O\u00a2\u00d2\\x87\u00b3\u00ba': 49},\n       coverage=None,\n       timing={'Q\\x8a\u00d8\\x07\\x92\\U000bf9d0\\x86O\\xad': -2.450207258639841e-60,\n        '': 1.0213087375459752e+250,\n        '\u00ce7\\U00015bb6': -3.928024994638069e+16,\n        'D\\U000a3716\\U000a4694\u00b4:Qe\u00f2\\U000da486\ud80c\udd02\\U0003a753Vn\u00fe': 331386393389331.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=30177, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 2, 0), ('c', 1, 0)),\n                 (('b', 3, 1), ('c', 0, 2)),\n                 (('b', 3, 1), ('c', 2, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='!8`\\x17\u00eb\\U0003b5f3\\x16l\\U0006fabe\\x0cx:\\x12u\\x95\u00ba',\n       run_start=1.123053765186184e-129,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'3\\U00049a5e\\U00099a71\u00e3%\\x12\\r\u00d3': -16665,\n        '': 11266511.98814215},\n       coverage={},\n       timing={'7{n\\x04\u00cf\\U000a8eb4\u00bf\\\\l\\U0008ca07\u00a6\\x07t\\U0005947a\\x9f\u00a6\u00ae\u00d7\u00ce\\U00083402\\U000ca3a0\u00c8\u00cap\\U0006d5eb\\x95': -3.651941218050901e+16,\n        '\u00f6\u00e6\ud83e\uddab\u00abHY': -2.3481892960044816e+16,\n        '': -4.370120371739487e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-149032225834431223902913637035166133117, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('a', 2, 1)),\n                 (('a', 2, 3), ('b', 2, 3)),\n                 (('b', 1, 1), ('b', 3, 0)),\n                 (('b', 2, 3), ('b', 2, 1)),\n                 (('c', 0, 2), ('c', 3, 2)),\n                 (('c', 0, 3), ('c', 2, 0)),\n                 (('c', 1, 1), ('c', 1, 1)),\n                 (('c', 1, 2), ('a', 0, 2)),\n                 (('c', 2, 1), ('b', 3, 1)),\n                 (('c', 2, 1), ('c', 3, 2)),\n                 (('c', 2, 2), ('a', 0, 1)),\n                 (('c', 3, 3), ('a', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='V',\n       run_start=-4.4920558835638904e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00dff?]': -20,\n        '\u00ff': -2.5483865063307416e+16,\n        'N': -2.8127136004379117e-242,\n        '\\x96\u00e7\\U000d0af8\\x1a\u00f7\u00ed\\x8f;\\x04\u00ea\\x07': 32},\n       coverage=None,\n       timing={'#E\\U0008bb77\u00d5\\x00.2\u00a4': 5514868591540774.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=30751, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=55090,\n          constraints={'min_value': 31580,\n           'max_value': 9_155_363_730_502_505_252,\n           'shrink_towards': -3_169_664_023_807_309_032,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 2.242515984809051e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.29363111636353284},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf8\\xd3@\\xc1\\x0f\\x00\\xe1\\xeb\\x9b\\x90\\xadn{B\\x98\\x88\\x1eC\\xc3|\\xec2t\\x99\\xd8w\\x9e\\xae\\xa8}',\n          constraints={'min_size': 23, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 5168835541232523.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6825876919910457},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-614_331_689_546_438_044,\n          constraints={'min_value': None,\n           'max_value': -614_331_689_546_438_018,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 3, 1)),\n                 (('a', 1, 0), ('b', 0, 0)),\n                 (('a', 3, 0), ('b', 2, 0)),\n                 (('b', 0, 2), ('c', 1, 1)),\n                 (('b', 1, 0), ('b', 0, 3)),\n                 (('b', 2, 2), ('c', 0, 3)),\n                 (('b', 3, 0), ('c', 1, 0)),\n                 (('b', 3, 1), ('a', 3, 2)),\n                 (('b', 3, 1), ('b', 1, 1)),\n                 (('c', 0, 0), ('c', 0, 0)),\n                 (('c', 0, 2), ('c', 2, 3)),\n                 (('c', 0, 3), ('a', 0, 0)),\n                 (('c', 1, 0), ('a', 0, 2)),\n                 (('c', 3, 2), ('b', 0, 1)),\n                 (('c', 3, 3), ('c', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00e7N\\U0007797a\u00fayb\\U000cf916\\x10b\\x9f',\n       run_start=1.1816937537311273e-120,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'false': -13055, '9\u00d4': 6.712700823757483e+171},\n       coverage={'\\U0010abe0\\U00077c78\\n5': [],\n        '\u00d3\\x99\u00a9\u00ee\u00d0': [-131_866_921_303_585_408_000_942_265_804_057_904_162,\n         -7361,\n         -657],\n        'Y\\x12\\U0008869a\u00ff\u00b5\u00d2': [-2612],\n        '': [49, -30832, -11946],\n        '\\U00048b2aV\u00d9': [21498, -15881],\n        '0\u00ec}\\x12': [-30466, 16868, -93, 8167, -25119, 36],\n        '\\x06\\x1e\\U000d6a1e\\x1a\\U000b758f\u00ddM~\\x85\\U0004729e\u00a7\\x00': [26637,\n         240,\n         -22383,\n         3_845_835_733_685_096_194,\n         20286,\n         16819],\n        'B': [6925, -12821],\n        '\\U0004b50d\ud84f\udd66\\U00094089\u00c3': [-22378,\n         -32513,\n         24,\n         -18658,\n         -54,\n         2987,\n         -30113,\n         -39,\n         6394,\n         238_762_349_467_814_072,\n         172800,\n         -31618,\n         -2761,\n         -94,\n         1664,\n         -1_215_077_214,\n         19338,\n         3600,\n         31195,\n         1676,\n         20441,\n         16295,\n         28159],\n        '\\x94\\x19\\x9a\u00f6': [],\n        '\\U000ab6d0': [],\n        '\\U000fc716\\U00080bf7': [6_218_060_441_552_922_036,\n         3489,\n         97,\n         24251,\n         14546],\n        '\u00ef': [],\n        '\\x86p\\x8aAX2X': [106, -42]},\n       timing={'\u00ae': 2.6536908001594103e+278,\n        'L\u00a5gO\\U000d1838': -1.2847079633570331e+225,\n        '\\U000d1d4c\\U000f909by\u00b8\\x92\\U0004da11\\x1c\\U0010d12b\u00d7!\u00c6\\x0e\\U000c6e73\u00be\\U000aceff\\x04CD\\x88\u00e1S': 1.0,\n        '\\U0010ef4d\\n\u00cbk\u00ac\\U00107550\ud843\udd1c': -2.480374910992715e+41,\n        'lorem \u0644\u0627 \u0628\u0633\u0645 \u0627\u0644\u0644\u0647 ipsum \u4f60\u597d1234\u4f60\u597d': -707036184000083.0,\n        '(\\x81': 3.965119403158432e+16,\n        '\u00ac\u00ec\u00a7\\U000c1e73\u00fb\u00ed\u00a9': 2.3186832101218316e-210,\n        '\\x06\u00ee': -4.337924297073959e-284,\n        '\u00c8\\U00064823\\x81\\U000f3407\\U000ba386\\U00084e63\u00fa\u00a5\u00b9\\x0e': -4.612691784197215e+16,\n        '~\\x0f+\\U00089072\\x03': 3.924040630024654e+16,\n        '&': 2.876659868933714e+16,\n        '\\x7f\\U000c03bb': 9.32275442664095e-144,\n        '': -6.010859465400101e+16,\n        '\u7656\u00e2\\x95': -1.1939347186768036e-68,\n        '\\U000a9990': -2.0443571892759252e+16,\n        '\\U000918d2\\U000ef0d9\\x88\u00c8\u00d7\u00d0\\U000a603a\u00d0\\x15\u00b9-NW\\x96\\U000a6574\u00fadq\\x9e\\x8a\u00f2\u00a2\\U00050e28': -9007199254740992.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-580498309, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=10,\n          constraints={'min_value': -6761,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.537691613312927e+308,\n          constraints={'min_value': 3263203763752375.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5314870024397925},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe7\\xa04\\x803i\\x7f\\xc5\\x9c\\xf9\\xfd\\xf5Ksu\\x06.\\x1ek\\xc9Q\\xa4\\xe8\\x8f\\x10u\\x93\\x04\\xa6\\xd1\\xc5\\xd5F\\x12%iu\\xcb\\xfe\\n\\xdf\\x00\\xea7\\xf4\\xa7\\xbc,\\x80\\x00r9\\xf0\\xe0?g\\xd1\\x9a\\xdb\\xa3\\x06\\xb7\\x07\\x01\\xb1\\xdb|\\xce\\xb6\\xa5\\x99\\xae\\xcbQt\\x19e\\xbd,\\t\\xed\\xa9\\xb7\\x81\\xe5\\xb1i\\xe0\\x0f\\xe8\\'\\xc2\\xd2\\x15\\x1a\\xd2\\xf9\\xc6\\x04\\xb0\\xe9PT\\xed\\xddyp\"\\xe9\\xa7+\\xfdU\\xc6V\\xad\\x9f|\\xef\\xefegfU\\xc2\\xf8\\xc2\"\\x8b\\x02,\\xf8',\n          constraints={'min_size': 49, 'max_size': 149},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'Q\\x96\\x87\\x85\\xf1t\\x84\\t\\xdblL\\x868\\xaf1UC/\\xc2\\xec',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.1},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=32345,\n          constraints={'min_value': 9447,\n           'max_value': None,\n           'shrink_towards': -3_132_051_965_110_582_044,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-26391,\n          constraints={'min_value': None,\n           'max_value': 8071,\n           'shrink_towards': -6486,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.20096580009009563},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('a', 1, 0)),\n                 (('b', 0, 2), ('c', 3, 1)),\n                 (('b', 2, 3), ('a', 3, 2)),\n                 (('c', 0, 2), ('b', 3, 0)),\n                 (('c', 0, 3), ('c', 2, 1)),\n                 (('c', 2, 3), ('a', 3, 3)),\n                 (('c', 3, 1), ('b', 3, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u6efc',\n       run_start=-2.3941547312394376e+95,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'!\ud821\udc46\u00bb\u00fcoV\\U0003342b\\xa0\\t\u00b4V\u00c2\\x9c\u00edf}\\U00099596\u00d8': 84,\n        '1': -9_081_710_688_602_733_108,\n        'V\\x8e\\U00107c37t\u00f0\u00e1\\x94': 45,\n        '\u00aa': 23837},\n       coverage=None,\n       timing={'\u00b2\\x06Hh': -3500871947759102.0,\n        '\\U0006a9be\\x15\u00cc_': -2.8909913416640615e-294},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-17, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1_641_586_913,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-5933,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 0.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 8.621639101158099e-234},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud808\udf5e\ud808\udf5e\ud808\udf6b\ud808\udf39\ud808\udf4a\ud808\udec8\ud808\udf11\ud808\udedc\ud808\udec4\ud808\udf80\ud808\udf96\ud808\udf22\ud808\udeff\ud808\udf1d\ud808\udf33\ud808\udeda\ud808\udf5d\ud808\udf21\\U0001239d\ud808\udeb5\ud808\udf42\ud808\udf6a\ud808\udf4b\ud808\udecf\ud808\udf15\ud808\udf85\ud808\udf40\ud808\udf2e\ud808\udec6\\U000b8a7a\ud808\udece\ud808\udf89\ud808\udf72\ud808\udf0e\ud808\udede\ud808\udf43\\U000123a5\ud808\udef6\ud808\udf63\ud808\udf43\ud808\udf2b\ud808\udf5c\ud808\udf0e\\U00040eaf\\U000123a1\\U0004d184\\U00045429\ud808\udf38\ud808\udf0b\ud808\uded8\ud808\udf88\ud808\udf17\ud808\udf86\ud808\udef9\ud808\udf41\ud808\udf1f\ud808\udf4b\ud808\udf6e\ud808\udf5e\ud808\udef0\\U000123a8\ud808\udec6\ud808\udf18\ud808\udec1\ud808\udf4d\ud808\udec0',\n          constraints={'intervals': IntervalSet(\n               [(74412, 89446),\n                (165526, 332068),\n                (415299, 424318),\n                (605390, 720417),\n                (746092, 763538),\n                (777747, 802766)],\n           ),\n           'min_size': 46,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.2645577293936217},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\uaf0c\uaede\uaf23\uaf75\uaea3\uaf1d\uae99\uaf59\uaf0e\uaefc\\U000194f3\uaf10\uaea0\uaebe\uaefb\uaf22\\U000d040a\uaf48\uaeb7\uaf39\uaebe\ud84b\udd82\\U0006f8eb\\U000877a4\uaee6\uaf45\uaf71\uaf67\uaf1c\uae83\uaf38\uae86\uaf20\uaed2\uaf76\\U000e3fa7\uaf0e\uaf04\uaf75\uaf21\uaeb5\uaf22\uaed7\uaf5a\uaf3b\uae90\uae85\\U00063bb1\\U0003c93b\\U000e5d38\uae84\uaf3d\uaf52\\U00041dfb\uaeea\uaeb8\\U00107920\uae8e\uae87\uaf13\uaec0\\U00081890\uaee6\uaec0\\U000d184b\uaf6c\uaef7\\U00044b4b\uaf00\uae83\uaf0f\uae94\uae8c\\U0004e95a\uaf28\uaef8\\U000479c7\uaea6\uaee5\uaf10\uaf1e\uaf40\uaf4b\uaf60\uae8f\\U00072dee\\U0008b2fa\uaec4\uaeca\uaead\uaeaf\uaf42\\U000baf24\uaf1e\uaf5c\uaef7\\U00049c8e\uae86\uaee2\\U0005d73c\uaf3a\\U00012e79\uaf0e\uaf27\uae8d\\U000cdbef\\U001015e9\uaf21\\U000ccaf4\uaf32\\uea60\uaeac\uaea7\uaeda\\U0006d453\\U0007de23\uaf11\uaf1e\uaf53\uaf22\\U000c85e6\uaed3\uaed3\uaf79\\U000ebe07\\U000d68bb\uaf1f\uaed6\\U000f426e\\U0001c859\uaec7\uaebe\uae88\uaf5b\uaf3a\uaeac\uaecd\uaf23\uaeea\uaeca\\U0003b419\uaefd',\n          constraints={'intervals': IntervalSet(\n               [(44671, 143161), (223245, 584838), (762661, 1080174)],\n           ), 'min_size': 30, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0003cba8\\U0003cc39\\U0003cc0d\\U0003cc64\\U0003cc2c\\U0003cbb1\\U0003cc48\\U0003cb7a\\U0007ae21\\U0003cc76\\U0003cc0f\\U00055b53\\U0003cbaa\\U0003cbd7\\U0003cc62\\U0003cc75\\U0006045d\\U0003cbc1\\U0003cb8f\\U0003cbbe\\U0003cc10\\U00092af2\\U0003cc34\\U0003cbdf\\U0003cc60\\U000d12fd\\U0003cc06\\U0003cc62\\U0003cbb8\\U0003cb7f\\U000cb87b\\U0003cc14\\U0005b5e2\\U0003cc59\\U0003cc42\\U00042c98\\U000c9ff8\\U0003cb8d\\U0003cc35\\U0003cbde\\U0003cbd8\\U0003cc6b\\U000bf87f\\U0003cbc1\\U000cadaf\\U0003cc33\\U000be9af\\U0003cb80\\U0003cc29\\U0003cbd6\\U0003cbab\\U0005e727\\U00077d3b\\U0003cc40\\U0003cc59\\U0003cbc4\\U0003cc22\\U00048d6d\\U0003cc5a\\U0003cb93\\U0003cbac\\U0003cbcc\\U0003cc08\\U0009a747\\U0003cc03\\U0003cc6c\\U0005eab4\\U0003cbbe\\U0003cbba\\U00059299\\U0003cb97\\U0003cb7d\\U0003cc77\\U0003cc44\\U000501b4\\U0003cba0\\U00046e98\\U0003cc59\\U0003cc42\\U0003cbfa\\U0003cc43\\U0003cb83\\U0003cc30\\U000c6baf\\U0003cbe1\\U0003cbed\\U0003cb9d\\U0003cbe4\\U0003cc1a\\U0003cb79\\U0003cc14\\U0003cc74\\U0003cbac\\U0003cb89\\U0003cbcc\\U000a8e32\\U0003cb96\\U0003cbbf',\n          constraints={'intervals': IntervalSet([(248697, 915361)]),\n           'min_size': 49,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=6543,\n          constraints={'min_value': -6_495_161_485_724_802_873,\n           'max_value': None,\n           'shrink_towards': 28876,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.092918245006215e+16,\n          constraints={'min_value': -1137448641738639.0,\n           'max_value': 5.600015554730948e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9869492118271406},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0816\u0844\u0810\u087f\u07f0\u07c7\u0875\u083c\ud83c\udccb\u0842\u0804\u07a4\u0867\u07eb\\U000aeced\u07d5\u0878\u084b\u07ff\u087e\u0874\u0834\u0830\\u07b6\u084b\u0803\u0844\u0788\u07f4\u07e3\u084b\u0836\\U000f3763\\U0004e333\u0874\u084d\u0859\\U00085b54\u0828\\u086d\u079f\u07d3\u0853\u07c6\u080e\u0856\u07f4\u0830\\U000e9e04\u087d\u0858\\U00016d3e\u080d\u0813\u0870\u0830\u07e6\u081f\u0792\u07ff\\U0006363b\\U000cac1d\u0801\\U000ca8cc\u0812\u07ff\u081c\\U000cec2e\u0827\\u07b8\\U00014863\\u07be\u07ec\u081f\\U0004fa55\u0846\\U0001365d\u087f\u07f6\\U00060bd0\u0793\u07e6\u086a\u0872\u0795\u0808\u07cb\\u07ba\u0816\\U00096f99\u07de\\U00012e29\\U000624e1\\u07b3\u0837\\U00012b3e\\U000f168c\\U000ac06c\\U00015099\\u07be\u07c1\\U0004e954\u078c\u07c9',\n          constraints={'intervals': IntervalSet(\n               [(1921, 6005),\n                (65535, 127929),\n                (307556, 441969),\n                (501600, 651757),\n                (666380, 761534),\n                (780876, 811765),\n                (828955, 840735),\n                (845683, 858535),\n                (948716, 999072),\n                (1042723, 1059979)],\n           ),\n           'min_size': 37,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -6.714621872641074e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5684716659671952},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u5ee7\u5f11\u5ec5\u6e1c\\U00044d9a\u5f52\\U0004f335\u5f02\u5f7a\u5f03\u5f80\u5f10\u5eac\\U00086cde\\U0003d86b\\U0005fef1\u5f86\\U000818c8\u5f45\u5eea\u5ee8\u5ef4\u5f7b\u5f78\u5f40\u5ef3\\U000498d2\u5f08\u5f43\u5e9c\u5f0f\\U00064b0f\ud87a\udf91\u5e98\u5ebd\u5f0c\u5ef1\ud848\udcb3\u5f54\u5f42\u5f54\u5ef3\u5f50\\U0004b6be\u5ea7\u5f14\\U0004f143\u5f81\u5ea2\u5f7b\ud855\ude1b\\ue9f7\u5f61\\U00033e4d\u5f17\u5f13\u5f2c\u5f23\u5ea3\\U0008689b\u5f05\\U00035bc0\u5f43\u5ecc\u5f03\\U000664a4\ud85f\udc4c\u5f17\u5ec5\u5ee4\u5f91\u5f0d',\n          constraints={'intervals': IntervalSet([(24212, 566281)]),\n           'min_size': 36,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='3\\U00012752\u00a6\\x18:',\n          constraints={'intervals': IntervalSet([(1, 90715)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.4535470939596361},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0339000581568494e+308,\n          constraints={'min_value': 4.228680193181737e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.2817458274335554},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'L\\xf1\\xd3\\xbf&\\x8c\\xf9\\xacR\\xbfXX\\xa9aL\\xf0VV\\x14',\n          constraints={'min_size': 19, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=723,\n          constraints={'min_value': None,\n           'max_value': 29274,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=22,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.770085369066703e+307,\n          constraints={'min_value': 1e-06,\n           'max_value': 6.914025141311172e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5942670861801415},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -5.147381082665817e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6355269560414915},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.4218743914040616},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0001381a~\\x99D\\x1c',\n       run_start=2.106364644943009e+86,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\ud811\ude01\u00b4\\U000bb452\u00ce': 0.0,\n        '': 408,\n        'Q$\\U001065ccCIN\\U000d574b\u00fb\\U000bb1e5': 0.0001,\n        'D\\U000693d0\u00c1\\x1a\\x90\\x01': -23137,\n        'Y\u00ec\u00ed': 0.0,\n        'z\u00f6^\\x83\\U000a3ea9.\\U000f3f99\u00d1\u00e0\u00db\u00f6\\x11N0\\U000fa0b2%B\\x90\u00e1\\x99\uae4eB': -12024,\n        '\u00a7\u00f9': 5.177847854416226e+24,\n        '\\U000a5088d': 24816,\n        '\ud85b\ude60\\U0007bc53': 7.080575067644166e+257,\n        '\\x0f': -1048776719827.446},\n       coverage={},\n       timing={'\\x0c\u00d29D*\\x1a\\n\\x10\\x7f\\n\\x00': 1.175494351e-38,\n        '\u00d7\\x90\ud865\udd7e*\\U0007c65a': 2.1924742842256348e+16,\n        'b': 3.6806477037850583e+121,\n        '\\x04\\U000c73aa\\x1d': -5.463763038574919e+57,\n        '\u00ae\u00dd\\x7f\ud81d\udc3bc\\x7f\u00b7`t(': -6.554657761078479e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=32738, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xc3\\xb2$k\\xb9<N\\x85\\xf11\\x1f\\xd7\\xe8\\xbe5\\x04\\xd3\\xc7\\xc4:\\xf8s\\xb3\\xd3\\xeav&\\xe0A\\xdb\\xb2\\x18\\xfa\\x00\\xb1B\\xe1\\xa6\\xdeQ\\xb1\\x18\\xed\\x88\\x1c8P`c(\\xf0\\xd3\\n\\xdc\\x9a\\x93_\\x17',\n          constraints={'min_size': 21, 'max_size': 121},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xa2\\xd7\\xca\\xf6\\x81\\xc9^',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.3162678214273775e-68},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00f8N\\x99\u00c2E.m\\x88)',\n       run_start=-3.594285390964742e+126,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={'(null)': 6.81893812298872e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-46, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x81%G\\x95mO\\xd8\\xa0\\x01\\x83' `.\\x84\\x1e\\xfe\\xf0\\xde\\xef\\x13\\xe4\\x1fw\\xba\\x1f\\xbf\\x81\\x82I>\\xa4\\xac|\\xef\\x0cMZI\\xa0\\x85\\xf8\\xb4O\\x9f \\x05\\xe4ng\\xe4\\xb5lc\\xd7?\\xc8-\\xff\\xa2\\x12\\xc3U\\xe1`},\\xab\\x89\",\n          constraints={'min_size': 30, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 146},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=167_733_742_559_074_249_047_104_236_574_076_664_218,\n          constraints={'min_value': -1_578_141_756,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=100,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud83c\uddfa\ud83c\uddf8',\n          constraints={'intervals': IntervalSet(\n               [(15812, 40714),\n                (71473, 72012),\n                (111504, 213059),\n                (316490, 328802),\n                (334182, 387775),\n                (425664, 454340),\n                (563543, 588506),\n                (612146, 658312),\n                (667992, 686908),\n                (742455, 762506),\n                (867377, 918196),\n                (972812, 1043200)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.890035504300384},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'C\\x9e\\xe2\\xb0,<',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=27151,\n          constraints={'min_value': 27092,\n           'max_value': 27153,\n           'shrink_towards': 0,\n           'weights': {27151: 0.1536973291861756, 27142: 0.10246488612411705}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-20,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.1446748174432886},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=21,\n          constraints={'min_value': None,\n           'max_value': 24898,\n           'shrink_towards': -5_100_810_633_994_104_134,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00063247\\U00063234\\U000631f4\\U000631e5\\U00063274\\U0006322a\\U00063242\\U000632cf\\U00063247\\U00063260\\U000bb41f\\U000631e6\\U00063224\\U000631e8\\U0006329d\\U00072d6d\\U000631e5\\U000632d3\\U00063202\\U000e85ce\\U000631ea\\U00099f7e\\U0006dd3e\\U00063273\\U0006c2fc\\U00063205\\U0006329d\\U000632a2',\n          constraints={'intervals': IntervalSet(\n               [(405984, 672057), (745264, 1093359)],\n           ), 'min_size': 26, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.45730368553415246},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5513656276838604},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-9007199254740992.0,\n          constraints={'min_value': -inf,\n           'max_value': 4.377202098665231e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8736010734910706},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 3, 1)),\n                 (('a', 0, 3), ('b', 2, 0)),\n                 (('b', 1, 1), ('a', 2, 3)),\n                 (('b', 1, 1), ('a', 3, 0)),\n                 (('b', 1, 3), ('c', 1, 1)),\n                 (('b', 2, 3), ('b', 0, 3)),\n                 (('c', 0, 1), ('a', 1, 0)),\n                 (('c', 2, 1), ('b', 0, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='h\\x03a\\U00076311G\u00b4\\U000b3873\\U0009f1c1\u00ab\u00ae\\x88',\n       run_start=5.832864342568995e-26,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'d': [-3190, 98, 12606, -27672, 14180],\n        '\ud858\udc11v\\U000eb65aT': [100, 25200, 22877],\n        '\\U0008a40a_\\U000a09aeX\u00c1\ud870\udfd0': [11740, -998],\n        '\u00a6\u00be\\x06s\\x88\u00ba#': [24292, 29584, -6920],\n        'C\\x8f\\x1e': [-100,\n         512,\n         5_829_490_775_200_778_792,\n         -18205,\n         -14441,\n         32397,\n         -28433,\n         3778],\n        '\\U000ceb58\\U0003baf4\\U000810e2\\x81\\U0003cc56~\\U000f120a\u00a1\\U000607c7\\x18\\x9c\u00b0=\u00a6\u00da\u00fe\\xad\u00fd\\xa0&\\x8b&)\\x16E': [-8034,\n         420],\n        'pS\\x84\\U00068e0f\u00ca\u00ab\\U00096ba2\\U0008d6b7\u00c5~\\x8fK\\U0009d3a3\\U000ca416': [31349,\n         52,\n         -17582,\n         26294],\n        '\u00fe\u00c9\\x1bX': [-5023, -23817],\n        '.&3m\"\\x1c\\U000d498f\\x96L': [15082, 15943, -97, -6],\n        'M\u00e4': [-8, 653, -6_245_280_023_178_954_063, 1422, -80, -26320],\n        '': [448, 9749],\n        '*\\U0007b059\\U00038fd7\\x0f': [-72,\n         8,\n         8203,\n         -13066,\n         -22686,\n         -11,\n         -9_142_117_303_645_538_622,\n         501522694],\n        '#]\u00fb=}': [4992],\n        '\\x1du+\\x7f\u00d3?\u00eb\u00a2(\\x8b': [-7_615_933_446_416_209_670],\n        '\u00e2\\x7f': [-6357,\n         79_697_715_965_798_245_510_788_924_321_591_649_974,\n         -7827],\n        '\\U000a241e\\x05\u00dd\\x1f\u00f5': [-4256,\n         -54,\n         -5455,\n         126,\n         6_487_684_751_004_737_741,\n         55,\n         4085,\n         21611,\n         90,\n         -23857,\n         -31628,\n         -9_922_377_438_634_995_139_560_297_372_641_249_356,\n         127,\n         3_873_632_937_340_209_423,\n         300],\n        '\\x17\\U00012b6b\\xad\ud883\udc4f6': [-12184]},\n       timing={'\\U000c2b8e': -4.2586344502231e+16,\n        '\\x9b\\x9a\\x16\\U0008f610\\U000c0f22\u00de\\xad\u00a8\\x93\\x1b\\U0005640b\\x1c\u00a8\u00c8\\U0006cbfe\\x91\u00e3': 7.130726579791337e-260,\n        '\u00d7\\x06': 1.5537139694594644e+16,\n        '6\\x82\u00c1;\\x7f': -6.167799016906157e+16,\n        '\u00bf\\x91\u00bf\u00ee<\\x97\\x12': -3.0482125109085755e+61,\n        '\u00bcf\u00a5': -8.117288869653036e+227,\n        '+': -5.422813787220552e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-18, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.0750525413363515e-133},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8212,\n          constraints={'min_value': 8092,\n           'max_value': None,\n           'shrink_towards': 8547,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-6.67679202337178e+16,\n          constraints={'min_value': -inf,\n           'max_value': -4.682210441945493e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.001},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.6229075025237076e+16,\n          constraints={'min_value': -inf,\n           'max_value': -2.8890625872801474e-84,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.0001},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.627795310563618e+308,\n          constraints={'min_value': 2.1314024989462355e+264,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3364296175709461},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.018847295024897903,
          "overall:gc": 0.007285872008651495,
          "generate:args": 0.12180828786222264
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287664.537898208,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u00da',\n       run_start=6.0974201031205576e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00050536bD\u00f1?\\x81\u00c4\u00acM': 2.0426507238869312e+33},\n       coverage={'x|\u00a5\u00d1\\U000361ef\\U00077bf0\\x18\\x8d\u00c6': [21194,\n         -33,\n         -22,\n         12821,\n         31793,\n         -113],\n        'u\\x82r\\x95\\U000ede5e\\x83\\x7f\\U00054fb8\\x14D\u00e9\u00dc\\x8a': [-9597,\n         -31130,\n         -934703952,\n         3897]},\n       timing={'\\x03\u00f1\\x01\ud820\udc19': 6.212915982048837e+231,\n        '\\x85': -1.5413169741200555e-256,\n        '\u00c0\\x07': -3.926297273847067e+16,\n        '\u00fc$Y\\x8d\\U0006023b\\x1e\u00fd\\U000a5562\\x86': 2.2332236416107295e+120,\n        '\u00b5\u8953\\x9f\u00d6\\U000ba153\\x17': 3.902603178234631e+16,\n        '\u00b1': 0.01},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-71, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=7504565158000329.0,\n          constraints={'min_value': 1.1754943508222875e-38,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7050056311282585},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1_458_355_488,\n          constraints={'min_value': 29,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='|\u00c4\\x10\\U00074ac08p\u00d6\u00d0\\n7\\U00075a3d\\x9c\\U00066bdaPG\u00df\u00ae\u00d6\\U000ceed1',\n       run_start=-1.530563064957493e+147,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-2936, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('b', 0, 2)),\n                 (('a', 3, 2), ('c', 0, 3)),\n                 (('b', 1, 0), ('b', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='U\u00ef{\u00d3\ud809\udc65z\\x02\\x16',\n       run_start=1.0959060757701148e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'E': 1_344_501_023_479_686_904,\n        '\\U000d360c\\x9d\u00e1<\\x94': -27836,\n        '\\x01\"\u00af\u00d9\\U000a7466': -7.047169162182688e+16,\n        '}\\x00': -6.5482349227202024e+16,\n        '0\\x03]\u00cc\u00e1': -306718869,\n        '\u00b5:\\x958\\U0005cf77W': -2.789132631335664e+16},\n       coverage={'ZK\u00cd/Ow\\U000bfa96e\u00ef\ud846\udf5b(\u00a4W': [-12649,\n         -20717,\n         -13761,\n         -15_032_286_652_926_428_835_570_528_901_897_405_902,\n         30525],\n        ',5|\u00ae\\x95': [1_625_525_415_700_324_046, 916],\n        '\\x15': [109, 19967, 574, -65, -68, -4278, -9814, -8460, -29981],\n        '\u00df': [8141, 29031, 27748, -4_953_952_705_760_034_554, -38, -20188],\n        '\\x02\\\\-o\u00bao\u00c9\u00bc\\x92\ud84d\udf01\u00a3\u00b4': [770546108,\n         -16720,\n         -28905,\n         3586,\n         7_576_621_385_419_040_527,\n         -28246,\n         -86_355_190_825_358_170_613_913_689_481_397_732_412,\n         -20400,\n         2482,\n         37,\n         -36,\n         23,\n         -57,\n         15607,\n         -76,\n         -17198,\n         23932,\n         75,\n         448],\n        '': [53, 27824, -742, 7010, -2_120_030_805, 64, -66, 54],\n        '\\x13A\u00aa\\x0f\u00e7\\U00034d03\u00ec': [-22600,\n         -114,\n         20602,\n         -21803,\n         -111,\n         22570,\n         -1218,\n         -2197,\n         16766,\n         24254,\n         -999],\n        '\\U00096aef@\ud883\udc13': [-1_097_981_500,\n         1210,\n         -18_937_448_375_669_538_381_844_416_732_578_653_913,\n         106,\n         511,\n         -124,\n         -1_454_602_041],\n        'Ky\\x17*': [],\n        '\u00ea~-\\x1e\\x15\\x81\u00af\\U000f5323`\u00f3\u00f3': [-31_662_226_232_104_944_206_089_687_615_039_492_715,\n         -2607],\n        '#\\x1d\\U00035f2d\u00c4\\t\\U0005ea66F\u00ce\\x89-H\\x92eY!c\\x8d\\U000a300a\\x11\u00ab': [-104,\n         29075,\n         122,\n         -14622,\n         18,\n         -462_104_199_953_111_211,\n         -27442,\n         15372,\n         536892413,\n         35,\n         89,\n         -14987,\n         18832,\n         30004,\n         11435,\n         -6713,\n         113_943_335_115_904_049_168_965_946_241_268_840_960,\n         5,\n         0,\n         -1_484_592_959_159_208_569,\n         8,\n         19071,\n         -1_323_236_285_526_157_694],\n        'n\\U0010e22cb\\x8c\u00f8\u8a44\u00dbM\\U000ca8bfj\\U000a10f6y\\U000d5c62=\u00cc': [-77,\n         -14112],\n        '\\x05\u00cb\u00d6\ud835\udfe5\u00ec': [21717, -97, -11628, 71],\n        '\\U000cac71\\x89\u00fd\\U000cf813k\u00e0\\xa0\\x13\\x1b\\U00034947\\U00058a24': [-3817,\n         28454,\n         -13424,\n         -125,\n         -16,\n         -54,\n         -97_614_919_105_497_219_749_068_187_746_110_986_351,\n         -12728,\n         -3214],\n        '|': [-11628],\n        'v\u00d4': [61, 926, 27506, 977, 45, -12417],\n        '\u00f1j/C\u00f9': [20858,\n         -116_694_893_925_421_315_789_489_449_438_038_546_106,\n         68,\n         -7553,\n         112,\n         7_958_418_298_201_062_942],\n        '\u00ce\u00e9\\x90\u00f3\u00b6\u00a7\\x8dk\\x89\\U0003d263W\u00ac2\\x07': [-536969902],\n        '\\x8f': [-7830,\n         24204,\n         -48,\n         66,\n         -67,\n         -13016,\n         29705,\n         55,\n         23988,\n         -77_361_128_634_747_599_930_516_962_900_649_576_688,\n         28941,\n         17434,\n         17180,\n         -7300],\n        '\u00ba\\U00047779': [69,\n         14062,\n         20,\n         -8090,\n         -14315,\n         -3336,\n         8238,\n         8390,\n         5_863_181_891_138_667_060,\n         -3655,\n         -4963,\n         122,\n         -58_143_647_859_220_319_233_161_844_036_570_364_732,\n         -4543,\n         3281,\n         -659_196_914_468_124_509,\n         582974245,\n         -98_607_794_801_265_852_179_779_702_115_780_976_762,\n         7,\n         6_309_064_471_832_578_628,\n         -26679,\n         -21155],\n        '\\x030\u00cb=': []},\n       timing={'\\U00032c27\\U000e90a6\\U000c580c\ud872\udd5b\u00bd\\U001004bc\u00dc\\x83': 6.483766178754089e+16,\n        '\u00dd\\U000cdf06\u00ec\u00c0\\x15\u00edl\\x16\\x0f\u00bf8\\U000a56c1\u00e0\u00b5\u00a9Gq\u00a8\\U0003974a\\x94\u00fc\uc30f\u00d9': -1.3907175904678611e-204,\n        '\u00f5\\U001038a6\\U000bdf64\u00bd\u00f5\\x88\u00a8': 7.024772168662769e+16,\n        '\\U00093876\\xad\u00a4': 4.262014169030075e+194,\n        '\\x9a\\U000df5d8': 1.7976931348623157e+308},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=12579, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x82{'\\x8a\\xab\\xe4\\x11\\x07_\\xd5p\",\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf7ug5\\x04G(\\xcd\\x1e\\xf8',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1921,\n          constraints={'min_value': 69,\n           'max_value': None,\n           'shrink_towards': -23947,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.2903707676429064},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0039811189053580165,
          "overall:gc": 0.0019397560972720385,
          "generate:args": 0.014136290992610157
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287656.140906833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705, 2441, -107, 10403, 26717],\n        '\u00bb\u00d0a\u00e0\u00a1\\U000403cd\u00e8\\U00055ffd\u00ca\\U0003f81f': [8203, -370]},\n       timing={'5U\u00d6u$\u00d5\\x1c\\x1f\\x86v\u00ac\\U00073e01\\U000d0433': -5.393858695728212e-149,\n        '\\x14': 2.37534909157735e+46,\n        '9\u00e9': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('b', 2, 0)),\n                 (('a', 0, 3), ('c', 3, 1)),\n                 (('a', 1, 3), ('b', 2, 3)),\n                 (('a', 1, 3), ('c', 3, 2)),\n                 (('a', 3, 1), ('b', 0, 2)),\n                 (('b', 1, 1), ('c', 0, 0)),\n                 (('b', 1, 1), ('c', 2, 3)),\n                 (('b', 1, 3), ('c', 1, 1)),\n                 (('b', 2, 3), ('c', 3, 0)),\n                 (('c', 1, 0), ('a', 0, 1)),\n                 (('c', 1, 1), ('c', 1, 1)),\n                 (('c', 1, 2), ('c', 1, 0)),\n                 (('c', 2, 2), ('c', 1, 3)),\n                 (('c', 2, 3), ('a', 2, 3)),\n                 (('c', 3, 0), ('c', 0, 3)),\n                 (('c', 3, 2), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=' oA\u00c9\u00bd\\x08\\U000f9a8d\\U0009721cC\u00bbq\\U0008662b\u00a3\\x18\\U0006dc709\u00b2\\U000517cc\u00c1\\U00011b82\"\u00cb\\U0010e46b\\x1aR',\n       run_start=5.768257052343265e-204,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.1907422468139713e+138,\n        '\\U0008623a\\U0005ff85\u00b4\\U0003eec9\\xa0\\x05': -2.64781215206294e+16,\n        '3a\u00ed\\x9f\\x1d\u00a7\"\u00a7\\x7f': 6.967930858859344e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=24191, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.99999},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=6.744437843359338e+307,\n          constraints={'min_value': 10000000.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.29516777469785965},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9225384956742824},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.2608291740721434e+306,\n          constraints={'min_value': 1.2748946484354986e-181,\n           'max_value': 1.1227290873125523e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 7.387998543922075e-32},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.975186495588937e+307,\n          constraints={'min_value': -2.225073858507e-311,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5503739421945516},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u6773\u6707\u673f\u669a\\U001022cf\u6732\\U0006bd12\u66fe\u6773\u66d9\u66b1\u6713',\n          constraints={'intervals': IntervalSet(\n               [(26252, 42847),\n                (419924, 476040),\n                (688579, 839191),\n                (1034345, 1069293)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7023805461537623},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.109927555331627e+308,\n          constraints={'min_value': 6.568758115247808e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7303109221351659},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='!\u00df\u00b3',\n       run_start=-1.1076973152465351e+27,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d9\u00ec': 5.965436367886831e+16, '': -264},\n       coverage=None,\n       timing={'\u00ca': -1.1225287646764342e+16,\n        '': 7.159293216353477e-160,\n        'kf\u8a5d\ub88a\\U000d4bc1\\U000fdac5\u00f7P\\U000840fa\\x19:`\u00cf': -4.345746590885573e-242,\n        '\ud85f\udf22k}~\\x9f\u00ee': 6.380719469064172e+16,\n        '\\U000bedd5\u00c6\\x9be\\x07': 4.0698303031100996e+119,\n        '\\x9b\\x03\u00ac\\U000c6d13\\U0008af21J\\x03\\x9aw\\x0f\u00cdO\u00d8': -2.978274835995787e-305,\n        '\"\u5b5b\\U00075682\u00d7\\x93a\u00ee\u00eeZ': -6.0305982407563256e+16,\n        '\\x029\\U00064bb9\u00a7\\x01\u00da\u00dc': -1.556007188689906e+16,\n        '\u00b8\\n\u00ddZ\\xad<': 6.80455660372176e+16,\n        'I\u00f4\\x84': 1.1754943508222875e-38,\n        '\\U0008ef6a\\x84\u00da?\u00cd\\x7f5\\uec3a^\\t': 0.01,\n        'I\\x91\\U000829ae\\x18}\\x85g': -4.733988335221529e+16,\n        '\\U000f6256\\x9d\u00b2\\U000f57d0\u00f4q\\U0010ba76\\U000acda3#\\U000b3c25': -nan,\n        '\\U0005b50c\u00b2\u00f7\u00d4z\\x98': 2.4348070854951524e+16,\n        '\u00ce\u00fd\u00b1\\x17\u00f8\\U00072db3\u00f9\u00b9v\uc730': 1.9562284498515256e+16,\n        '\\U000f6c3e\u00e2': -6.004673359686616e-201,\n        '\\x98\\x13\u5e7f\u00a5\\U000ef5c7A': 6.522756636670437e+16,\n        'i\\U000bf5e9\\U000bb33d': -2.2250738585e-313,\n        'j\u00af\\x04Q\\x82\u00f5': -6.554779448876096e+16,\n        '\u00ff\u00bb': -0.3333333333333333},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U000df07c\\U0001e7dc\\U0001e72b\\U0001e6fd\\U0001e738\\U0001e744\\U0001e7be\\U0001e75d\\U0001e7ca\\U0001e7c2\\U00045b68\\U0001e7ca\\U0001e7dd\\U0001e6e8\\U0001e747\\U0001e73a\ud86f\udf42\\U0004aae2\\U0001e7a8\\U0001e7bf\\U0001e72f\\U0001e720\\U0001e718\\U0001e771\\U0001e7db\\U000f535a\\U0001e7b3\\U0001e76e\\U0001e7a8\\U0001e75f\\U0001e7d4\\U0001e7c6\\U0001e7c7\\U0001e6fd\\U0001e77d\\U0001e750\\U0001e6f8\\U0005666e\\U0001e711\\U0001e750\\U0001e75a\ud839\udfe6\\U0001e79a\\U0001e710\\U0001e75a\\U0001e7ba\\U000dc6b8\ud839\udfe4\\U0001e776\\U0001e739\\U0001e769\\U0001e7d4\\U0001e7d1\\U0001e700\\U0001e6ea',\n          constraints={'intervals': IntervalSet(\n               [(124647, 269720), (276784, 354800), (777759, 1013802)],\n           ), 'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='_\\U000ead93\\x97w',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00073d3d\\x02W': -906_476_503_394_979_542},\n       coverage={'\u00a5\u00c9': [11476,\n         -53,\n         4983,\n         63,\n         -46,\n         -29822,\n         -19276,\n         70,\n         15,\n         -141_042_706_618_280_499_344_389_831_215_620_749_702,\n         -2708,\n         5636],\n        '\u00ff': [31757, 4, 122, 2020, 7]},\n       timing={'\u00f6': -10000000.0,\n        'i~W\u00e7W,\u00b7<\u00d2z\\x0f': 1.7976931348623157e+308,\n        '\u00c5)\ud868\udf5e': 1.400359740567235e-49},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\xde'\\xb4\\xbae\\xe8Xu\\xef{\\xd4\\x1d>\",\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.21173015218121077},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.884734248615427},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=25606,\n          constraints={'min_value': 25605,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 6.263836853044527e-142,\n        '\u2a96j': 6.103515625e-05,\n        'p\\xad3\u00c0W': -inf,\n        '\u00e6\u00e7\u00ac': 3.5286406050877456e+16,\n        '\u00baE8l7\\U000b2a92\u00bc\\x87!': -0.5,\n        '|\u00bf\u00be\\U000f792f3\u00ec\\U000867abp': 58,\n        '\u00e2\u00cc': 4.338413824960549e+122,\n        \"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705, 2441, -107, 10403, 26717],\n        '\u00bb\u00d0a\u00e0\u00a1\\U000403cd\u00e8\\U00055ffd\u00ca\\U0003f81f': [8203, -370]},\n       timing={'5U\u00d6u$\u00d5\\x1c\\x1f\\x86v\u00ac\\U00073e01\\U000d0433': -5.393858695728212e-149,\n        '\\x14': 2.37534909157735e+46,\n        '9\u00e9': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('b', 2, 0)),\n                 (('a', 0, 3), ('c', 3, 1)),\n                 (('a', 1, 3), ('b', 2, 3)),\n                 (('a', 1, 3), ('c', 3, 2)),\n                 (('a', 3, 1), ('b', 0, 2)),\n                 (('b', 1, 1), ('c', 0, 0)),\n                 (('b', 1, 1), ('c', 2, 3)),\n                 (('b', 1, 3), ('c', 1, 1)),\n                 (('b', 2, 3), ('c', 3, 0)),\n                 (('c', 1, 0), ('a', 0, 1)),\n                 (('c', 1, 1), ('c', 1, 1)),\n                 (('c', 1, 2), ('c', 1, 0)),\n                 (('c', 2, 2), ('c', 1, 3)),\n                 (('c', 2, 3), ('a', 2, 3)),\n                 (('c', 3, 0), ('c', 0, 3)),\n                 (('c', 3, 2), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=' oA\u00c9\u00bd\\x08\\U000f9a8d\\U0009721cC\u00bbq\\U0008662b\u00a3\\x18\\U0006dc709\u00b2\\U000517cc\u00c1\\U00011b82\"\u00cb\\U0010e46b\\x1aR',\n       run_start=5.768257052343265e-204,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.1907422468139713e+138,\n        '\\U0008623a\\U0005ff85\u00b4\\U0003eec9\\xa0\\x05': -2.64781215206294e+16,\n        '3a\u00ed\\x9f\\x1d\u00a7\"\u00a7\\x7f': 6.967930858859344e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=24191, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.99999},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=6.744437843359338e+307,\n          constraints={'min_value': 10000000.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.29516777469785965},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9225384956742824},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.2608291740721434e+306,\n          constraints={'min_value': 1.2748946484354986e-181,\n           'max_value': 1.1227290873125523e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 7.387998543922075e-32},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.975186495588937e+307,\n          constraints={'min_value': -2.225073858507e-311,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5503739421945516},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u6773\u6707\u673f\u669a\\U001022cf\u6732\\U0006bd12\u66fe\u6773\u66d9\u66b1\u6713',\n          constraints={'intervals': IntervalSet(\n               [(26252, 42847),\n                (419924, 476040),\n                (688579, 839191),\n                (1034345, 1069293)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7023805461537623},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.109927555331627e+308,\n          constraints={'min_value': 6.568758115247808e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7303109221351659},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='!\u00df\u00b3',\n       run_start=-1.1076973152465351e+27,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d9\u00ec': 5.965436367886831e+16, '': -264},\n       coverage=None,\n       timing={'\u00ca': -1.1225287646764342e+16,\n        '': 7.159293216353477e-160,\n        'kf\u8a5d\ub88a\\U000d4bc1\\U000fdac5\u00f7P\\U000840fa\\x19:`\u00cf': -4.345746590885573e-242,\n        '\ud85f\udf22k}~\\x9f\u00ee': 6.380719469064172e+16,\n        '\\U000bedd5\u00c6\\x9be\\x07': 4.0698303031100996e+119,\n        '\\x9b\\x03\u00ac\\U000c6d13\\U0008af21J\\x03\\x9aw\\x0f\u00cdO\u00d8': -2.978274835995787e-305,\n        '\"\u5b5b\\U00075682\u00d7\\x93a\u00ee\u00eeZ': -6.0305982407563256e+16,\n        '\\x029\\U00064bb9\u00a7\\x01\u00da\u00dc': -1.556007188689906e+16,\n        '\u00b8\\n\u00ddZ\\xad<': 6.80455660372176e+16,\n        'I\u00f4\\x84': 1.1754943508222875e-38,\n        '\\U0008ef6a\\x84\u00da?\u00cd\\x7f5\\uec3a^\\t': 0.01,\n        'I\\x91\\U000829ae\\x18}\\x85g': -4.733988335221529e+16,\n        '\\U000f6256\\x9d\u00b2\\U000f57d0\u00f4q\\U0010ba76\\U000acda3#\\U000b3c25': -nan,\n        '\\U0005b50c\u00b2\u00f7\u00d4z\\x98': 2.4348070854951524e+16,\n        '\u00ce\u00fd\u00b1\\x17\u00f8\\U00072db3\u00f9\u00b9v\uc730': 1.9562284498515256e+16,\n        '\\U000f6c3e\u00e2': -6.004673359686616e-201,\n        '\\x98\\x13\u5e7f\u00a5\\U000ef5c7A': 6.522756636670437e+16,\n        'i\\U000bf5e9\\U000bb33d': -2.2250738585e-313,\n        'j\u00af\\x04Q\\x82\u00f5': -6.554779448876096e+16,\n        '\u00ff\u00bb': -0.3333333333333333},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U000df07c\\U0001e7dc\\U0001e72b\\U0001e6fd\\U0001e738\\U0001e744\\U0001e7be\\U0001e75d\\U0001e7ca\\U0001e7c2\\U00045b68\\U0001e7ca\\U0001e7dd\\U0001e6e8\\U0001e747\\U0001e73a\ud86f\udf42\\U0004aae2\\U0001e7a8\\U0001e7bf\\U0001e72f\\U0001e720\\U0001e718\\U0001e771\\U0001e7db\\U000f535a\\U0001e7b3\\U0001e76e\\U0001e7a8\\U0001e75f\\U0001e7d4\\U0001e7c6\\U0001e7c7\\U0001e6fd\\U0001e77d\\U0001e750\\U0001e6f8\\U0005666e\\U0001e711\\U0001e750\\U0001e75a\ud839\udfe6\\U0001e79a\\U0001e710\\U0001e75a\\U0001e7ba\\U000dc6b8\ud839\udfe4\\U0001e776\\U0001e739\\U0001e769\\U0001e7d4\\U0001e7d1\\U0001e700\\U0001e6ea',\n          constraints={'intervals': IntervalSet(\n               [(124647, 269720), (276784, 354800), (777759, 1013802)],\n           ), 'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='_\\U000ead93\\x97w',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00073d3d\\x02W': -906_476_503_394_979_542},\n       coverage={'\u00a5\u00c9': [11476,\n         -53,\n         4983,\n         63,\n         -46,\n         -29822,\n         -19276,\n         70,\n         15,\n         -141_042_706_618_280_499_344_389_831_215_620_749_702,\n         -2708,\n         5636],\n        '\u00ff': [31757, 4, 122, 2020, 7]},\n       timing={'\u00f6': -10000000.0,\n        'i~W\u00e7W,\u00b7<\u00d2z\\x0f': 1.7976931348623157e+308,\n        '\u00c5)\ud868\udf5e': 1.400359740567235e-49},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\xde'\\xb4\\xbae\\xe8Xu\\xef{\\xd4\\x1d>\",\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.21173015218121077},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.884734248615427},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=25606,\n          constraints={'min_value': 25605,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 1, 1)),\n                 (('a', 0, 2), ('c', 0, 3)),\n                 (('a', 1, 0), ('c', 3, 0)),\n                 (('a', 2, 3), ('a', 1, 1)),\n                 (('a', 3, 3), ('a', 0, 3)),\n                 (('a', 3, 3), ('a', 1, 2)),\n                 (('b', 0, 1), ('a', 3, 2)),\n                 (('b', 0, 1), ('b', 1, 2)),\n                 (('b', 0, 2), ('b', 0, 2)),\n                 (('b', 0, 2), ('b', 2, 1)),\n                 (('b', 2, 1), ('b', 2, 1)),\n                 (('b', 2, 2), ('b', 0, 0)),\n                 (('b', 2, 3), ('b', 1, 0)),\n                 (('b', 3, 0), ('b', 0, 1)),\n                 (('b', 3, 0), ('c', 2, 1)),\n                 (('b', 3, 3), ('c', 2, 0)),\n                 (('c', 0, 3), ('c', 0, 0)),\n                 (('c', 1, 3), ('a', 2, 0)),\n                 (('c', 2, 0), ('b', 0, 0)),\n                 (('c', 2, 0), ('c', 1, 3)),\n                 (('c', 3, 0), ('b', 2, 3)),\n                 (('c', 3, 0), ('b', 3, 3)),\n                 (('c', 3, 0), ('c', 2, 2))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.012391498836223036,
          "overall:gc": 0.005367417121306062,
          "generate:args": 0.03632862388622016
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287653.951958375,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00b8\\x97',\n       run_start=-3.804895986963489e+119,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1d\u00ed\"': 3.985733272093683e+220,\n        '-\\\\\\x1794i': 1,\n        '\\x83b\\x0c\\x02\u00e4\u00d9\\x90V\u00ba': 0,\n        'null': 1,\n        ';': 14,\n        '\\x1f\\x90T\\x8c\\x96\u00bb\u00db\\x92': 1.6545864688844106e+307,\n        '\\x85': 65535,\n        '\u00ed': 121,\n        '\\U00052b0b': 25219,\n        '8{': 7.861313393893522e-241,\n        'N_?X~\\x06': -1.2713156948738496e+16,\n        '': -6142},\n       coverage=None,\n       timing={'-\u00af\\x1d': 1.6556226859500833e-179,\n        '\\U00058f2aG\u0523GV\u00e0\u00b6v9!*\\x9e{\\x8c\\U00052f43\\x1d': 1000.0,\n        '1/0': 3.2009636481379555e-05},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=32064, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=17,\n          constraints={'min_value': -48,\n           'max_value': 84,\n           'shrink_towards': 0,\n           'weights': {-18: 0.00540690663387502,\n            -33: 0.09786823321773137,\n            -23: 0.021946122945455983,\n            84: 0.05314053357088263,\n            7: 0.015028016577891738,\n            75: 0.11221911675664921,\n            -16: 0.08581757715819356,\n            8: 0.10444114385274963,\n            70: 0.09627360897754712}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.8748244758556616},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=4839,\n          constraints={'min_value': None,\n           'max_value': 14398,\n           'shrink_towards': -21,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-21882,\n          constraints={'min_value': -28938,\n           'max_value': -15591,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 2), ('a', 1, 3)),\n                 (('a', 3, 2), ('c', 3, 3)),\n                 (('c', 1, 1), ('b', 3, 0)),\n                 (('c', 1, 1), ('c', 1, 0)),\n                 (('c', 2, 3), ('c', 1, 2)),\n                 (('c', 3, 3), ('b', 3, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=5.924080422152448e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00e5\\U0010fe49%\\x14\u00c9\\U0007937e': -28019, '': -1.175494351e-38},\n       coverage=None,\n       timing={'J\\U0003e6fc': -4.4836773059492806e+274,\n        '\\x05f\\x9a6\u00eep': -3.1945463114758275e+44,\n        'T\u00ab\u00e5L': -1.326349673762647e+16,\n        '\u00e6E@#\\U000fdf35\\U000fea92N\u00a5~': 5.061834227932926e+16,\n        '': -695031236696515.0,\n        '\\r\\x96~': 0.01},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=9353, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 3, 0), ('b', 1, 1)),\n                 (('b', 3, 2), ('a', 2, 3)),\n                 (('c', 1, 0), ('b', 2, 3)),\n                 (('c', 2, 2), ('a', 1, 2)),\n                 (('c', 3, 1), ('b', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00c3\\U0003ef2d',\n       run_start=1.5336018421738527e+72,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -1.0275965973757839e-281, '\u00a2\u00c9Fhf': 0.01},\n       coverage=None,\n       timing={'\\xa0\\U00046345\\\\A\u00d4\u00f9': 0.0001,\n        'e/': 7.747181336344005e+182,\n        '\\U000c3d57': 2.5197694524118158e+202,\n        '': -7.594498468774191e+248,\n        '\u00cc\u00d9': 5.658651529566418e+16,\n        '\u00c8G/n\\x0bo': -5.37314128577274e+231,\n        '\\U0005a33c4': -5.669807949355546e+16,\n        'NaN': -1.4285268287123597e+203,\n        '\ud887\udc5a\\x8e\\x17\\x1d\u00e7\\U000423edB\\U000343ea\\U00096411\u00b5\\U00096137i\\U000b45afO\\x86': 3.5834380512640396e+141,\n        'N': -4.648009361416395e-95,\n        '\\x8f\u00b4\u00d2\\U000cdaf0#M\u00bd': 3.4467977275732176e+16,\n        '-&\u00d3\\U000f7a89\\n\\x9e\\x08>\\U000bf868': -2.8232539131921244e+166,\n        '\\U000d346b\\U000f36da\\x9f': 4.685375436590013e+16,\n        ',\u00e0\u00b9\\xad\\x1c\ud821\udf225\\x1a=\\U0007f502': 5e-324,\n        ':': 4.76553831154452e+16,\n        'max_size': -6.450752917494649e+40,\n        '\\x06\ud809\udca7\u00ee\\x16\\x00\u00e5\u00a1\\U000d581f\\x04\\x1c\\U000d600cN\\U0008b159\u00f2': 3.670891113368367e-168,\n        '\u00a5.\u00c6': -1.0072111488203126e+16,\n        '\u00d4': 5.099361025956426e+16,\n        '\\U0007acda\u00a1\u00be\\U00082a5eB': 3.1418408564374533e+102,\n        'A\\x98\u00b0\\x0e\\U000c34ce\u00a7\ud872\uddcd\\U000cac98\u00ea\\\\\\x19\\x01': -2.0894572343754574e+272,\n        '\u00e2': 2.219523676352497e-67,\n        '\\x98': -4.167662715994055e+72,\n        '\\U000d0958\\U0005410c\\U00105f64<0\u00ba\\r': 6.743184985000081e+16,\n        '\\x05ZM/ ': 0.99999},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-2855, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=85,\n          constraints={'min_value': None,\n           'max_value': 15054,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=267,\n          constraints={'min_value': None,\n           'max_value': 23416,\n           'shrink_towards': -23605,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=inf,\n          constraints={'min_value': inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 4.566858009252169e-87},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'.hypofuzz.reports',\n          constraints={'min_size': 17, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.00587670603999868,
          "overall:gc": 0.002627126988954842,
          "generate:args": 0.019209665071684867
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287691.792918625,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u00cbF',\n       run_start=2.963663650608292e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'cacheclear': -nan,\n        '\u00ce\\U000be8b9\\U00073747\u00cd': -1.8258068569070747e-186},\n       coverage={'eVu\\U000eb104\\U000ab452y\\x08': [10, 104, -16419, 27677],\n        '1\u00b9\u00db\\U0005d339\\U0001de98:g\\U000477f1\\x1a&\u00ea': [-354335135,\n         -126,\n         7583,\n         -18441],\n        '\\x94-adg\u00fav\u00dbI\\U0010eea6': [-2_485_937_775_456_890_500,\n         11938,\n         65,\n         -1_180_107_601,\n         -2_797_449_158_722_208_104,\n         1288]},\n       timing={'\ud872\udee5\\x1c\u00b1\\U000eaf76\u00ce\u00a3\\x01\\U000fbd3e': -8.916887208025091e-08,\n        '\u00a5M': 5.088257072043137e+16,\n        'l\u00b5\\U00085e04$\u00f6\\x8a\u00a7': -4.395246717064414e+16,\n        '1\u00aa6\\\\\\x18\\x02\\U000f198e\\ue5da\\x8f': 2.805056140941073e+140,\n        '@-\\x8e\u00c7Q\u00e4\\x05': -6.91610636155568e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=65535, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.4158740257746294e+168,\n          constraints={'min_value': -4.36625392073275e-274,\n           'max_value': 1.1019316619788391e+169,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.3389410822897461},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 2, 1)),\n                 (('a', 0, 0), ('b', 1, 1)),\n                 (('a', 0, 2), ('b', 2, 2)),\n                 (('a', 1, 1), ('b', 0, 1)),\n                 (('a', 1, 2), ('b', 1, 0)),\n                 (('a', 1, 2), ('c', 1, 1)),\n                 (('a', 2, 1), ('a', 2, 3)),\n                 (('a', 3, 0), ('b', 1, 0)),\n                 (('a', 3, 1), ('a', 2, 1)),\n                 (('a', 3, 1), ('a', 3, 1)),\n                 (('a', 3, 1), ('c', 3, 2)),\n                 (('b', 0, 2), ('a', 2, 0)),\n                 (('b', 1, 2), ('b', 2, 1)),\n                 (('b', 2, 2), ('c', 1, 2)),\n                 (('b', 2, 3), ('b', 0, 2)),\n                 (('b', 2, 3), ('c', 2, 0)),\n                 (('c', 0, 2), ('a', 1, 0)),\n                 (('c', 1, 1), ('a', 2, 3)),\n                 (('c', 1, 1), ('b', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-3.336242604174063e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00fa': -7648,\n        '\\x86\\r': -2.2250738585e-313,\n        '\u00cd\\U0009b145\u00b2\u00f0\\x0e': 4.032762264778756e+16,\n        '\u00dd\\x9b\u00d6\\U0010bb37\u00c1F': 16},\n       coverage={'\u00d8\u00b3f': [-26936,\n         -18643,\n         24610,\n         -14,\n         27851,\n         93,\n         19647,\n         5_964_533_188_668_501_768,\n         6,\n         -13101,\n         -781769980,\n         -26020,\n         -12780,\n         -27862,\n         -102,\n         1_258_606_572_305_727_411,\n         -116_688_935_900_567_896_273_165_881_141_610_633_914],\n        '\\x98': [6403, 316938874],\n        'WA$\\x05\\x18-\\x81\\x95': [53, 0],\n        '\\x80': [25708, 28919, -10569, 20898, 32094, -24],\n        '\u00a4\u00a6\u00cb': [127, -110, 72],\n        '\\xad\u00b9': [5_300_803_055_910_049_579,\n         23531,\n         -3,\n         -2_129_611_174,\n         -125,\n         126,\n         -19796,\n         -4_339_940_879_802_218_201],\n        '\u00a6': [80,\n         16201,\n         -27765,\n         -96_344_388_812_872_585_443_756_354_094_005_825_029,\n         -6435,\n         -24439]},\n       timing={'\\U000fe697\\U000c7cdf': -5.201806372466545e-273,\n        'then': 5.863806041083076e+115,\n        '\u00a7\\U001043c5\\U00013d46\u00f9\\U000eea94': -1.9994420718657402e+276,\n        '*\u00b4\ud867\ude95\\xa0.|\u00e0\u00fb\u00c7\\U000bb1adg\u00a3|': -4.437291928068313e-69,\n        \"\ud869\udc4c\\x97'\u00e2\\U000e7507\\r\u00c6\\U000613ec\": -1.5},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1320237610626464388, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 3, 1), ('a', 3, 3)),\n                 (('c', 1, 2), ('b', 2, 0)),\n                 (('c', 3, 1), ('c', 3, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x05Y\u00a8\\x1a',\n       run_start=6.424049927675589e+98,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'<\\x0f': 881432714,\n        '\\U0010b30c_\\xa0\\U000e0cc4b\u00f8\u00aaD\\x0f\\U0006428f\u00e6\u00cc\\x81\u00f3\\x12<\u00b9\ud802\udf54\\x82\u00b9\\x10\\U00108bdb\"7HH': 1_417_835_301_688_700_751},\n       coverage=None,\n       timing={'7': -1.657771377289258e-125,\n        '\\U000f7ded\u00beT\ud836\udce5\\x7f': 1.3518422331511326e+16,\n        '\\x18\\x99F': 4.128180069298182e+236,\n        '\u00fa]\u00b1\\U000497dc4\ud877\udfbd+\\x80': -9.189031160465997e+78,\n        '\\x17': 0.5,\n        '\\x86\\U000e7cf1{O\\U000adf65P\\x8d': 6.646139780203733e+16,\n        '': -2.7200426231046886e-193},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=23646, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=10.0,\n          constraints={'min_value': -5.88216464515451e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.25890900221823526},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.0089075221915942e+307,\n          constraints={'min_value': 1.5538547864959716e-277,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.1},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00043cca\\U000472c7',\n          constraints={'intervals': IntervalSet([(277464, 882145)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('c', 3, 0)),\n                 (('b', 2, 1), ('b', 3, 2)),\n                 (('c', 1, 0), ('a', 1, 3)),\n                 (('c', 3, 1), ('c', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='confcutdir',\n       run_start=-6.180716299995037e-249,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x0fT\\x1a\\x82\\U0007aa98\\x86\\U000fb8f2\u00b1 \u00ac\u00b8': 65},\n       coverage=None,\n       timing={'': 1.7542384837384519e+233,\n        '\\U0008fd38\\x82\\U0007272fVV\\x81\u00c9\u00a6\\U000a9396\\U00044188\u00ea\u00c8u\\U0005ea32\u00f1': 1.1754943508222875e-38,\n        '\\U000f0a2esV\\x1b\u00cc\\x9a-\u00ebN\\U000bf1e5\u00c8': 7.96350142952628e-32,\n        '^\u00e3Z': -2.2891747886155836e-128,\n        '\u00c9': -3.153984514509647e+198},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=61, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.2157202812138022},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0001e989\ud83a\udd59\\U0001e9a6\\U00053558\\U0001e985\ud83a\udd0d\ud840\udd6e',\n          constraints={'intervals': IntervalSet([(125193, 767208)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000a95f7\\U000a6f20\\U000a6f16\\U000a6f00\\U000d54ec\\U000a6eec',\n          constraints={'intervals': IntervalSet(\n               [(683673, 718105), (872651, 876872)],\n           ), 'min_size': 6, 'max_size': 106},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x1e\\xcc\\xe9U*\\x15\\x97\\xda\\x9e:',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=31371,\n          constraints={'min_value': 31368,\n           'max_value': 31391,\n           'shrink_towards': 0,\n           'weights': {31388: 0.06093365204956036,\n            31373: 0.04249849591552212,\n            31385: 0.022524717845562307,\n            31381: 0.012675925487793064,\n            31378: 0.04255985406407829,\n            31384: 0.005785002275366932,\n            31377: 0.021709954331185537,\n            31370: 0.041441668840684266,\n            31383: 0.043699355349530365,\n            31380: 0.055417149489401844}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u013f',\n          constraints={'intervals': IntervalSet(\n               [(127, 272698),\n                (374310, 390350),\n                (581580, 622673),\n                (899447, 1031422)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5540616896629961},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.715060419299327},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 2.2250738585072014e-308},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0001c50c\\U0001c4da\\U0001c546\\U000be2c3\\U0001c4f5\\U0001c4de\\U000ab3b3\\U0001c581\\U0001c4e9\\U0001c526\\U0001c4d6\\U0001c5d3\\U0001c5bc\\U000bd995\\U0001c59d\\U0001c57a\ud85e\udd02\\U000caa6f\\U0001c574\\U0001c4e4\\U000c7b16\\U0001c53e\ud83e\udd70\\U0001c5ae\\U0001c576\\U0001c5a7\\U000abd1c\\U0001c540\ud854\ude81\\U0001c520\\U0001c53c\\U0001c54a\\U0001c4ea\\U0001c549\\U000c2bd1\\U0001c57c\\U0001c546\\U0001c55e\\U0001c5b3\\U0001c572\\U0001c588\\U0001c572\\U0001c4e8\\U0001c5a7\\U0001c5a0\\U0001c5c7\\U0001c50f\\U0001c4f4\\U0001c578',\n          constraints={'intervals': IntervalSet(\n               [(115925, 172800), (700878, 843687)],\n           ), 'min_size': 42, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 2, 1)),\n                 (('a', 3, 0), ('b', 0, 3)),\n                 (('b', 1, 0), ('a', 1, 2)),\n                 (('b', 1, 3), ('b', 2, 0)),\n                 (('b', 2, 2), ('a', 2, 3)),\n                 (('b', 2, 2), ('b', 3, 1)),\n                 (('b', 3, 2), ('a', 1, 0)),\n                 (('c', 2, 2), ('b', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000cf9ff\\U00042d81D\\\\(Rq\u00d5\\U000b6818\\U000e40ea\u00f2A7\\U000e49b6\\x05\u00d6',\n       run_start=9.688908625173819e+34,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -2.2250738585072014e-308},\n       coverage={},\n       timing={'~_*\\U000f141d\\U000196df\u00e4\\U0004320f\u00b9': 1000.0,\n        '\\x10\\x18\\U000f4ad6\\U0007f855\\U0003df5b\\x9f': -6.359567808284621e+16,\n        '\\x8a\\U0009c4adX\\U00094791\u00c9': 1.9,\n        '': 1.5671677848721744e+16,\n        'E\\U000949b0[': 2630253239313132.0,\n        '\u00c1': -2.1535635071383244e+16,\n        '\u00eb\\x8a\\U000546a4': 4.578466937136628e+16,\n        '\u00e3\u00e7\\\\=': -5765232938426537.0,\n        '\\x85': -6.316774434474516e+72,\n        '\u00d6\u00cc': inf,\n        '\\x84\\x83\u00ab': -6.252317024320378e+222,\n        '\u00b3\u00cd(': -3.2811274735112717e-250,\n        '\\xa0\\U000e5f75': -2.2261666308409092e+16,\n        'l\u00a5': inf,\n        '(E)\\U000bb02d\\U0010c4baX\\x00': 4.113629519148831e+16,\n        '\\x06\ud869\udc2d\u00b7': -5.917059429940671e-176},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23128, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud81c\ude30\ud81c\udde8\ud81c\ude71\\U0007d197\ud81c\udde3\ud81c\ude4a\\U0009d6ed\ud81c\ude09\ud81c\ude63\ud81c\uddeb\ud81c\ude25\ud81c\ude16\ud81c\ude27\ud81c\ude3e\ud81c\ude19\ud81c\ude9b\ud81c\ude0f\ud81c\ude00\ud81c\ude1b\ud81c\udde8\ud81c\ude87\ud81c\uddc7\ud81c\ude41\ud81c\ude12\ud81c\udea8\ud81c\ude3c\ud81c\uddc5\ud81c\uddad\ud81c\ude8e\ud81c\ude5e\\U00050b3a\ud81c\ude06\ud81c\udde7\ud81c\uddeb\ud81c\uddb9\ud81c\ude04\ud81c\ude2c\ud81c\udea7\ud81c\uddc8\ud81c\uddd6\\U0003b894\ud81c\ude63\\U0009d23f\ud81c\ude41\ud81c\ude10\\U00083c86\ud81c\uddbd\ud81c\ude6b\\U0001a032\ud81c\uddef\ud81c\uddd8\ud81c\ude8b\ud81c\ude5f\ud81c\ude74\ud81c\udde5\\U0008816f\ud81c\uddfa\ud81c\udded',\n          constraints={'intervals': IntervalSet([(94635, 843949)]),\n           'min_size': 46,\n           'max_size': 146},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-1.6101758734434957e-78,\n          constraints={'min_value': -1.6101758734434957e-78,\n           'max_value': -1.6101758734434957e-78,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.1524622921949622e-79},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 101},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.4172207472318076},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud847\udcbe\ud847\udd21\ud847\udccb\ud847\udce2\\U000343c6\ud847\udd1b\ud847\udc42\ud847\udcf2\ud847\udce7\ud847\udd27\ud847\udcf9\ud847\udc89\ud847\udc99\\U00038f96\ud847\udcd5\ud847\udd32\ud847\udd0d\ud881\udeae\ud847\udc78\ud847\udd11\ud847\udd1c\ud847\udc80\\U00049463\ud847\udc46\ud847\udc88\ud847\udc62\\U0004a04b\ud847\udd1d\\U0004e104\ud847\udc39\ud847\udd08\\U0004ae8e\ud847\udc36\ud847\udd13\ud847\udcdb\ud847\udd05\ud847\udc65\ud847\udce5\ud847\udcb4\ud847\udcea\ud847\udc65\ud847\udd16\ud847\udc35\ud869\uddf2\ud847\udd08\ud847\udd2c\ud847\udccc\ud847\udc9f\ud847\udc79\ud847\udce4\ud847\udcdb\ud847\udd27\ud847\udc55\ud847\udc82\ud847\udcf4\ud847\udc64\ud847\udcca\\U00034f1a\ud847\udcb2\ud847\udd2c\\U0004df2a\ud847\udc63\ud847\udc65\ud847\udcb0\ud883\udcac\ud847\udce1\ud847\udca0\\U0004601b\ud847\udc66\ud847\udc83\ud847\udd17\ud847\udc86\\U0003ca2a\ud847\udcb5\ud847\udd2d\\U0003c35f\ud847\udcff\\U0002ec6a\ud847\udd1d\ud847\udc57',\n          constraints={'intervals': IntervalSet([(138292, 323247)]),\n           'min_size': 34,\n           'max_size': 134},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=9444,\n          constraints={'min_value': -25067,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.434231046559383e+233,\n          constraints={'min_value': 2.145032109483472e+205,\n           'max_value': 8.039632052299051e+307,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5775892004727515},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-69,\n          constraints={'min_value': -16783,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.23129936289717895},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.960464477539063e-08},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-49,\n          constraints={'min_value': None,\n           'max_value': 13718,\n           'shrink_towards': -28260,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=28322,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 29896,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'{}\\xab~\\xb8\\xbd\\xfb\\x9f\\x90\\r\\xee\\x83\\xa2\\x99\\x0c\\xdd',\n          constraints={'min_size': 16, 'max_size': 116},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=241,\n          constraints={'min_value': 219,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xde\\xd9',\n          constraints={'min_size': 0, 'max_size': 63},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('a', 1, 2)),\n                 (('a', 2, 3), ('a', 1, 3)),\n                 (('a', 3, 1), ('b', 0, 0)),\n                 (('b', 0, 2), ('a', 2, 2)),\n                 (('b', 0, 3), ('c', 0, 0)),\n                 (('b', 1, 2), ('c', 2, 2)),\n                 (('b', 2, 0), ('b', 0, 2)),\n                 (('b', 3, 3), ('c', 2, 0)),\n                 (('c', 0, 1), ('c', 1, 2)),\n                 (('c', 0, 1), ('c', 2, 0)),\n                 (('c', 2, 0), ('c', 2, 2)),\n                 (('c', 2, 3), ('a', 3, 2)),\n                 (('c', 3, 0), ('c', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000d25c8',\n       run_start=1.1563926965863422e+90,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\x8c\u00c3X~': -4.32730661409893e+16,\n        '\\U0001ab37': 3.1481228186249452e+16,\n        '(m\\U000d6eb8': -5.143068139675173e+16,\n        '\\x92j\u00df\u00c6\\x0b\\x0bJ\\x0eb~;G': -2.391602495032505e+16,\n        't\\U000de419g3\u00c1T\\U0004c440\\x8c\\U000a802d\\U0008116d\\xad,\\U00083f07': -3.957011145964813e+16,\n        '\u00b1\u00f8\ud844\udca8\\U000ae259\\U000d049c': 1.1402821235410195e+47,\n        '\\U000a9e3d\\U0001c5a3<\\\\G': 4.947834379941724e+232,\n        'X\\U000382d8\\x1a\u00b1': -6.749705348278858e+16,\n        'J\u00c9$': -2.2250738585072014e-308,\n        '\u00c8\u00c0 \u00a8\\U0009f13f\u00ca\\U000383a4\u00ce\\t\\U000d82db7:': -2.2735714562488774e+301},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=24300, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('a', 0, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x0b\\x80',\n       run_start=-1.22291166255547e-106,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000ce9d6': -29488,\n        '\\U000df63f\\U000480fa\u00cd)f\\U00015c254\u00e8\\U000a1abc\u00df\\U0008f406': -1.9378552445000768e+304,\n        '\\x04': 4.6408962007973044e+70,\n        '\\x0b\\x8bs\u00a3\\x01n\u00bc\\U000b6ef8\\U000e022c\\U000a7c26\\U000f8ad1e\\U000d4d6d\u00b5\\U000b95a2\\U00048535\u00ce\\x0f': 2.8985486629592047e-46,\n        '': -2.0229036023173938e+304,\n        '7\u00f1q\u00e2\\U0010001b\u00db': -28259,\n        '\u00b1v\u00f5\\x1bk\u00edb\u00f8\u00f6': 7.582471122097188e+138,\n        '\\x8a\u00d1\\x95\\U0008cf35\u00a1\u00d5\u00fe\\x15\u00aa\u00e0\u00c7!\\U00088205\\U0006b207\\x18K\\U001072a8x~\u77c4': 992,\n        '\ud881\udf08\\U000fc546\u00b8\u00b0\\x08\\U0007ad02\u7fe94W\\U0010c7d1': 1.3301620686276424e+16,\n        '\u00be\u00dca\\x02\u00e6\\x8b@/\\x90\u00e4\\x9dr\\U000ad23e': 11325,\n        '\u00bd\\x91Z\\x93\\x15': 6.410391019328946e-118,\n        's\\x98\\U000ba32c\\U0005d58bV<': -14456,\n        '\u00d1\\U000a9cf1\u00c0\\\\|X\\x97\u00f0\u00e0': 2.1120596264560916e+16,\n        '\u00c4\\U0004e6ad\\U00016df3': -25220,\n        '\u00a7\\x13': 19631,\n        '\u00e6WKi\\x03\u00be': -14296,\n        '\\U000728d6r\\x95\u00c2\u00cc\u00fbu\\x82<\u00ab\u00bc\\U001018e1\u00ca\\U0007ad14\u00c7\u00bf\\x98\\U000d0370\\U000d51f1\\x02\\U0009de07)s\\x99\\x9bu\\x9e\u00dbM\\U0003987d\\x07\\U000e7cf8\\U000a3581\u00a5': -1.2924820576793258e-67},\n       coverage=None,\n       timing={'\\x91': -1.7976931348623157e+308,\n        '\u00cce\u00b8e]S\\x16\\U000f61fe': -4.6613994854754984e+16,\n        '\\\\P\u00cc': 2.850784249763147e+16,\n        'iM\\x81\\x8d4\\x058\\x84K\u00f5\u00f0B\\x1e3\\U0004020e^': -2.303208624045196e+16,\n        '\\x9f\u00c1\u00cf\u00c4.\u00dc@\\U000150ed': -4.048866777363543e+16,\n        '\u00a6y\u00d0\u00f0\\U000feeaf\\U000b51f4\u00b3\\U0001bb960\u00b0\\U000ae37a\u00e2': -6.68259434535776e+16,\n        '': -3.0325872056116588e+16,\n        ')\u00d7\u00e7\u00c1\u00c1': -2.4177816840865248e+299,\n        '\u00c8': 7432835869273586.0,\n        '\ub132\u00bd\\x01\u00a5': -2.836651597885241e+16,\n        '\\U0008c943\u00c5w\u00e3\\x9c\u00b1D\u00ac\\x9f6-_m': -5.0010607013553655e-251,\n        '\\x11W\\U0009686a\u00c8\u00d7': 1.5373436660136765e+131,\n        'Rd\\x8dP\\x06\u00fe\u00e4': -9232840378753568.0,\n        '\\x7f': -8.329027410435614e+123,\n        '\\U00049155\u00a3\\U000705c9': 3.484977011570772e+16,\n        'v\u00d1\\U00109ed2\\x07\\U00041ed3\u00cdN\u00ee': -2.120229991681128e+16,\n        '5': 2.6649145491381995e-218},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-26083, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 2, 2)),\n                 (('a', 1, 0), ('a', 1, 2)),\n                 (('a', 1, 0), ('b', 3, 2)),\n                 (('a', 1, 3), ('b', 0, 2)),\n                 (('a', 2, 3), ('a', 2, 3)),\n                 (('a', 3, 0), ('a', 2, 0)),\n                 (('b', 1, 2), ('b', 1, 1)),\n                 (('b', 1, 3), ('b', 1, 0)),\n                 (('c', 3, 2), ('c', 3, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00e6\u00c6\\x12\\U00090815',\n       run_start=inf,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={']': -2.0940229633502364e+16,\n        'Q\\U0010a545UA\ud876\udf19y\u00a8c\\U000d56f0\u00b2\u00cf': 1.1085787941643678e-112,\n        '': 1.1125369292536007e-308,\n        's\u00d8': -47},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=420, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('b', 1, 1)), (('b', 3, 0), ('b', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=inf,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00090704': -1.5,\n        '': -32266,\n        '\u00f1\u00f9\\U00075f86': -29269,\n        '\\x9d\u00fdvX': -1.877729509598303e+205,\n        '##@\\x84\u00d5\\r\\U000bacc9\u00b8v\u00eb\u00bc\\x8c\u00db[': 5.84266792040194e+16,\n        '\u00e6\u00bbP\\x9f\\x06\u9ccd': 1.7664145618061087e+154,\n        'T\"Z\\x1b\\'\\U0003a8fat': -31174},\n       coverage=None,\n       timing={'': -6622985650857823.0,\n        '\u00b4': -3.8453923234583044e+180,\n        '\u00c4\u00df?<\u00db\\U00019b35': 3.492957614032097e+16,\n        '{\u00b7g\\x08n\u00dd]%\\U0010bf7b': -3.357184298825611e+199,\n        'a\u00d1': -1.0870678863035314e+16,\n        '\\x14\u00f4q\u00a6\\U000fd22f\u00e1\uc88a\u00e8\\x9a': 6.807209685322281e+16,\n        'l\\x92': -5.514655127888031e+16,\n        '\u00df': -2.9036198532314056e+16,\n        '\\U000bbeda\u00ff\u00c7\\x9d\u00e3=)\\x97\u00dc\u00b8\u00a64<\\x9csai\\U00058c4c': -3.01483705743898e-53,\n        '\\x7f': -6.161644308243918e+16,\n        'P\\x13\ud847\udc13o\\n\\x89\u00fc\\n\\x80\\x95\u00ac\u00dc\\U000e5ea8': -inf,\n        '\\x1b\\n\\U000557aa\\U000f4a54': 7.1993889567981256e+16,\n        '\u00d8\u00c2\u00b0\\x9b': 7.17346363398461e-215,\n        '\u00e1\\U0006ba9db\\x0e\u00ec7\\x93$x\\x1c\\x1a': -3.1270256672910664e+16,\n        'r\\U00057c91\u00a7\\U0005b983\u00b1_@\\U00050617': -1.192092896e-07},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1757, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=14852,\n          constraints={'min_value': 5,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0005a546\\U0005a637\\U0005a634',\n          constraints={'intervals': IntervalSet([(369982, 944634)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 0), ('a', 0, 3)),\n                 (('a', 3, 1), ('a', 0, 2)),\n                 (('b', 0, 0), ('c', 3, 3)),\n                 (('b', 1, 2), ('a', 2, 3)),\n                 (('b', 2, 3), ('b', 1, 3)),\n                 (('b', 3, 2), ('c', 3, 2)),\n                 (('b', 3, 2), ('c', 3, 3)),\n                 (('c', 3, 0), ('a', 3, 3)),\n                 (('c', 3, 1), ('c', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x94\\x8d',\n       run_start=-2.9025481643915868e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 4.695247870787845e+16,\n        '\\x9d\u00fe\\r\\x07}u\u00ec8\u00e5\\x9f\\U0004dadf}': -6277,\n        '\u00e4\\x1d\\x95': -4432,\n        '\\x07\\x82': -0.5},\n       coverage={'': [3973,\n         -3705,\n         14218,\n         28092,\n         -8,\n         99,\n         108,\n         84,\n         -446_490_662_751_812_233,\n         -12,\n         -1_616_578_236_434_737_096,\n         524288],\n        '\u00ab': [],\n        '\u00b3': [-119, 18929, -10629, 20804],\n        '\\U0008c21db7\\x07\\x1e': [-1_738_256_013, -16262, 31214],\n        '\\U000f06fd\\U00073e7eJU\\U000146d8\\x15\u00c6\\U00041426': [124],\n        '\u00d6\u00f0\\\\\\x0f': [-23378,\n         -11263,\n         26125,\n         7489,\n         -10432,\n         109,\n         -23411,\n         -1_043_630_547],\n        '\\U00037b14\\x1a\\x12\\xad\\U0001e95bz\u00c0': [8632],\n        '\u00af': [72, -27641, -30241],\n        '\u00e4*': [-22283, -79, 93, -1288, -27862, -22416, 69],\n        '\"\u00af\u00b3\\x90w6\u00b8\\U000e600d\u00c45': [-6348],\n        '\\x1d\\U000d9975\\x18\\U00041a87\\x96\u00fal\\x00I\\x1d': [2],\n        '\\U0008f777\u00ebc\u00d8*\\U000e20d8\u00c5l\\x87\\U000d4923\\U000ae715E%\\U000898d4\u00eb\\x11\u00b4\u00e0\u00c6\\U00039873\\x96\\x9f\\U000de60b\u00ceNk/p\u00b8': [300]},\n       timing={'\\x8e': 1.6800523767096958e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=17, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=2.2666758996756954e+277,\n          constraints={'min_value': 1.238978062091437e+194,\n           'max_value': 1.3309082474503376e+308,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.2271864209937831},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='N',\n          constraints={'intervals': IntervalSet(\n               [(1, 169080),\n                (173478, 214780),\n                (223804, 255197),\n                (353374, 386610),\n                (844736, 999762),\n                (1044621, 1114110)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-5.796209586947728e+145,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.16253071147603596},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u2137',\n          constraints={'intervals': IntervalSet(\n               [(8291, 13499), (329724, 475549)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 111},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 3, 2)),\n                 (('a', 2, 3), ('b', 1, 0)),\n                 (('b', 0, 2), ('a', 0, 2)),\n                 (('b', 1, 2), ('c', 1, 1)),\n                 (('b', 2, 0), ('a', 2, 3)),\n                 (('c', 0, 0), ('a', 2, 3)),\n                 (('c', 1, 2), ('c', 2, 3))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.013798371015582234,
          "overall:gc": 0.005209295952226967,
          "generate:args": 0.09044737200019881
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287673.040363833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705, 2441, -107, 10403, 26717],\n        '\u00bb\u00d0a\u00e0\u00a1\\U000403cd\u00e8\\U00055ffd\u00ca\\U0003f81f': [8203, -370]},\n       timing={'5U\u00d6u$\u00d5\\x1c\\x1f\\x86v\u00ac\\U00073e01\\U000d0433': -5.393858695728212e-149,\n        '\\x14': 2.37534909157735e+46,\n        '9\u00e9': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('b', 2, 0)),\n                 (('a', 0, 3), ('c', 3, 1)),\n                 (('a', 1, 3), ('b', 2, 3)),\n                 (('a', 1, 3), ('c', 3, 2)),\n                 (('a', 3, 1), ('b', 0, 2)),\n                 (('b', 1, 1), ('c', 0, 0)),\n                 (('b', 1, 1), ('c', 2, 3)),\n                 (('b', 1, 3), ('c', 1, 1)),\n                 (('b', 2, 3), ('c', 3, 0)),\n                 (('c', 1, 0), ('a', 0, 1)),\n                 (('c', 1, 1), ('c', 1, 1)),\n                 (('c', 1, 2), ('c', 1, 0)),\n                 (('c', 2, 2), ('c', 1, 3)),\n                 (('c', 2, 3), ('a', 2, 3)),\n                 (('c', 3, 0), ('c', 0, 3)),\n                 (('c', 3, 2), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=' oA\u00c9\u00bd\\x08\\U000f9a8d\\U0009721cC\u00bbq\\U0008662b\u00a3\\x18\\U0006dc709\u00b2\\U000517cc\u00c1\\U00011b82\"\u00cb\\U0010e46b\\x1aR',\n       run_start=5.768257052343265e-204,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.1907422468139713e+138,\n        '\\U0008623a\\U0005ff85\u00b4\\U0003eec9\\xa0\\x05': -2.64781215206294e+16,\n        '3a\u00ed\\x9f\\x1d\u00a7\"\u00a7\\x7f': 6.967930858859344e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=24191, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.99999},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=6.744437843359338e+307,\n          constraints={'min_value': 10000000.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.29516777469785965},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9225384956742824},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.2608291740721434e+306,\n          constraints={'min_value': 1.2748946484354986e-181,\n           'max_value': 1.1227290873125523e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 7.387998543922075e-32},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.975186495588937e+307,\n          constraints={'min_value': -2.225073858507e-311,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5503739421945516},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u6773\u6707\u673f\u669a\\U001022cf\u6732\\U0006bd12\u66fe\u6773\u66d9\u66b1\u6713',\n          constraints={'intervals': IntervalSet(\n               [(26252, 42847),\n                (419924, 476040),\n                (688579, 839191),\n                (1034345, 1069293)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7023805461537623},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.109927555331627e+308,\n          constraints={'min_value': 6.568758115247808e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7303109221351659},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='!\u00df\u00b3',\n       run_start=-1.1076973152465351e+27,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d9\u00ec': 5.965436367886831e+16, '': -264},\n       coverage=None,\n       timing={'\u00ca': -1.1225287646764342e+16,\n        '': 7.159293216353477e-160,\n        'kf\u8a5d\ub88a\\U000d4bc1\\U000fdac5\u00f7P\\U000840fa\\x19:`\u00cf': -4.345746590885573e-242,\n        '\ud85f\udf22k}~\\x9f\u00ee': 6.380719469064172e+16,\n        '\\U000bedd5\u00c6\\x9be\\x07': 4.0698303031100996e+119,\n        '\\x9b\\x03\u00ac\\U000c6d13\\U0008af21J\\x03\\x9aw\\x0f\u00cdO\u00d8': -2.978274835995787e-305,\n        '\"\u5b5b\\U00075682\u00d7\\x93a\u00ee\u00eeZ': -6.0305982407563256e+16,\n        '\\x029\\U00064bb9\u00a7\\x01\u00da\u00dc': -1.556007188689906e+16,\n        '\u00b8\\n\u00ddZ\\xad<': 6.80455660372176e+16,\n        'I\u00f4\\x84': 1.1754943508222875e-38,\n        '\\U0008ef6a\\x84\u00da?\u00cd\\x7f5\\uec3a^\\t': 0.01,\n        'I\\x91\\U000829ae\\x18}\\x85g': -4.733988335221529e+16,\n        '\\U000f6256\\x9d\u00b2\\U000f57d0\u00f4q\\U0010ba76\\U000acda3#\\U000b3c25': -nan,\n        '\\U0005b50c\u00b2\u00f7\u00d4z\\x98': 2.4348070854951524e+16,\n        '\u00ce\u00fd\u00b1\\x17\u00f8\\U00072db3\u00f9\u00b9v\uc730': 1.9562284498515256e+16,\n        '\\U000f6c3e\u00e2': -6.004673359686616e-201,\n        '\\x98\\x13\u5e7f\u00a5\\U000ef5c7A': 6.522756636670437e+16,\n        'i\\U000bf5e9\\U000bb33d': -2.2250738585e-313,\n        'j\u00af\\x04Q\\x82\u00f5': -6.554779448876096e+16,\n        '\u00ff\u00bb': -0.3333333333333333},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U000df07c\\U0001e7dc\\U0001e72b\\U0001e6fd\\U0001e738\\U0001e744\\U0001e7be\\U0001e75d\\U0001e7ca\\U0001e7c2\\U00045b68\\U0001e7ca\\U0001e7dd\\U0001e6e8\\U0001e747\\U0001e73a\ud86f\udf42\\U0004aae2\\U0001e7a8\\U0001e7bf\\U0001e72f\\U0001e720\\U0001e718\\U0001e771\\U0001e7db\\U000f535a\\U0001e7b3\\U0001e76e\\U0001e7a8\\U0001e75f\\U0001e7d4\\U0001e7c6\\U0001e7c7\\U0001e6fd\\U0001e77d\\U0001e750\\U0001e6f8\\U0005666e\\U0001e711\\U0001e750\\U0001e75a\ud839\udfe6\\U0001e79a\\U0001e710\\U0001e75a\\U0001e7ba\\U000dc6b8\ud839\udfe4\\U0001e776\\U0001e739\\U0001e769\\U0001e7d4\\U0001e7d1\\U0001e700\\U0001e6ea',\n          constraints={'intervals': IntervalSet(\n               [(124647, 269720), (276784, 354800), (777759, 1013802)],\n           ), 'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='_\\U000ead93\\x97w',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00073d3d\\x02W': -906_476_503_394_979_542},\n       coverage={'\u00a5\u00c9': [11476,\n         -53,\n         4983,\n         63,\n         -46,\n         -29822,\n         -19276,\n         70,\n         15,\n         -141_042_706_618_280_499_344_389_831_215_620_749_702,\n         -2708,\n         5636],\n        '\u00ff': [31757, 4, 122, 2020, 7]},\n       timing={'\u00f6': -10000000.0,\n        'i~W\u00e7W,\u00b7<\u00d2z\\x0f': 1.7976931348623157e+308,\n        '\u00c5)\ud868\udf5e': 1.400359740567235e-49},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\xde'\\xb4\\xbae\\xe8Xu\\xef{\\xd4\\x1d>\",\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.21173015218121077},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.884734248615427},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=25606,\n          constraints={'min_value': 25605,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-4.498078824352884e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 6.263836853044527e-142,\n        '\u2a96j': 6.103515625e-05,\n        'p\\xad3\u00c0W': -inf,\n        '\u00e6\u00e7\u00ac': 3.5286406050877456e+16,\n        '\u00baE8l7\\U000b2a92\u00bc\\x87!': -0.5,\n        '|\u00bf\u00be\\U000f792f3\u00ec\\U000867abp': 58,\n        '\u00e2\u00cc': -3.3953420342091052e+16},\n       coverage={},\n       timing={'ps\\U000acee0\u00a9\u00de.\u00e9': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0],\n        '': 1.377162015427191e+126,\n        '\u00ef\u00d4\u00d7\\x18\\x87\ud875\ude90H\u00e0k': -4.563623071924669e+181,\n        '\\U000a4daa\\x80\u00d1Dp\u00de': -2.1023313281473814e+211,\n        'ZE\\x8fC\\U0004635e\\U0007c655\u00e0\u00dbnp\\x12\u00e3\\U00013917\\U000843aa': 5.960464477539063e-08,\n        'reprfuncargs': -2.7690603879016395e-123,\n        '\\U00036faca\\x8f\u00f4': -5.4110274432377704e+16,\n        \"M\\x85#nY\u00b3\u00f1\u00c4\\U0005e7b6f\u00d0\u00e8o\u00b5\u00d3Y\u00dc\\x89\u00ca'\\U00037d9d\u00df\\U0007cc96W\\U000a165a5\\\\\u00df\\x89\\U000be4036\u00cf\": -2.225073858507e-311},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=31034, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 3, 1), ('b', 3, 0)), (('b', 3, 3), ('c', 2, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='U\ud821\udfacu\\x93\\x15\\x92',\n       run_start=10000000.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'FALSE': 0.0, '\\x1d\u00f22\u00fa': 124, 'U)': -1.974375860528209e+16},\n       coverage={'\u00f1\\x89\u00f3|\\x98': [-32,\n         -22025,\n         11237,\n         -21350,\n         43,\n         29175,\n         29974,\n         -2799],\n        '\u00deA\\U00100d4b\u00ee': [-13097,\n         -28773,\n         50,\n         -698232734,\n         334490385,\n         -19664,\n         7975],\n        '\u00d2': [],\n        '\u00c8\\x1a': []},\n       timing={'\\x19\\U000b9e0c\\x15\\x1d': 1.814935515130525e-258,\n        'f\\x9f': 4.200833421006674e+16,\n        ')\u00fc': -4.647189743669363e+135,\n        '': -3.402823466e+38,\n        '\u00d7': 7.41453480937634e-69,\n        'j\\\\0': 3145901100689807.0,\n        'n\u00be\u00d9\\x9e\\U00070dab': -9.379203443049838e+37,\n        '\\x93\u00aa\u00fe\\x01}\ud835\udf9f': 3.0553986768855286e+52,\n        'B\u00dcs`': 3.1708763577302797e-127,\n        '\\U00092c3c': -2.1864429135704603e-239},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-4068222528616222306, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('c', 0, 0)),\n                 (('b', 1, 2), ('b', 0, 1)),\n                 (('b', 2, 2), ('a', 0, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='l\\U000be174',\n       run_start=2.010489060833204e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'--stepwise-reset': 3559590019445137.0,\n        '\u00f4\\x85': 1.3701312963100316e+16,\n        '\\x17\\x19': 24562,\n        '': -50,\n        '\\U000e10dd\u00bad\\U0006fa55#\\U000ab576\\r\\x0b\u00d9\u00f2\\x15\u00f8\\x19\\U0005292b': 6.447884460134891e+16,\n        '\u00ba=\\x17\u00bc\\x85\u3143\\U00068d8c>': 8238,\n        'j': -19050,\n        '\u00c5\\U000b44a1\\\\\u00aa\u00a5\u00b6\u00a7\u00f8\u00da\\U000f8d5a\\U00068a06`': 1_000_000_000,\n        '\\x97\u00ea\u00e4\u00a7\u00c82\\U0009603d#Y\\U0006bd7a': 6.19451986182384e+142,\n        '\u00c2\\x92\\U000af8da\u00c9%\u00e2\u00fc/\u00f1': -15},\n       coverage={\"\\U000917af\\x90L\\x97\\U001061b1\\x96\\U0010705b\u00ed\u00a4\\x1aA'\\x1c\": [-16919,\n         -15216,\n         74,\n         309018344],\n        '\u00f0I0': []},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=113, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 0.5,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.050368887283247746},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 1, 3)),\n                 (('a', 1, 1), ('c', 2, 3)),\n                 (('a', 3, 3), ('c', 2, 0)),\n                 (('b', 2, 2), ('b', 1, 3)),\n                 (('c', 2, 0), ('b', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='?',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00bew\u00a5\\U0001bd3e\\U00032750\\U0010e537': 6.5628549876291416e+16,\n        '\\U000cc5f2\\x1f': -1.946852718151272e+16,\n        '': 1.2251291359538123e+62},\n       coverage={'Scunthorpe': [29360,\n         4_652_971_428_825_802_745,\n         -106_023_326_058_049_567_967_970_969_306_016_095_956]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.057305036189655004},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 102},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=4.75156523723315e+307,\n          constraints={'min_value': 5.088689938839426e+16,\n           'max_value': 1.7976931348623157e+308,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7106066445953846},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('c', 3, 2))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.010333000042010099,
          "overall:gc": 0.004519957932643592,
          "generate:args": 0.026062667020596564
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287654.370743208,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from TupleStrategy((TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))), TupleStrategy((sampled_from(('a', 'b', 'c')), integers(0, 3), integers(0, 3))))).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287682.782340333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U0005dcb8\u00d1\\x07\u00a2',\n       run_start=1.192092896e-07,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00099bfb\\x83': 30990},\n       coverage={'\u00aaM\\x06': [30908],\n        '': [10008,\n         30846,\n         851,\n         -1281,\n         9,\n         29471,\n         -22383,\n         14645,\n         -57,\n         6650,\n         -15,\n         5039,\n         -6972],\n        '~J\u00aa\\U000e79a0\\U000d3608\\x1c': [17, -62, 512],\n        '\\x85': [-7_498_366_514_044_486_059,\n         -125_506_797_118_047_510_090_299_205_897_408_422_401,\n         8527,\n         -16],\n        '\u00f4': [8291,\n         420,\n         -105,\n         1000,\n         -1688,\n         109,\n         98,\n         -6_222_252_686_217_457_400,\n         22166],\n        '\u00df': [-21370, 86, 19759],\n        '\\x0f\u00d5\\U000fc853|m\\U000cc8c0w\u00b2\\x13B\\x8bu \\x00': [],\n        '-\\x1ao': [-1758, -22322, 9999, 5918],\n        '+\u00a4\u00bf\\x1ezA\u00c1\\x87y\u00b9': [-191],\n        '}\\x87\\x9e\\xad': [-103, 8291, 7636, -2_147_048_535, -9002, 20502],\n        '\\xa07\\x1f\\x89\u00f1\u00cf\\U0004ce7f \\x08\\ueabc\\U000eebf0\\x02\\U000cc686\u00b1e\\U00064750\\U00055c9d\u00c2\\x00k\u00e5\\U00055a50\\x159\\U0008e75fy\u00d4<t\\U00102a71\u00e4$ID': []},\n       timing={'\u00dc\\x92\\U000eb348\u00db\\U000bb992': 1.5},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=2624525533114785449, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=26889,\n          constraints={'min_value': 26806,\n           'max_value': 453097493,\n           'shrink_towards': -47,\n           'weights': {63321: 0.34853299260364534}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.05565533432468063},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xdfg\\x15\\xf3Q\\x15\\xd4\\'\\x0fH\\x8e\\x95\\x95\\x89\\x0b\\xc0\\xdf\\xf63\\x86\\xef\\n-@\\xdb@\\xe5\\xa5\\nW\\xd6\\x04\\x02\\xf9\\xdai\"\\x15\\xe2\\x18\\xe0N\\x8d\\xc3T0\\xb3>!\\x98\\xaa\\xd0\\xc4\\xd9\\xb0\\x89\\xea\\x9e3\\x04\\xc8\\xccm\\x04',\n          constraints={'min_size': 28, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 1, 0)),\n                 (('a', 2, 2), ('c', 3, 3)),\n                 (('b', 0, 0), ('b', 1, 2)),\n                 (('b', 1, 0), ('b', 2, 2)),\n                 (('b', 1, 1), ('a', 2, 2)),\n                 (('b', 1, 3), ('b', 1, 3)),\n                 (('b', 2, 1), ('b', 3, 1)),\n                 (('b', 3, 1), ('b', 1, 0)),\n                 (('b', 3, 2), ('a', 1, 0)),\n                 (('c', 0, 3), ('c', 1, 1)),\n                 (('c', 1, 0), ('a', 1, 2)),\n                 (('c', 1, 1), ('a', 0, 3)),\n                 (('c', 1, 3), ('a', 3, 1)),\n                 (('c', 2, 2), ('a', 1, 3)),\n                 (('c', 2, 2), ('b', 1, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00d5N',\n       run_start=-2.3833992223076222e+83,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00048fde': 15292,\n        '\ud85d\udeee\u00be[t': 3.5471191741646588e+16,\n        '\u00ca\\x0b\\x8a': -3.2137561489704174e+75,\n        '\\xad\u00b1\\x1eG\\x13px\\U000c49dd\\U0007f124': 1556,\n        '': -153_843_165_839_714_760_117_518_099_018_515_777_936,\n        '\u169b\u1684\u1693\u1690\u168b\u1692\u1684\\u1680\u1691\u1684\u1682\u1691\u168f\u1685\u169c': -8.968185332123741e+114,\n        'G\\U000b6ea2$m\u00e6\u00b8\\x90\u00cc\u00ab\u00e5': -2.886644903642509e-82,\n        '-\\x88\u00ac\u00ba\u00ea1\u00f4 \\x08}\\U0009eac4&\u00ea\\x99X\\x11[': 3.924872528801725e+16,\n        '\\xad\u00e8\\x0e\ud872\udccc.\u00e9': 2020,\n        '\\x15\\x15=\ub74eD\u00be~\u00d7': 4.404933656438346e-104,\n        '\u00ca\\x15\\xad_\u00aeN\\U000f7576\u00b7': 75,\n        'Q': 112,\n        '\\x9c\u00dc\\x04\\U0005c985': -4.9890206883437e+16,\n        'L\u00b2\\xad': -93},\n       coverage=None,\n       timing={'\\x83O\\x11\\x80?\u00a7b\u00dd\\x9b\\x0f': 0.01,\n        '\\x0c\\U000b110a\\U000817cf\\U0004a273': -5.6643335898613656e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=67, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\r\\xe1\\xb9\\x83{\\xda\\xf1^h\\x08\\xeb#(\\xfb\\xfe\\xcci\\xd4.\\xf7Xp\\xa1\\x00\\x08\\x8bcp\\x02<\\x11(+{;\\xa0F}\\xc7\\x7fj\\x1f\\xdb\\x08\\xe6\\x9e\\xe5`\\xf2\\x17\\xab]$\\xab-R\\xb2\\x90m3\\xa7{+\\xc3 7\\x8e\\x12\\xbe6\\xf5;s'=\\xd3\\xc0c\\xab\\xab%\\x9f_g\\x84\\x1b\\x9c\\xd9&\\xfc\\x8c&\\xb0?51\\x14\\xf0\\xc1\\xaf1S\\xe0\\x02g{\\xb3\\xbf\\xef]\\xafy\\x94\\x99D\",\n          constraints={'min_size': 50, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 3.608430511318351e-209},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x89f\\xa9',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=29530,\n          constraints={'min_value': 29529,\n           'max_value': 29602,\n           'shrink_towards': 0,\n           'weights': {29534: 0.005397523224498638,\n            29572: 0.0019720965688930143,\n            29579: 0.0005619250484013635,\n            29558: 0.002395771360020028,\n            29549: 0.010865265557548085,\n            29578: 0.011336784900372902,\n            29555: 0.0023058815786055078,\n            29545: 0.0037789283001243004,\n            29597: 0.0021424679337510764}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'wf\\x12(\\xc0\\xb6\\xb6\\xde\\x0f',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=10.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2823576314915784},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.54022161193369e+235,\n          constraints={'min_value': -6.368758770385235e-65,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9187136025110021},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.5632968964254},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'a\\x88\\xdd\\xdc\\x9b\\x9d\\x1d',\n          constraints={'min_size': 0, 'max_size': 57},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 2), ('a', 3, 1)), (('c', 3, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x93\u00b2',\n       run_start=-3.1633571493017584e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000598b1e\u00b9\u00fa\u00f8\\x95\u00f0p': -9588996986252824.0,\n        '$-\\x8f': 4.7561840588565165e-145},\n       coverage={'8\u00c2': [119, -68, -25733, 12562, 66],\n        '\\x89\\xa0\\x92': [-23493],\n        '\u00d8': [512, 8238, 9]},\n       timing={'*6': -1417317769513088.0,\n        '\ud878\udce0\\x85': 5.802789297286758e+58,\n        '5\u00f9\u00e9': 1.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-32008, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-2345774077672732.5,\n          constraints={'min_value': -2345774077672733.0,\n           'max_value': -1.2058171447379198e-188,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 3.346175575245499e-290},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-3806,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.4324958279570779e+308,\n          constraints={'min_value': -1.9155537119588643e+256,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_143_485_405,\n          constraints={'min_value': None,\n           'max_value': -24,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5657403477105188},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.06796864788000591},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='Er\\x85=\\x90m\u00d9\\x10',\n       run_start=-1.7255479271713908e+225,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'+': -5.57419635146878e+16,\n        '.Zx\\U00083c39R\\x9e\u00f9': -2.0190633618441656e+16,\n        'n\u00d9': -1.7976931348623157e+308},\n       coverage={},\n       timing={'4F\u00e9': -4.328205834375809e+16, '6\ud870\udec9\u00aa\u00db\u00fe': -2.442778778080236e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-7463, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u2121\u207d\u2078\ud853\udf28\u2087\u2154\u2104\\u20ff\\U00036d61\u20bd\u20db\u20a4\\U00013fe0\ua519\\u20f1\u208c\u214a\ud843\udcd7\\U0004cb3b\\U0001b65d\u20df\u25a6\u20b2\u2154\u846f\u2144\u2094\\U000460ce\u83ba\u20dc\u2133\u20bd\u2119\\u20f3\u207b\u20de\u210c\u2098\\u20ce\u208e\u2146\ud85e\ude13\u20be\\u2073\u2132\u208e\\U00042841\\U0001c30e\u20a6\u2087\\u20fb\u6278\ud84c\udc15\u2092\u20a8\u2102\\U0004c8b5\ud868\udd29\ud849\udeac\u20a0\u2133\u2130\u212b\u2145\u2127\u20d8\\u20cb',\n          constraints={'intervals': IntervalSet([(8291, 329030)]),\n           'min_size': 44,\n           'max_size': 144},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=155,\n          constraints={'min_value': None,\n           'max_value': 9905,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0169\u0102\u0168\\U000d5d15\\U000c8ee6\u0119\ud876\udecc\\x8f\\U000ce07c\u014d\u00d1\u00be\u0120\u0111\u013a\u017d\\U000b4280\u016e\u0119\u010e\u0168\\U00079b51\u00c6\u016d\u0152\\U00098733\u00e9\\U000b1651\u00c8\u0106\u0122\u00fb\u00c6\u014e\u00b3\u0159\u0110\\U0008fdd5\u0163\\U000aa84a\u0104\\x9c\u0150\u017d\u015a\u00d8\u00dc\u0108\u0142\\U00052ea4\u0110\u00b1\u015d\\U000861ee\u00b8\\U0004ae5a\\U000ab022\\U00051945\ud872\udd17\u0154\u0119\u0129\u0160\u0133\u00ac\u011b\\U000b57e2\\x83\u0131\u00c7\\U000910ab\u00ef\\U0004d791\u0172\u00de\u015c\u0149\u0150\u00b9\u00bd\u00d5\u015f\u00d5\u0158\u00dc\u00ab\u016e\u00a4\u015d\u00a3\\x8c\u010a\u0134\u0117',\n          constraints={'intervals': IntervalSet(\n               [(127, 1921),\n                (147429, 191331),\n                (289662, 348784),\n                (429325, 429850),\n                (492696, 638106),\n                (652400, 762749),\n                (777743, 780216),\n                (796840, 884332),\n                (1009160, 1020687),\n                (1108891, 1114111)],\n           ),\n           'min_size': 27,\n           'max_size': 120},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xef[\\x1c8\\xb6',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-98,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -2_782_408_052_509_440_449,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=165,\n          constraints={'min_value': 45,\n           'max_value': None,\n           'shrink_towards': -267,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud83e\udc3f\u0273\u023b\u01f1\u5297\u0212\\U00061cc0\\U000a119f\u023a\\U00075597\u01cb\u01c9\u0261\u026c\u01d3\u0241\u01dd\\U000ba84e\ud843\udf2f\u0260\\U000c9019\u029a\u01b3\\U000acc4c\\U0001423d\u7558\u0252\u0278\u01ab\u0260\u028c\u022f\u01db\u01c6\\U0005d2ce\u01e6\u01ab\u025e\\x00\u0265\u01a8\u0227\u022f\u01b9\\U000a2dc9\u0273\u01f8\u01b1',\n          constraints={'intervals': IntervalSet(\n               [(0, 1),\n                (420, 7747),\n                (8288, 65904),\n                (80579, 142649),\n                (368172, 578493),\n                (607139, 753098),\n                (755990, 855389)],\n           ),\n           'min_size': 32,\n           'max_size': 92},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000be596',\n          constraints={'intervals': IntervalSet(\n               [(9999, 271999), (441655, 478394), (637220, 839261)],\n           ), 'min_size': 1, 'max_size': 101},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'WU\\xf6\\xefSZ?',\n          constraints={'min_size': 4, 'max_size': 104},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u2733\u27af',\n          constraints={'intervals': IntervalSet([(9999, 367970)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.659836099878279e+307,\n          constraints={'min_value': 2.225073858507e-311,\n           'max_value': 6.372864403145549e+307,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.20876306156999697},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('c', 0, 1)),\n                 (('c', 0, 2), ('b', 2, 2)),\n                 (('c', 1, 3), ('c', 3, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0058158329338766634,
          "overall:gc": 0.0022265840671025217,
          "generate:args": 0.04063804220641032
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287652.822211583,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=1.2282104355578043e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x1f\u8155q': 3.077718625375057e+16,\n        '': 0,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('c', 3, 3)), (('c', 2, 1), ('c', 0, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00b3\u00b7',\n       run_start=-5.365822244029918e-250,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x14\u00fc': 2264805347193109.0,\n        '3': -3.4827174117282807e-81,\n        '\u487ar5\u00f7\\x1c\\x86\u00bb\\U0007257cU\\x0f\\U00061027\u00ff80\\x0bj\u00fdb^\u00f7\\x84\\x19 `\u00fcI\u00ec\u00ca:\ud850\udd39\u00a4\\x9f': 2.225073858507203e-309,\n        '\\xad\u00ee\\U0006063f': 30858,\n        '\u00e3': 0.0001},\n       coverage=None,\n       timing={'\u00ed\\x85\\U00049103': -4.545871171396039e-95,\n        'E5(\\\\\\U000971f3\u00ee\\x00': -1.4330193989669032e+16,\n        '\ud835\udc7b\ud835\udc89\ud835\udc86 \ud835\udc92\ud835\udc96\ud835\udc8a\ud835\udc84\ud835\udc8c \ud835\udc83\ud835\udc93\ud835\udc90\ud835\udc98\ud835\udc8f \ud835\udc87\ud835\udc90\ud835\udc99 \ud835\udc8b\ud835\udc96\ud835\udc8e\ud835\udc91\ud835\udc94 \ud835\udc90\ud835\udc97\ud835\udc86\ud835\udc93 \ud835\udc95\ud835\udc89\ud835\udc86 \ud835\udc8d\ud835\udc82\ud835\udc9b\ud835\udc9a \ud835\udc85\ud835\udc90\ud835\udc88': -5.226841127317101e+16,\n        '\u00d9': 8.5062557592185e+306,\n        '\u00d7>': -662610451964786.0,\n        '\u00cd\\U000c427e\\U000a275e\\U000f21e2': -2.957156727235488e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-3461988994953923570, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\xd8\\xc49+a._\\x9b\\x98\\x05\\x95\\xde\\x02m[\\xf1\\xca\\xa5\\x87\\x8e=G\\xbc\\x88,\\xb6&\\xb26\\x0e\\x9a\\x18u\\xd33\\x8eup\\xd50\\xfb\\xb7\\xd8\\x10\\x9e/\\xce\\x17\\xd2\\xcfO\\x86\\xbd\\xdd\\x1f\\xcdK\\xbe5\\xe1r\\xee\\x9a\\xaa\\r\\x00\\tM@\\xc3.W6\\x9e\\x05\\xed\\xba\\xa6\\xa6\\xebw\\x1d\\xe8N\\x06\\x8d2\\x1e\\x81W\\x88\\x190\\x87\\xed\\x9at\\xf8i\\xf8\\xdb\\x04\\xa4\\x90\\xfe\\x81w\\x06XT\\xd9\\xba\\xaf\\xd9H\\xf4\\x96\\x17W\\xe0e'\\xe7\\xc5\\xbd;\\xef\\xb9\\xce!Mp\\xe2xc\",\n          constraints={'min_size': 45, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'.observation',\n          constraints={'min_size': 9, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=28,\n          constraints={'min_value': -4,\n           'max_value': None,\n           'shrink_towards': 92,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'N^\\xb6\\xd0\\x91-',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 8.510065773349205e-170},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 2, 1)),\n                 (('b', 2, 3), ('a', 3, 2)),\n                 (('c', 3, 2), ('c', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='L',\n       run_start=2.495150009054417e-245,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'f\\U000e8b64\\U0008a7e5\u00b3#\\x04\u00e4\\x0e\u00ca\\U0001a354\u00f5\\x94': -19,\n        '[': 524288,\n        '\u00b0\\x01': 17466},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=21292, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7918249372102169},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6993583713198673},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe8',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('a', 3, 1)),\n                 (('a', 2, 0), ('b', 1, 2)),\n                 (('a', 2, 3), ('b', 2, 0)),\n                 (('a', 3, 3), ('b', 1, 3)),\n                 (('b', 0, 0), ('a', 3, 1)),\n                 (('b', 0, 0), ('b', 3, 1)),\n                 (('b', 0, 0), ('b', 3, 3)),\n                 (('b', 2, 0), ('b', 1, 1)),\n                 (('b', 2, 3), ('c', 3, 0)),\n                 (('c', 1, 3), ('a', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00c1\u00f6v',\n       run_start=6.40488442732658e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00a7\\x04\\U00100701\\x18\u00d3*\\U0004b2c0\u00b6$\\x03\\U0008909f': -27349,\n        '\u00a4\\x80\\U0010515c\\U000b9a235\\x0c\\U00043b14\u00ce\ud834\udd8e\\U000705d1\u00ab0\\x1d\u00a4q`^\u00f8': -10597,\n        '/\ud841\udf36\\U000e2324\u00de\u00de3\u00b0\\x04': 3.934563754855577e-27,\n        'k~\u00fc\\x12': 2834,\n        '': 3210,\n        '\u00e2\\U0003a216\\x84\\U0007920b': 9.605047984652926e-229},\n       coverage=None,\n       timing={'n\u00e0\\x10\\U001080f6': -2.955154772512255e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-32219, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=0.2685718539762857,\n          constraints={'min_value': 4.655590564731072e-57,\n           'max_value': 1.9,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.17824460261342304},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.7976931348623157e+308,\n          constraints={'min_value': 4.1716577713369955e+283,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.77891123155159},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u75a5\u74e3\ud886\udfd1\u7559\u74de\u74f2\u74d7\ud847\uddce\u751c',\n          constraints={'intervals': IntervalSet(\n               [(29880, 40690), (60644, 249351)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='z\\U00077173\\x1e\\U000b3ecb',\n          constraints={'intervals': IntervalSet(\n               [(0, 127),\n                (487732, 641579),\n                (700867, 815229),\n                (850457, 1049680)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 7.058031977245247e-31},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 1), ('a', 0, 3)),\n                 (('b', 1, 1), ('c', 2, 2)),\n                 (('c', 0, 0), ('b', 0, 2)),\n                 (('c', 0, 1), ('b', 3, 3)),\n                 (('c', 2, 0), ('c', 2, 2)),\n                 (('c', 3, 3), ('c', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00f2~\ud86a\udc90\\x7f>',\n       run_start=1.5258611095101116e-173,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d2\\U00019bc2\\x02\u00bf%': -5.959057930115294e+16,\n        '\\U00069cb5': 1.5},\n       coverage={'\\U000cdb3c\u00d3$': [420, -6669, -18823, 11846, -58, 103],\n        '\u00d1W\\U00100510\\x1c\\U000c8ea2\u00e2': [9_192_815_338_636_884_588]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=32417, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-22243,\n          constraints={'min_value': None,\n           'max_value': 123_605_542_547_893_435_655_718_618_597_502_377_256,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xfe8\\xef\\xd5\\x1a\\x0fk\\x90\\xc5\\xf2T\\xc2\\xa2v\\xa3\\n\\x10\\xd3\\x1d\\x01\\x8e\\x0e\\x9a\\xd0\\x08\\xd4\\xa8c\\xcb\\xe9\\x15\\xb0\\x97\\x8e\\xb3M\\x8d\\xf5A\\xdc\\x83',\n          constraints={'min_size': 21, 'max_size': 121},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 1, 0), ('b', 2, 3)),\n                 (('c', 1, 1), ('a', 1, 1)),\n                 (('c', 2, 3), ('b', 3, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.007160834153182805,
          "overall:gc": 0.0027771248714998364,
          "generate:args": 0.026174791099037975
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287653.269484875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0004411659901961684,
          "overall:gc": 0.00021070899674668908,
          "generate:args": 5.41249755769968e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287663.480702833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=1.2282104355578043e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x93'C:\\xce{w\\xe2U\\xf9\\xe5\\n\\xca\\xeb\\xdc\\x17\\xaa\\xdb/'c\\x0b=\\xa3\\xcb\\xe6\\x02i\\xca\\xb9*!N\\x9f\\xa0&\\x8e\\x0c\\x1b\",\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00fcD\uabaa\\x83X',\n          constraints={'intervals': IntervalSet([(0, 511), (8918, 121431)]),\n           'min_size': 0,\n           'max_size': 25},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d6\\U000528a9\u00a4\u00f5\u00daR\\U000e3e21\\U000dd57dz': -4.048889193453569e+16,\n        '\\x0c\\U00104d81': -72,\n        ']\\x93\u00e5': 7.11568919565624e+16,\n        '': 1.4799994571640396e+50,\n        '\u00c1\\U00092c6c': 8203,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -26369,\n        '\\x8e': 1.4747850839325638e+204,\n        '\\U000673c3\\U000e6ebd': 0.001},\n       coverage=None,\n       timing={'': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 6.818629716573128e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23378, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$\u00ec\u00e9}\u00a7}\u00bcb\u00f8\u00ce',\n       run_start=3.581567246564354e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.771065281589164e+16,\n        '\\U000be75859\\x1b\u00dcO\\U000b8445\u00cf\\U000aff3d\u00be\u00f5\\U00015e1bm\u00a1\\U000cf2f5\u00cb\\U000d7847\\U000ccfd4\\U000ef509\u00c0\ud811\udc22': 8.936505514521892e-238,\n        '\\x102V\u00d5TC\u00d5\\U00072d28\\U0007d679': 3.750551445609733e+16,\n        '9\\x9f': 4.131855246241256e+209,\n        '\\x13\u00c9\\U0008fb18\\U00040c62': -2.3884174463715724e-11,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': -2.8577991390714955e+217,\n        '\\U0007b5a6@\u00b2': 1.0,\n        '\\x9f\\x8f\u00e1\\x10': -1.3005603755847338e-230,\n        '\u00f8J': 1.7666368542055514e-214,\n        '8\\U000f5edb\u00eb\\U000ac50f2': -1.6580908882272163e+167,\n        '<': -5.556466201863923e+16,\n        '\\\\\u00a8d\u00b7S\\r2\\x92\\U000c259e\u00b8': -3.948982162075043e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=27912, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5542707842964972},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9101162988235343},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_634_379_034,\n          constraints={'min_value': None,\n           'max_value': -77,\n           'shrink_towards': -117,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*#\\xb3\\xa8kaAo\\x9b9\\x1f\\xd2\\x92\\xb9\\xc4|\\xf2\\xd3t1\\xba\\xefv\\xaa\\xbf\\xac\\xaf$\\x12J\\xfc-\\xdeD\\x966\\x8d\\xc7yw\\xe7\\x081\\xbb\\x16m\\xdb\\t9\\x9bb\\xba\\x80\\xaf\\xdd\\x1aV\\x86\\x85\\xf4\\\\sy\\xe5\\xed\\xdeI\\x89\\x14`]\\xc3\\xfd\\xc0\\x05\\xa7|\\x07\\x86\\xf6\\xd1\\xda\\xa5\\xfevj\\xad\\xa3\\x9b\\x15\\xe2\\x1aN\\x08\\x11\\xc3Y\\x06\\xed[\\xf7/\\x8eO\\x9c\\x1f\\x9e\\xcf\\xc6\\xf2\\xbb%1 \\x8b\\\\\\xc1VSt\\xadz*\\xe6\\x8d7^\\xday\\x04\\xeb',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\ud836\udc5c\u00d2\u00eb\\U000db529`',\n       run_start=-4.616014152953067e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'D': -16808},\n       coverage=None,\n       timing={'\u00e5\u00bd\\U00103832\u00f2\\U0009eb76': -1.7727957235719832e+16,\n        '\u00e0S\u00a1i\\x12\u3f06': 5.021463670957227e-96,\n        '\u00fb\u00f5\u00b9': 2.4244279143403476e-17,\n        '\\U001008c59': -4.0723981648567485e-159,\n        'U\\x13J\\U000eb739\\U00073fec\u00d1\u00d9\\x15\\x91p\\x96M\\U000dc798': -2272840267908239.0,\n        '0': 2.609602484521558e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=21, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 3, 3), ('b', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.005,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00107fdf\u00fcY': -1.156990422066653e+168,\n        '\u00ca%\\x1a\\U000fb7ba\u00fch\\x8bp\u00d2#': -88},\n       coverage=None,\n       timing={'': -1.7976931348623157e+308,\n        '\u00c9\\U0010f590r': -0.99999,\n        '\u00c7\u00cf\\x84\u00f2e\u9553\u00ce\\t': 4030553727692000.0,\n        '\u00a9': -6.1459042833091976e+16,\n        '\\U000a361c\\x14': 3.3193278117199268e-37},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-32337, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-5.507032826264715e+16,\n          constraints={'min_value': -inf,\n           'max_value': 2.4433846118408528e-171,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00canD\u00c2d3\ud859\udf10',\n       run_start=-3.406836195912482e-261,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ea\u00e2': 0,\n        '`': 8.088437146736769e-50,\n        '': -5305052629581041.0,\n        '\\x0f\\U000bfdb1Ef\u00a4\"8\\x81\u00cf\\U0008dcf8': -64,\n        '\u00c0e': 7.523913691654665e+276,\n        '\\U0007a468\u00be\u00f8X\\x9a': -1.2961583191350866e+16},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=91, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d6\\U000528a9\u00a4\u00f5\u00daR\\U000e3e21\\U000dd57dz': -4.048889193453569e+16,\n        '\\x0c\\U00104d81': -72,\n        ']\\x93\u00e5': 7.11568919565624e+16,\n        '': 1.4799994571640396e+50,\n        '\u00c1\\U00092c6c': 8203,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -26369,\n        '\\x8e': 1.4747850839325638e+204,\n        '\\U000673c3\\U000e6ebd': 0.001},\n       coverage=None,\n       timing={'': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 6.818629716573128e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23378, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$\u00ec\u00e9}\u00a7}\u00bcb\u00f8\u00ce',\n       run_start=3.581567246564354e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.771065281589164e+16,\n        '\\U000be75859\\x1b\u00dcO\\U000b8445\u00cf\\U000aff3d\u00be\u00f5\\U00015e1bm\u00a1\\U000cf2f5\u00cb\\U000d7847\\U000ccfd4\\U000ef509\u00c0\ud811\udc22': 8.936505514521892e-238,\n        'z \\x99\\U00062fcf\u00e5\\xa0\\n\u00a1Y\\xad\\x0c\\x96\\x1b\u00cfG5': -10000000.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=27912, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5542707842964972},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9101162988235343},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_634_379_034,\n          constraints={'min_value': None,\n           'max_value': -77,\n           'shrink_towards': -117,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*#\\xb3\\xa8kaAo\\x9b9\\x1f\\xd2\\x92\\xb9\\xc4|\\xf2\\xd3t1\\xba\\xefv\\xaa\\xbf\\xac\\xaf$\\x12J\\xfc-\\xdeD\\x966\\x8d\\xc7yw\\xe7\\x081\\xbb\\x16m\\xdb\\t9\\x9bb\\xba\\x80\\xaf\\xdd\\x1aV\\x86\\x85\\xf4\\\\sy\\xe5\\xed\\xdeI\\x89\\x14`]\\xc3\\xfd\\xc0\\x05\\xa7|\\x07\\x86\\xf6\\xd1\\xda\\xa5\\xfevj\\xad\\xa3\\x9b\\x15\\xe2\\x1aN\\x08\\x11\\xc3Y\\x06\\xed[\\xf7/\\x8eO\\x9c\\x1f\\x9e\\xcf\\xc6\\xf2\\xbb%1 \\x8b\\\\\\xc1VSt\\xadz*\\xe6\\x8d7^\\xday\\x04\\xeb',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 0, 0)),\n                 (('a', 0, 2), ('a', 0, 2)),\n                 (('a', 1, 0), ('c', 0, 3)),\n                 (('b', 3, 0), ('b', 2, 0))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.010901824745815247,
          "overall:gc": 0.004839008208364248,
          "generate:args": 0.017025791050400585
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287669.2559465,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=1.2282104355578043e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d6\\U000528a9\u00a4\u00f5\u00daR\\U000e3e21\\U000dd57dz': -4.048889193453569e+16,\n        '\\x0c\\U00104d81': -72,\n        ']\\x93\u00e5': 7.11568919565624e+16,\n        '': 1.4799994571640396e+50,\n        '\u00c1\\U00092c6c': 8203,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -26369,\n        '\\x8e': 1.4747850839325638e+204,\n        '\\U000673c3\\U000e6ebd': 0.001},\n       coverage=None,\n       timing={'': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 6.818629716573128e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23378, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$\u00ec\u00e9}\u00a7}\u00bcb\u00f8\u00ce',\n       run_start=3.581567246564354e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.771065281589164e+16,\n        '\\U000be75859\\x1b\u00dcO\\U000b8445\u00cf\\U000aff3d\u00be\u00f5\\U00015e1bm\u00a1\\U000cf2f5\u00cb\\U000d7847\\U000ccfd4\\U000ef509\u00c0\ud811\udc22': 8.936505514521892e-238,\n        '\\x102V\u00d5TC\u00d5\\U00072d28\\U0007d679': 3.750551445609733e+16,\n        '9\\x9f': 4.131855246241256e+209,\n        '\\x13\u00c9\\U0008fb18\\U00040c62': -2.3884174463715724e-11,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': -2.8577991390714955e+217,\n        '\\U0007b5a6@\u00b2': 1.0,\n        '\\x9f\\x8f\u00e1\\x10': -1.3005603755847338e-230,\n        '\\x00\u00baf/\\x8eh\u00e9\u00ce': 4.713995144893105e-190,\n        '\\U0006043b\\x93\\x9c:\\\\\u00e2X': 7.0156435253262664e+16,\n        '\u00f67\\U0002f284\\x91': -6754332893070666.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=27912, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5542707842964972},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9101162988235343},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_634_379_034,\n          constraints={'min_value': None,\n           'max_value': -77,\n           'shrink_towards': -117,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*#\\xb3\\xa8kaAo\\x9b9\\x1f\\xd2\\x92\\xb9\\xc4|\\xf2\\xd3t1\\xba\\xefv\\xaa\\xbf\\xac\\xaf$\\x12J\\xfc-\\xdeD\\x966\\x8d\\xc7yw\\xe7\\x081\\xbb\\x16m\\xdb\\t9\\x9bb\\xba\\x80\\xaf\\xdd\\x1aV\\x86\\x85\\xf4\\\\sy\\xe5\\xed\\xdeI\\x89\\x14`]\\xc3\\xfd\\xc0\\x05\\xa7|\\x07\\x86\\xf6\\xd1\\xda\\xa5\\xfevj\\xad\\xa3\\x9b\\x15\\xe2\\x1aN\\x08\\x11\\xc3Y\\x06\\xed[\\xf7/\\x8eO\\x9c\\x1f\\x9e\\xcf\\xc6\\xf2\\xbb%1 \\x8b\\\\\\xc1VSt\\xadz*\\xe6\\x8d7^\\xday\\x04\\xeb',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('c', 1, 1)),\n                 (('a', 0, 3), ('a', 0, 2)),\n                 (('a', 1, 0), ('c', 1, 3)),\n                 (('a', 1, 3), ('a', 3, 1)),\n                 (('a', 2, 0), ('c', 3, 1)),\n                 (('a', 2, 1), ('c', 0, 3)),\n                 (('a', 2, 2), ('a', 3, 3)),\n                 (('b', 0, 0), ('b', 1, 3)),\n                 (('b', 0, 0), ('c', 1, 0)),\n                 (('b', 0, 1), ('b', 1, 0)),\n                 (('b', 0, 3), ('a', 0, 0)),\n                 (('b', 1, 0), ('a', 1, 2)),\n                 (('b', 1, 2), ('a', 1, 2)),\n                 (('b', 2, 1), ('c', 1, 0)),\n                 (('b', 2, 3), ('c', 1, 1)),\n                 (('c', 0, 0), ('b', 2, 2)),\n                 (('c', 0, 0), ('c', 0, 0)),\n                 (('c', 0, 3), ('a', 1, 0)),\n                 (('c', 1, 3), ('c', 2, 2)),\n                 (('c', 3, 1), ('a', 3, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U000f70e5*m\\t\u00ac',\n       run_start=-1.6650167523259834e+65,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'F\u00cb\u00a6\\x9b\u00eaV6n\u00ed\\xa0\\x06xm\u00eaw\\x006': 5.339808213537358e-199,\n        '\\x07c\\U00096ace\\x01\\U000c49a3\ud874\udc0f\\U0010d080\\U000f3d5d': 5.838179501389058e+16,\n        '\u00c0': 3.5969582639936064e+31,\n        '\u00db\\x13\\U000c777f': -5.211830997954857e+16,\n        'aH\\x90%': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0]},\n       coverage=None,\n       timing={'w\\U000be116\\x86 \u00fc\\U000e5795*': -3.4795145643319424e+16,\n        'o\\U000ae72c\\x83B\u00f6\\U00108e06\\x80\\x84': -1.8128517977463907e+265,\n        \"\\x16C\u5483'\": -9174965822186424.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-76, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-0.5,\n          constraints={'min_value': -3.459582608530226e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.4141092914554211},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(49499, 124747),\n                (255047, 268232),\n                (332866, 357790),\n                (400399, 636433)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9200014169430462},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x0f\\xacJH\\x17',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.210586690860469e+307,\n          constraints={'min_value': 3.845408927551532e+180,\n           'max_value': 9.350122121810896e+307,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.2250738585072014e-308},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('a', 1, 2)),\n                 (('a', 1, 2), ('c', 1, 0)),\n                 (('b', 0, 1), ('a', 0, 2)),\n                 (('b', 1, 1), ('c', 1, 1)),\n                 (('b', 2, 1), ('b', 0, 2)),\n                 (('c', 1, 3), ('a', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='p.',\n       run_start=-3.3889050870409696e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 19337,\n        '7\u00b3': 756663187425026.0,\n        'v': -1124,\n        '\\x80\\t\\U000c8dbcl\u00ce\\x15\u00c6\\x94\u00c6e\u00c6V\\U000e8b2c\\x93\u00bf\\xad\\x96': 4.457176606473262e+16},\n       coverage=None,\n       timing={'\\U00101d7d.1+\\x99': 1.0732087231706375e+243,\n        '\\x83\\xa0|': -3.4025716725610725e+75,\n        '\\U000991bb\u00a9\u2288\u00e1|I': -3.9850171639224932e-143,\n        ' ({})': 4.227121358733139e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=93661886531830772, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb9\\xbao\\x1d\\xee\\x16\\x8f',\n          constraints={'min_size': 0, 'max_size': 43},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 0, 1), ('a', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='i\u00det\u00f7\u00be',\n       run_start=-1.0779426477012991e-97,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'\u00b3': [251594713,\n         -19712,\n         4166,\n         -2261,\n         -111,\n         12486,\n         267,\n         2172,\n         -91]},\n       timing={'\\x82\\x1c\"\\x9e\u00d9': -1.1125369292536007e-308,\n        '\u00e8': -4.079013771417631e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud4b5\ud505\ud888\udee7\ud4fd',\n          constraints={'intervals': IntervalSet([(54342, 465360)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('b', 1, 2)),\n                 (('a', 2, 1), ('b', 2, 3)),\n                 (('a', 3, 1), ('b', 2, 3)),\n                 (('a', 3, 2), ('a', 2, 0)),\n                 (('b', 1, 1), ('c', 1, 2)),\n                 (('b', 1, 3), ('b', 2, 0)),\n                 (('b', 2, 1), ('a', 0, 2)),\n                 (('b', 2, 2), ('a', 3, 3)),\n                 (('b', 3, 0), ('c', 2, 3)),\n                 (('c', 1, 0), ('c', 1, 0)),\n                 (('c', 1, 3), ('c', 0, 1)),\n                 (('c', 2, 3), ('a', 3, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00c4',\n       run_start=1.1082935429141635e-303,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d8\u00c5\u00ccj`\\x1d6l}i\\U00061443[': -6.864651315870704e+16,\n        'ap\\x07\\U000fa131\\U0003f351\u00d3\u00d5\\x13s': 97,\n        '\u00cf\u00b9\u00b3': 54,\n        '\\x12': -8.273678867115752e+56,\n        '\\U00080786': 39},\n       coverage={'\u00f5\u00eb': [-8317, -12597, 9999, 98, -6549, 82],\n        '': [-13, -117, 32, -17209, -15451, -25097],\n        '\u00cb\u00bcA\u00fa_\\U0010ad64\u00efv\u00cf': [-32023,\n         122,\n         24754,\n         -4896,\n         21304,\n         56,\n         -14263,\n         -9926,\n         -3720,\n         39_585_003_639_625_958_246_656_640_411_839_638_146,\n         105],\n        '!7\u00ba`': [8265],\n        '\\U00066357\u00cf\u00db\\U00049f91\\U000e82f1\u00a7m+': [],\n        '\\x14\ud882\udc7b\u00a1': [-999194859, 987223011, -13798]},\n       timing={'u\\U0007ed78\u5299\\x85': 5.805054030720694e+16,\n        '\\U0003c893\u00b9\ud885\ude66\\U000c1841\\x18\u00a4\\x92\\U00052916\u00d2': 231768075009.14066,\n        '\\x89\u00d9\u00f0\\x02U\\U0005ce1c+\\U000a739d\\x11': -4.7284363254456456e+16,\n        '\\x88i\\x81cP\\x13\u6423\\x12\u00fd@\\x9b': -8.99744696080999e+86,\n        '\\x93\u00a5#\\x07\\x17x': 1e-05,\n        '\\x92\u00d6\u00f6\\x8e\\U000445f2': 3.6276650462555923e+123,\n        '\u00dc\\U000593b9q\\U000b4e76\\x9f\u00b5\\x8en\\U000899baR\u5cd1\\x02\u00fbr\\x1d\\n\\x0f\\U00054580j': -3.798781475013334e-49,\n        '-PnQ\u00e9\u00d3\\x13': -1.425952362714401e-297,\n        '/\u00db\u00e8fr\u00c0\\x99p': -3.92054716677277e+16,\n        '$\\x91*': -1.3011047529711098e+65,\n        't\\x0fhN$j': -1.428792276289525e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=4469, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('b', 0, 0)),\n                 (('a', 1, 3), ('c', 2, 1)),\n                 (('a', 2, 1), ('c', 1, 2)),\n                 (('b', 0, 1), ('a', 2, 0)),\n                 (('b', 0, 2), ('b', 2, 1)),\n                 (('b', 2, 0), ('a', 1, 1)),\n                 (('b', 2, 1), ('b', 0, 1)),\n                 (('b', 2, 1), ('c', 2, 2)),\n                 (('b', 2, 2), ('b', 3, 0)),\n                 (('b', 3, 0), ('c', 2, 3)),\n                 (('b', 3, 2), ('a', 0, 2)),\n                 (('c', 0, 3), ('a', 2, 2)),\n                 (('c', 1, 2), ('c', 3, 0)),\n                 (('c', 2, 1), ('c', 1, 3)),\n                 (('c', 2, 1), ('c', 2, 0)),\n                 (('c', 3, 2), ('b', 3, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-4.816272849387981e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'K': [65535, 11820, 22467, -26677],\n        '\ub69f\\U000543dd\\x9bh\u00ff': [-9_064_023_546_783_297_390,\n         -73,\n         12517,\n         -49,\n         4963,\n         -6_787_202_406_398_597_899,\n         -13670,\n         267,\n         300,\n         47,\n         -24794,\n         17340],\n        '\\x13\u00b8t': [-86]},\n       timing={'\\U0008c91e/pS/U': -5395534959144366.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=30, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.3333333333333333},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 1, 3)),\n                 (('a', 2, 2), ('a', 0, 3)),\n                 (('b', 1, 2), ('b', 1, 1)),\n                 (('b', 1, 3), ('b', 0, 0)),\n                 (('c', 0, 3), ('b', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='o\\U0009eff3\u00cf\\U00010dc1\\x91',\n       run_start=2.0042906947481272e+229,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x03\u00df\\x822\\U0010485er\\U000b33528\u00ed\\U000d1961': 8207,\n        '\u00d1\u00b5z': -7023,\n        '\\x17\\U000c22d7\\U000bf846\\x02_~\\U000eb9cd.': 84,\n        '\\U0007c242EI1': -6.998582735233001e+16,\n        '\\x87%\\\\\\\\\u00d9\\U0001a3b4\\U000fd697\\U000564e5\\U00088a16': -32467,\n        'nofuncargs': -1.7845859144947702e+16,\n        '\\x14\u00e5': -24,\n        '': -5.0083911688765496e+16,\n        '\\U0006172f\\U0008ab94E': 13367,\n        '\u00c1\u00b67\u00d2\u00dd\u00c1\u00bc\\x05\\x04#\\U001066ef\\x15W\u00dd/\u00e8\\x94\u00bd': 325,\n        '\\U000a48d5p:\\U00075207\\U000125c2\u00b9\u00c8v\\x7f': -28815,\n        '\\x17\\x19': 12622,\n        'b\\U00060f16': 32569},\n       coverage={'\u00e3O*\u00b0': [-7651,\n         -13377,\n         6_268_712_049_332_626_853,\n         -23311,\n         15374,\n         -111],\n        '': [-24, -18024, 16448, 8288, 15689, -60, 2987]},\n       timing={'rm:\\x83.\u00d1\\x8e\u00e5': 1e-05,\n        'N': 2.184811318546334e+16,\n        '\ud835\udc7b\ud835\udc89\ud835\udc86 \ud835\udc92\ud835\udc96\ud835\udc8a\ud835\udc84\ud835\udc8c \ud835\udc83\ud835\udc93\ud835\udc90\ud835\udc98\ud835\udc8f \ud835\udc87\ud835\udc90\ud835\udc99 \ud835\udc8b\ud835\udc96\ud835\udc8e\ud835\udc91\ud835\udc94 \ud835\udc90\ud835\udc97\ud835\udc86\ud835\udc93 \ud835\udc95\ud835\udc89\ud835\udc86 \ud835\udc8d\ud835\udc82\ud835\udc9b\ud835\udc9a \ud835\udc85\ud835\udc90\ud835\udc88': 1.2300581521949574e-13,\n        '\u00ae\\U000daa98\u00c7\\t7\u00f8\u00be': -8.448387864180396e-300,\n        '6\u00e5\u00c6\ud83e\udd72\\x1c\\x85\u00far!!;': -2.815216387140646e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=12813, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.7976931348623157e+308,\n          constraints={'min_value': 5.236533108380255e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.984638416170377},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('a', 2, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.014244296937249601,
          "overall:gc": 0.004158912051934749,
          "generate:args": 0.2728018367779441
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287650.677149875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u00fb\ud834\udd20\u00f6}',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'\u00c3\\x14\\x04': [63, -16265, -2076],\n        '\\x10V\u00ef': [17456,\n         3651,\n         2_234_824_367_681_882_348,\n         134_098_486_710_296_824_103_365_762_540_441_932_989,\n         -25597,\n         448,\n         -417,\n         -6838,\n         -2569,\n         -97,\n         24981,\n         -47661830,\n         23096,\n         7_849_319_332_073_113_712],\n        '': [18022,\n         448,\n         -5845,\n         26110,\n         -18927,\n         -1_417_270_344,\n         715_687_448_406_122_981,\n         61,\n         420,\n         512,\n         22_178_483_800_434_010_123_575_410_453_169_494_297,\n         -30090,\n         -98,\n         6157,\n         32459,\n         14511,\n         -20533,\n         26965,\n         -7214]},\n       timing={'t\\U000ccfa6\\U0009c302\u00d6\\U000619ee\\uf838\u00c8': -2.3369138272849474e-114,\n        ' ': 6.086490879050932e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\t:\\xe7\\r\\xec\\x86\\xd0\\xc8g\\xa8LB\\xb1\\xf2\\xaeP\\xc5}b\\x84:\\x80\\xfd\\x9ez\\xc5\\xc0\\xda\\x95_5\\x8a]?F\\xd8\\xa0\\xb6Q\\xfbs\\xbb\\xae\\xbdl\\x1b\\xbb\\xdd\\x1f\\x96?)V\\xbd\\xe10',\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=6615,\n          constraints={'min_value': 105,\n           'max_value': 30566,\n           'shrink_towards': 300,\n           'weights': {19382: 0.10111402000458353,\n            824: 0.01062383500653934,\n            8586: 0.07017432190589164,\n            6615: 0.4574404345044597,\n            24151: 0.14297340793308988}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=30918,\n          constraints={'min_value': 29491,\n           'max_value': 31965,\n           'shrink_towards': 21526,\n           'weights': {31827: 0.00034295727007603935,\n            30117: 0.00022884136118571602,\n            31057: 0.00042194227786153946,\n            30753: 6.259090876705204e-06}},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 3, 1)),\n                 (('a', 0, 3), ('a', 2, 2)),\n                 (('a', 1, 1), ('c', 1, 0)),\n                 (('a', 2, 2), ('c', 0, 1)),\n                 (('a', 2, 3), ('c', 0, 0)),\n                 (('b', 0, 1), ('c', 0, 3)),\n                 (('b', 0, 2), ('b', 1, 0)),\n                 (('b', 1, 3), ('c', 1, 3)),\n                 (('b', 2, 3), ('b', 2, 3)),\n                 (('b', 3, 0), ('c', 0, 1)),\n                 (('c', 2, 1), ('a', 0, 0)),\n                 (('c', 2, 3), ('c', 0, 2)),\n                 (('c', 3, 3), ('b', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=3.953015540368162e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000c0ea2>}\\x82A\u00ec\u00fb\u00e3\\x05\\x1f\\x0b': 2.2250738585e-313,\n        '7': 5.59784354835261e+69,\n        '\\U000680b3\u00f6\u00c9': -9,\n        '\u00be#T\\x89\\x8f\u00fe': -814970798,\n        '\\U0005d452*\u00caG~': -19,\n        '\u00a8\\x01\\U0010bcfb\\x07\u00ec\u00d1\\U0005d830/\\U00040d38': 29476},\n       coverage={'': [-123,\n         -54,\n         -63,\n         -23718,\n         10380,\n         -93,\n         19264,\n         -1_691_002_841,\n         -29407,\n         -1_935_976_704,\n         8288]},\n       timing={'': -5.410387691047693e+305},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-26749, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=138,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 5936,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.4612238517292292},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.028298392104586963},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 1, 1)),\n                 (('a', 1, 2), ('a', 1, 2)),\n                 (('a', 2, 1), ('b', 3, 0)),\n                 (('a', 3, 0), ('c', 1, 2)),\n                 (('a', 3, 3), ('c', 1, 0)),\n                 (('a', 3, 3), ('c', 1, 2)),\n                 (('b', 1, 0), ('b', 2, 1)),\n                 (('b', 1, 2), ('a', 1, 3)),\n                 (('b', 1, 3), ('b', 2, 1)),\n                 (('b', 1, 3), ('b', 2, 3)),\n                 (('b', 2, 1), ('a', 3, 3)),\n                 (('b', 2, 2), ('b', 1, 0)),\n                 (('b', 3, 1), ('a', 0, 3)),\n                 (('c', 0, 1), ('b', 0, 0)),\n                 (('c', 0, 2), ('b', 1, 2)),\n                 (('c', 0, 2), ('b', 2, 0)),\n                 (('c', 1, 1), ('a', 3, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x17J',\n       run_start=4.958554664458678e+69,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -1.9101425067123404e-25,\n        '\\x8b\u00f6\u00ceR`\u00c3\\U000e7eb6\\U000e8779\u00c8\u00cc_7\u00b43': -4245,\n        '+\\x93\\x8bS\u00ee': 4.407246900553759e+138},\n       coverage={'\u00ef\u00b6\\x8d\u00fc\\U0009f3cd\\x0e': [35,\n         -34,\n         -5095,\n         31174,\n         -90,\n         -16722,\n         7152,\n         1_722_580_354,\n         30929,\n         -736,\n         3_729_611_976_409_238_394,\n         -5954,\n         -3312,\n         3406,\n         -93],\n        '': [],\n        'f': [-5777, -100, -3],\n        '\\x05\\U0003f546\\x08\u00f2': [18,\n         136,\n         25295,\n         -13,\n         -124,\n         -93,\n         -4797,\n         792_193_215_646_399_459,\n         -24927,\n         -86,\n         -736_456_832_459_703_872,\n         -8_462_785_386_264_865_262,\n         -13720,\n         1153,\n         118]},\n       timing={'': 3.470863241597156e+16,\n        '\u00a9\\x00': 3.1746418717045348e+16,\n        '\u00c1': -2.4291233035853356e+27,\n        '\\U000a43d6\u00ac\\x0bj\\U000c462e\\x91': -2.998937385723406e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-4722, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=inf,\n          constraints={'min_value': inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.23986427902934132},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=945,\n          constraints={'min_value': -88,\n           'max_value': None,\n           'shrink_towards': -21115,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'L\\xd7~j\\xa6QOn\\x83\\xbfw $K`\\xd0\\xaf\\xbd\\xabq\\x9e\\xb4K\\xb21t\\xceUrd0lH\\xa9Q',\n          constraints={'min_size': 28, 'max_size': 128},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7443581312576738},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xd4GT\\xce'\\xd1\\xbb\\xe5\",\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 1, 1), ('c', 2, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\r@\\x14\\U000fb4d4u\\U000b5816',\n       run_start=-8.276574720740059e-27,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x19\\U0006d7c1\u00db': 7.348774988978219e+170},\n       coverage=None,\n       timing={'\u00b2\\U00048188': -6.780819956890317e+16,\n        '': 5.760832880106382e-162,\n        '\u00afh\u00b4a\u00c8\\x8a': 4.90502476401857e+16,\n        '\\x8fL': -3.327640591294928e+180,\n        '\u00ff\\U000e17da\u00cb\u00b30\u00ed%X\u00be\\x12\u00f5e': 7.187166545942362e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-73, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xd8\\xd8#',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('b', 3, 3)),\n                 (('b', 0, 3), ('b', 2, 3)),\n                 (('b', 1, 2), ('c', 3, 2)),\n                 (('b', 2, 1), ('b', 3, 1)),\n                 (('b', 2, 1), ('c', 0, 3)),\n                 (('c', 1, 1), ('b', 3, 1)),\n                 (('c', 2, 1), ('c', 3, 0)),\n                 (('c', 2, 3), ('a', 2, 0)),\n                 (('c', 3, 2), ('c', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00f8\\x0c\u00f0\\x8d\u00bd',\n       run_start=-1.1754943508222875e-38,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'[\u00dc\u00a2\\x97\\x99\\U0004dddc\\x9b\\U000fb3ee\\x8fS\u00e1\\x11\u00b6\\U0005032f\\x80\\x1c': -3643},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-1708956753, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.2787690987800305},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xcd\\x93\\xfd\\xcf\\xc5\\xa2vB\\xce\\xe90\\xe6\\x9d\\x88nTW\\x1b'\\xadS\\xf8\\x9f\\x7f?\\xa6\\xc2#>\\x07W\\xe6?G!Ox\\xa2\\xc5J\\x03\\x15\\x10]\\x97y=\\xa8nnL.\\x81\\x15\\xa7\\x80\\x1d\\xac\\xbeB\\x14\\x96\\xcb\\xcf\\xbf\",\n          constraints={'min_size': 31, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 1, 1), ('a', 3, 0)), (('c', 2, 2), ('c', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00e5p\ud873\udfb8',\n       run_start=-5.44577826385428e-205,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'9': -5.469838752843349e+303,\n        '\\U000cbabbI\\x80\\x1e\u00f23\u00a6\\U00037e59': 16900,\n        '\u00a2\u00ac\u00e0\u00c7s\\x9f\\x9e\u00f1\u00f6z\u00fd\\U0005b9dc\u00d8': -3.4071396714844807e+245,\n        'n\u00da': 1.0292869413353674e-187,\n        '': 0.02,\n        '\u00be\u00c3\ud872\udcd1\u00a5\u00be': -1.742881474818657e-236,\n        '\\U00058cb7': 256,\n        '\\x1f\u00ff\u00a3\u00fd\u00cb\\U0006b8aa_\\U000cfa4a\u00ed\\x1c\\x8d\\x9b': 26344,\n        '\u00fa\ud887\udcb4\\x1a.\\U000ba8c3`Q': 11,\n        '\\U0001554e': -4908,\n        '\\x04\\U000d5658\u00dd\\x91\\U0007ab7d\u00a6*\\\\[\\U00087608Z\\U0009d2d2': 7.4726326564969255e+261,\n        ')\\x15\u00ec\u00be\ud849\udcf7#\u00f6\u00b8Xl\\x9cl\\x90\u00d2\\U000d0139\\U00103c97)\\U00052fd0\\U000bbed5\u00b1\u00f0\u00f0\\x8c\u00e9ri\\x85\\xa0\\x0e\u00fd\u00bf\u00ed\u00d8\\U0004351d': -1.6373619414531754e+16,\n        'on': 5.090423144328334e+62,\n        'BB': -3.06933250954364e-62,\n        '.?\u00d0\\U000c28cc\u00ea\\x9c\\x1ek\\x89\u00f9;Q\\x80\\x02\u00b1': 1_551_069_621_160_921_080,\n        ' \\U000f9953\\x8b\u00c1\\U0007d5f4\u00ab': -27985,\n        '\"\\x86\\x80u\\U0007ad1f\\U000616cd\\U0004588b\u00d9L\\U000663d3!\u00d1\\U000833bbo': 24238,\n        'n\\U000c1728\u00aaA\u00bb\\U00091cc5\\U0005f187TE\u00be': 6.359937343795231e+191,\n        '\\x9aa\\x13Sh\\U000d5809\\x85': -34,\n        '\u00cb\\x1f\u00a5\u00fc\u00b1a\\U000ec29b\\U000ba291': -4.407751436938749e+16},\n       coverage=None,\n       timing={\"\u00c7-\\U0008d8d5\\x8a\u00dd'/\u00fc\\U00072765a\\U0006cb4b\u00e4\\U0004e739\u00f8\": -7.024389081162879e+181},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28965595512688113610690539673225151563, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=8785,\n          constraints={'min_value': 7741,\n           'max_value': 22042,\n           'shrink_towards': 127,\n           'weights': {20041: 0.01606078183113363,\n            15573: 0.13490864258678226,\n            9487: 0.08030390915566815,\n            12966: 0.10726291219428404,\n            8785: 0.10260992483522349}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-30,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 9374,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -4.644456701250551e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.005},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8705959010093474},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-17666,\n          constraints={'min_value': -26793,\n           'max_value': -3765,\n           'shrink_towards': 0,\n           'weights': {-24696: 0.00617470894584336,\n            -6878: 0.003825291054156639}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('a', 1, 3)),\n                 (('b', 0, 0), ('a', 1, 0)),\n                 (('b', 1, 0), ('b', 2, 3)),\n                 (('b', 1, 3), ('a', 2, 2)),\n                 (('b', 2, 1), ('b', 3, 0)),\n                 (('b', 2, 3), ('c', 2, 2)),\n                 (('c', 0, 1), ('c', 3, 2)),\n                 (('c', 0, 2), ('a', 2, 1)),\n                 (('c', 2, 0), ('b', 3, 1)),\n                 (('c', 2, 1), ('b', 3, 3)),\n                 (('c', 3, 3), ('c', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00fdRAk\u00d5\\U00103cd3\\r\u00fa\u00d0\u00f69n\\U001030c7v\u00d5\u00b4\\x82t\\U000abb00\u00b7\\U0005b3baQ',\n       run_start=-4.950364568034689e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'Config': [11367],\n        '': [-1_916_893_944_523_098_719],\n        '\\U000d69ba\u00a25\u00b4U': [-3434, -18358],\n        '\u00e3x\u00ff\u00c9': [3366],\n        '\u00af\\x7fzr\\U0007ddb0c6:i': [103, -1_920_910_532, 436680128],\n        '\u00a8\\U00034511x\\U00050b81\u00d4\u00b7\ud857\udcf5': [60,\n         -27694,\n         -86,\n         1_211_709_133,\n         -25279,\n         -125,\n         9813,\n         8673,\n         87,\n         -8983,\n         -22729,\n         140_764_331_555_219_075_579_603_521_799_366_342_904,\n         2549,\n         698_443_282_694_475_881,\n         64,\n         26311,\n         14,\n         -13628],\n        '!\u00c8/d\u00f8\\x84\u00a6': [],\n        '\\U00061c7d6\u00df\u00c1\\U000ee9b2\\r': [-12834,\n         -6795,\n         -1_075_216_682,\n         -26292,\n         21095,\n         -126,\n         -26496,\n         661,\n         -80,\n         50],\n        '\u00efw': [-24720, 172800],\n        '\\x19<\\U0010a275': [2325,\n         27156,\n         88,\n         -130_445_953_440_429_956_097_467_303_727_408_389_790,\n         -2321,\n         1414,\n         5616,\n         8_308_385_995_650_152_564],\n        '\\x152y\u00dd\u00ee?\\x8c\\U000d82f5\u00cb': [18126,\n         -137_159_024_915_038_138_109_076_955_270_242_590_200],\n        '\\x8f\\U00085312': [-13],\n        '\u00b2\u00ee\\U0001ca00N\u00d5': [448,\n         120,\n         20617,\n         -506764798,\n         21625,\n         9540,\n         -6,\n         3_309_960_448_443_374_614,\n         -13017],\n        '\u00f5\u00c6\\U000cdc07v\\U00092fe61J\\x96': [],\n        '\\x05': [-34, -18145, 26577, -68]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=27193351852732486325567866453864553784, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9920605313186244},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('a', 2, 2)), (('b', 3, 3), ('c', 3, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='b/\"D',\n       run_start=2.9018863214990344e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 420},\n       coverage=None,\n       timing={'\u00d2-\u00da\\U000f5e88\\U0008b029\\x1d': 3.5527378757466606e-19},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-26923, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U0008c75f\\U0003e49c\\U0003e439\\U0003e459\\U0003e4fd',\n          constraints={'intervals': IntervalSet([(255030, 1044978)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=4.804928945842218e+307,\n          constraints={'min_value': 6.727400855052514e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.2993106674961881},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x81?\\x1bq',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'Y)\\x10\\xebP:Ck',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.44827528610622613},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.5830387741815359e-193},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-22447,\n          constraints={'min_value': None,\n           'max_value': -44,\n           'shrink_towards': 29136,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-21811,\n          constraints={'min_value': None,\n           'max_value': -9967,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-69,\n          constraints={'min_value': None,\n           'max_value': 19210,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(198723, 715564)]),\n           'min_size': 0,\n           'max_size': 84},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.36432775057006556},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=726087404,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 57,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.5169548229081124e+16,\n          constraints={'min_value': -inf,\n           'max_value': 1.7976931348623157e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5229209207483955},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('c', 0, 2), ('c', 1, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=7020304427127524.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00be\\x95\u00e5\\x05u=': -76},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=7, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00dd\\U0010063b\u00e4\\x19\\x17\\x16\u00e1\\x83\\x8f.',\n       run_start=-2.245592577687477e-181,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x83': 0.5},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-20470, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x06\\x1e\ufd02\u00c9',\n       run_start=-4.837264960176543e+221,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 65535,\n        '\\x81\\x1a\\x1f\u00f09\\U000aa84e#\u00f2\\U0003fa27J\u00d0\\x17\\x99\u00bd\\U00065ed6\u00c8T\\x9b~\u00db': 4.844071988819566e+16,\n        '}\u00e2\\U00077529\\U000cdd74\\U000a6a18\u00cb7\u899f': struct.unpack('d', struct.pack('Q', 0x7ff8000000000001))[0],\n        '\\x8b\u00df': -776612409,\n        '\u00a5\u00b8': -39,\n        '\\U000b97ec\u00b6\u00bc\u00e3\u00ea7\\U00069cf9=\\U00087ad1': 2.0766225199365064e+16},\n       coverage=None,\n       timing={'%\u00ca\u00b2\\x1cx<\\U0005b1a0]\u00b7\u00b5[\\x015\ud821\udd0e?\u00d5\\U00073743\u00d9\\U0005e03f\\x0b+K,\u00e2\\U00059912m\\U000bd5691\\U000aa94dT\ud81d\udc99\u00f6\u00f5\\U000f3170\\x17\\U0009cbc1>\u00f8\u00fepR\\x1b\u00c9\u00e1l\\x9bv2': -1.5083865793203132e+16,\n        '\u00be': -6825015608069826.0,\n        '\\\\C\u00a1\u00cf\\x06\u00b0\u00b3\u00f0': 3.460328822453538e-94,\n        '': -1.1125369292536007e-308,\n        '\\x12\\x89\\x9c:\u00df\\x8b': -5.487972687205772e-14},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=5986, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=5.279223150011102e+307,\n          constraints={'min_value': -3.737374530442005e+16,\n           'max_value': 5.901764838288598e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 7.841898851434162e-91},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_365_210_904,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud873\ude41\ud873\udea0\ud873\ude84\ud873\ude9e\\U000e3a93',\n          constraints={'intervals': IntervalSet(\n               [(183865, 304679),\n                (377439, 387298),\n                (462531, 471685),\n                (540323, 643396),\n                (705512, 792162),\n                (905563, 1036062)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 2, 3)),\n                 (('a', 0, 3), ('b', 1, 0)),\n                 (('a', 1, 0), ('c', 2, 0)),\n                 (('a', 2, 3), ('a', 0, 2)),\n                 (('a', 2, 3), ('a', 2, 1)),\n                 (('a', 2, 3), ('b', 0, 1)),\n                 (('a', 2, 3), ('c', 2, 0)),\n                 (('a', 3, 0), ('c', 2, 1)),\n                 (('a', 3, 1), ('c', 1, 0)),\n                 (('a', 3, 1), ('c', 3, 0)),\n                 (('a', 3, 3), ('b', 0, 0)),\n                 (('b', 1, 1), ('c', 1, 3)),\n                 (('b', 1, 3), ('a', 3, 2)),\n                 (('b', 1, 3), ('c', 2, 1)),\n                 (('b', 2, 2), ('a', 1, 1)),\n                 (('b', 2, 2), ('c', 1, 0)),\n                 (('b', 3, 0), ('c', 3, 0)),\n                 (('c', 1, 1), ('a', 1, 0)),\n                 (('c', 1, 2), ('a', 1, 0)),\n                 (('c', 1, 3), ('a', 1, 2)),\n                 (('c', 2, 1), ('c', 2, 3)),\n                 (('c', 2, 2), ('a', 0, 1)),\n                 (('c', 2, 2), ('a', 1, 3)),\n                 (('c', 3, 1), ('b', 0, 2)),\n                 (('c', 3, 1), ('b', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00bb\\x00*\\U000f2e0d\u00af\\x11`\\x96S\\x90\u00db[\\U000ad101\u00e8\ud869\udf41<',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={'\u00a6\\U00092deb': 5.052015856137039e+227},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1396, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6960884496462626},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-6567,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 2), ('b', 1, 2)),\n                 (('a', 3, 0), ('c', 1, 2)),\n                 (('a', 3, 1), ('a', 3, 2)),\n                 (('a', 3, 3), ('a', 1, 1)),\n                 (('b', 1, 0), ('a', 3, 0)),\n                 (('b', 2, 0), ('a', 2, 0)),\n                 (('b', 2, 1), ('b', 0, 3)),\n                 (('b', 3, 2), ('b', 2, 1)),\n                 (('c', 0, 0), ('a', 2, 1)),\n                 (('c', 0, 0), ('b', 2, 1)),\n                 (('c', 1, 0), ('c', 0, 3)),\n                 (('c', 2, 2), ('a', 0, 0)),\n                 (('c', 3, 0), ('a', 2, 2))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.01832929503871128,
          "overall:gc": 0.0068471209378913045,
          "generate:args": 0.07666004379279912
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287667.002720875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': -1.7976931348623157e+308},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000e58fe\\U0001b47f',\n       run_start=1.0560403681412964e-265,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'-r': -3157943908995502.0,\n        '': -32019,\n        '\u00c7\u00be\\U00036248\u00c8m\u00c2\\x11\\x11': -3.0119391811488526e+217,\n        '\u00db\\U000e6aa5': -55_569_818_655_867_684_189_183_365_938_478_536_297,\n        '\u00d3\\x0e|\ud86e\udc69\\U0006af5e\\x04s\\U0004acd4\\U000e904f3\u00f1B4\u00b0j\\x03\u00ce': -6.984129392089406e-133,\n        'X\\u2efdo\\U00071689\u00d6\\r\u00f9\u00f9Al\u00ba\\x8bO\\U0006a8d1}\"': -10049,\n        't\u00a6': 17979},\n       coverage={'': [-11475, 22115, 32753]},\n       timing={'\u00baa\\x8e\u00db\u00c6': -1.974806607227988e-227},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-10, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=1.4072812832101417e+308,\n          constraints={'min_value': 2.3460595693180516e+270,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.2250738585072014e-308},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.4073713855987705},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1921,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -69,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(1, 379891)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xc2\\xe3k\\nB\\xf7\\x82|g\\xeb\\xc8\\xd4z\\xe4\\x81#\\x9e\\xfc\\xfb\\x9aO\\x12\\xaf\\x8fo\\xa3\\xf7qB\\xeb\\x03\\xd7\\xd3\\xa0~US\\x10\\x91\\xcd',\n          constraints={'min_size': 12, 'max_size': 112},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xc4q\\xf0\\xc5\\x12Y',\n          constraints={'min_size': 4, 'max_size': 104},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7721258279791241},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('b', 3, 0)),\n                 (('a', 2, 3), ('b', 1, 3)),\n                 (('b', 0, 3), ('a', 2, 1)),\n                 (('c', 3, 0), ('b', 0, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00dco\\x92\\U000abe0d',\n       run_start=2.4628544761317216e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x9e': -110,\n        'do_continue': 3.750551445609733e+16,\n        '9\\x9f': -1.0748973845704924e+16,\n        '': -28377,\n        '9\\U0004676b\u00eaH*\\x81\\U000f9314': 1.0,\n        '\\x9f\\x8f\u00e1\\x10': 5.928436138552654e+242},\n       coverage={'': [-11349,\n         -111,\n         111,\n         10695,\n         60,\n         -86,\n         -61,\n         -71,\n         -16326,\n         -28824],\n        '\u00f7\u00e4\u6a49\\xa0\\x9df.': [5_485_661_744_951_785_240],\n        '\u00ac': [3, 1, -825044662],\n        '\\U0007840c\u00c7\u00da': [1],\n        '\u00ca%\\x1a\\U000fb7ba\u00fch\\x8bp\u00d2#': [-88],\n        '}\\U00054089': [],\n        '\\x1e\\x7fG\\x89b': [],\n        'v': [-12660,\n         853,\n         64,\n         -82,\n         10269,\n         5966,\n         9999,\n         -24,\n         -20585,\n         1_266_152_380,\n         25,\n         -4_344_307_056_445_194_911_752_218_137_751_959_815,\n         -6771,\n         -428309477,\n         8207],\n        '\\x82\u00bda\\U00068140\\x00=v\u00bb\\U0009bf4f(\ud86d\udc81+\u00ed\\U0004de12\u00d7\u00b3\u00ba': [],\n        '--last-failed': [],\n        '\\x1a\\x08v\\U0005b11f\u00d1\\x11\u00bf\u00c1\\x08\\x8a\\U000743f1K\\x90\u00fe\\x84': [-9_004_534_260_991_280_554],\n        \"V\\x97\u00c5|\u00b1\\x19'\\x9c\\x06\\x8e\\x90\": [-30117,\n         -78,\n         109,\n         1_251_783_650,\n         30676,\n         2355,\n         -121,\n         0,\n         24501,\n         -15729,\n         8],\n        '\"\u00c7\\x86\\x9a': [-10287],\n        '\u00e8\u00ed^\\U000c0058I\\U000a9377|\ud86e\udd0d\\x16': [21975, 27711],\n        '\u00d0Uge': [32504, 1003]},\n       timing={'q/\\U0005aaa7': -0.0,\n        '\u00f5': -1.3686917825805986e+70,\n        '': 3.103084543165417e+16,\n        '\u00d8D\\xa0\\x9c\u2ef3S\\x001\\x1f\\x10M\ud835\udec80\u00bf': 8.528092386962945e+222,\n        '\\x02\u00d4\ud80c\udcf8': -6.137361424007118e-113,\n        'slowest durations': 7.653620762966902e+108,\n        '\\x87\u00a6\\x1e64W\\x93\u00f5\\\\l\\x98': 2573565108114225.0,\n        'e\\U0006893e>\\x81\"\u00e0\u00d9\u00aeY\\x97': -7.224026875890691e+137,\n        'nil': -1.6566055167256137e-184,\n        '\u00e3\u00b5x\ud805\uddbd\u00fa': -1.175494351e-38},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=511, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ud81d\udf38\ud81d\udf2f\ud81d\udfd8\ud81d\udf27\ud81d\udfa4\ud81d\udf6d\ud81d\udedf\ud834\udd98\ud81d\udf9f\ud81d\udf5e\ud81d\udeea\ud81d\udf27\ud81e\udf6d',\n          constraints={'intervals': IntervalSet([(95967, 171623)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00bb\u00e6\\x80\u00e3\u00a8\u00cf\u00caLq\\U000c5762L\\xad\u479f\\x12\u00c5\u00c3(\u00bb\u00c6\\n$9Rj\u00cd',\n       run_start=0.02,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\xa0\\x81\\U000e5705\u00b7\\U0004b33b': 25802},\n       coverage={'': [],\n        '\\x81\\x0e\u00bf\\U000e972e\u00a4\\x98\\U0009f356\u00cb\\U00080288z\\U0005949c\u00d9\\x97\\x1c': [],\n        'd.\\x05': [1209,\n         -20018,\n         759_038_820_249_656_447,\n         96,\n         -23677,\n         -2_134_270_188_983_799_145,\n         2895,\n         30277,\n         -107],\n        '}\u00d2\\x8b)n\u00ec\\x88': [-20286, 19, 24123, 18113, -36],\n        '\u00b2\u00bb\\U0010ae89\u00c9\\U000b061e\\U000166cb\\x9f\\U00089bd2': [-25528, 77]},\n       timing={'\\x9e\\x0e': -nan},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=109, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xfa',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xcc3\\xafB',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\ue8c3\\U000e4c2a\\ue934\\U00060f9b\ud81f\udedd\\ue88f\ud878\udfa0\\ue845\\ue89d\\ue8af\\ue864\\ue8e9\\ue8c5\\U00049a8b\\ue86a\\ue889\\ue873\\ue8f8\\ue8cb\\U00079e45\\ue862\\ue8ab\\ue8a0\\U0005d16f\\ue8c3\\ue926\\ue866\\ue86b\\U00050b2e\\ue924\\ue836\\ue85b\ud888\udeba\\ue8c1\\U00016590\\ue8d6\\ue8f3\\ue894\\ue900\ud860\uddc9',\n          constraints={'intervals': IntervalSet(\n               [(59446, 75772),\n                (85001, 212647),\n                (300040, 301964),\n                (318766, 505886),\n                (790539, 800375),\n                (843818, 970172)],\n           ),\n           'min_size': 17,\n           'max_size': 117},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.9192282271057577},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7349374224825375},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-32,\n          constraints={'min_value': None,\n           'max_value': -31,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xbd\\xe5\\xef\\x8d\\xf3O\\x8c\\n1\\x85;\\xbf\\x0c\\x14\\x9f\\xd5\\x8b\\xbat\\xb5IFp\\xfa+\\xdc\\x0f\\xf3\\x8d9*Q\\xbdcyr\\x8b\\xbeP`\\xafC\\xb3\\xa5\\x18o\\xedM\\x19\\xae5\\x8d\\x8e\\x85.V\\xad\\x86R\\xf7\\x8c@\\xf0&kG\\x06t^\\xb0\\x0e47q\\xa9\\xe2\\xa5\\xce\\xc5d\\xce]\\xa7\\xa4\\xd7\\xba\\x88\\xcb\\xca\\xde\\xbb\\xc1\\xf5\\x05uh\\x7f\\x8fl.\\xf1\\xde4c+\\xc3\\xc8\"\\xeffC\\xb33\\x90\\xaay',\n          constraints={'min_size': 48, 'max_size': 148},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=3068,\n          constraints={'min_value': None,\n           'max_value': 21283,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud871\udea5\ud871\ude8b\ud871\ude7f\ud871\uddb5\ud871\uddcf\ud871\udddc\ud871\ude9c\\U00045f82\\U00037af5\ud871\ude00\ud871\uddc3\ud871\uddb7\ud871\ude3f\ud871\ude77\ud871\ude5a\\U0006ab43',\n          constraints={'intervals': IntervalSet([(181673, 459361)]),\n           'min_size': 9,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.47794026596139505},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000643d4\\U00064308\\U00064300\\U00064372\\U00064396\\U0006434b\\U000643ce\\U00064349',\n          constraints={'intervals': IntervalSet(\n               [(410357, 742690), (1017260, 1097151)],\n           ), 'min_size': 4, 'max_size': 81},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.665030731894794},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.99999,\n          constraints={'min_value': -4.497722654386305e-231,\n           'max_value': 5.791290777831062e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.157545134153561},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 2), ('b', 1, 3)),\n                 (('a', 3, 3), ('a', 3, 1)),\n                 (('b', 0, 0), ('b', 1, 1)),\n                 (('b', 0, 2), ('c', 1, 2)),\n                 (('c', 0, 0), ('c', 0, 3)),\n                 (('c', 0, 1), ('c', 2, 0)),\n                 (('c', 0, 3), ('a', 3, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='V',\n       run_start=inf,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 127,\n        '\\U0008b5eb\u00d0\u00e0\u00d9': -nan,\n        '/': -2930,\n        '\u00f3\\U00058b99\u00c3&T\\x1a6': 3.576976655617271e+16,\n        '\\t': 1.1354683923261192e+16,\n        '\\U00068807': 13424,\n        '\\x06\u00a2\\U0010ab3a\\U000cf448': -6876,\n        '\ud881\udfa5\u00b1': -1.3362117647553364e+16,\n        '\\U000d3fe3\u00a5 \u00b0E\u00d0#w': 1_900_505_029,\n        '\\x92.': -2.5388139902802304e+16,\n        '>': 2.032119395214884e+244,\n        'By\u00fc\u00a2\u00cc\\U00055521UX\\x1a': 4.604455544459165e-259,\n        '\\x83\u00f3G\u00f3\u00f6!\u00beY': -4.810193216331606e+16,\n        '\\x1e': -2.000213320512695e+16,\n        '\u00fa2\u00de': 15243},\n       coverage={'\u00b6\\U000b531f\\x9a\u00be\\x81\\U0009736c': [169_245_075_589_633_832_029_993_507_702_439_587_543,\n         3690,\n         -94_930_430_248_214_375_781_980_839_926_051_471_161,\n         58,\n         9999,\n         -26119,\n         -55,\n         0,\n         28150,\n         9364],\n        '\\U00038e35\\U000ad759\u00f7\u00c7h\\x05\u00b3j': [-7373,\n         16537,\n         256,\n         -864897489,\n         -32,\n         7_746_496_893_873_299_912,\n         14084,\n         -26089,\n         -109,\n         123_597_601_122_331_256_940_162_863_668_538_966_548,\n         -2951,\n         94,\n         6_243_079_526_422_497_874]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=91, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.16113664752354231},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.6789122647762005e+307,\n          constraints={'min_value': 1.192092896e-07,\n           'max_value': 3.1676260180860103e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 5e-324},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.6080652947421086e+308,\n          constraints={'min_value': 5.244352017697701e+99,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9022983319088911},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xae\\xa3|*|[',\n          constraints={'min_size': 5, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 3, 2)),\n                 (('a', 1, 0), ('c', 0, 2)),\n                 (('a', 1, 0), ('c', 2, 1)),\n                 (('a', 2, 2), ('b', 1, 3)),\n                 (('a', 3, 1), ('c', 3, 0)),\n                 (('b', 0, 1), ('a', 0, 0)),\n                 (('b', 0, 3), ('a', 1, 1)),\n                 (('b', 2, 2), ('a', 3, 0)),\n                 (('b', 2, 3), ('a', 1, 0)),\n                 (('b', 3, 0), ('a', 1, 1)),\n                 (('b', 3, 2), ('b', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-5.207257000865215e+185,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00db\u00ddB\\x81g\u00ba': -inf},\n       coverage=None,\n       timing={'(': 2.7042755851866308e+16,\n        '\u00c4\\x931\u00de\\U000d41409': -1.401298464324817e-45,\n        '\ud870\udf2e\u00a1&\u00fdv`\ud842\uddb5\\x12': -5.2924643081167464e+16,\n        '\\t\\U0007dfcb\u00eb\\U000dce05\\x9e\\x89': -3.5861460799777976e+16,\n        ',i': -inf},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=87, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.44778752825243384},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-24270,\n          constraints={'min_value': None,\n           'max_value': 9530,\n           'shrink_towards': -10062,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00044e46\\U00044e4e\\U00044dce\\U00044e87\\U000700d3\\U0006d1fa',\n          constraints={'intervals': IntervalSet(\n               [(282021, 308081), (438600, 626881)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('b', 1, 2)), (('c', 1, 1), ('c', 0, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.00956116191809997,
          "overall:gc": 0.003451588097959757,
          "generate:args": 0.0518963789800182
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287694.319528458,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='i.\u00e7',\n       run_start=-3.5599354160498896e+202,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1d\u00ed\"': 3.985733272093683e+220},\n       coverage=None,\n       timing={'': -5.7240040142682504e-36,\n        'v\u00cdZ,$\u00bf\u00d2\u00f8\u00c4\\x85\\U0008cbfc\u00b7\\x03\u00b0\\x0c': -2.4938722553386558e-291},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=0, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'C\\xa2\\xfb\\xd1\\xe6',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.942388341922189},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-16377,\n          constraints={'min_value': -31898,\n           'max_value': 0,\n           'shrink_towards': 0,\n           'weights': {-16377: 0.7293516010236923}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14147,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 1.0,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.0891231930503822},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x00\\x97',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('c', 3, 3))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0032985000871121883,
          "overall:gc": 0.0013499579508788884,
          "generate:args": 0.012949750002007931
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287688.356248833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287655.498244916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287690.599595875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0005115009844303131,
          "overall:gc": 0.00025933299912139773,
          "generate:args": 2.679199678823352e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287668.217560333,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=1.2282104355578043e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x93'C:\\xce{w\\xe2U\\xf9\\xe5\\n\\xca\\xeb\\xdc\\x17\\xaa\\xdb/'c\\x0b=\\xa3\\xcb\\xe6\\x02i\\xca\\xb9*!N\\x9f\\xa0&\\x8e\\x0c\\x1b\",\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00fcD\uabaa\\x83X',\n          constraints={'intervals': IntervalSet([(0, 511), (8918, 121431)]),\n           'min_size': 0,\n           'max_size': 25},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('a', 1, 0)),\n                 (('b', 2, 3), ('a', 0, 1)),\n                 (('c', 0, 1), ('c', 2, 0)),\n                 (('c', 1, 1), ('c', 1, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0015964590129442513,
          "overall:gc": 0.0007541659870184958,
          "generate:args": 0.004293750040233135
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287679.213870875,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='',\n       run_start=3.0968065548172173e+47,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00a1\\U0003dee8\\U000395ac': 39,\n        'x\\\\\u00a4\\x9c': 68,\n        '\u00d6\u00d9f': 0.001,\n        '*U\\x81\\x8f\\U0003c6a4\u00cc!\\x91': -43_971_968_265_331_371_505_416_020_819_029_281_313,\n        '|A\u00f5\\r': 0.0,\n        '\u00ea]\\x07\u00f8\u00c3\\U0007e409b\u00c5\u00e9\u00d9': -102,\n        '\u00b9\\U000d6be0': 3.8174721438054526e+214},\n       coverage={'\\U0002ec61x \u00da\\U000460c7\\U000b2ecc\\x19\\x8c\\U0003290a': [],\n        '': [-125135220, 119, -46, 8238, 37, 10452, -17179, 0, -2186, -100]},\n       timing={'d': 1e-06, '\\x04&\u00bbJ8': -1.9735217861310203e-287},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=964, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.3071468325618456e-148},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b':',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.567601244853715e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.0001},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-20136,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6901309711175555},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=128,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(227934, 313127), (436402, 453378), (845404, 847820)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.7976931348623157e+308,\n          constraints={'min_value': -9.23302969349786e-102,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.15699130989495316},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0678963773697084e+217,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6115455581009198},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=5.216788163604273e+16,\n          constraints={'min_value': -2.1133920671911706e+171,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5628440996822422},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0001},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0113315331495743e+204,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6445067552821427},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('b', 1, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x86q\u00ee\u00c2\\x9e\\t\\U000d0c44\u00e3\\U00061780L',\n       run_start=1.1776469026716708e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1c\\U000a977c\u00fa\\U0004c524': 4.852956179183735e+16,\n        '': 101,\n        'P': 23,\n        '\\x1e\u00ff\u00d9\\x88\\U0003d86a\\U000bc4a0g\\x10\u00f1\\x81\\x16\u00f8OM\u00d1~\\U000c40c5\\U00016452\\x16\u00de\u00c4\\x11\u00fe\u00d3$\u00c4\u00f2\\x90': 424034.39825936605,\n        '\\x1f\\U00067cd4\\U000c951c\\U000e7b22\\U00033e6b9\u00bd\u00ac': 0.0,\n        '\u00cby': -5.22503493194366e+16,\n        '~^\u00fbk\\U00046b1d\\U000a07ab<': -3.3175459247304724e+16},\n       coverage=None,\n       timing={'\\x15\\U000c82039': 3.747251911209201e-264,\n        '\\x08': 6.827536786329028e+16,\n        '': -9.54600921105403e+212,\n        '\\x02\\U0009027eKx\\x07\\x84`\u00f2': -6.701600333623383e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=9406, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.12497523577363603},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 2, 1)),\n                 (('a', 0, 1), ('c', 2, 1)),\n                 (('b', 0, 1), ('b', 2, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\"\\U000e198b`',\n       run_start=3.71826882914986e+219,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ce\\x03\\x86j\u00c5\\U000b5c10\u00c3': 1.83085951266807e+293},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-100, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'hKY\\x91\\x81\\xad\\xfb\\x8b)\\x08b\\\\\\x06\\xb6^k{\\x19\\xa7\\xbf\\x04\\x88\\x8c\\\\>\\xe5\\xdebu?\\xbf&\\x83VY\\r\\xfd\\xac\\x1fm\\r\\x9e?\\xd7#\\xde\\xd8\\xe0\\x10\\x9ctD\\x9d\\r\\xfe\\xb2\\xc5\\xa6h[\\xa0\\xbf\\xbf\\xe8z- ?\\xfaXe\\x89\\xb4\\xebv\\xc2~)\\xe9\\xbfC\\xfb+\\xb1U\\xb0\\xa2',\n          constraints={'min_size': 25, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud879\udc12\ud879\udc65\ud879\udc69\ud879\udc08\ud879\udce7\ud879\udcfd\ud879\udc41\ud879\udc8c\ud879\udc19\ud879\udc95\ud879\udcc0\ud879\udcfa\ud879\udc46\\U0006dde3\\U00035d73\ud879\ude98\ud879\udc96\ud879\udc0e\\U00037a79\\U00067a44\ud879\udc52\\U000576bc\\U00060127\ud879\udc68\ud879\udc8f\ud879\udcea\ud879\udcb9\ud879\udc98\ud879\udcfb\ud879\udc98\\U0004b800\ud879\udca9\ud879\udc93\ud879\udcd6\ud879\udcd9\ud879\udcb3\ud879\udcc2\ud879\udc64\ud879\udc72\ud879\udcd6\\U0005f447\ud879\udc5f\ud879\udcc5\ud879\udc03\\U00034372\ud879\udca0\ud879\udc67\ud879\udc41\ud879\udc21\ud879\udc34\ud879\udc4b\ud879\udc33\ud879\udcc2\ud879\udcd2\ud879\udc6f\\U0003c795\ud879\udc1f\ud879\udcea\ud879\udcc1\ud879\udc5a',\n          constraints={'intervals': IntervalSet([(189443, 460803)]),\n           'min_size': 49,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.07275657473751164},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=122293609,\n          constraints={'min_value': -16459,\n           'max_value': 1_050_036_347,\n           'shrink_towards': 0,\n           'weights': {-16263: 0.031014139958973685,\n            136: 0.010757682889446406,\n            13724: 0.013851776875588757,\n            122293609: 0.04035133659608633,\n            -16242: 0.029767301680899926,\n            30424: 0.003892709890775885}},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'Lm\u00b3\\x85': 945_517_973_747_706_747,\n        '\\x18\\U000f2435\\x982DP\u00a7T\\x1f)\\x81': -14928,\n        '\\\\E': inf,\n        '\u00e5\u00da\u00a3;j\\x04\\x8d': -5281,\n        '\u00ba': 2.3916618472124428e-163,\n        '\u00c8': -2_404_123_571_109_991_753,\n        '\\x9b': -9360,\n        'Y\\x05L': -30,\n        '\\x02\\x08d\\U000813a2': 105,\n        '$\u00be\\x01.': -28036},\n       coverage=None,\n       timing={'\\U000bc6e3\\U00039438': 2.66420666676692e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=1921, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-625573076,\n          constraints={'min_value': None,\n           'max_value': 347050070,\n           'shrink_towards': 8207,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-14879,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2.218914199806152e+16,\n          constraints={'min_value': -6.852890549685816e+16,\n           'max_value': 4.686214388296784e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 3.088834581663114e-21},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-27283,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.4376052871124904e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.2966251557706288},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.3654649240366274e-284},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u00fa\u00a3\u00e5\\x8dr\\U000e0396\\U000ac45a\\x95\\\\\\U0007eb4bl',\n       run_start=2842360931494429.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00094b9bC\\U000bae43': 992058344,\n        '\\U000586a6\u00dd\u00ed\u00b4E\u00ceVk\u00fd\\x7f>\u00d0\\U000d67c3\\x1e\\U000ca98a\\U000d98c5a\\x9f\\x88': 4.4659237195735e+16,\n        'p\u00ed\\x97\\x94\ud860\udd7c\u00d6\u00db\u00ee\u00ea': -1.2092029669372028e+130,\n        '\u00b0\u8160\\x19': 15087,\n        '': -12097,\n        '!\\xa0\\x8d,\u00d8': 28289,\n        '\u00a9\u00d1': 3.470276516881457e+16},\n       coverage={' \\t\\x13C\u00a4M\\x19\u00bd\\x03_h\\x10+}\\x8b': [-10651, 31563, -34],\n        '-': [],\n        '\\x17\u00ec\ud83d\udc13\u00e5\\x9a\\n`\u00e7\ud86c\ude49\\U00018e8d9\\U000b00a9\\U0009ab02\\U0007f7b8\u00e6\u00e6\\xa0\u00be$\\U00057551i\\U0008b6aa\u00d7J!\\U000bf85c<\u00e7H': [31700,\n         90,\n         10494,\n         76,\n         68,\n         -125,\n         -25267,\n         -32157,\n         -19813,\n         -7355,\n         -3327],\n        '\\U001048a8\\U000a76bdf\u00b3\u00e8?^\u00fd\u00dbA': [300,\n         11057,\n         -54,\n         8238,\n         88_460_551_533_387_641_683_920_659_188_164_396_911,\n         -6813,\n         -74,\n         105,\n         67,\n         -28339,\n         -27045],\n        '\\x10\\x81\\x10\\U000e0c6b\\U00038be6\u00e1z\u00d3\\U000150d2\u00fe\\x86\u00f5OC': [-20299,\n         -636_776_931_822_973_883,\n         42,\n         5730,\n         -18535161,\n         12437,\n         -4762,\n         151_727_487_654_209_308_240_123_449_438_044_378_593,\n         24,\n         27121],\n        '\u00c5\u00a8;': [1000, 85, -16773],\n        '\u00cc': [-75, -31, -59, 18983],\n        '': [],\n        '\u00ee': [495477812,\n         18357,\n         4639,\n         -22719,\n         108,\n         -25088,\n         -29146,\n         23121,\n         5107,\n         16522]},\n       timing={'1\\x1fm`y]r\u00bc\\x13\\x8d\\x80': 3.85532807523725e+16,\n        'W\u00aa4\\U00066ccf': 1.3506034520959493e+217,\n        '~\\x8c\\U00105e12\u00c7\u00a7v': -9.764830436668623e-10,\n        'h\\x86': -2.396138529148286e-274},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-22305, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=14932,\n          constraints={'min_value': 14868,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u513d\u51e8\u51eb\u5123',\n          constraints={'intervals': IntervalSet(\n               [(20736, 26155),\n                (53073, 120856),\n                (176425, 210083),\n                (211809, 324269),\n                (370642, 537013),\n                (572527, 632579),\n                (764419, 794259),\n                (956027, 1003849),\n                (1036689, 1063910),\n                (1086669, 1114111)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6695457488495565},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-27598,\n          constraints={'min_value': None,\n           'max_value': 1_730_344_728_167_764_454,\n           'shrink_towards': -72,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb8\\x16\\xdd',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'M#\\xee\\t\\xba',\n          constraints={'min_size': 2, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud887\uddd1\ud887\udd59\ud887\ude0b\ud887\uddbc\ud887\uddaa\\U0007574f\\U0008411b\ud887\udd63\ud887\ude1b\ud887\uddd6\ud887\uddd3\ud887\uddc6\\U000815df',\n          constraints={'intervals': IntervalSet(\n               [(204071, 223311), (302925, 553391), (634878, 732554)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 3, 2)),\n                 (('b', 2, 0), ('b', 3, 0)),\n                 (('b', 2, 2), ('c', 3, 3)),\n                 (('b', 2, 3), ('c', 1, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-3.7121743331431974e+59,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'h\u00fe\u00e9': 22904},\n       coverage={'': [-13081, -6525, 8203, -7097],\n        '\\x90\\x84\\U000dc88cM\\x1bChZ\\U0003dff7': [-17329, 19]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=114, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'm\\xda\\x8aK\\x1bS\\x19\\xa0\\x91\\xe4',\n          constraints={'min_size': 5, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 8.0085669304228855e-261},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00aa\u00f7\u5489\u00cf0',\n       run_start=4.823427737459181e+256,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x91,\u00e8f\\x9b\\x82': 33, '\\U00085702\u00f1': -3148},\n       coverage={'\\U000d4ed0D': [8291, 17, 27334],\n        '\u00ae\\U00102d9cs\\x8bY\\U0010ba99\\x8e\\x0b?\u00fa\u00b9\u00a4': [-74, -24691, -3145]},\n       timing={' a\u00b2&TY\\U000dd787': -6.643369959652105e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=38338149151888092907930902644987065402, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 3, 0), ('c', 1, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x01sI\\x00h\u00aa\\x81_\u00f0\\U0004bc15\\x98C',\n       run_start=2.050194487141879e-295,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'L\u00d9\\U000a4d08I\\U00060700\u00fdX\u00a6\\x1fRH': -6.075846534069015e+16,\n        '\u00f6': -5.041786449969779e+102,\n        '': 712,\n        'o\u00ac\\U0010a558\\U0006d36a': 9993,\n        '\u00cd?\u00a2\u00ba\u00ceW': 3.5892861036650325e-221,\n        'x}\\U0004fe69\u00a3R': 18648,\n        '\u023e': 1.4290993365405275e-119,\n        '\ud867\udf7c\u00e8\\x86': -17362,\n        '\\x05\u00f1?': 8232,\n        'I\\x82': inf,\n        '\u00b6': 17844,\n        'idfn': 94},\n       coverage={'\\x8a\\U00093024\\x11\\U000ab27a\\U000da911': [8238,\n         -23837,\n         -22105,\n         80,\n         94,\n         420,\n         112,\n         113,\n         -8677,\n         -23316,\n         -136_280_411_758_225_409_670_378_889_441_951_169_456,\n         -18024],\n        '\u00a5\\x01B\u00fc\u00ae\u00f2\\U0003e61c\\U000b2465': [1_285_497_238, -85, 77, -60],\n        '\\U0004038b\u00f4\\x993': [44, -113, -6_305_558_613_533_482_580, -23256]},\n       timing={'\\U000a626e': 6.135922542110251e+125,\n        '\u00e6\u0153\u00c6\u0152\ufb00\u02a4\u02a8\u00df(\u256f\u00b0\u25a1\u00b0\uff09\u256f\ufe35 \u253b\u2501\u253b)': 3.518090711374213e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-89387076482408500872292192515116470349, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -1.731970732647916e+176,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7876056315582931},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('b', 1, 3), ('c', 2, 3)), (('b', 3, 1), ('c', 3, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00a9\\U000d46b5\u00d1$\\U000d6c72\u00ca\u00e8\\U0005db11\u00f9*\\U0006b9a5\u00d6\u00a4A\\x1d:\\x16\u00c7',\n       run_start=-6.15671328068136e-295,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00083283\\x82\\U000c991c': 2769376522388637.0,\n        '\u00b9\\U000ab55c\\x0c\\x17dR71': 10523,\n        '\\x88\u00d3\u00c7\u00f9\u00c8\\U00089e97\\U0004fc33L\u00e9\\x96\ud858\udd2d\\x17<\u00e4\ud862\udc4f\\U0009ccc2\u00d2=\u00be\\x82\u00fdDE\u00a3S\u00a3\\x98': 49},\n       coverage={'h': [255,\n         -6419,\n         -27,\n         14509,\n         -9048,\n         60,\n         -1_910_022_599,\n         28586,\n         16978,\n         32604,\n         93,\n         2616,\n         -12977],\n        '\\x1f': [-94, -27, -2540, 9981],\n        '\u00bc': [],\n        '\\U000ee913\u00cfb[\\x12uX\\x10\u00f8\\x12': [5587,\n         5_723_901_449_159_052_863,\n         -31006,\n         -58,\n         -85_573_944_051_260_033,\n         5,\n         8288,\n         16501,\n         17101,\n         17966,\n         9755,\n         -35,\n         100,\n         441747639,\n         3539,\n         100,\n         12324,\n         -4455,\n         28,\n         -62_793_564_331_396_910_076_894_728_375_731_102_603,\n         -58,\n         -688291649,\n         -26,\n         13764,\n         -29879,\n         28386],\n        '\\U000e5932Y\u00f2-\ud871\udcd9\u00af\\U00101c00\\x9d': [-2_861_441_911_589_155_820,\n         -3_128_152_737_661_002_210,\n         11175,\n         8_540_521_896_016_136_786,\n         -2861,\n         1_395_617_994,\n         -226548705],\n        '': [-102, 4, 0, -7197, -14131, -11942, 1_513_642_737, -10, -15676],\n        '.fS\\U0010ed91': [-43,\n         27978,\n         7_415_156_165_980_832_460,\n         -30760,\n         -30,\n         53,\n         -21168,\n         -26604,\n         32315],\n        ' - {}': [-7343, -9901, -77],\n        '\\x11Je\u00dc\\x7f\\x9aA': [-29755, 559_912_909_025_841_256, 5703],\n        '|S\\x82\\x19': [11757, 8463, 16758]},\n       timing={'\u00ae': 1.7402438658875148e+16,\n        \"\ud857\uddae'r\\U000fdd00\": -4.846095571691412e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=26829, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u027b\\U0010c8ee\u0231\u01fd\u0265\u0233\u01ce\u0217\u0236\u01c5\ud801\udfa0\u027a\\U00052f16\u0201\u026d\u0272\\U00047f87\u0266\u025b\\U00070fee\u022d\u01c5\u01f1\u024b\u01e8\u01b0\u0296\u01a8\u01b4\u0271\u021e\\U000f0b55\u0225\u028e\u01ca\u0262\u01c6\\U000c491d\u0280\u0213\u0219\\U000e8b5b\u01ec\\U0007d5e0\u0243\u0221\u01b5\u021c\\U0005d188\u01dc\u0291\u023e\u028b\\U000369ef\u021c\u0227\u0228\\U000f76a1\u022e\u0203\u0208\u01ff\u01eb\u020c\ud811\ude02\\U000e0edd\u029c\u01cc\u0242\u0223\u021f\u0253\\U0004e0d3\u01d0\u0262\u028d\u021c\u024d',\n          constraints={'intervals': IntervalSet(\n               [(420, 5999),\n                (13258, 109663),\n                (136856, 152666),\n                (185098, 226449),\n                (269675, 357551),\n                (364549, 392406),\n                (444781, 483157),\n                (498581, 542708),\n                (619653, 662863),\n                (696918, 716121),\n                (782003, 815817),\n                (837517, 930500),\n                (937155, 973784),\n                (978673, 1111118)],\n           ),\n           'min_size': 26,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.37826903577463},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=94013528,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -39,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0174\u015e',\n          constraints={'intervals': IntervalSet(\n               [(255, 27994),\n                (303570, 419729),\n                (884475, 892326),\n                (1051676, 1051916)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('b', 0, 1)),\n                 (('a', 2, 1), ('b', 3, 3)),\n                 (('a', 3, 2), ('a', 3, 2)),\n                 (('b', 2, 0), ('a', 3, 2)),\n                 (('b', 2, 1), ('a', 3, 1)),\n                 (('b', 2, 1), ('c', 3, 3)),\n                 (('b', 3, 3), ('c', 1, 1)),\n                 (('c', 0, 2), ('a', 0, 2)),\n                 (('c', 2, 1), ('b', 1, 2)),\n                 (('c', 2, 3), ('c', 2, 0)),\n                 (('c', 3, 0), ('a', 3, 2)),\n                 (('c', 3, 0), ('c', 3, 0)),\n                 (('c', 3, 1), ('a', 3, 3)),\n                 (('c', 3, 3), ('c', 0, 0))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.013152040832210332,
          "overall:gc": 0.005592168134171516,
          "generate:args": 0.06360624684020877
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287665.747709,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'\\x8b\\x96\\x96w\ufcc2\ud868\udf56\\U00107a15\u00ac\\\\\\x18\\U000b3e83': 1.3315386023284076e+113,\n        '\u00ef\\U000c1bd9': -7.079967495056725e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('a', 1, 0)),\n                 (('a', 1, 0), ('b', 1, 2)),\n                 (('a', 1, 2), ('c', 1, 0)),\n                 (('a', 1, 2), ('c', 1, 2)),\n                 (('b', 0, 0), ('b', 2, 0)),\n                 (('b', 2, 0), ('a', 0, 1)),\n                 (('b', 3, 0), ('c', 0, 2)),\n                 (('b', 3, 2), ('a', 0, 2)),\n                 (('c', 0, 0), ('a', 2, 2)),\n                 (('c', 1, 2), ('c', 0, 2)),\n                 (('c', 2, 0), ('b', 0, 0)),\n                 (('c', 3, 0), ('b', 1, 2)),\n                 (('c', 3, 3), ('b', 1, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x07',\n       run_start=-1.2060757110226581e-281,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'m': -22113, '': -21069},\n       coverage={'\\x9b\\x84\u00b5D\\x1dI\\U0010f5e4\u00d7l\\x9f\\U0007fbdf': [-30898,\n         -20542,\n         -1_724_738_940,\n         -81,\n         1921],\n        '\\U00095b4e\\x862\\U00080552': [49, -20463, 24806, -33],\n        '\u00bc\\x9e(': [16664, -22794, -957],\n        '8_:N|$\u00e1\\x8e': [29523,\n         -21015,\n         -18873,\n         1_330_446_618_092_735_105,\n         8397],\n        '\u00c1\\U00064356\\U0007c451\\U000552f7\u00b7': [73, -19417],\n        'E\\xad\\U0007ffce\\x94\\U000ff7c61.\u00f3': [-14142,\n         -27389,\n         15143,\n         300,\n         13887,\n         14836,\n         14780,\n         3746],\n        '\u00f8K\\U000f8563j\u00f28\\r\\n\\U00095701\\x02\\x08x5\u00d5\\U00071e93\u00d9': [-2988,\n         73,\n         -69_467_641_480_510_694_021_634_587_511_945_263_969,\n         285,\n         -14285,\n         8864,\n         -16062,\n         26323,\n         16320,\n         -89],\n        '\\x96\\U000bc5da\u00f7W\\U000d2fe2\u00bb\\x86\u3c09\\x91': [-30807,\n         6374,\n         -9475,\n         -94,\n         8_337_858_514_877_066_672_434_909_394_205_103_496],\n        '\\x11\\U0008c94c\\U00035d48-\\x94>4\\U0005abfe\\x80': [331_937_647_347_007_301,\n         26083,\n         -20301,\n         2579,\n         -8208,\n         -25348]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=118, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-4538526894905388.0,\n          constraints={'min_value': -1.5933751071500027e+110,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8980187121755079},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b';\\x98\\xfcI',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00a4',\n       run_start=-6.103515625e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 3.249182809655909e-254},\n       coverage={'o\\x81\u00b2C\\U0005b09f\u00b0\u00edn\\U0002f6b3\\U000ccbccfL\\x98\u00dc\u00b8#j5\u00f1\\x02]P\\x97\u00e0Z': [148,\n         -32341,\n         4029,\n         29008,\n         8291,\n         -2_612_918_195_658_330_762_994_948_410_854_306_749]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-41, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.05817223899844072},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=12138,\n          constraints={'min_value': 12054,\n           'max_value': 12149,\n           'shrink_towards': -2,\n           'weights': {12138: 0.01099816103902724}},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('c', 1, 2)),\n                 (('a', 1, 2), ('b', 2, 2)),\n                 (('a', 2, 0), ('b', 2, 2)),\n                 (('a', 2, 1), ('c', 3, 1)),\n                 (('a', 3, 2), ('a', 0, 0)),\n                 (('b', 1, 0), ('b', 3, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-6.23017310251951e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x18VT': -32592,\n        '\u00ef\\x0fZ': 45,\n        '\\U000687f1': 23280,\n        '\u00c3\u00b0p': 0.005,\n        '\u00ba\u00aa': 5.576123563997077e+16,\n        '\\U000d4955': 25189,\n        '\u00e3\u00ae\\x9d+\\U000baa7dJK\\U0005eb9e\\xad\\x83\u00f5\\U000dbf19\u00caT\\U00083254': -14835,\n        '\\x05\\U0008150f': 92,\n        '\u00d7}': -5.948285101177274e+16,\n        'A\\x04': 12930,\n        '\u00b2Z1\u00c0\\U000df40c)\\x8b]\u00f6\u00c2TA\u00ca\\x1f\u00cc\\U0010faac\u00e3\\U000357e7': -1.082227532996494e+35,\n        't\\x97`': -3.0493912192256184e+16},\n       coverage={'': [11918],\n        '\\U00073c52a\\U000d93f5cw\u00ef': [68,\n         -1713,\n         -3615,\n         -26295,\n         5_023_354_481_167_392_209,\n         -122,\n         -15753,\n         109,\n         -21312,\n         -5_789_110_630_196_024_585,\n         -30103,\n         -26407,\n         -18215],\n        'nB\\U000a344d7P\\U000dbe0d\\x1f\\U000a09f8$\\U000a376a\u00a4\\t\u00a1': [14221,\n         -15898],\n        '\\U000f57c3\u00fe\u00cf:Bw\u00da\u00b1*2\u00b2:\\U000e86bd\\x82\u00a1\\x03^\u00b0\u00e2\u00f1\ub15b': [-115_213_867_333_237_372_486_643_066_113_058_519_408,\n         1653,\n         10512,\n         77,\n         22310,\n         32346,\n         12855,\n         16900],\n        '\u00d7B\u00e6\u00b2{\\x11\\x05d': [-2, 32560, -111],\n        '\\x7f\u00b8\\x7f\u00fb\\U000bcb2f\\x98\\U000f34c6\\U0008ed82': [987886767],\n        '\u00b8': [],\n        '\\U000eced2\u00f1\u00b6\\x83\\U000d309b\\U000e82fa\\U000a6e78\\U000dc13e': [11019,\n         1921,\n         103,\n         -11656,\n         -18239,\n         3_050_324_028_454_992_983,\n         18389,\n         -6_581_951_757_014_199_457,\n         8288],\n        '\\U00062294\u00f9': [20629, -5054, -68, 12956, -18123],\n        '\u00f0FOl': []},\n       timing={'\\x02\u00a1s': 5.90822120522073e+16,\n        '\\x04)V\u00f4': 5.642373400149589e+16,\n        '--setupplan': -2.2959545384050674e-256,\n        '': -1.9,\n        \"\\x18'\": 8293309346859801.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=57, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-6.401239994036131e+16,\n          constraints={'min_value': -inf,\n           'max_value': 4.458627688252632e+197,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.0128844779141467e-40},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.1092836491630145},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6837262008490829},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 0), ('a', 3, 3)),\n                 (('b', 1, 1), ('a', 0, 0)),\n                 (('b', 3, 0), ('a', 0, 2)),\n                 (('c', 1, 0), ('a', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U0002f4ce\ud81e\udc8e\u00cd',\n       run_start=-7450501915513475.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\x02h\u00db': 4.7894179464114056e+16,\n        '?\\x86\\U000be425\u00e4\\x94': -4.617590452793181e+53,\n        '\\x15\\U0009c952\\x8b\u00af': -1.4250568398640368e-10,\n        '4': 4.719324304738996e+16,\n        '\\x12(C\u00fes\u00a9\\U00057667\u00d7/\u00b9\\n\u00cb': 3.281674067721756e+16,\n        'I\u00fd\u00b2\\U00067982\\U0004ab57\\xa0\\r\\x83\u00fb\\U000b034c\\x11.': 1.5841808979375376e-26,\n        '': -4.2457940596046945e-69,\n        '/\u00fa\u00d3\\x88\\x0b\\x8aq\\U000b2f86\\x14\\x9e\\x07\\U0010d733\\U00108dc0\\x7fD\u00fc\u870d\u5f817': -1.7976931348623157e+308,\n        '\u169b\u1684\u1693\u1690\u168b\u1692\u1684\\u1680\u1691\u1684\u1682\u1691\u168f\u1685\u169c': -3.8561321556803304e+16,\n        '\u00f2\u00f2)KD': -3.703495645490143e+117},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-7708, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u2743\u27d4\u280b\u2718\u27ef\\U0008537a\ud886\udc3f\u2769\\U000b54cd\ud888\ude22\u2769\u27ba\u27a4\u277d\\U000ce1e2',\n          constraints={'intervals': IntervalSet(\n               [(9999, 18959),\n                (37231, 138285),\n                (150685, 281689),\n                (368526, 371381),\n                (496787, 551326),\n                (570523, 744086),\n                (756836, 863282)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 6.4284758465001944e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 3.0356952799948777e-80},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.535076353621284e+16,\n          constraints={'min_value': 2.00364979801585e+16,\n           'max_value': 6.146146259804222e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.933676895165412},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u908b\ud811\udc9c\\U00080b47\u90b6\u905a\u9133\u90ad\u9119\\U0007d4f9\u90d3\u913d\u910d\u90cf\\U000193b4\u910c\ud81f\udf15\u9077\u90b5\u9093\u905e\u90ae\\U000d5930\u912e\u9101\u9125\ud85d\udee2\u90eb\u9148\u90b0\u9101\u906f\u90bb\u9051\u90bb\u9123\u90e3\u9120\\U000a6cdb\ufa49\u909d\u9051\u90a2\u9092\u9120\ud85b\udc9f\u9103\u9144\u906b\u90f9\u90e4\u904c\u906a\\U000d5d79\u9127\\U0007ab32\u909a\\U000b53fa\u9079\u9114\u9065\u9082\\uedef\u907a\u90b1\u910f\u904e\u9073\u9119\u9121\u90ef\u9101\u9082\u90ea\u910f\u9101\u9104\\U000c8c46\\U00038486\u90d5',\n          constraints={'intervals': IntervalSet(\n               [(36939, 134619), (156573, 279916), (488484, 895807)],\n           ), 'min_size': 41, 'max_size': 141},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\x81c\u00edI\u00c5D\u00d2\u00f2\u00ab\\U00034f5a\\x17q\u00d9\\U000cba13k\u00e4\u00df\u00bf\u00c5\\x18\\x10qFj\u00e3\\U000d57fc\u00f1\u00e1-}\ud87a\udf9e\\x81\ud853\udfe9\u00fcB\u00fa\u00ca\u00c7\\x11\u00bd\u00cf\u00f6\\x1e\\U00034c0bL\\x92\\U000cdae8\\U000476e1\u00bd{\\x98\ud842\udf56\u00af\\x12\u00e7\u00ef\u00b0\\U000c60e1\\x11\u00a7\\x0c\\U0004b201\u00f3\u00f1\\x12\\U000dfeb1f(\\x9c_\ud870\udd5d\u00fd\\x88\u00b9WJ\\U00047812\u00e6.\\x99\u00deg\u00b8\u00c0:\ud844\ude56\u00a5\ud878\udcbd\u00ee\u00de\\x13\u00d4x\\U000d4b1e\u00a1\u00af\u00edB\\x03i\u00c4\\U0006231f%\\U00035902\u00f6\u6ec6\\U00051f71\u00b4z\u00ae%\\x8a,\\x87\u00a3\u00d9\u00b9\u00d9\\U00062c5bZ8\u00fc-\\U0001ad97\\x85{J',\n          constraints={'intervals': IntervalSet(\n               [(1, 237372),\n                (287444, 342229),\n                (365897, 421854),\n                (763094, 931314)],\n           ),\n           'min_size': 41,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 3, 2)),\n                 (('a', 0, 3), ('c', 2, 2)),\n                 (('a', 2, 2), ('b', 1, 1)),\n                 (('b', 0, 0), ('b', 3, 3)),\n                 (('b', 0, 1), ('c', 3, 0)),\n                 (('b', 1, 0), ('b', 2, 3)),\n                 (('b', 1, 3), ('a', 1, 3)),\n                 (('b', 2, 1), ('a', 0, 0)),\n                 (('b', 3, 1), ('b', 3, 3)),\n                 (('b', 3, 3), ('c', 2, 2)),\n                 (('c', 0, 1), ('a', 1, 1)),\n                 (('c', 0, 3), ('a', 1, 3)),\n                 (('c', 1, 0), ('a', 2, 1)),\n                 (('c', 1, 2), ('b', 1, 1)),\n                 (('c', 1, 3), ('c', 1, 1)),\n                 (('c', 3, 2), ('b', 1, 0)),\n                 (('c', 3, 3), ('b', 1, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=1.3914425586545641e-129,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 4.928153525474896e+16,\n        's': -112671550,\n        'true': 4.2951550439411005e-176,\n        '\\x1e': 2.2250738585072014e-308,\n        '9v|\\x0b\\U000446afz': 2.632011212456304e+16,\n        '\u00cc\u00ab!Z\u00c1\\U000b46c9\u00d0#\\x81\\x86\\x80': -3.262137209726946e+16,\n        '\\U00050d1e]': -0.5,\n        '\\x91`o\u00e0\\U0008201f\u00ea\\x05\\U0006837a\u00ca\\U000e6922\\U000c55e8\\x1bV': 0.01,\n        '\\x83': 1.9334679650187428e-94,\n        '\\x9a\u00b5': -1.4897548692271956e+16},\n       coverage={'v\\U0007f53aE': [6975,\n         10,\n         -8_770_599_574_745_559_708,\n         42,\n         -105,\n         1_025_334_699_069_964_886,\n         -598516557,\n         1921,\n         -210016173,\n         -2432,\n         -28,\n         -787371627,\n         -99,\n         2412,\n         -77],\n        'P\u00a9\\x1f': [-81],\n        '': [25714, 50, 45],\n        \"?sy9'\\U000df1cc\u00f9\u00efL\": [3495,\n         29,\n         -32696,\n         724_862_080_486_768_447,\n         14868,\n         -30212,\n         -9982,\n         267,\n         8232,\n         9926,\n         8787,\n         -3460,\n         -7034,\n         2045,\n         -10572,\n         -13518,\n         22077],\n        '\\x19\\U00016595': [-30760],\n        'R': [94],\n        '2\u00a9\u00b2:': [-95],\n        'PYTEST_DONT_REWRITE': [1_606_982_395_519_396_363],\n        '\\x1b\u00d0\\x00\u00ce\\x9d\u00bbX\\x04': [-17883,\n         19928,\n         31631,\n         512,\n         119,\n         -89,\n         -17,\n         3805,\n         95,\n         13058,\n         -8542,\n         -23919,\n         101,\n         -7289,\n         -13306,\n         19806,\n         -19230,\n         -72,\n         7,\n         848642206,\n         1901,\n         15231,\n         -75,\n         -25615,\n         -93,\n         -63,\n         -107,\n         -27790,\n         1_965_998_236,\n         22527,\n         -56,\n         117,\n         13353,\n         -16431,\n         15182,\n         -20042]},\n       timing={'': -3.896744193595262e+16,\n        '!?y\\x05\\U00064e26\u00e5': 3.646809070204771e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-125, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'S\\xb6\\xdb\\xfa\\xa1\\xa9(\\xa4@\\x1cZ',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'.\\xad',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe3\\xbd?\\xc4[&9\\xf5(\\xde\\xeb\\xbf`&\"\\xf1d\\xe4\\x93Y\\xc9\\xa4%t@?\\'s o\\x19\\x91\\xce\\xacy\\xf7\\xa4!V`f\\xd9',\n          constraints={'min_size': 11, 'max_size': 111},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'D\\xb8\\xb1\\xcc\\xcc5\\xc94\\x945OP\\xc3\\xa3#\\x9c\\x97t\\x8a\\xad \\x95\\x9fSn\\xa7\\xa8\\xc2/\\xfff\\xbf\\xf7\\xd1(]\"k\\xc0\\xab\\xda\\xba\\x17\\xa0Ca\\xf3\\x12\\x03\\x8c\\xb7',\n          constraints={'min_size': 33, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.4583671211032792e+16,\n          constraints={'min_value': 3182981307137112.0,\n           'max_value': 7.31976922222835e+307,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1e-05},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud863\udecd\ud863\udee7\\U000d3395\ud863\ude86\\U000d6399\\U000412b8\ud863\udf27\ud863\udf17\\U000a4b87',\n          constraints={'intervals': IntervalSet(\n               [(167473, 573911), (653460, 981280)],\n           ), 'min_size': 5, 'max_size': 105},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xf0D\\x91\\x9c-\\xc5\\x85\\x8a\\xa9\\xd7p\\x86kM\\xfe/\\xdc\\xf7\\x17\\n\\xe5\\xdc\\x85d\\x7f\\x07\\x1cg\\xc1\\xb3\\x1f9x\\x97d\\xd4\\x98\\xa4F\\xf0\\x0fZ\\x0e\\xd3{<\\xa9\\xc4\\xf0\\x8c\\x00\\x00&\\xd4'\\xee\\x82\\xeaC\\xf7\",\n          constraints={'min_size': 45, 'max_size': 76},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1000.0,\n          constraints={'min_value': -1.019632072701415e+267,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6282594996586209},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.01},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=4.6676877050861464e+16,\n          constraints={'min_value': 2.728854327687317e+16,\n           'max_value': 6.647125746708881e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3681090646926651},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000d92fc\\U000d92e4\\U000d92c1\\U000d930e\\U000d933b\\U000d936f\\U000d92da\\U000e39df\\U000d933c\\U000d92b7\\U000d92d6\\U000d92e9\\U000d92be\\U00105718\\U000d9298\\U000d92a1\\U000d9347\\U000d92cf\\U000d937d\\U000d92d4\\U000d935b\\U0010700a\\U000d92a1\\U000d935d\\U000f1cb4\\U000d92ab\\U000d935f\\U000d92e6\\U000ff8fa\\U000e0b3e\\U000d92c5\\U000d92f1\\U000d92a5\\U000f7c27\\U000d9359\\U000d9373\\U0010125d\\U001046e9\\U000d9289\\U000d9289\\U000d9315\\U000d92c6\\U000d932f\\U000d92b7\\U000d92f3\\U000d928a\\U000d929f\\U000d928c\\U000df466\\U000d930a\\U000e0922\\U000d9310\\U000d928f\\U000d937a\\U000f51af\\U000d92c5\\U000d928a\\U000f5fc6\\U000f86f7\\U000d9352\\U000d92ab\\U000d92c9\\U000d9333\\U000d9342\\U000d9334\\U000d92e8\\U000d9291\\U000d9363\\U000d936b',\n          constraints={'intervals': IntervalSet([(889477, 1088201)]),\n           'min_size': 40,\n           'max_size': 140},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=121_318_744_529_337_662_935_816_287_455_775_275_403,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -924,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0952999252215885e+308,\n          constraints={'min_value': 3.995846980323192e+29,\n           'max_value': 1.1574860946109576e+308,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.2400820276880709},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.45771280053511754},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xfc\\x87\\xe00\\xcb\\xbe=\\x0c\\xc3\\xee\\xe5\\xc3\\xb1H\\xba\\xc6\\x14/\\r\\x95#\\xf2.<\\xde\\xfb\\xc5\\xd9}\\x0fs\\xf4^Cw\\xc9\\x95\\x1d\\xeaB\\xe0',\n          constraints={'min_size': 31, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=4,\n          constraints={'min_value': None,\n           'max_value': 34,\n           'shrink_towards': -12637,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb8v?\\xbb2\\xc2\\xb8)z<\\xaa\\x0b\\xa0\\x03\\x8dS',\n          constraints={'min_size': 16, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 6.103515625e-05},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xff;\\x0b,\\x0bu\\x9f6\\x88@t\\r\\x9d\\x00\\x12\"\\xa3R\\x87\\xddR\\xedn\\xa0\\xeb\\x1bUl\\x85\\xa3<\\xe4=>\\xa0\\x8a\\xa7D\\xd3\\xeaL\\xc0#\\x06\\\\I\\x87FZ\\x0c\\x06\\xdd\\r\\xae\\xdb\\xc25\\x16\\xbf\\xdd',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.008695957949385047,
          "overall:gc": 0.0038382080383598804,
          "generate:args": 0.058876380033325404
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287681.561175791,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0009554c',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\x07\\U00081249': 6.200388128935999e+16,\n        '\\U000bd28f': -8087353418113674.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=736334283, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 1, 0), ('a', 0, 0)),\n                 (('b', 2, 0), ('a', 2, 1)),\n                 (('c', 0, 1), ('b', 3, 0)),\n                 (('c', 1, 0), ('c', 3, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0027035839157179,
          "overall:gc": 0.0012294990592636168,
          "generate:args": 0.0033354180632159114
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287674.235313833,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='z',\n       run_start=2.045095838570781e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        '\\x7f\u00ae\\x80\\U000c70e5': -0.99999,\n        '': -2.3596724889114617e+102,\n        '\\x80\u00ca\\U0009e6ff\ud87a\udde0\\U0009b7c9\\U000759b8n\u00e4\\U000e9528x': 52},\n       coverage=None,\n       timing={'\u00f9\u00cc\u00c7\u00c3\\x01': -3.319405144322077e-96,\n        '\\U000b1aa9\ud81a\udd32:': 5.549676322726899e+72,\n        \"W\\x80\ud861\udc96\u00e3*d\u00e2\u00f8\\U000f5174\\U000f8b3b\\x9e\u00bc\ud838\udeef\\x17\\U000b956a\u00f9'\\U0006bd12\u00e5\": 0.005,\n        '\u00c2\\x9aO\\U0009f876mvgu\\U0001cede\\U000d7bf8\\x9e\u00a3': -4.2787449545591816e+16,\n        '': 4.147265835587898e-221,\n        '\u00d1\u00d1\u00f8': -2.2910858906270346e+278,\n        'L': 1.7976931348623157e+308,\n        'g': -4.2307441748568616e-168,\n        '\\U0001641b\u00b8\u00c9': 1e-05},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=16, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 138},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.1298538909668552e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.23115295284135945},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('c', 1, 2)),\n                 (('a', 1, 3), ('c', 1, 0)),\n                 (('a', 2, 1), ('c', 2, 3)),\n                 (('b', 1, 0), ('b', 2, 0)),\n                 (('b', 3, 3), ('b', 0, 3)),\n                 (('b', 3, 3), ('c', 2, 3)),\n                 (('c', 3, 3), ('b', 1, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00c8\\x0e\u00a4\\x00',\n       run_start=1e-06,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'p\\x17\\U000eef08}': 1.1558492486401171e-60,\n        '>\u00fc3\u00a2\\x14x$': -3.110935245048812e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23201, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 85},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.0,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.9693061950665218},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-1.9158832940509125e-95,\n          constraints={'min_value': -inf,\n           'max_value': 3.4432706153327696e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 5e-324},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.21844418062675347},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('c', 3, 2)),\n                 (('b', 0, 2), ('c', 2, 3)),\n                 (('c', 0, 2), ('c', 1, 3)),\n                 (('c', 3, 1), ('b', 3, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x00',\n       run_start=6.632248625754862e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=18411427611679025891812713529182444705, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.3558380027290305},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.41977675064156605},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.7976931348623157e+308,\n          constraints={'min_value': 9.767429961633511e+194,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.24629054665062206},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -5.230091645992243e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7397030658174483},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('b', 2, 1)),\n                 (('a', 1, 0), ('c', 2, 1)),\n                 (('b', 1, 1), ('b', 2, 1)),\n                 (('b', 2, 3), ('b', 3, 2)),\n                 (('b', 3, 0), ('a', 3, 1)),\n                 (('b', 3, 2), ('a', 0, 3)),\n                 (('c', 0, 1), ('c', 3, 2)),\n                 (('c', 2, 0), ('a', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=';',\n       run_start=6.149606578255741e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=18312, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\ua35c\ua2a2\ua341\ua2c5',\n          constraints={'intervals': IntervalSet(\n               [(41587, 49642),\n                (70244, 91501),\n                (140221, 143869),\n                (192285, 224797),\n                (246583, 342917),\n                (351251, 376581),\n                (590159, 600382),\n                (712592, 714950),\n                (753969, 758465),\n                (764571, 967751)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=12841,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6519676585538609},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.5269838677221875e+308,\n          constraints={'min_value': 1e-06,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.175494351e-38},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\x86\\x96\u00b8~~\u00a2\\U0005cf96`\u00ec\\U0005d57f\u00b4\\x0c\\x02\\x01v\u00eco+\\U0004e068\u00fe\u00d1\u00a6\u00c0\\x8e-\\x96\\x81>\\U00039a80dL\ud867\uded2\\x12)N\\x8e\\U0003bc24\u00fe\\x91>\\U00054047\\x8a\u00bf\\U00053060\ud86b\ude20',\n          constraints={'intervals': IntervalSet(\n               [(0, 20640),\n                (124893, 260167),\n                (291573, 430271),\n                (498338, 517282)],\n           ),\n           'min_size': 21,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-10637,\n          constraints={'min_value': None,\n           'max_value': 11,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=9007199254740992.0,\n          constraints={'min_value': 67765469888.615166,\n           'max_value': 5.206673622729393e+307,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.9973133113754715},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=4.536091626532147e+16,\n          constraints={'min_value': -1.241109323199115e+16,\n           'max_value': 1.2965187682708198e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.5},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_582_710_205,\n          constraints={'min_value': None,\n           'max_value': -1_582_689_800,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00067498\\U0004a3dd\\U0004a3c7\\U0004a3c3\\U0004a429\\U000d7548\\U00054f42\\U0004a38a\\U0004a3ae\\U0006f76e\\U0004a37a\\U0004a40d\\U0004a3da\\U0004a3bf\\U0004a404\\U0004a394\\U0004a390\\U0004a400\\U0004a415',\n          constraints={'intervals': IntervalSet([(303922, 989788)]),\n           'min_size': 11,\n           'max_size': 111},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'.hypofuzz.failures',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=23242,\n          constraints={'min_value': 23168,\n           'max_value': 23256,\n           'shrink_towards': 0,\n           'weights': {23236: 0.1933859049099992,\n            23199: 0.18439970560398553,\n            23253: 0.23549380332760617}},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 3, 3), ('b', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=7.190978644944748e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': -7517,\n        '\\x11[\\x8f\\U0008a3c1\\x1fT\\x06': -2.477831065484002e-53},\n       coverage=None,\n       timing={'\\U0006aabc\\t\\x7f~': -2.191120314050192e+16,\n        '\\U000f4633L\u00b4n\\U000dcf42\\U000b9771J': 0.01,\n        '\\U00051500\\U00089984': 2.00001,\n        '\\U000d4e37e\u00b9': 6.97347471759953e+16,\n        '/': 1.9945700711228516e+16,\n        '\\xa0\u00c6\"\\x8e0\\U0008250e\\U00070627\\U0008ca93\\n\u00ed\u00b2': 0.5,\n        '': 7166042828195254.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=19088, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'\\xa4-',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x88\\xd4',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-21907,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -34,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-1.1004904587918318e+16,\n          constraints={'min_value': -2.7504438649837176e+16,\n           'max_value': 2.1868473770545248e-11,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.016935798751971824},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.6131563240604183e+308,\n          constraints={'min_value': -3074974368834281.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5086636261487353},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xb0\\xd5\\xf5\\x12\\xb8\\xd33o\\xa1n\\xbf\\xe1\\x16\\xd7\\xf6\\x06\\xba',\n          constraints={'min_size': 13, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.22936253870130635},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud83c\uddfa\ud83c\uddf8',\n          constraints={'intervals': IntervalSet(\n               [(73733, 224803),\n                (237583, 384028),\n                (402322, 650784),\n                (877246, 967758),\n                (1022334, 1053759),\n                (1090799, 1114110)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('b', 3, 0)),\n                 (('a', 3, 3), ('a', 1, 0)),\n                 (('b', 0, 0), ('c', 3, 0)),\n                 (('b', 2, 3), ('b', 0, 3)),\n                 (('c', 0, 2), ('a', 2, 1)),\n                 (('c', 0, 2), ('c', 2, 1)),\n                 (('c', 1, 1), ('a', 1, 0)),\n                 (('c', 2, 1), ('b', 0, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='O\\U0007eace\u00c5\ud841\udf5d\u00b91\\U0005771ejS/Y\\x84\\x99w\\x81A]',\n       run_start=-3.879325592999465e+291,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 28310, 'q': 5.9229521362259576e+16},\n       coverage={},\n       timing={'e\\x8ae;': -1.0482925355099996e+16,\n        '\\U0004f628d': -3.534840990720749e+227,\n        '>T\u00f9': -1.5471682664406092e+187,\n        '{V\u00ca\u00bf<D\\U000f4e21\u00e4\u1c7d\\x9d\\U000c8b5b\\x97': 1.4120122903116962e-297,\n        '': 2.479506603458885e+16,\n        '\ud854\uddd6\u00c0': 1.0495111289396157e-119,\n        'Captured log': 6.143649079079334e-97},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=28090, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9455209857273681},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'M<\\xb8S\\xd7\\xb0',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.5388907098209357e-180},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xf11\\x9d\\xa1k.j\\xb68\\xb9',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.5735198883400834e+116,\n          constraints={'min_value': 2.8134323323497584e-51,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.1},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.5,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.3965868632602477},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x8b\ud876\ude46t',\n       run_start=-6.56348347572523e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x00\\U0004c668\\x9e\u00e0\\x83\\x95\\ne/\\U001091ac\u00e6S\u75ec': 4.307129431865559e-86,\n        '\\x17\\x97`(D\u00ea\\x8d': 0.5,\n        '\u00b7\\x1f': 5.960464477539063e-08,\n        '\\x14\u00e2\u00e4s': 2.4865149442267787e-239,\n        '\\x86\u00fd\u00ed': -1958759644000112.0,\n        '\\x17\u00dfN\u00ef\\U0007b600W\u00f2\\U0005529a': -32746,\n        '': -88106.31447327734,\n        '\u00bd\\U00101a30E\\x93': 34,\n        '\u00f1:\\U000845ec\u00da': 27528,\n        'D\u00e6\"\\U0007f0ca\u00bf\\U000e6520\\x07v\\U000b806b3\\x12\\U000981d27\\'\u00b5\u00e6': -27222,\n        '>': -7.177120434593125e+16,\n        'D\u00c4\\U0006ff5b\\x0b\\x97\u00c9L$\u00d8,c\u00f7\\U000799a9\u00a7': -6.582800735883909e+16,\n        '\u00c1\\U00034e04&': -6.965304418881862e+16,\n        '\\x12I\u00da\\U0008a998qv\u00f0\\x1b': 2.290726173429169e+26},\n       coverage=None,\n       timing={'\\x0cac\\U000827e5': -1.0505655416185209e-45,\n        'F\\x97\\n\u00d8\\U000b5472\u00e9O\\x0e$\\U000db70f!\\xa00': 2.225073858507203e-309,\n        '\\x13\\U0003c69e': -inf,\n        '\u00e7': 1.676739606087229e+307,\n        '+\\x00E\u00d4\u00d2M': 2.264450589309233e+171,\n        'v\\U00052351\\U000675e1': 0.1,\n        'y\\x1b': -3.1390278480250456e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=43, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 3, 0)),\n                 (('a', 3, 1), ('a', 2, 0)),\n                 (('a', 3, 2), ('c', 0, 1)),\n                 (('b', 0, 3), ('a', 2, 3)),\n                 (('b', 1, 2), ('a', 0, 0)),\n                 (('b', 1, 3), ('c', 0, 3)),\n                 (('b', 2, 3), ('b', 2, 0)),\n                 (('b', 3, 1), ('c', 2, 0)),\n                 (('c', 1, 0), ('b', 0, 1)),\n                 (('c', 1, 0), ('c', 1, 0)),\n                 (('c', 1, 1), ('a', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x1c\\x98\\U0008760bj',\n       run_start=-1.6978616288578224e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'I\u00bc\u00d5\\U0006c755A\\U000ea609m': 770504551,\n        '\\U0004183dW(': 5.628432819222288e+16,\n        '\u00c5 ': -24083,\n        'M\u00de\u00e5': 3.592176431487076e-306,\n        'bs\u01a8\u00d6mc\\U000d9e72\u00e5\u00bf\u00ec\\U000b3846\\x18\\x0e\u00b9t': 4.481463634394901e+16,\n        '&': 9.28829624677881e-176,\n        '': -1e-05,\n        '}\\x91': 15785,\n        '\\nZ\\x17\\U0001eaae\\x85%N\\x12\\x97\u00e0\\x94\\U000acffd\u00c7\u00e60': -1_509_489_425,\n        'z\\x1f\u00b7\\x9a\\U000cf5e0\\x17\u00fb\\U000b9340p\ud877\udff8\\U0004eea5': 4.813043459276928e+282,\n        'Te\\U00089830': -24176,\n        '\\x0b': 129,\n        '\u00a6\u00ac;b\u00ab\\U000aaf72\u00b9V\\U00063c58\u00be\\U000ebb52': 2.5402229341234348e+16,\n        '>': -2.218599231616975e+118,\n        '0\u00bb?\u00e5\u00d4\u00f3/\\x88\u00b4': -5.35640727246243e+16,\n        'Wf\\U0008368fk\\U0010e795\u01d3\u00ca\\x94': 21806,\n        '\\U00104352\\U000eab8f\\n': -4765993685601168.0,\n        '_\ud85f\udea0\u00cf0\\x871\u00d9\\x867\\x0e': -1.1338550014080592e+16,\n        '1\u00d2>|\u00da\u00a5yf': -6.655673840567017e+16,\n        't': 25877,\n        'vk\\x06\u00c3+\\x92\u00dcK\u00c7(*': 29983953,\n        '\\x96\\x05': -6,\n        '\\x0b\\U000b422e\u00cb\\xa0\\U00054912\\U000739d0\ud87a\udcf9Rv\ud886\udfcb\u00dc\\x8b\\x04\\U000f9658^\u00e1\\x97\\uf0f7\u00d2\\x02\\U000eabe5|\\x17\\x996\u00f5\\U000f0c9e\\x0f:\u00e7\\x9b': -30077,\n        '\u00db&\u00c4~:\\U0006bcc5\\x10}8\u00b3b\\x0b(\u00ae\u00e5\u00a92\\x878w\\r': inf,\n        '\\x00\\U000ed351\\x8d\u00aaU\u00f7\\r\u00a5': -1.2238943825398552e+16},\n       coverage={'': [12726,\n         1_476_968_726,\n         23838,\n         10511,\n         -17648,\n         708447911,\n         26567,\n         19494],\n        \"W'\": [],\n        '\u00b7\u00c6r\u00b3T\\x16\u00fa\u00ea': [-16204, -26, 11613, -6820, -4851]},\n       timing={'4\\x1b\\x18\u00bbY\u00c2\u00aa\\x1d\u00d3\u00f7': 2.455412835090588e+16,\n        '&-M\u00d7\u00bc:e\\uef9a': 5.897329770133673e-249,\n        '\u00c1\\U0009116a_\\x13\\U000df829\u00e2\u00eaV7': 5.164170137584728e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-3790, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 135},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.0,\n          constraints={'min_value': -inf,\n           'max_value': 0.001,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.813934920032914},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 1), ('c', 0, 2)),\n                 (('a', 2, 1), ('c', 1, 0)),\n                 (('a', 3, 2), ('a', 0, 2))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.011051624198444188,
          "overall:gc": 0.004135333758313209,
          "generate:args": 0.06059816962806508
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287680.409595416,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='j\\x9d\\x85\u5e52\\U000bba79\\r\u00e5f\\U000b12a8\\x16',\n       run_start=3.2491785317907904e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage={'': [],\n        'Infinity': [50, -3, -26, -24090, 17034, 28081, 41],\n        '\u00c1\\U0007cae2\u00f7\u00bb\u00da\u00c9w': [-4181, -7013, -363],\n        '\\x8c\ud86e\uddc2C\u00f9C\\U0008619d\u00c9': [32497,\n         82,\n         -81,\n         -11487,\n         1_030_802_803,\n         -5741,\n         22903],\n        'N\\x89\u00ab\u00e1yF\u00ac': [125, -74, 18294],\n        '\ud86b\ude2eY*\u00ed\\U00089cb6\\U000c5eb5\\x03\u00ba\\U00057d77\u00c2V\\U000e7e74\u00cd\ud81d\uddd1X\\x12.9\u00ba{:\u00fa': [],\n        'A\u00e1\u00bcQf\\U000f4ab6': [-22661, 8432, 448, 74, 26, 2020, 22, 8281],\n        '\\x1f\\x1c]\u00ab\\U0006c669%9\u00df\u00d8\\U000c6894\\U00069d5a\\x86\u00bb': [-9938]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=27960,\n          constraints={'min_value': 2027,\n           'max_value': 68_112_964_837_899_012_834_396_000_907_775_787_020,\n           'shrink_towards': 4115,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=22789,\n          constraints={'min_value': 0,\n           'max_value': None,\n           'shrink_towards': 156_417_475_955_199_076_881_605_765_245_983_422_924,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xd1\\x81=\\xec\\xf5',\n          constraints={'min_size': 2, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8919875981688077},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(1, 37592), (96409, 768403), (891577, 906747)],\n           ), 'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7790556967578088},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(23144, 127516),\n                (209708, 240980),\n                (476517, 613224),\n                (641635, 675688)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-11825,\n          constraints={'min_value': None,\n           'max_value': 30,\n           'shrink_towards': 756,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-4.014479604449169e+16,\n          constraints={'min_value': -4.030676938864542e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.0001},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe5\\x95\\xff\\xb7\\xe4\\xd6\\xeb\\xa4\\xd0\\xfd\\x0b\\xf9bdb6p\\x07\\x8e\\x05`\\xfe[*>\\xe1l\\xa4eq>f,\\x02c\\x8d-\\xb2\\xcbp\\xcbq\\x13\\xed\\xc5\\x8e',\n          constraints={'min_size': 29, 'max_size': 129},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000a3b90\\U0001ada8\\U0001ad18\\U0001ad8c\\U0001ade5\\U0001adc4\\U0001ad41\\U0001ad72\\U0001acf9\\U0001ad40\\U0001ad7f\\U0001adc8\\U0009f3b9\\U0009e760\\U000baee5\\U0001acef\\U0001ad90\\U0001ada6\\U0007c9b3\\U000a76ed\\U0001ad09\\U0001adc8\\U0001ad62\\U0001ad8f\\U0001ade8\\U0001ad52\\U0001ad04\\U0001ad88\\U0001ad6c\\U0001adb4\\U0001ad58\\U0001adad\\U000a0948\\U0001ad07\\U0001ad7b\\U0001ad39\\U0001acf4\\U0001ade3\\U0001adb4\\U0001ad9c\\U0001ad32\\U0001ad90\\U0001ad79\\U0001ad2c\\U000ab003\\U0001acef\\U0001ad8e\\U0001ade6\\U0001adab\\U000be77d',\n          constraints={'intervals': IntervalSet(\n               [(109804, 224667),\n                (492560, 519636),\n                (612761, 791368),\n                (1023784, 1037548)],\n           ),\n           'min_size': 35,\n           'max_size': 135},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8_730_865_681_767_698_642,\n          constraints={'min_value': 8_730_865_681_767_697_168,\n           'max_value': 8_730_865_681_767_700_413,\n           'shrink_towards': -37_675_561_471_384_290_096_906_609_155_506_493_391,\n           'weights': {8_730_865_681_767_697_245: 0.024734066306834418,\n            8_730_865_681_767_698_642: 0.7479766076821474}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-20180,\n          constraints={'min_value': None,\n           'max_value': 53,\n           'shrink_towards': -3016,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1e-06},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.3157251792492822},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=2.00001,\n          constraints={'min_value': -4267966155318377.0,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7628513623448696},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 6.694101966610104e-177},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-2_766_258_426_364_819_423,\n          constraints={'min_value': None,\n           'max_value': -12694,\n           'shrink_towards': 64,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=396,\n          constraints={'min_value': -10,\n           'max_value': 1897,\n           'shrink_towards': -119,\n           'weights': {1889: 0.1202471068131391,\n            -9: 0.44545190971423687,\n            396: 0.41328557607453764}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5e-324},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.1754943508222875e-38},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 150},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x82{'\\x8a\\xab\\xe4\\x11\\x07_\\xd5p\",\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xad2d',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xe5I\\xaa\\xf7\\xe2\\x00\\xf8\\xc2^`\\xb7D\\x8f\\xbdqB8\\x9d\\xefu\\x9a\\xb3\\xc0*jcd\\xbf\\xf6\\x16\\x8c5&\\xb1O\\xe1\\xcc\\xbf\\x93\\xaf\\x00\\x9f0\\x14\\x85\\xf90\\xa6\\x05\\xed\\xb6\\r\\xff,?\\xee]\\xc0*\\xbf{\\t]\\x06Y\\x8f\\x9e\\xe5%\\xcf)\\x9f\\x83\\xe5\\xf8\\x87\\x98\\xb3\\xe3\\r\\x95\\x99Ar\\x125m%\\xb0\\xc1\\xd4\\x99\\xe8-O\\x02\\xc5\\x1f0J\\xcb\\xebUP\\xb4\\xac\\x82\\xa7\\xab:\\x81SA/',\n          constraints={'min_size': 42, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'Z',\n          constraints={'min_size': 0, 'max_size': 92},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1654,\n          constraints={'min_value': -13537,\n           'max_value': 20710,\n           'shrink_towards': -36,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\\\\\x83\\xb3<\\x1bIY)\\xbc\\xb4\\xbeN0,\\xfe\\xef\\x1a\\xfa\\xa7\\xe0o?\\x0c\\x8c\\xe0',\n          constraints={'min_size': 16, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 3, 1)),\n                 (('a', 2, 1), ('a', 2, 1)),\n                 (('a', 2, 2), ('b', 2, 3)),\n                 (('b', 0, 3), ('a', 2, 0)),\n                 (('c', 0, 1), ('a', 2, 0)),\n                 (('c', 1, 1), ('b', 3, 0)),\n                 (('c', 1, 2), ('a', 0, 3)),\n                 (('c', 1, 3), ('b', 1, 0)),\n                 (('c', 2, 3), ('b', 1, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.0019787888741120696,
          "overall:gc": 0.000751169107388705,
          "generate:args": 0.03422229184070602
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287675.333286958,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "gave_up",
        "status_reason": "",
        "representation": "",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {},
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287651.535383541,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705,\n         22091,\n         81332294,\n         122,\n         122,\n         0,\n         -30947,\n         0,\n         -30198,\n         1,\n         -127,\n         21451,\n         20882,\n         -9390,\n         0,\n         17979]},\n       timing={'\u00a3\\x92\\U000866a6\u00a1.': 4.773963379261904e-36,\n        '': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '^X\\U000929ef': 2.819840746766378e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 1, 0), ('a', 3, 0)),\n                 (('b', 3, 2), ('b', 2, 3)),\n                 (('c', 2, 3), ('a', 3, 2)),\n                 (('c', 3, 3), ('a', 1, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='&\\x03',\n       run_start=2979541526330773.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ef': 2.94800383985616e+16},\n       coverage=None,\n       timing={'\\x87\ud862\udf1b/\\U000a4ebe\\x14\u00d1\\U000ad49f\u00c1c\\U0006fc8e\\x040\u00ba\\xad': 2.846507301056665e+16,\n        '\\U000db5a4v\\x19A=r\u00c8\\x9c': -5083967009488004.0,\n        '': 5.327550848188518e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-8336, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=3.0246081083860673e+180,\n          constraints={'min_value': -2.7256845978255612e+16,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.6859276823331287},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8690,\n          constraints={'min_value': 5983,\n           'max_value': 28498,\n           'shrink_towards': -27089,\n           'weights': {8956: 0.015287850805706315,\n            6126: 0.23547435746954243,\n            26462: 0.23543162162705294}},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x9b',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U00016140\\U0001613f\\U00016140\\U0001ab0c\\U00016122\\U000160d0\\U00016081\\U00016171\\U000160b5\\U0001608f\\U00016108\\U0001615b\\U000160b0\\U000160e1\\U0003c0d8\\U00016169\\U00016114\\U0001614a\\U0002f5b7\\U00016152\\U000160bb\\U000484ba\\U0001615c\\U00063ceb\\U00016159\\U0001607c\\U00040709\\U00016155\\U0001612b\\U000160bc\\U000160d0\\U000651a5\\U0001613f\\U00042c19\\U000160c0\\U000160f3\\U00016144\\U0006792e\\U000160d7\\U00016089\\U000160e0\\U0001616d\\U000160ee\\U00016126\\U000160b4\\U00016106\\U000160fd',\n          constraints={'intervals': IntervalSet([(90233, 505617)]),\n           'min_size': 34,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 3, 1), ('c', 2, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x13@\\U0005d200\\U000c6d44\\x87U',\n       run_start=-nan,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 100,\n        '\u00d1': 28219,\n        '\\U00081591\\x10&\u00d4': -68,\n        '\u00c8\u00cfE\u00b2\\U000fe181\u00f8\u00beK': -nan,\n        '\\x06\\U000f60a4[\\U0005e893\u00d3\\xadu\u00a7\u00a4\\t': 1000.0,\n        '\\x04<\u00a8<\u00be': 32586,\n        '\\x95\ud847\ude28\\U0009f0df-\\U000d7f16\u00d4\\x0f': -1_746_995_961,\n        'g\\U0001ce0c\u00d7\u00a6W': 1.2784016418268147e-306,\n        '\\U0001ac39\u00e9@-E\\U0007d628': -861_600_645_227_155_453,\n        'Q\\U000dd510S\u00a6\\x1a\\U000b8e3c\\\\\\U000ffe8e\u00ca\\x0b': 0.01},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=5845, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-9602145111164276.0,\n          constraints={'min_value': -1.1083409198905901e+176,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.7139185867475463},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 5.960464477539063e-08},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 2},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.12699151542542},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00a4',\n       run_start=2.15024585864039e-117,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={\",\\U000bc193\\x1dU.\\x87'\\U0003430f\u00c5\": 3.3638322450773803e+270,\n        '': -7.079146692239951e+16,\n        'W\\x1a#\\U000fbdad[xQ\u00ab\\U000d81f5\\x95\\x0e\\U0005f57c\\U00101c1a\"': -1.6182949762905088e+16,\n        'p\\U000ce791o\u00d5\\x08d\u00ed\\x08 \\x14\\x9b': -1.4168245190774462e+191,\n        '\"\u00dd<e\u00b9\u00dc': 2.1405160130416634e+146,\n        '\\U0006252a\\U0003e70c\\x1d\\x07\\U000356e8\\x9bv|\u00d2\\x9f\\x85\\U00096a52\\U0002fcc4=': 1.1075037986215964e+16,\n        'm_\\x8c\\U000ea91e%\\U0003a3fcH\u00c6': 7.842133806263064e+66,\n        '\ud882\udc82\\x8e\\x0b\u00a2\\x81G\\U000d92d9\\U000a49f55e\\U0001052e\\U000bdadc\u00ef\u00c8\u00e9\u00de\"': 1.6012697080926942e+16,\n        '\\U000e51da': -6.1294790544190664e+16,\n        '\u00a2\u00c9\\x8d\u00fb': 1.0017477625565637e-193,\n        'lri\\U00086906]F\u00df\u00d2\\U000ec3513\u00ed': 6.799970939697208e-212,\n        '\\x92\ud81f\ude51\u00eb\u00ba\\U000bb034\\x08': 1.1529453519497586e+16,\n        '\\x08\u00acZ\\U00089d15\\x0b\\x86': 4.426547186805075e+16,\n        '7\u00ca\\U00046ada': -3.538112295597774e+256,\n        'I\u00ca\\U000e197f;xo\u00c2\\x0f\u00ca\u00a8:\u00da\ud81f\udcb4:\\x9f\u00aa\\x00e\\x9b\\U0008ee4eV\\x1f\\U000bc682\\U000cfdcf\u00f4\\x0e\u00fa\u00abxs\u00f7\u00d1\\x9d\u00d4\\x80\u00dd4p\\U0005a489': 1e-12,\n        '\\U0010b06c\u00fe+\\U000ef6ae\\x12U\u00ecSw': 3.0071196778074957e+285,\n        'x\u00c0': 4.765505908701194e+16,\n        '\\x91': 1290856905046469.0,\n        '}\\U00082436\u00df\u00a5': 0.001,\n        '\\U0007a7c3\\x8d': 10.0,\n        ']': -7.519122365340795e+233},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-70, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.3450701172174798e-274},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0005813b\\U000580f7',\n          constraints={'intervals': IntervalSet(\n               [(360586, 565352), (701284, 857061), (923282, 1098984)],\n           ), 'min_size': 2, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-3.402823466e+38,\n          constraints={'min_value': -inf,\n           'max_value': -5.31127210125768e+16,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.03446314212594404},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xda',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('b', 1, 1)), (('c', 1, 1), ('c', 1, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='m',\n       run_start=-1.2933965438610307e-247,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'*** After:': [-7297, -5034, 3482],\n        '\\U000ea43a\\U000b7c01\\U000da1e6~\u00cf3\\x9d': [9999,\n         -41,\n         20064,\n         9083,\n         43,\n         -32412,\n         13719,\n         103,\n         -154_607_977_242_233_825_510_240_826_599_570_451_526],\n        '\\xad\u00ba\u00b0\u00d0\\n\\U0005ef49\u00a9-\\U00074db5\u00b5M\\x8df\\U0010575b\\U000e9f1b\\U000ba214\u00c7i7S\u00b4\\x98\\U000f9561\u00b5\\x80\\x93\\x97\\x8e': [2020,\n         4300,\n         12562,\n         -14932,\n         4547],\n        '\\U000bc802': [-94,\n         -24662,\n         -1261,\n         9076,\n         -47,\n         83,\n         11231,\n         97,\n         8937,\n         -1_069_563_108,\n         120,\n         -18052]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-46, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=79,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': -15502,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u0175\u01ea\u01aa\u014d\\U000aee67\\uf7c6\u0110\u010e\\U000645d1\u0149\u01d6',\n          constraints={'intervals': IntervalSet(\n               [(240, 79936), (328314, 742290)],\n           ), 'min_size': 7, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8970896500802215},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.35634359309765823},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 8.27572321274543e-238},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-6421,\n          constraints={'min_value': None,\n           'max_value': 7,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b',',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.1242964760711425},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8732446530336591},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-704811582,\n          constraints={'min_value': -1_505_555_221,\n           'max_value': None,\n           'shrink_towards': -10908,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.43272668582605756},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 1, 3), ('a', 2, 3)),\n                 (('a', 3, 3), ('c', 0, 3)),\n                 (('b', 1, 1), ('a', 3, 3)),\n                 (('b', 1, 1), ('c', 0, 0)),\n                 (('b', 2, 1), ('c', 1, 2)),\n                 (('b', 2, 3), ('b', 0, 2)),\n                 (('c', 0, 0), ('a', 3, 2)),\n                 (('c', 0, 1), ('b', 1, 1)),\n                 (('c', 2, 1), ('a', 1, 2)),\n                 (('c', 3, 0), ('a', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-4.344528000863905e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00b7\\U000ff504\\U00032cad\u00fd\u00d6\\U00098009)\u00e1f\u00df\\U0010c5f8}\\U000f9122\u00a9': 0.001},\n       coverage={},\n       timing={'': 4.253946289314986e+42,\n        '\\xadN\\x81\\x7f\u00af': -1.1661395760533842e+16,\n        '\\x13': 5.806411072932007e-76},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-16678, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-10,\n          constraints={'min_value': -104,\n           'max_value': 2_092_244_262,\n           'shrink_towards': 1_116_710_992,\n           'weights': {1_805_734_681: 0.3333333333333333}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'h\"\\xa8p\\x00T\\t\\xb5',\n          constraints={'min_size': 8, 'max_size': 108},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x05Y\\xddx\\xde\\xc5\\xfe\\r\\x9f[#l\\x02+2J\\xe3\\xf4\\xa75\\x9c\\xc1\\xdd\\xff\\xf8\\xb5k\\x89\\x8e4\\x89\\x19p\\x18\\xa8\\x0c\\xffD\\xe7',\n          constraints={'min_size': 29, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=3_555_966_821_726_860_493,\n          constraints={'min_value': 3_555_966_821_726_846_657,\n           'max_value': None,\n           'shrink_towards': -8_858_958_293_835_802_788,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-39909,\n          constraints={'min_value': None,\n           'max_value': -32055,\n           'shrink_towards': -5_961_846_031_313_949_310,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'$\\xa7\\x0f T+\\xfc\\xb2B\\xf4\"k\\xf2\\xb9\\xcd~\\x96c\\x8e\\x03\\r\\xaat<\\x87\\x1a*\\x9b\\xdb\\xa2\\x8c\\xc5\\x19\\x17x\\xa62\\xe2\\xb7\\xde\\xaeH\\xe8\\xe9g\\xc9{\\xb9\\x16aU\\x96\\xcdg\\xb31\\x16^|\\x10HY\\x92\\xce\\xb90\\x9e5~#\\xf5\\x861J\\xb1\\xdd/\\xc6V',\n          constraints={'min_size': 31, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xdb\\x18\\n\\xfaM\\x9fu\\xd1\\xb1\\xe7\\xfa|A}y\\x82}\\x1b\\x8d\\xae\\x9a\\x80&,\\\\\\xce]\\xc4h\\xad\\xabTD\\xbf+\\xb5o\\x0cu\\xbe\\x18\\x87(\\x0b\\x11\\x97\\xe9 \\xb5\\xfe\\xb6kV\\xcd@\\xdf\\xcb\\xcc\\x10\\xa6\\x86\\x80\\x9aMf*t\\xeb\\x16\\xcc\\xb9-\\x00N\\xb5\\xe6\\x8a\\xe6\\x92\\x16\\x0e\\x0c>l\\xc7i\\xa5\\xda]h#R\\xf1\\xb3\\xbc\\xf2\\xf2H\\xb99\\xb6<\\x9f>9\\xb0\\xe7\\xec\\xcac\\xe3\\xdc\\xd3\\xa4\\x08\\xa0\\xbbS\\xe5\\x1d\\xb1rJ\\xea\\xa8[\\xbf\\x06\\x1c\\x05\\xea\\xa3\\xaeS\\xd9dY\\x08'\\x91z\\xd5\\x11\\xbcK5\\x1a\\x08\\xd9\\xa9h\\xdd\\xb5O\\xfa[\\xfa\\x9aa\\xf4k\\x02<oGUt\\xab+\\x92.\\xf5^6\\xebo\\xe7a\",\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-3_938_851_034_241_602_190,\n          constraints={'min_value': None,\n           'max_value': -3_938_851_034_195_438_919,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-58698,\n          constraints={'min_value': None,\n           'max_value': -28702,\n           'shrink_towards': -6386,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 0, 0)),\n                 (('a', 1, 2), ('c', 3, 0)),\n                 (('c', 1, 2), ('b', 0, 2))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x8e\u00de\u00ff5\\U0007b7f8',\n       run_start=7.131252741697561e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'>\\U000900f7\u00cb3': -34,\n        '\\U00040415T': -14354,\n        'av~\\x93O\u00a8?': 5.480851900513462e+16},\n       coverage=None,\n       timing={'': -4.802136803522272e+16,\n        'failures': 8.040369315024699e+65,\n        '\\U00064d78': -1.192598704221057e+16,\n        '\u00d9zJ\\U0003d3b1\u00c4\\U000b1cea\\x03\u00f6~Y\\U00102163\u00e0\u00ae\u00e0+>A1': 8908422289363117.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-112, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"c\\\\\\x92\\xf7\\x18\\xc0P\\\\\\n\\xf6\\xba'\\xe58e/\\x11`-\\xa8\\x1a\\x17Q\\xeb=\\xb8?)\\x86\\xe4t\\x9c5\\x9c\\x1f\\x17j\\xc0\\xbb\\x80\\x038\\x01\\xdc\\xea\\xcbG0\\x7f\\x8f\",\n          constraints={'min_size': 44, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-2853932.8599941535,\n          constraints={'min_value': -2.8052102058159075e+67,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.1},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\x92\\x14\\x14<\\x9b(\\xdf3\\xac=\\xfd\\xe6?'\",\n          constraints={'min_size': 9, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.6005100474284102e+16,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7601534627659678},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=\"'Gy\u00cf\",\n       run_start=2.8350188413540148e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00da\\U00051e0d\\U0009a553|\u00e4': -5.830463847044166e+16,\n        '': 11006,\n        '\\U00068a72': 0,\n        '\u00f4\\U00016e9e\\x08\u00e1\u00c3\u4b37J': -30241},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=7953472955356945461, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8755936570880356},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1803,\n          constraints={'min_value': -30972,\n           'max_value': None,\n           'shrink_towards': 511,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.6540616059270744},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('c', 2, 2)),\n                 (('a', 1, 2), ('b', 3, 2)),\n                 (('a', 1, 2), ('c', 1, 3)),\n                 (('a', 1, 3), ('c', 2, 0)),\n                 (('a', 2, 1), ('c', 1, 3)),\n                 (('b', 0, 2), ('a', 0, 2)),\n                 (('c', 1, 3), ('c', 1, 0)),\n                 (('c', 3, 1), ('a', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00d4\\x00\\x91k',\n       run_start=1.7964860826362496e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'i\udb40\udd96\\x91\\U0006dc62': 2.552934400026111e+16, '\\U000ce77b': 43},\n       coverage={'\\U000c4399\\x18': [], 'O\u00c0\\x9c\\x1b%\\U000bff93~': [71]},\n       timing={'\\x01\\x17\u00ba\u00c5\\r\\x98': -4.3836374527018504e+16,\n        '\u00b9\\U0004fb401\\x15': -2.0652481079223026e-135,\n        '\ud83c\uddfa\ud83c\uddf8': 1.5416868945861717e-62,\n        '\u00b5sO\u00c82': -1.5745262352013584e+16,\n        '\\x9e\u00f4q\u00e5\\U00014e84Z\\U0008b3bd=)M\\x1d': -3.5944871376079455e-88,\n        '\u00f6\\U000b5289BD\\U00047317': -4.157561976566251e+194,\n        '\\x07\u00c0\\U00047343\\x04\u00e6\\x8b\u00c9d\\x19\\U000698fc1\u00fb\\x0b\u00fd<\u00f9': -4.895602573664678e+16,\n        'J\u00f3\\U000d2c9a\u00f6\u00dd!\u00d2\\x15\u00f0': 10000000.0,\n        '\u00c0{\\x1b^&\\x89\u00c4': -3.9277293997684125e-147},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-4278714809943132805, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('c', 0, 3)),\n                 (('a', 1, 0), ('b', 2, 3)),\n                 (('a', 1, 1), ('a', 1, 3)),\n                 (('b', 0, 2), ('a', 3, 3)),\n                 (('b', 3, 0), ('c', 0, 3)),\n                 (('c', 1, 0), ('c', 0, 1)),\n                 (('c', 3, 0), ('a', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='u\u00a3',\n       run_start=1000.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'False': [-17784,\n         -48_932_107_455_337_943_441_181_122_961_923_876_822,\n         -13,\n         2_517_281_901_720_779_182],\n        '`\\\\': [117, 5807, -11491],\n        '\u00fcV\u00aa\u00c4\\x12\u00aa': [-3_070_653_409_517_032_517,\n         31601,\n         -109,\n         -6907,\n         3_161_890_185_611_456_609,\n         78_821_471_901_480_748_739_500_129_576_718_381_978,\n         -103,\n         31406,\n         -25262,\n         -116,\n         3352,\n         4667,\n         -24754,\n         -60,\n         123,\n         -23004,\n         16620,\n         21,\n         29618,\n         4964,\n         259],\n        '\u00f0\\x97\u00f0\\x0c\\x7f': [-8724, 12394],\n        \"\\U000c80d7'\": [-48,\n         14,\n         917533281,\n         -10924,\n         -45,\n         -146269976,\n         1851,\n         -46,\n         117_142_238_453_994_719_462_736_118_118_670_615_548,\n         524288,\n         -54,\n         -1_638_298_035,\n         27904,\n         -577_300_414_089_204_489],\n        '`\\U0001374f`\\x8e\\x0b\u00d5t\\x10\" y]': [-58,\n         32182,\n         -20413,\n         25452,\n         -2412,\n         44]},\n       timing={'\\U000c51ed\u00e9': 5795261853063496.0,\n        '\\xad\\U00048315\\U0009a301\u00d0': 2.1084072229110072e-59,\n        '\u00ddp\\x00\u00ea\\U00040d00\\U000e7a99\\U000f3de9-\\U000729c2\u00db\\x9f': -5.186828874609443e+16,\n        's\\x92\\x8e.': 3.640283563904975e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-13058, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -5201083135053543.0,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-1.126949967765718e+215,\n          constraints={'min_value': -inf,\n           'max_value': 10.0,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8146468779891052},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.35810321180766663},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 0, 1), ('c', 0, 1)),\n                 (('b', 1, 2), ('c', 2, 3)),\n                 (('c', 0, 2), ('c', 0, 0))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00a6',\n       run_start=struct.unpack('d', struct.pack('Q', 0x7ff8000000000001))[0],\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U000d10f5z\\U0010d60c0\u00d0\u00d5\\x81\u00a1\\U0010fbd8\ud843\udeb8f\\U00104308': -29346,\n        'G\\U0005dde5': 2,\n        '': -2390025562547177.0,\n        '\\uf4f94\\x03\u00dd\\U000ebf9a\u00d65\\x08\u00d3S\u00f8\\U000f32a3\\x1d\u4fa2\u00e8>o\\x00\\U00075faa\u00bd\\x84b\ud86a\ude35\\U0010b398\ud869\udc8e<r': -2.5979395053970276e+16,\n        '\\U000a9302\u00bb5': 6.358342822664798e-154,\n        '\ubf7f\u00eb': 19171,\n        '/\\x1f\\U00019c1c\\x03\\U0006e035\\U0005c8e7\\U000584fc\\U000b2d2d\\x06\\U000f4ab5\\x01@\u00d60': 0.0001,\n        'NaN': -2.4209437325948212e+16,\n        '\ucae3\\x81': -1.704994460235679e+34,\n        'go\u00f2\u39d1\\x0by4\u00fe\u00b7\\x92': 0.001,\n        '\u00a7u': 51},\n       coverage={},\n       timing={'': -1.4274502821406144e+16,\n        '\\U000bbc2f\\x0f\u00a4': 6.708792560025981e-35,\n        '\u00e1\\x9bb\u00dd\\x86X\\x8bf\\U00060dcf\\U00091f97\u00ec\u00f0\\x95': 432014897335693.0,\n        '\\U0010574a\\x84\\U0006f4c2\\x19\u00db': -3.402823466e+38},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=16, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U00037903\\U00037995\\U00037949\\U00057b8d\\U000378f3\\U00037988\\U00037910\\U000379aa\\U000379cf\\U000379ba\\U000f982d\\U000e418f\\U000e0231\\U000379d5\\U000378f7\\U00037952\\U00037981\\U0003792e\\U000e10e1\\U00037999\\U00043aea\\U00037973\\U000dccbb\\U00037925\\U00037942\\U00037931\\U00037941\\U0003797e\\U0003797e\\U00037913\\U0003795b\\U00037949\\U000ecd09\\U000379bd\\U000b6bd8\\U000aebd4\\U000379a4\\U00037921\\U0003799c\\U00037930\\U000b3692\\U00052744\\U0003790e\\U000ae42b\\U00037981\\U000379a0\\U00037987\\U0003796b\\U000390bc',\n          constraints={'intervals': IntervalSet(\n               [(227566, 373200), (677270, 769916), (900335, 1051221)],\n           ), 'min_size': 44, 'max_size': 144},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('b', 0, 0)),\n                 (('a', 2, 0), ('b', 0, 2)),\n                 (('a', 3, 2), ('a', 0, 0)),\n                 (('b', 0, 1), ('a', 1, 3)),\n                 (('b', 0, 1), ('c', 2, 0)),\n                 (('b', 2, 0), ('c', 3, 2)),\n                 (('b', 3, 0), ('c', 0, 2)),\n                 (('c', 1, 3), ('c', 2, 1))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5',\n       run_start=2.220446049250313e-16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00f7}g': 21366, '\\U00047cfb': 14232, '\u00a5': 12169},\n       coverage=None,\n       timing={'\u00fa\\x1a\\\\\\U0002ecd5\\x97x\u00ed\\U000acb985': 6.5260082359243864e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-105, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5326831036213363},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=50,\n          constraints={'min_value': -63,\n           'max_value': None,\n           'shrink_towards': 800,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ub4d8\ub525\ub5a6\ub59d\ub579\ud85d\udc92\ud81f\ude2e\ub53a\ub5d1\ub4e7\ub4e7\ub4ea\ub59a\ub58c\\U00016420\ub5a2\ub566\ub526\ub5ce\ub4de\ub596\ub514\ub4ef\ub5c9\ub5d0\ud85d\udf54\ub4f1\ub583\ub56c\ub4e5\ud872\udd13\ub5b9\ud886\udc6c\ub4d7\ub5bf\ub59b\ub4e2\ub59a\ub4f4\ub50a\ub5ce\ub5b0\ub4e4\ud86f\udeb5\ub513\ub55e\ub5b8\ub52a\ub572\ub559\ub523\ub584\ub587\ub575\ub4e0',\n          constraints={'intervals': IntervalSet([(46295, 235766)]),\n           'min_size': 48,\n           'max_size': 148},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(1, 8203),\n                (65535, 80455),\n                (235608, 400471),\n                (408751, 409340),\n                (410024, 411351),\n                (502153, 568484),\n                (801736, 912254)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U00100cccI',\n       run_start=-3.5925972126036296e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'.*': 0.0001,\n        '\\U000dfe91': -1_172_184_398,\n        '\u00fd\\x85\u00ff': -2992320},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=81, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U0006f308\\U0006f366\\U0008dadb\\U0006f36d\\U0006f3b3\\U0006f36d',\n          constraints={'intervals': IntervalSet([(455358, 597865)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.0338162835166464e+16,\n          constraints={'min_value': -2.568376381047522e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7946568320356342},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=16193,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 20778,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=8093,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x96n\u00cf',\n       run_start=-5.946085400116606e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'': [13375],\n        'aO\u00a9\\U0002f0e6\u00f0\u00a7\\U0004459c\u00ed\u00bf\u00c4\\x07\\x0f\\x7f\\x9d!\\U000af26e|h\u00f4\\U000a9ac6': [-12202,\n         -90_795_467_915_670_873_405_779_822_453_498_182_673,\n         -17112,\n         46],\n        '\u00e6!\\U0004c8a2\\U0001ffba\u00ae\\U00091784\\x8fu\u00d7\u00ca\\x91\\U000af4ab\\x03\u00bd\u00be\u00f3': [119,\n         -1_692_041_727],\n        '\u00acT\u00d0!7\\U000b523f': [28082],\n        '\\U000e2bf8': [-10849],\n        '\u00b0\\U0004d413': [],\n        '.lock': [-31467,\n         -3554,\n         -1_662_379_971,\n         25993,\n         15935,\n         240,\n         2_133_047_173,\n         -32212],\n        'Q\\U00081d32m];y': [-18814,\n         44,\n         -164_823_335_883_348_331_856_126_284_340_898_196_111],\n        'A\u00d2\u00d4': [],\n        'S\u00f4': [4744, 96, 28415, -66],\n        '\u00edSG\\U000a2315\\x92\\U0006e127': [-24971],\n        '\u00f8\\x86\u00e2\\U000af2a7': [],\n        '\u00d9\\U0008cd14\\x90?\u369e\u00ec': [5368, -15992, -24684],\n        '\u00d0\u00e6\\x1f\\x18Q\u00aeK': [2175,\n         14748,\n         -69,\n         -24,\n         23767,\n         -122,\n         -8022,\n         24358,\n         26176,\n         -6,\n         -1_452_195_156,\n         512,\n         -69,\n         1124],\n        '$': [-25940,\n         -19455,\n         -73,\n         8212,\n         8291,\n         -103_251_193_618_650_669_713_899_413_844_625_829_128,\n         4_294_967_295,\n         -12,\n         -79_134_840_387_873_971_987_192_080_623_779_348_435,\n         11125,\n         50],\n        'global': [-19649, -20511, -5246, 1_714_366_481, 121],\n        ',\\x8b\\x97\u00e4\\U000954e8\\x0b\u00d9': [2_063_991_895],\n        '\\x97X \\U000ae377\\U000f9b4f': [5564, 13095, 20665, 10447, 8650, 8172],\n        '\u00c7\\U000b6432\\U000a5168': [],\n        '\u00b3\u00c1\\x8e\u00f8\\x9e\\U000b180a': [],\n        '\u00abJ\\U000d0571H|\u00cc\\x03!@\\x05\\x07': [],\n        '\\U000586136X;\\x1f\u00e5K\\x9d\\x84n\u00d3': [1,\n         42,\n         20043,\n         15664,\n         -2096,\n         109,\n         106],\n        '[\u00c0v': [],\n        '\u00a8\\x90': [],\n        '\u00ca\\U00050074\\U000baf59\\U00073817\u00d5\ud877\udd3a': [6606,\n         -51,\n         -21610,\n         15794,\n         26629,\n         -16236,\n         -31766],\n        'F\\U00076171u': [13818,\n         12007,\n         -9798,\n         112,\n         18327,\n         -8984,\n         83,\n         511,\n         7_108_576_796_228_962_922,\n         -21191,\n         -2],\n        '1.': [-1_891_576_531,\n         76,\n         28317,\n         -1001,\n         -19,\n         -6878,\n         -1425,\n         -38,\n         -1_702_627_272,\n         -56,\n         15251,\n         -13676,\n         -127,\n         15863,\n         13,\n         18545,\n         -4,\n         8291,\n         -2_708_222_753_422_442_187,\n         28597],\n        '\u00c2\\U0010a587': [-6769, -87],\n        '\\U000ba1b3^\\x8e': [-3993,\n         -147_406_919_132_497_735_458_854_371_953_655_767_653,\n         761,\n         24161,\n         14452,\n         27_015_460_344_577_965_918_230_042_456_095_135_319,\n         40],\n        'PYTEST_DEBUG': [8_932_227_820_388_393_391],\n        '\\U00068706TO': [511,\n         20489,\n         8232,\n         -100_123_440_975_828_896_668_846_074_526_627_567_635,\n         -69,\n         703929517,\n         11167,\n         -16959,\n         10644],\n        '\\U0003befe\\x84\u00af\\U0009363f': [-11017, -14737, -22],\n        ')8\u27d9\u00d0': [13218],\n        '\\U00096961\\U0001476e\\x9b\u00d0C': [14, -31408],\n        'undefined': [76, 6943, 3558, 19029, 4669],\n        '\\U00044d9f\u00f1o\u00bb\u00ae\u3a7d\\x11': [2821,\n         32320,\n         240,\n         24640,\n         1259,\n         -14597,\n         -22,\n         12994,\n         -4_631_514_249_726_226_024,\n         -15,\n         1_889_780_292,\n         -9511,\n         128],\n        '\\x86\u00a1+n': [16224, -15617, -99],\n        '\u00c2\\x86': [107]},\n       timing={'\\x844': 3.758390088314171e+16,\n        '': 1.0,\n        '\u4112P)\\x8f\u00a1\\x1c\u00e5': -6.518100406348912e-213,\n        '\u00f4\u00b9\u00f2E\u00ea\\x81%\\U000c9326\u00af\\x93': -4.5859927246948714e+259,\n        '\u00fb': 0.005},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=9999, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-64,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 32161,\n           'weights': None},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 2, 3), ('a', 3, 1)),\n                 (('a', 3, 1), ('b', 0, 1)),\n                 (('b', 1, 1), ('c', 0, 3)),\n                 (('c', 0, 2), ('b', 1, 3)),\n                 (('c', 1, 3), ('b', 1, 0))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.020980543864425272,
          "overall:gc": 0.007881248136982322,
          "generate:args": 0.14269553625490516
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287670.38373,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=1.2282104355578043e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x93'C:\\xce{w\\xe2U\\xf9\\xe5\\n\\xca\\xeb\\xdc\\x17\\xaa\\xdb/'c\\x0b=\\xa3\\xcb\\xe6\\x02i\\xca\\xb9*!N\\x9f\\xa0&\\x8e\\x0c\\x1b\",\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00fcD\uabaa\\x83X',\n          constraints={'intervals': IntervalSet([(0, 511), (8918, 121431)]),\n           'min_size': 0,\n           'max_size': 25},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d6\\U000528a9\u00a4\u00f5\u00daR\\U000e3e21\\U000dd57dz': -4.048889193453569e+16,\n        '\\x0c\\U00104d81': -72,\n        ']\\x93\u00e5': 7.11568919565624e+16,\n        '': 1.4799994571640396e+50,\n        '\u00c1\\U00092c6c': 8203,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -26369,\n        '\\x8e': 1.4747850839325638e+204,\n        '\\U000673c3\\U000e6ebd': 0.001},\n       coverage=None,\n       timing={'': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 6.818629716573128e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23378, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$\u00ec\u00e9}\u00a7}\u00bcb\u00f8\u00ce',\n       run_start=3.581567246564354e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.771065281589164e+16,\n        '\\U000be75859\\x1b\u00dcO\\U000b8445\u00cf\\U000aff3d\u00be\u00f5\\U00015e1bm\u00a1\\U000cf2f5\u00cb\\U000d7847\\U000ccfd4\\U000ef509\u00c0\ud811\udc22': 8.936505514521892e-238,\n        '\\x102V\u00d5TC\u00d5\\U00072d28\\U0007d679': 3.750551445609733e+16,\n        '9\\x9f': 4.131855246241256e+209,\n        '\\x13\u00c9\\U0008fb18\\U00040c62': -2.3884174463715724e-11,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': -2.8577991390714955e+217,\n        '\\U0007b5a6@\u00b2': 1.0,\n        '\\x9f\\x8f\u00e1\\x10': -1.3005603755847338e-230,\n        '\u00f8J': 1.7666368542055514e-214,\n        '8\\U000f5edb\u00eb\\U000ac50f2': -1.6580908882272163e+167,\n        '<': -5.556466201863923e+16,\n        '\\\\\u00a8d\u00b7S\\r2\\x92\\U000c259e\u00b8': -3.948982162075043e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=27912, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5542707842964972},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9101162988235343},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_634_379_034,\n          constraints={'min_value': None,\n           'max_value': -77,\n           'shrink_towards': -117,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*#\\xb3\\xa8kaAo\\x9b9\\x1f\\xd2\\x92\\xb9\\xc4|\\xf2\\xd3t1\\xba\\xefv\\xaa\\xbf\\xac\\xaf$\\x12J\\xfc-\\xdeD\\x966\\x8d\\xc7yw\\xe7\\x081\\xbb\\x16m\\xdb\\t9\\x9bb\\xba\\x80\\xaf\\xdd\\x1aV\\x86\\x85\\xf4\\\\sy\\xe5\\xed\\xdeI\\x89\\x14`]\\xc3\\xfd\\xc0\\x05\\xa7|\\x07\\x86\\xf6\\xd1\\xda\\xa5\\xfevj\\xad\\xa3\\x9b\\x15\\xe2\\x1aN\\x08\\x11\\xc3Y\\x06\\xed[\\xf7/\\x8eO\\x9c\\x1f\\x9e\\xcf\\xc6\\xf2\\xbb%1 \\x8b\\\\\\xc1VSt\\xadz*\\xe6\\x8d7^\\xday\\x04\\xeb',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\ud836\udc5c\u00d2\u00eb\\U000db529`',\n       run_start=-4.616014152953067e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'D': -16808},\n       coverage=None,\n       timing={'\u00e5\u00bd\\U00103832\u00f2\\U0009eb76': -1.7727957235719832e+16,\n        '\u00e0S\u00a1i\\x12\u3f06': 5.021463670957227e-96,\n        '\u00fb\u00f5\u00b9': 2.4244279143403476e-17,\n        '\\U001008c59': -4.0723981648567485e-159,\n        'U\\x13J\\U000eb739\\U00073fec\u00d1\u00d9\\x15\\x91p\\x96M\\U000dc798': -2272840267908239.0,\n        '0': 2.609602484521558e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=21, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 3, 3), ('b', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.005,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00107fdf\u00fcY': -1.156990422066653e+168,\n        '\u00ca%\\x1a\\U000fb7ba\u00fch\\x8bp\u00d2#': -88},\n       coverage=None,\n       timing={'': -1.7976931348623157e+308,\n        '\u00c9\\U0010f590r': -0.99999,\n        '\u00c7\u00cf\\x84\u00f2e\u9553\u00ce\\t': 4030553727692000.0,\n        '/\\x94': 1.4169752888039181e+147},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-32337, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-5.507032826264715e+16,\n          constraints={'min_value': -inf,\n           'max_value': 2.4433846118408528e-171,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 0, 1)),\n                 (('a', 2, 3), ('c', 1, 2)),\n                 (('b', 1, 1), ('a', 3, 1)),\n                 (('b', 2, 0), ('a', 0, 2)),\n                 (('c', 0, 3), ('a', 1, 0))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.006845456198789179,
          "overall:gc": 0.0030210017575882375,
          "generate:args": 0.011257207894232124
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287666.972104458,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u00c0\u00a1',\n       run_start=2.7204108339939428e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={'\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x93'C:\\xce{w\\xe2U\\xf9\\xe5\\n\\xca\\xeb\\xdc\\x17\\xaa\\xdb/'c\\x0b=\\xa3\\xcb\\xe6\\x02i\\xca\\xb9*!N\\x9f\\xa0&\\x8e\\x0c\\x1b\",\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=1112,\n          constraints={'min_value': 0,\n           'max_value': None,\n           'shrink_towards': 19465,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=4_715_676_941_197_531_846,\n          constraints={'min_value': 73,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=23187,\n          constraints={'min_value': 512,\n           'max_value': None,\n           'shrink_towards': 17979,\n           'weights': None},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\x96\u00d03',\n       run_start=-2.534824234713441e+302,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={'~\\U0009e181': [0, 804317, 0],\n        'u': [121431],\n        '\u00fa\\\\\"&i\\x96\\t\ud861\udc6d\\U001019c3': [25],\n        '%\u00a5,': [8291, -21221]},\n       timing={'': -4.604581039762002e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=3400198035815024750, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=15171,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -1.1197116850068577e+44,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.22335184315003548},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d6\\U000528a9\u00a4\u00f5\u00daR\\U000e3e21\\U000dd57dz': -4.048889193453569e+16,\n        '\\x0c\\U00104d81': -72,\n        ']\\x93\u00e5': 7.11568919565624e+16,\n        '': 1.4799994571640396e+50,\n        '\u00c1\\U00092c6c': 8203,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -26369,\n        '\\x8e': 1.4747850839325638e+204,\n        '\\U000673c3\\U000e6ebd': 0.001},\n       coverage=None,\n       timing={'': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 6.818629716573128e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23378, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$\u00ec\u00e9}\u00a7}\u00bcb\u00f8\u00ce',\n       run_start=3.581567246564354e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.771065281589164e+16,\n        '\\U000be75859\\x1b\u00dcO\\U000b8445\u00cf\\U000aff3d\u00be\u00f5\\U00015e1bm\u00a1\\U000cf2f5\u00cb\\U000d7847\\U000ccfd4\\U000ef509\u00c0\ud811\udc22': 8.936505514521892e-238,\n        '\\x102V\u00d5TC\u00d5\\U00072d28\\U0007d679': 3.750551445609733e+16,\n        '9\\x9f': 4.131855246241256e+209,\n        '\\x13\u00c9\\U0008fb18\\U00040c62': -2.3884174463715724e-11,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': -2.8577991390714955e+217,\n        '\\U0007b5a6@\u00b2': 1.0,\n        '\\x9f\\x8f\u00e1\\x10': -1.3005603755847338e-230,\n        '\u00f8J': 1.7666368542055514e-214,\n        '8\\U000f5edb\u00eb\\U000ac50f2': -1.6580908882272163e+167,\n        '<': -5.556466201863923e+16,\n        '\\\\\u00a8d\u00b7S\\r2\\x92\\U000c259e\u00b8': -3.948982162075043e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=27912, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5542707842964972},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9101162988235343},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_634_379_034,\n          constraints={'min_value': None,\n           'max_value': -77,\n           'shrink_towards': -117,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*#\\xb3\\xa8kaAo\\x9b9\\x1f\\xd2\\x92\\xb9\\xc4|\\xf2\\xd3t1\\xba\\xefv\\xaa\\xbf\\xac\\xaf$\\x12J\\xfc-\\xdeD\\x966\\x8d\\xc7yw\\xe7\\x081\\xbb\\x16m\\xdb\\t9\\x9bb\\xba\\x80\\xaf\\xdd\\x1aV\\x86\\x85\\xf4\\\\sy\\xe5\\xed\\xdeI\\x89\\x14`]\\xc3\\xfd\\xc0\\x05\\xa7|\\x07\\x86\\xf6\\xd1\\xda\\xa5\\xfevj\\xad\\xa3\\x9b\\x15\\xe2\\x1aN\\x08\\x11\\xc3Y\\x06\\xed[\\xf7/\\x8eO\\x9c\\x1f\\x9e\\xcf\\xc6\\xf2\\xbb%1 \\x8b\\\\\\xc1VSt\\xadz*\\xe6\\x8d7^\\xday\\x04\\xeb',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\ud836\udc5c\u00d2\u00eb\\U000db529`',\n       run_start=-4.616014152953067e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'D': -16808},\n       coverage=None,\n       timing={'\u00e5\u00bd\\U00103832\u00f2\\U0009eb76': -1.7727957235719832e+16,\n        '\u00e0S\u00a1i\\x12\u3f06': 5.021463670957227e-96,\n        '\u00fb\u00f5\u00b9': 2.4244279143403476e-17,\n        '\\U001008c59': -4.0723981648567485e-159,\n        'U\\x13J\\U000eb739\\U00073fec\u00d1\u00d9\\x15\\x91p\\x96M\\U000dc798': -2272840267908239.0,\n        '0': 2.609602484521558e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=21, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 3, 3), ('b', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.005,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00107fdf\u00fcY': -1.156990422066653e+168,\n        '\u00ca%\\x1a\\U000fb7ba\u00fch\\x8bp\u00d2#': -88},\n       coverage=None,\n       timing={'': -1.7976931348623157e+308,\n        '\u00c9\\U0010f590r': -0.99999,\n        '\u00c7\u00cf\\x84\u00f2e\u9553\u00ce\\t': 4030553727692000.0,\n        '\u00a9': -6.1459042833091976e+16,\n        '\\U000a361c\\x14': 3.3193278117199268e-37},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-32337, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-5.507032826264715e+16,\n          constraints={'min_value': -inf,\n           'max_value': 2.4433846118408528e-171,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00canD\u00c2d3\ud859\udf10',\n       run_start=-3.406836195912482e-261,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ea\u00e2': 0,\n        '`': 8.088437146736769e-50,\n        '': -5305052629581041.0,\n        '\\x0f\\U000bfdb1Ef\u00a4\"8\\x81\u00cf\\U0008dcf8': -64,\n        '\u00c0e': 7.523913691654665e+276,\n        '\\U0007a468\u00be\u00f8X\\x9a': -1.2961583191350866e+16},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=91, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d6\\U000528a9\u00a4\u00f5\u00daR\\U000e3e21\\U000dd57dz': -4.048889193453569e+16,\n        '\\x0c\\U00104d81': -72,\n        ']\\x93\u00e5': 7.11568919565624e+16,\n        '': 1.4799994571640396e+50,\n        '\u00c1\\U00092c6c': 8203,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -26369,\n        '\\x8e': 1.4747850839325638e+204,\n        '\\U000673c3\\U000e6ebd': 0.001},\n       coverage=None,\n       timing={'': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 6.818629716573128e+16,\n        '\\U0005a26b\u00e1\u00c4\\x06': 1.5385489612840401e+265,\n        'Y': -2.9349323423971122e+31,\n        '\\x0e<\\x1e': 3.2795240017876828e+16,\n        '\u00b8\\U000f4d3f\u00d8\u00fb\\U000fd1b0\\x0c\\U000f2eb2\u00d8\\x81\\x14': 2.8041227753534436e-23,\n        '\u00a2\u00bcj\\U000df4b3\u00d8\\U0003c936\\x98M\u00e4': -1.1029250221741617e+104,\n        '\u00b1PN\\U000687a4\u00d9O5': struct.unpack('d', struct.pack('Q', 0x7ff8000000000001))[0],\n        '_HandlerType': 7.827230393845612e-177,\n        'ge\\U000fa7ef1\\x86': 2.2504167167669148e-154,\n        '\ud81c\udc1dP\\x83': -0.99999,\n        '/\\n\\U00049d29\u00edm)\u00aad\\U000a24b9)\u00d2': 6.092318387963716e+93},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23378, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 3, 2), ('c', 0, 0)),\n                 (('b', 3, 3), ('a', 1, 2)),\n                 (('c', 0, 3), ('b', 1, 1)),\n                 (('c', 1, 3), ('c', 3, 0))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x8c\\x90=\\xad\ud863\udcc9v\ud81c\udfc3\\U000d69a4\"c',\n       run_start=-1.9811849954449352e+298,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 6.172858942226726e+16},\n       coverage={'\u00bdR': [30904,\n         -6_350_282_019_123_197_914,\n         31200,\n         6859,\n         50,\n         38,\n         9791,\n         7_171_303_175_298_739_879_598_212_101_366_129_972],\n        '\\x029E\\U000ce462\u00a9\u00c8\u00bb>g\\U00077d28\\x19\u00da\\U000ec221': [-159_471_183_444_842_451_106_491_688_994_295_398_258,\n         17781,\n         75,\n         -32475,\n         -53,\n         21427,\n         15518],\n        '': [43],\n        '\\U000f9b83\u00b6\u00f1': [-24989,\n         -18875,\n         -91,\n         28729,\n         -2667,\n         -748008533,\n         28343,\n         -80,\n         20],\n        'B': [-45]},\n       timing={'z\u5590S': 6.6309100169262024e+16,\n        '\\U000a6807\u00dd.-\u00afpw*\\U0005d992\\U000ac7c1\\x06\u00c8A\u00bc4\\U000d7f45\\x92': -3.246249970891779e+16,\n        'v\\xad\\x19\u00ce\\x1am\u00bf': -1.9047185894564573e+164,\n        'g\\x9b~\u00e3\\U000b8f43': 7.0762566216720296e+16,\n        '\u00e3\\x01b\u00f1t\\U0010b251': 6.962022491439213e+16,\n        '\\x8c\\x08': -2.792130194425258e+16,\n        '\u00ef_#': 1.7625378059625338e-279,\n        '\\ue0fd\\U000f35dd': 3.5575464925699028e+16,\n        '': -7.050263865013126e+16,\n        '\\x07\\xad\\t<\\U00014f74\u00d1\\x9e\\x9a\\x9d\u00c1': -4.237324832875917e+16,\n        \"\\x84\u00db\\U00042e59'\\r\\U000de823\\xad\u00b2\u00f8\u3233\\U00052d97N\\x11\u00f0\": 2.42406532330561e+16,\n        '\\x03m': -3.825807903104695e+16,\n        '\\x1c\\x95': 1.6723201668679472e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=6065, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=8.590407298519824e+307,\n          constraints={'min_value': -1.8376985213857504e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.8516664703482661},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='(\u00e2\u00f4\\x17\\x84\u00f6\\U000634fb\\U0008d169\\x1c\u00f4',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'#\u00c9\u29a2\\x86\\x0b\u00b6|\\U0009c299\\U00104b01*\\x05\ud821\udd31\\U000eff3e\\x06W\u00aa': -19354,\n        'b\u00c6$\\r': 27676,\n        '>\\x00\"\u00bd\u00fdf\u00b1': 4.134074773095693e-55,\n        'b\\x95\\x11\u00b6\\x19\u00d2\u00fbl\\x7f\u00a9\\x13\\U00014b37\\x8f\\U001094f5^\\x15\\U000e4909)': -2.5342728035071184e+16,\n        '\u00b1\u00c2': 2.947605556864616e+16},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-2854, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.7084028111257193},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x06',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b\"\\xc0!\\xbfW\\xdd'In\\xf7@\\x91\\x0f\\xbf\\x86\\xc1\\xdc\\xed\\xcc]\\xeb\\xc0\\x02\",\n          constraints={'min_size': 18, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'o\\xe2\\x93',\n          constraints={'min_size': 1, 'max_size': 101},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('a', 2, 1)),\n                 (('b', 2, 0), ('c', 1, 3)),\n                 (('b', 3, 2), ('b', 0, 0))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.013204292918089777,
          "overall:gc": 0.005724957096390426,
          "generate:args": 0.028083956975024194
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287668.113159,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705, 2441, -107, 10403, 26717],\n        '\u00bb\u00d0a\u00e0\u00a1\\U000403cd\u00e8\\U00055ffd\u00ca\\U0003f81f': [8203, -370]},\n       timing={'5U\u00d6u$\u00d5\\x1c\\x1f\\x86v\u00ac\\U00073e01\\U000d0433': -5.393858695728212e-149,\n        '\\x14': 2.37534909157735e+46,\n        '9\u00e9': 0.1},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('b', 2, 0)),\n                 (('a', 0, 3), ('c', 3, 1)),\n                 (('a', 1, 3), ('b', 2, 3)),\n                 (('a', 1, 3), ('c', 3, 2)),\n                 (('a', 3, 1), ('b', 0, 2)),\n                 (('b', 1, 1), ('c', 0, 0)),\n                 (('b', 1, 1), ('c', 2, 3)),\n                 (('b', 1, 3), ('c', 1, 1)),\n                 (('b', 2, 3), ('c', 3, 0)),\n                 (('c', 1, 0), ('a', 0, 1)),\n                 (('c', 1, 1), ('c', 1, 1)),\n                 (('c', 1, 2), ('c', 1, 0)),\n                 (('c', 2, 2), ('c', 1, 3)),\n                 (('c', 2, 3), ('a', 2, 3)),\n                 (('c', 3, 0), ('c', 0, 3)),\n                 (('c', 3, 2), ('a', 3, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property=' oA\u00c9\u00bd\\x08\\U000f9a8d\\U0009721cC\u00bbq\\U0008662b\u00a3\\x18\\U0006dc709\u00b2\\U000517cc\u00c1\\U00011b82\"\u00cb\\U0010e46b\\x1aR',\n       run_start=5.768257052343265e-204,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.1907422468139713e+138,\n        '\\U0008623a\\U0005ff85\u00b4\\U0003eec9\\xa0\\x05': -2.64781215206294e+16,\n        '3a\u00ed\\x9f\\x1d\u00a7\"\u00a7\\x7f': 6.967930858859344e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=24191, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.99999},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=6.744437843359338e+307,\n          constraints={'min_value': 10000000.0,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.29516777469785965},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9225384956742824},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.2608291740721434e+306,\n          constraints={'min_value': 1.2748946484354986e-181,\n           'max_value': 1.1227290873125523e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 7.387998543922075e-32},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.975186495588937e+307,\n          constraints={'min_value': -2.225073858507e-311,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.5503739421945516},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u6773\u6707\u673f\u669a\\U001022cf\u6732\\U0006bd12\u66fe\u6773\u66d9\u66b1\u6713',\n          constraints={'intervals': IntervalSet(\n               [(26252, 42847),\n                (419924, 476040),\n                (688579, 839191),\n                (1034345, 1069293)],\n           ),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7023805461537623},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.109927555331627e+308,\n          constraints={'min_value': 6.568758115247808e+16,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.7303109221351659},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='!\u00df\u00b3',\n       run_start=-1.1076973152465351e+27,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d9\u00ec': 5.965436367886831e+16, '': -264},\n       coverage=None,\n       timing={'\u00ca': -1.1225287646764342e+16,\n        '': 7.159293216353477e-160,\n        'kf\u8a5d\ub88a\\U000d4bc1\\U000fdac5\u00f7P\\U000840fa\\x19:`\u00cf': -4.345746590885573e-242,\n        '\ud85f\udf22k}~\\x9f\u00ee': 6.380719469064172e+16,\n        '\\U000bedd5\u00c6\\x9be\\x07': 4.0698303031100996e+119,\n        '\\x9b\\x03\u00ac\\U000c6d13\\U0008af21J\\x03\\x9aw\\x0f\u00cdO\u00d8': -2.978274835995787e-305,\n        '\"\u5b5b\\U00075682\u00d7\\x93a\u00ee\u00eeZ': -6.0305982407563256e+16,\n        '\\x029\\U00064bb9\u00a7\\x01\u00da\u00dc': -1.556007188689906e+16,\n        '\u00b8\\n\u00ddZ\\xad<': 6.80455660372176e+16,\n        'I\u00f4\\x84': 1.1754943508222875e-38,\n        '\\U0008ef6a\\x84\u00da?\u00cd\\x7f5\\uec3a^\\t': 0.01,\n        'I\\x91\\U000829ae\\x18}\\x85g': -4.733988335221529e+16,\n        '\\U000f6256\\x9d\u00b2\\U000f57d0\u00f4q\\U0010ba76\\U000acda3#\\U000b3c25': -nan,\n        '\\U0005b50c\u00b2\u00f7\u00d4z\\x98': 2.4348070854951524e+16,\n        '\u00ce\u00fd\u00b1\\x17\u00f8\\U00072db3\u00f9\u00b9v\uc730': 1.9562284498515256e+16,\n        '\\U000f6c3e\u00e2': -6.004673359686616e-201,\n        '\\x98\\x13\u5e7f\u00a5\\U000ef5c7A': 6.522756636670437e+16,\n        'i\\U000bf5e9\\U000bb33d': -2.2250738585e-313,\n        'j\u00af\\x04Q\\x82\u00f5': -6.554779448876096e+16,\n        '\u00ff\u00bb': -0.3333333333333333},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\\U000df07c\\U0001e7dc\\U0001e72b\\U0001e6fd\\U0001e738\\U0001e744\\U0001e7be\\U0001e75d\\U0001e7ca\\U0001e7c2\\U00045b68\\U0001e7ca\\U0001e7dd\\U0001e6e8\\U0001e747\\U0001e73a\ud86f\udf42\\U0004aae2\\U0001e7a8\\U0001e7bf\\U0001e72f\\U0001e720\\U0001e718\\U0001e771\\U0001e7db\\U000f535a\\U0001e7b3\\U0001e76e\\U0001e7a8\\U0001e75f\\U0001e7d4\\U0001e7c6\\U0001e7c7\\U0001e6fd\\U0001e77d\\U0001e750\\U0001e6f8\\U0005666e\\U0001e711\\U0001e750\\U0001e75a\ud839\udfe6\\U0001e79a\\U0001e710\\U0001e75a\\U0001e7ba\\U000dc6b8\ud839\udfe4\\U0001e776\\U0001e739\\U0001e769\\U0001e7d4\\U0001e7d1\\U0001e700\\U0001e6ea',\n          constraints={'intervals': IntervalSet(\n               [(124647, 269720), (276784, 354800), (777759, 1013802)],\n           ), 'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='_\\U000ead93\\x97w',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00073d3d\\x02W': -906_476_503_394_979_542},\n       coverage={'\u00a5\u00c9': [11476,\n         -53,\n         4983,\n         63,\n         -46,\n         -29822,\n         -19276,\n         70,\n         15,\n         -141_042_706_618_280_499_344_389_831_215_620_749_702,\n         -2708,\n         5636],\n        '\u00ff': [31757, 4, 122, 2020, 7]},\n       timing={'\u00f6': -10000000.0,\n        'i~W\u00e7W,\u00b7<\u00d2z\\x0f': 1.7976931348623157e+308,\n        '\u00c5)\ud868\udf5e': 1.400359740567235e-49},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=49, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\xde'\\xb4\\xbae\\xe8Xu\\xef{\\xd4\\x1d>\",\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.21173015218121077},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.884734248615427},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=25606,\n          constraints={'min_value': 25605,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=-4.498078824352884e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 6.263836853044527e-142,\n        '\u2a96j': 6.103515625e-05,\n        'p\\xad3\u00c0W': -inf,\n        '\u00e6\u00e7\u00ac': 3.5286406050877456e+16,\n        '\u00baE8l7\\U000b2a92\u00bc\\x87!': -0.5,\n        '|\u00bf\u00be\\U000f792f3\u00ec\\U000867abp': 58,\n        '\u00e2\u00cc': -3.3953420342091052e+16},\n       coverage={},\n       timing={'ps\\U000acee0\u00a9\u00de.\u00e9': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0],\n        '': 1.377162015427191e+126,\n        '\u00ef\u00d4\u00d7\\x18\\x87\ud875\ude90H\u00e0k': -4.563623071924669e+181,\n        '\\U000a4daa\\x80\u00d1Dp\u00de': -2.1023313281473814e+211,\n        'ZE\\x8fC\\U0004635e\\U0007c655\u00e0\u00dbnp\\x12\u00e3\\U00013917\\U000843aa': 5.960464477539063e-08,\n        'reprfuncargs': -2.7690603879016395e-123,\n        '\\U00036faca\\x8f\u00f4': -5.4110274432377704e+16,\n        \"M\\x85#nY\u00b3\u00f1\u00c4\\U0005e7b6f\u00d0\u00e8o\u00b5\u00d3Y\u00dc\\x89\u00ca'\\U00037d9d\u00df\\U0007cc96W\\U000a165a5\\\\\u00df\\x89\\U000be4036\u00cf\": -2.225073858507e-311},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=31034, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 3, 1), ('b', 3, 0)), (('b', 3, 3), ('c', 2, 2))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='U\ud821\udfacu\\x93\\x15\\x92',\n       run_start=10000000.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'FALSE': 0.0, '\\x1d\u00f22\u00fa': 124, 'U)': -1.974375860528209e+16},\n       coverage={'\u00f1\\x89\u00f3|\\x98': [-32,\n         -22025,\n         11237,\n         -21350,\n         43,\n         29175,\n         29974,\n         -2799],\n        '\u00deA\\U00100d4b\u00ee': [-13097,\n         -28773,\n         50,\n         -698232734,\n         334490385,\n         -19664,\n         7975],\n        '\u00d2': [],\n        '\u00c8\\x1a': []},\n       timing={'\\x19\\U000b9e0c\\x15\\x1d': 1.814935515130525e-258,\n        'f\\x9f': 4.200833421006674e+16,\n        ')\u00fc': -4.647189743669363e+135,\n        '': -3.402823466e+38,\n        '\u00d7': 7.41453480937634e-69,\n        'j\\\\0': 3145901100689807.0,\n        'n\u00be\u00d9\\x9e\\U00070dab': -9.379203443049838e+37,\n        '\\x93\u00aa\u00fe\\x01}\ud835\udf9f': 3.0553986768855286e+52,\n        'B\u00dcs`': 3.1708763577302797e-127,\n        '\\U00092c3c': -2.1864429135704603e-239},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-4068222528616222306, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 2, 1), ('c', 3, 0)),\n                 (('b', 2, 2), ('b', 2, 2)),\n                 (('c', 0, 0), ('a', 2, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='Y',\n       run_start=0.01,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\u00d4\u00cf\\U00069bb5': -1.291852141044444e+16,\n        '.': 4.4707201502834165e-71,\n        '\\n\ud83a\udc1b\u00afe\u00c9': -3.991475037803198e+161,\n        '!1\u00ff\u00aaq\\x16': 7.061116914356327e+16,\n        '\\x86\\x0e\u00e1\u00ed\\U000a9f7fv;': 6.736004763117326e+16,\n        '': 2.4652639737765844e+300,\n        '\u00d4\u00b5b\\x99\u00a1': -2.276477083075981e-77,\n        '\\x10B\\U000f43cc\u00b08': 4.546217719116754e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=22453, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 9.281044998746311e-97,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8837980074512342},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': 2.2604924496400556e+16,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 1e-12},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=10.0,\n          constraints={'min_value': -7.02175523778225e+92,\n           'max_value': inf,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 3.794670320885071e-270},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.9,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.4662620337218527},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\U0005d0c9D\\U00099d57\u00f1',\n       run_start=-539655197728922.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00f63O': -6.383821582717652e+16, '': 1.1907403505091513e-170},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=6951, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00e3',\n       run_start=-2.5675202403953997e+266,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'': 6.41253206481601e+16,\n        '\u00bd\u00fa\\U0010b143\\U000b58894\\U0008793d': 6.919527322091398e+16,\n        '\\x94\\U000c2266': 1.4762946093839592e+271,\n        '\u00afSB': 2,\n        'b\u00f8\\x8fb\\xad\\U0006a806\\U000efac2\u00da\\x94\u00fe\u00d1\\x9b3\u00b9\u91f8>\\x1a\u00e4\\U0010b56f\\x1d\\U000ae4a8\\U0009e7327d2\u00dc': 1.111682961686056e+16},\n       coverage={'#\u00c3\\n\u00e6M\\x98\u00c4\\U000cd5c3\\U0004e502\\x11r': [-13874,\n         -22596,\n         -138_024_762_848_979_299_443_313_768_813_365_745_925,\n         20679,\n         1_461_171_597,\n         13558,\n         1_400_749_065,\n         -2_125_300_634,\n         64,\n         18694,\n         -75,\n         16004,\n         -1_593_381_599],\n        '\u00f1\\U000e89916\\x83\\U0007a944l\\x04\\U00083474\\U00057b6d\u00a2E\\U00015fe5W\u00b5^\\U000d2d98I>': [24333,\n         10235,\n         -588_983_639_041_965_458,\n         9,\n         17,\n         53,\n         -67,\n         -23782,\n         1,\n         11790,\n         69,\n         127],\n        '\u00c1m\u00f3\\U000f44b8\\U000ed39fr\\x1b\\U00075af0\\x07\\x9d\\x1f\\U00080a7c\\U000bde17\u00c9\\U000a0eb1': [13963,\n         22,\n         -23192,\n         -20,\n         -11196,\n         -9_353_447_406_244_937_268_317_155_588_724_988_015],\n        '\\x01\\U000f8fcb\\U00057786u\\U00066548': [26472,\n         10564,\n         -32529,\n         -1_232_945_612_838_041_913_543_058_030_229_774_779,\n         16,\n         127]},\n       timing={'\\x96E': 3.191120955928996e+16,\n        '\\x19': 9.695026644043371e+269,\n        'j\\x058': 1.3068818311972543e+103,\n        '\\x84\u00a9\\x158': 5.655158571658308e+16,\n        '\u00a9\u00acl': 21082247033.325356,\n        '\\U00099673\u00b8\\U0009745d\\x80T\\x06\\x9cU\\x9b\\U000872a8\\x82zZ*': -4.108379981087581e+16,\n        '\\x02~\u00fa\\x10\u00f8\\U000cabe7\\U000d22b7\u00e31\\x04\\U00071711\u00fb1$\\x0eFf': 0.5,\n        'K\\x13\u00b9\\x05\\U000d5f20\\x15\\U00078244\u00e8': inf,\n        '\\U00036e6dt\\U00107d73': -inf,\n        '2\u00cc': 4.948978958629753e+66,\n        'h\\U0007687b': 1.2754225147282175e-191,\n        'X>\\x02\\x9c>C\\x9b\u00c8\u00b9\\x95\\U001000e9\\x01\\x86\\x04\\U0001ca7c\u00b7n\ud822\udffc': 5.225410200187716e-184,\n        '\u00da': -1.8640230915937084e+16,\n        '\\x83\\x8e\u00dfS\\U0004404d': -3.4141913943525692e+16,\n        'xfailed': 7127233184074291.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=59, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet(\n               [(59355, 95634),\n                (111306, 152578),\n                (173278, 179673),\n                (278888, 493767),\n                (748182, 749607),\n                (832221, 841047)],\n           ),\n           'min_size': 0,\n           'max_size': 7},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.012792001769412309,
          "overall:gc": 0.005665748205501586,
          "generate:args": 0.031700913968961686
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287652.087619916,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1d\u00ed\"': 3.985733272093683e+220},\n       coverage={'': [-22705,\n         98,\n         25617,\n         12114,\n         28021,\n         8918,\n         -26975,\n         1_643_109_273_407_804_298],\n        '\\r\\U001012ec/bzC\\x7f\u00fb': [-4158, 18407, 0, 17979]},\n       timing={'\\x16': -1.7976931348623157e+308,\n        '': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=0, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'C\\xa2\\xfb\\xd1\\xe6',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.942388341922189},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0009554c',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\x19\u00dc\u00b4_\u00e2\\U00099420': 5.3594018240591985e-148,\n        '3': -1.0037095419208709e+243,\n        '\u00d6\\U00060da6B\\x9a\u00f9\\x1a': 7.1734514523842264e+16,\n        '\\x08\u00ca\u00c9\\x95': -2.2802650713251492e+16,\n        '\u00f2\\U000fd842\u00b3@\u00d5': -3.2307419385506676e+16,\n        'w': -1.5501304809297265e-154},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=736334283, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('a', 2, 0)),\n                 (('a', 2, 0), ('c', 1, 2)),\n                 (('b', 0, 0), ('b', 2, 3)),\n                 (('b', 2, 2), ('a', 2, 3)),\n                 (('b', 3, 3), ('a', 1, 1)),\n                 (('c', 2, 2), ('a', 1, 3)),\n                 (('c', 3, 3), ('a', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x88\u00be',\n       run_start=1.2148559371553838e+143,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'patchings': 5.85613891783988e+16,\n        'plugins: {}': -5826345749468489.0,\n        'q\\U000fb6c5\\x10': -8699830435973916.0,\n        '\\U000916c8\u00c0\\U00044ad0\\x05\u00df1': 3746,\n        '\u00b3H\u00ac': 2.8073679645100496e+16,\n        '\\U0005ae7dJ': 6.017541199639533e-180,\n        '\\x87\u00bb\\U0006480d\u00f5\u00d2\\x1b4\u00b5\\U00106624\u00a4}': 3.0442017510466516e-298},\n       coverage={'\ud856\udc3dTl\\x8a': [25897,\n         103,\n         -30710,\n         27866,\n         -11526,\n         18343,\n         6338,\n         -4],\n        'K\ud872\udfbb\\U00059066': [-5941],\n        '': [],\n        '\u00e9': [256, 65_312_922_569_289_937_861_926_412_935_954_430_061]},\n       timing={'\u00cf\\x00\\x903\\U00070883 ': 5.179860806996567e+16,\n        '\u00af\u00a1@\u00deS\\U000cf65b\\U000b0a7a': -4.1316116041622376e+16,\n        '\u00cba': -3.932371733660467e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-17396, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='string',\n          value='\u1f79\u1fdd\\u202e\ud869\udcce\u1fd6\u203a\u1f7a\u1fd3\u1f66\\U00095390\u1fc0\u2015\u1fbf\u1f71\u1fce\u1fe0\u1fc3\u1ffa\\u1f7e\u1f63\u1f55\u203c\u1fe9\u1f77\u1f66\\U0007d06c\u1f9f\u1ffe\u1ff2\u1fad\u1f98\u2015\u1fdf\u2040\\u2028\u1fd3\u1fbf\u57c4\u1f95\u1f9d\u1f4c\\u2003\u1fdd\\U00085287\u1fa6\u1fde\\u2008\u1fb7\u1f8f\\U0007ef7d\\u200c\u1ff8\u1f66\u2044\u203e',\n          constraints={'intervals': IntervalSet(\n               [(8005, 70410),\n                (165712, 334296),\n                (481864, 672413),\n                (826189, 916981)],\n           ),\n           'min_size': 39,\n           'max_size': 139},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.7746765202131409},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 113},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 3.404348352708732e-120},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=72719031,\n          constraints={'min_value': 72712723,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u2057',\n          constraints={'intervals': IntervalSet([(8232, 112276)]),\n           'min_size': 0,\n           'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1.175494351e-38},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u20ae\\u20c1\u2086\\u20ce\\U000e3bb3\\u20c5\u210b\u2050\u20e2\u207a\\U0008f365\u20a2\u20a9\u20be\u2076\u20b8\\u20fb\\U00058927\u2090',\n          constraints={'intervals': IntervalSet(\n               [(8207, 12702),\n                (187908, 223915),\n                (309435, 628335),\n                (671648, 804396),\n                (925579, 1084156)],\n           ),\n           'min_size': 14,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9503609522487009},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\ud01c\ud0e6\ud0e0\\U0001ede1\\U0009fce6\ud0fa\ud0bc\ud0fa\\U00098243\ud02e\ud06a\\U0004dad5\ud02d\ud0fe\ud0c3\ud015\ud07a\ud0c6\ud074\ud065\\U0007987f\ud0cf\ud092\ud083\ud0ad\\U0005d7ba\ud09f\\U000666dc\ud048\\U0009b81e\ud0cb\ud071\ud0f0\ud0c5\\U0005de75\ud041\ud0c5\\U00062734\\U0004281c\ud85a\ude49\ud030\ud06b\ud0f4\\U000619ec\ud007',\n          constraints={'intervals': IntervalSet([(53253, 708401)]),\n           'min_size': 43,\n           'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=4.2927011514935784e+307,\n          constraints={'min_value': -2.1612751072636304e+16,\n           'max_value': 1.6966448163554575e+308,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.8988747883422574},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 3), ('b', 1, 2)),\n                 (('a', 2, 0), ('c', 0, 3)),\n                 (('b', 0, 2), ('a', 2, 1)),\n                 (('b', 2, 1), ('c', 1, 1))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.005823003011755645,
          "overall:gc": 0.002396163996309042,
          "generate:args": 0.02540925081120804
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287693.218650375,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': 3.4604852547067256e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 2), ('c', 2, 1)),\n                 (('c', 1, 2), ('a', 2, 3)),\n                 (('c', 3, 1), ('b', 0, 1))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$\u00ec\u00e9}\u00a7}\u00bcb\u00f8\u00ce',\n       run_start=3.581567246564354e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1e': -267, '': 5.81550593872331e+16},\n       coverage=None,\n       timing={'': 2.771065281589164e+16,\n        '\\U000be75859\\x1b\u00dcO\\U000b8445\u00cf\\U000aff3d\u00be\u00f5\\U00015e1bm\u00a1\\U000cf2f5\u00cb\\U000d7847\\U000ccfd4\\U000ef509\u00c0\ud811\udc22': 8.936505514521892e-238,\n        '\\x102V\u00d5TC\u00d5\\U00072d28\\U0007d679': 3.750551445609733e+16,\n        '9\\x9f': 4.131855246241256e+209,\n        '\\x13\u00c9\\U0008fb18\\U00040c62': -2.3884174463715724e-11,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': -2.8577991390714955e+217,\n        '\\U0007b5a6@\u00b2': 1.0,\n        '\\x9f\\x8f\u00e1\\x10': -1.3005603755847338e-230,\n        '\u00f8J': 1.7666368542055514e-214,\n        '8\\U000f5edb\u00eb\\U000ac50f2': -1.6580908882272163e+167,\n        '<': -5.556466201863923e+16,\n        '\\\\\u00a8d\u00b7S\\r2\\x92\\U000c259e\u00b8': -3.948982162075043e+16,\n        '\u00ff\u00e8': 2.225073858507203e-309,\n        '\u00ef': 3.1298126667191544e+16,\n        '|iKp\u00f4\\x05': -1.984903236802313e+16,\n        '.\\x06': 4.4525546727194664e+16,\n        '(|\\U00102b22L\u00cb\\U00093409c\\U000965e40\u00cc\u89ec': 2.7631729770983226e+107,\n        '\u00d4': -3.0511265753107252e+16,\n        '4': 1e-05,\n        '\\x8a': -1.192092896e-07,\n        '\\U000f8a54': 0.02,\n        'stderr': 4.214325096370328e+16,\n        '\u00ff\\x1c\u00c0Z\\x81': -6.815421816221384e+16,\n        'd\\U000406df\\n\u00e1\\U0004d343': -4.0060733428365366e-281,\n        '\u00f3': 1.4903545137311036e+16,\n        '\\x8f\u00ab\\U0002f66e': 6.997542685727088e-250,\n        '\\xad\\x83}\u00b4\ud863\udf81\u00c3\u00b1': 3.4943319574840416e+16,\n        '\\x9c\ud867\udfe5\"P\\x14CR\\U000e101e': -1.1887550699450638e-89,\n        '\u00df$\\x9eN\u00e3\u00c1\u00df': 1.8666299021426055e-206,\n        '\u00a2\\x92\\x98\\x99\\x13\\U00035900': 4.777638046555059e+16,\n        '\u00b7\u00b9.\u00a4': -5.311865831915687e+139,\n        '^]\\U00034e4f\u00f9\\\\$\\x96\\r': -0.0,\n        '9>\u00d5\\uf0e5\\x06': -3.1019652982398336e+16,\n        'jR\\x06&y': -2.748477979159884e+16,\n        'p': -7.235383171582342e+108,\n        'X\u00bf': -0.0006906552921419041,\n        '\\x12\u00db\ua9bd`\u00e4$\\x99\\x16': 9.785665676345963e+191,\n        '\\x11k;1\\U0006f0d1\u00d7\\U000438f5\\x92': 1.7976931348623157e+308,\n        'cq': 2.6749725065957443e-188,\n        '\u00e9\\U0008b732': struct.unpack('d', struct.pack('Q', 0xfff8000000000001))[0],\n        '\u00d7X\\x92\u00a2\\U000ec5c9Y\u00d6': -1.9347056455368202e-107,\n        '\u00ab\\x0c\u00ec\\x1f': 1.0,\n        'rX': 3.688408213489048e+228,\n        '\\x8d': 3.988093963417825e+16,\n        '\\U0004e78f\\U0005dbbe#\u00fa{\\x0b\\U000907ae@\\U000ec133\\x0c\\U000b3618': -3.402823466e+38,\n        '\\U000b16aa\"v\\U000dca8bX\\U0008c056': -5.816461135018907e+16,\n        '\u00f8': -2.4923384661405135e+232,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': 1.1754943508222875e-38,\n        ']\u00e5\\x05\\x90\\U000cfe1a': -3.346084573223898e+16,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.001},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=107, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'.hypofuzz.observations',\n          constraints={'min_size': 12, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'^',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=3.402823466e+38,\n          constraints={'min_value': 3.6734874397144776e+16,\n           'max_value': 7.970212169560727e+306,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.6708158258568876},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-217,\n          constraints={'min_value': -1084,\n           'max_value': -63,\n           'shrink_towards': -72,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x00\\x00\\x00\\x00',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([(0, 2020), (73940, 437623)]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x0e\\x90\\x90u\\xae\\xf9X\"',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 40},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5542707842964972},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9101162988235343},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_634_379_034,\n          constraints={'min_value': None,\n           'max_value': -77,\n           'shrink_towards': -117,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*#\\xb3\\xa8kaAo\\x9b9\\x1f\\xd2\\x92\\xb9\\xc4|\\xf2\\xd3t1\\xba\\xefv\\xaa\\xbf\\xac\\xaf$\\x12J\\xfc-\\xdeD\\x966\\x8d\\xc7yw\\xe7\\x081\\xbb\\x16m\\xdb\\t9\\x9bb\\xba\\x80\\xaf\\xdd\\x1aV\\x86\\x85\\xf4\\\\sy\\xe5\\xed\\xdeI\\x89\\x14`]\\xc3\\xfd\\xc0\\x05\\xa7|\\x07\\x86\\xf6\\xd1\\xda\\xa5\\xfevj\\xad\\xa3\\x9b\\x15\\xe2\\x1aN\\x08\\x11\\xc3Y\\x06\\xed[\\xf7/\\x8eO\\x9c\\x1f\\x9e\\xcf\\xc6\\xf2\\xbb%1 \\x8b\\\\\\xc1VSt\\xadz*\\xe6\\x8d7^\\xday\\x04\\xeb',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 3, 1), ('a', 0, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='\\x9d\u00bb\u00b7\u00f4\u00dd\\x01\ud883\udd2f\u00d0\u00af',\n       run_start=4.4991168893044094e+218,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\U00101bed': -3.869119548516896e+16,\n        '\u00bbu\u00bc': 9.713515275344334e+42,\n        '\\U000a300cO\\x96': 0.005,\n        '': 3.1101241912698212e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=3139, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.599802741188005},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.390266647063482e+214,\n          constraints={'min_value': -6.504959249087795e+16,\n           'max_value': 1.8801766271544533e+214,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 2.225073858507203e-309},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\xaad',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_554_174_533,\n          constraints={'min_value': None,\n           'max_value': -1470,\n           'shrink_towards': 13,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.8468146658228255},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'<\\x13Z\\xff\\x19;p',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U000d36a8',\n       run_start=-2.90730014052416e-77,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\ud844\uddf1\\U0004c936': 1.5818658175307156e+16,\n        'l': 1000.0,\n        '\\x93': -125,\n        '\\x0f\"\\x16\\ue7bfy': 9065,\n        '\\x8d': -23546,\n        '': -3_948_973_826_605_413_727,\n        '\\x85]U\\U001098672\\U000db9ba?\u00aby>\\x15\u00ce\u00d5\\x15\\U00102447\u00d7\\r': -2502547754946245.0,\n        '\\x14\\U00097fa55': -23033,\n        '\u00aa\\x94': 14478,\n        '\\x92\\U0008c9ddT': -4.3556360335917827e-85,\n        '\u00fa\\x16\\U00074854\\U0009c340\\ue855\u00ee\u00ea': 7865276761928590.0,\n        '\\U000f37b5\\U000e1688\u00f6\u00bb\u00fbe': 1300,\n        '\\x9c': -6.103515625e-05,\n        'K\\U0007276e\u00e8\u00e6\\x12r\u00a1\u00fa\\x8a^:\u00c6': -7.193527056896523e+16},\n       coverage={'F': [17738, 420, 20351, 31359, -27154, -71, -17839, 1056],\n        '1e100': [12405, -13106, 48, 25222, -24778, -110, 109],\n        '}\\U000adab6\\U000a22b8p': [-130_435_544_445_579_513_838_295_809_243_878_044_760,\n         -3,\n         25937],\n        '\ud843\udcf0\\U0003e8c2\u00a2\u00fe\\U00094b59': [7_132_021_326_113_349_589,\n         -7_322_611_557_376_844_941,\n         -13790,\n         -136_943_712_403_112_663_840_060_533_619_620_445_551,\n         5398],\n        'D\\x98\u00af\\x03\\x81\u00b3': [364070863,\n         24349,\n         -2028,\n         -32398,\n         1_037_867_966,\n         -30516,\n         -406912292,\n         -23764,\n         28509],\n        '\\x14': [127_187_115_977_844_521_102_744_843_176_187_621_440, 16108]},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-45, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9803507276088548},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -4.027254348963144e+30,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 0.3929202773029631},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-6.992097515808613e+306,\n          constraints={'min_value': -1.7976931348623157e+308,\n           'max_value': -2.2250738585072014e-308,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 8.034274936822837e-150},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=-inf,\n          constraints={'min_value': -inf,\n           'max_value': -6.467917375278564e-151,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.21619667612518506},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'\\x97\\xbe8P jm',\n          constraints={'min_size': 3, 'max_size': 103},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U000e0668\ub9b0\ub9d3\\U000ea72e\uba5a\uba73\uba50\ub9f9\uba15\ub9af\uba36\ub9e7\uba31\uba31\ub9d7\uba52\ub9d1\ud801\udeb0\ub9ee\\U00014d79\uba74\uba0b\\U00066743\\U0003b3e3\uba42\\U000bec5d\uba10\uba54\ub9f8\uba73\uba3a\uba73\\U000d3238\ub9b0\uba49\uba25\ub9ac\ub9f5\\U0003be10\uba1e\ub9e1\ub9e4\uba15\ub9e5\ub9a7\ub9cd\ub9c6\uba61\uba09\ub9c0\uba34\uba49\ub9c7\uba18\ub9e0\uba5d\\U00056316\uba69\ub9d9\\U00048191\\U000ce62e\ub984\ub986\uba45\uba54\uba60\uba05\ub98a\uba0a\ub9b5\uba6e\ub9f2\uba52\uba71\ub9c4\uba33\ub999\\U00064f3b\uba0c\uba52\ub9f6\ub9f3\uba0a\uba14\\U000c0aaf\ub9e3\ub9a3\ub9ca\\U0004fc4a\uba43\uba57\uba41\uba5f\uba40\ub9f4\uba6e\uba6b\ub9ad\uba67\uba5d\uba65\ub977\ub9d8\uba12\ub9af\ub992\ub99b\\U0003cc92\uba2b',\n          constraints={'intervals': IntervalSet(\n               [(47479, 441048), (771317, 1114110)],\n           ), 'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 145},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.05378162079121453},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'',\n          constraints={'min_size': 0, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\\U0002f331',\n          constraints={'intervals': IntervalSet(\n               [(193096, 254668), (393922, 519636), (655957, 831352)],\n           ), 'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=7.676957209159597e+307,\n          constraints={'min_value': 1.2738024347448908e-236,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 5.960464477539063e-08},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.3737702713801579},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 1.0},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u01d3\u01bd\u012a\u016a\u0100\u014e\u01c9\\U0001b480\u0103\u01cb\u01ad\\U0002fa2a\\U0001b319',\n          constraints={'intervals': IntervalSet(\n               [(240, 757610), (867383, 900238)],\n           ), 'min_size': 11, 'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-10363,\n          constraints={'min_value': None,\n           'max_value': None,\n           'shrink_towards': 0,\n           'weights': None},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 3, 0), ('c', 2, 3)),\n                 (('a', 3, 1), ('b', 1, 1)),\n                 (('a', 3, 3), ('c', 0, 3)),\n                 (('b', 2, 0), ('a', 2, 2)),\n                 (('c', 0, 0), ('a', 0, 1)),\n                 (('c', 1, 2), ('b', 3, 2)),\n                 (('c', 2, 1), ('b', 1, 2))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.005641711119096726,
          "overall:gc": 0.002316288882866502,
          "generate:args": 0.04334616905543953
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287676.411764666,
        "stability": "stable"
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1d\u00ed\"': 3.985733272093683e+220},\n       coverage={'': [-22705, 22091, 81332294, 122, 47, 23462]},\n       timing={'\u00c9\u00b5\\x1c(\\x95W\u00cf t\\x8cY\u00cb\\x98\\x03\\x1d': -3.433356724127726e+16,\n        '\\U0005ce15gD\u00ba\u00b1': -4.54739757984354e-128,\n        '\\x80\u00ca\\U0008f7bd%\\x1ez': 2.6391814634434616e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=0, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'C\\xa2\\xfb\\xd1\\xe6',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.942388341922189},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 0, 1), ('c', 2, 3)),\n                 (('a', 1, 2), ('a', 1, 1)),\n                 (('a', 1, 2), ('b', 3, 1)),\n                 (('a', 2, 1), ('b', 1, 1)),\n                 (('a', 2, 2), ('b', 0, 2)),\n                 (('a', 3, 2), ('b', 2, 2)),\n                 (('b', 1, 2), ('a', 2, 3)),\n                 (('b', 2, 3), ('c', 3, 2)),\n                 (('b', 3, 2), ('c', 0, 2)),\n                 (('c', 0, 3), ('b', 2, 2)),\n                 (('c', 0, 3), ('c', 3, 1)),\n                 (('c', 1, 2), ('c', 1, 2)),\n                 (('c', 1, 2), ('c', 3, 1)),\n                 (('c', 2, 0), ('c', 3, 0)),\n                 (('c', 3, 0), ('a', 1, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0032536700600758195,
          "overall:gc": 0.0014586219913326204,
          "generate:args": 0.007882666890509427
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287687.283779125,
        "stability": "stable"
      }
    ],
    "corpus": [
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x1d\u00ed\"': 3.985733272093683e+220},\n       coverage={'': [-22705, 22091, 81332294, 122, 47, 23462]},\n       timing={'\u00c9\u00b5\\x1c(\\x95W\u00cf t\\x8cY\u00cb\\x98\\x03\\x1d': -3.433356724127726e+16,\n        '\\U0005ce15gD\u00ba\u00b1': -4.54739757984354e-128,\n        '\\x80\u00ca\\U0008f7bd%\\x1ez': 2.6391814634434616e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=0, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b'C\\xa2\\xfb\\xd1\\xe6',\n          constraints={'min_size': 0, 'max_size': 100},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.942388341922189},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='',\n          constraints={'intervals': IntervalSet([]),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0034224161063320935,
          "overall:gc": 0.0015594169381074607,
          "generate:args": 0.0055850830394774675
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287692.872907083,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0004499569768086076,
          "overall:gc": 0.0002196260029450059,
          "generate:args": 4.516699118539691e-05
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287652.677932583,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705,\n         29491,\n         1,\n         2020,\n         0,\n         62_221_212_182_388_038_060_686_249_643_409_667_426,\n         1,\n         -866667455,\n         0],\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': [-25879],\n        '\u00fd\\U00058b1f\u00b5SL\\U0009452b\u00d1,\\U000a765b\\U0007d28e': []},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('a', 0, 0), ('a', 0, 1)), (('a', 2, 1), ('c', 2, 1))}),\n      False)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0014975410886108875,
          "overall:gc": 0.00080091692507267,
          "generate:args": 0.001452874974347651
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287655.660880708,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=1.2282104355578043e-05,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage={},\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x93'C:\\xce{w\\xe2U\\xf9\\xe5\\n\\xca\\xeb\\xdc\\x17\\xaa\\xdb/'c\\x0b=\\xa3\\xcb\\xe6\\x02i\\xca\\xb9*!N\\x9f\\xa0&\\x8e\\x0c\\x1b\",\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u00fcD\uabaa\\x83X',\n          constraints={'intervals': IntervalSet([(0, 511), (8918, 121431)]),\n           'min_size': 0,\n           'max_size': 25},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.0,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00d6\\U000528a9\u00a4\u00f5\u00daR\\U000e3e21\\U000dd57dz': -4.048889193453569e+16,\n        '\\x0c\\U00104d81': -72,\n        ']\\x93\u00e5': 7.11568919565624e+16,\n        '': 1.4799994571640396e+50,\n        '\u00c1\\U00092c6c': 8203,\n        '\u0287\u01dd\u026f\u0250 \u0287\u1d09s \u0279olop \u026fnsd\u1d09 \u026f\u01dd\u0279o\u02e5': -26369,\n        '\\x8e': 1.4747850839325638e+204,\n        '\\U000673c3\\U000e6ebd': 0.001},\n       coverage=None,\n       timing={'': 1.5337189856126747e+41,\n        '\u00ae\\x9b/\\x1c\\x8c\u00e0\u00bd\\x98': 6.818629716573128e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-23378, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$\u00ec\u00e9}\u00a7}\u00bcb\u00f8\u00ce',\n       run_start=3.581567246564354e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'': 2.771065281589164e+16,\n        '\\U000be75859\\x1b\u00dcO\\U000b8445\u00cf\\U000aff3d\u00be\u00f5\\U00015e1bm\u00a1\\U000cf2f5\u00cb\\U000d7847\\U000ccfd4\\U000ef509\u00c0\ud811\udc22': 8.936505514521892e-238,\n        '\\x102V\u00d5TC\u00d5\\U00072d28\\U0007d679': 3.750551445609733e+16,\n        '9\\x9f': 4.131855246241256e+209,\n        '\\x13\u00c9\\U0008fb18\\U00040c62': -2.3884174463715724e-11,\n        '\u092e\u0928\u0940\u0937 \u0645\u0646\u0634': -2.8577991390714955e+217,\n        '\\U0007b5a6@\u00b2': 1.0,\n        '\\x9f\\x8f\u00e1\\x10': -1.3005603755847338e-230,\n        '\u00f8J': 1.7666368542055514e-214,\n        '8\\U000f5edb\u00eb\\U000ac50f2': -1.6580908882272163e+167,\n        '<': -5.556466201863923e+16,\n        '\\\\\u00a8d\u00b7S\\r2\\x92\\U000c259e\u00b8': -3.948982162075043e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=27912, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.5542707842964972},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.9101162988235343},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=-1_634_379_034,\n          constraints={'min_value': None,\n           'max_value': -77,\n           'shrink_towards': -117,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='bytes',\n          value=b'*#\\xb3\\xa8kaAo\\x9b9\\x1f\\xd2\\x92\\xb9\\xc4|\\xf2\\xd3t1\\xba\\xefv\\xaa\\xbf\\xac\\xaf$\\x12J\\xfc-\\xdeD\\x966\\x8d\\xc7yw\\xe7\\x081\\xbb\\x16m\\xdb\\t9\\x9bb\\xba\\x80\\xaf\\xdd\\x1aV\\x86\\x85\\xf4\\\\sy\\xe5\\xed\\xdeI\\x89\\x14`]\\xc3\\xfd\\xc0\\x05\\xa7|\\x07\\x86\\xf6\\xd1\\xda\\xa5\\xfevj\\xad\\xa3\\x9b\\x15\\xe2\\x1aN\\x08\\x11\\xc3Y\\x06\\xed[\\xf7/\\x8eO\\x9c\\x1f\\x9e\\xcf\\xc6\\xf2\\xbb%1 \\x8b\\\\\\xc1VSt\\xadz*\\xe6\\x8d7^\\xday\\x04\\xeb',\n          constraints={'min_size': 48, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\ud836\udc5c\u00d2\u00eb\\U000db529`',\n       run_start=-4.616014152953067e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'D': -16808},\n       coverage=None,\n       timing={'\u00e5\u00bd\\U00103832\u00f2\\U0009eb76': -1.7727957235719832e+16,\n        '\u00e0S\u00a1i\\x12\u3f06': 5.021463670957227e-96,\n        '\u00fb\u00f5\u00b9': 2.4244279143403476e-17,\n        '\\U001008c59': -4.0723981648567485e-159,\n        'U\\x13J\\U000eb739\\U00073fec\u00d1\u00d9\\x15\\x91p\\x96M\\U000dc798': -2272840267908239.0,\n        '0': 2.609602484521558e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=21, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('c', 3, 3), ('b', 1, 3))}),\n      False),\n     (TestCaseObservation(type='test_case',\n       property='',\n       run_start=0.005,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\U00107fdf\u00fcY': -1.156990422066653e+168,\n        '\u00ca%\\x1a\\U000fb7ba\u00fch\\x8bp\u00d2#': -88},\n       coverage=None,\n       timing={'': -1.7976931348623157e+308,\n        '\u00c9\\U0010f590r': -0.99999,\n        '\u00c7\u00cf\\x84\u00f2e\u9553\u00ce\\t': 4030553727692000.0,\n        '\u00a9': -6.1459042833091976e+16,\n        '\\U000a361c\\x14': 3.3193278117199268e-37},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-32337, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='float',\n          value=-5.507032826264715e+16,\n          constraints={'min_value': -inf,\n           'max_value': 2.4433846118408528e-171,\n           'allow_nan': False,\n           'smallest_nonzero_magnitude': 1.0},\n          was_forced=True,\n          index=None),),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\u00canD\u00c2d3\ud859\udf10',\n       run_start=-3.406836195912482e-261,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\u00ea\u00e2': 0,\n        '`': 8.088437146736769e-50,\n        '': -5305052629581041.0,\n        '\\x0f\\U000bfdb1Ef\u00a4\"8\\x81\u00cf\\U0008dcf8': -64,\n        '\u00c0e': 7.523913691654665e+276,\n        '\\U0007a468\u00be\u00f8X\\x9a': -1.2961583191350866e+16},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=91, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset({(('b', 2, 3), ('a', 0, 3)), (('c', 2, 1), ('b', 0, 3))}),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='$m&\u00e3\\x9a\u00a8',\n       run_start=3.976005052965704e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'\\x8b': 1.8569175947316017e+258,\n        'l\u00fe\u00ed\\x89\u00ba\\x7f,i-T': 35,\n        '': 4,\n        ' \u00bc\\x7f\"N\u00b6i\u00b1\\U000756093H-N\u00a1\u00ab\ud81a\udcb3d': 804317,\n        '\\U00104986\u00e2\\U0006a806\u00a3\u00f8\u00a4<\\U000451ae\u00be\\U00032e04\u00df\\U000bbc48K\u00a7\u00d0': -4_200_437_636_894_923_247,\n        'h\u00fd\u00bc\\U000fd73e\u00d8': -5157478240664639.0,\n        '\\x8d\u00ae\\U0008bd0a\\x15g\u00b5\\U000429d0\\U000f66bc\u00e3\\x8f\u00d8\\U000f1e9a-\u00c9\u00f3\\U0008f55c\\x92\\U0008adbe\\uf0754-\\x83\u00ea\\U000e0a65\\x88\\U00109049': 39924,\n        'r': -4832,\n        '\\x820\u00b4\\x8d\\U000541d8\\x16\u00dd\\U000dae671': 1.2282104355578043e-05,\n        '\u00b0\u00e7\\U000d5368\u00ef\u00cd': 1.2610399524061403e+254,\n        '\\U0009c74a\\x82\\U00082798\u00bb\u00ae\u00f2\u00bf\\U0001a816': -8.751924634536133e-291,\n        '\u00a2g\u00ab\\U000ccdf8\\x94\\r': 2,\n        '\u00dd': 3},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=512, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='integer',\n          value=-31821,\n          constraints={'min_value': None,\n           'max_value': -109,\n           'shrink_towards': -10090,\n           'weights': None},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='float',\n          value=1.3097838891792478e+308,\n          constraints={'min_value': -6.89769146378947e-276,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.10105667180876979},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 1e-05},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('a', 1, 1)),\n                 (('b', 3, 1), ('c', 2, 1)),\n                 (('c', 0, 2), ('b', 0, 1)),\n                 (('c', 1, 1), ('a', 1, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from integers(0, 1114111).filter(not_yet_in_unique_list) to satisfy filter": "",
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.009665707126259804,
          "overall:gc": 0.00397704285569489,
          "generate:args": 0.01634762395406142
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287693.076105708,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='D\\x86\\U000db138\u00cd\ud856\udfffA\u00a5\u00e6\\x89\u00a9\\U0001e9b4ZP&\u7d3a\ub7b3H',\n       run_start=-2.0615935564929422e-194,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={\"@\\x89\\U000b674bP\u00a6p\\x97O\u00efkXMcA\\x8e'S\u00e2o3\\x8d\u00e3\\U000f524b\u00df~4\": -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 300,\n        '\\x95U?\\U000c5552\\xadv': 6.553972316333239e+16,\n        '\\U0007b904\u00f8': 16,\n        '\\U000ca3d0\\x00,\\U00089445\\U0004d8dd\\U00050757\\U000a3078\u00fc&-\u00e4\ud854\udeb4\u00dd': -3.3975637849691544e+16,\n        'O\\x87': -4.808844630419328e+16},\n       coverage={'': [-22705, 22091, 81332294, 122, 47, 23462]},\n       timing={'\u00c9\u00b5\\x1c(\\x95W\u00cf t\\x8cY\u00cb\\x98\\x03\\x1d': -3.433356724127726e+16,\n        '\\U0005ce15gD\u00ba\u00b1': -4.54739757984354e-128,\n        '\\x80\u00ca\\U0008f7bd%\\x1ez': 2.6391814634434616e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=172800, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0017018751241266727,
          "overall:gc": 0.0009690839215181768,
          "generate:args": 0.0010679170372895896
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287668.244297833,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\\U000eea2d\ud847\udd48',\n       run_start=-7.16960537907108e+152,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'m\ua59f`)\\x82\u00e5f\u00e3Xc\u00fb1\\U000c76a0\u00b6j': -6.943440537901408e+16,\n        ')\\U000c2950>\u00f01Z\u00deq\u00d1r\u00e15\\U000e38c0\\U000b7e84>\\U00087874Gk\\x8f2\\U000b9664': -1.8344486400157425e-180,\n        '\\U000a39d6\\x8fq\\x10\\U00109b1a\\U0007a538': 9.281044998746311e-97,\n        '': 8032842247071099.0,\n        '\\U0010f77a': 3.2541255408339028e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-65, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='bytes',\n          value=b\"\\x93'C:\\xce{w\\xe2U\\xf9\\xe5\\n\\xca\\xeb\\xdc\\x17\\xaa\\xdb/'c\\x0b=\\xa3\\xcb\\xe6\\x02i\\xca\\xb9*!N\\x9f\\xa0&\\x8e\\x0c\\x1b\",\n          constraints={'min_size': 35, 'max_size': 10_000_000_000},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=True,\n          constraints={'p': 0.8030321147111537},\n          was_forced=True,\n          index=None)),\n        choice_spans=None)),\n      frozenset({(('a', 2, 0), ('b', 3, 3)), (('b', 0, 1), ('b', 1, 3))}),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {
          "Retried draw from text(characters(codec='utf-8')).filter(not_yet_in_unique_list) to satisfy filter": ""
        },
        "timing": {
          "execute:test": 0.001554249960463494,
          "overall:gc": 0.00071162503445521,
          "generate:args": 0.002672040951438248
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287668.82475475,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0009554c',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\u00c8\u00a9\\U0006f99e\u00d0': 3.2833824132110374e+50,\n        '?\u00fd\u870a\\x1f': -3.1278407790995028e+16,\n        '': -1.7976931348623157e+308,\n        '5\u00cc\u00c8\\x16': 4.205427841969805e+16,\n        '\\x90\\U000e438bXD-F\\U000cd9ecdt\u00a1$a-\u00bd\\U000d512e\u00ba\u00f7\u00ef\u00a3v\u00b0\\x84\u00fa\\r}\u00f7\\x8b': 1.2093654882036882e-90,\n        '\u00dd\u00dfJ\u00ef\\x18': 0.6592881803895249,\n        '\\U00050011\u00a1\\x1a\\U0010fe2a\"\\U00073816\u00fc\u00ca\\x0cAo\u00b8\u00e4': 5.970180739438003e-86,\n        'r': 3.1898816289052268e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=736334283, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='G\\U000cd3f1mp\u00a6]hZ\\U000f1099\u00deN',\n       run_start=-4.006243736017758e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-3225304088662061145, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 7.223816809047244e-141},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=5174,\n          constraints={'min_value': 34,\n           'max_value': 20651,\n           'shrink_towards': -166_046_621_038_618_237_451_503_511_560_966_579_982,\n           'weights': {1217: 0.10524478369147451,\n            14120: 0.0013824153496914619,\n            16674: 0.06905196518061858,\n            13316: 0.004810862764202884,\n            17826: 0.0001275334898086632,\n            6627: 0.03948425776496357,\n            18101: 0.01242494041591608,\n            14036: 0.033813767203676605,\n            5174: 0.0906108814883454,\n            16201: 0.028538198156332933,\n            11267: 0.10947566941943909,\n            19692: 0.04451511333567459,\n            2870: 0.08931571928985807,\n            4387: 0.07793827778763042}},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='float',\n          value=0.01,\n          constraints={'min_value': -inf,\n           'max_value': inf,\n           'allow_nan': True,\n           'smallest_nonzero_magnitude': 0.001},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.4217576597375433},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='integer',\n          value=141_521_403_261_913_173_969_628_160_422_679_291_739,\n          constraints={'min_value': 141_521_403_261_913_173_969_628_160_422_679_288_008,\n           'max_value': None,\n           'shrink_towards': 792471595,\n           'weights': None},\n          was_forced=False,\n          index=None),\n         ChoiceNode(type='string',\n          value='\u20e1\\u2065\u2041\\u20c6\u2095\u209a\\U00077e73\\U000dc431\u201a\ud863\udc90\\u2073\u207f\u2036\\U000d37b1',\n          constraints={'intervals': IntervalSet(\n               [(8207, 72681),\n                (155564, 183484),\n                (474126, 675327),\n                (811280, 851285),\n                (864343, 937099)],\n           ),\n           'min_size': 0,\n           'max_size': 10_000_000_000},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.005097496090456843,
          "overall:gc": 0.002157420909497887,
          "generate:args": 0.012863167037721723
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287686.351072916,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True),\n     (TestCaseObservation(type='test_case',\n       property='\\U0009554c',\n       run_start=0.001,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={},\n       coverage=None,\n       timing={'\\x19\u00dc\u00b4_\u00e2\\U00099420': 5.3594018240591985e-148,\n        '\u00fd\\r]Ii\u00c7J\\U0005c13a\\x7f\\x9e\u00cf\u00f2\\x1ah/': 2.6826657596466246e+299,\n        '/\u00aeK': -3.3798474084624092e+16},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=736334283, context=(), group_elems=()),\n        choice_nodes=(),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0032415392342954874,
          "overall:gc": 0.0015120857860893011,
          "generate:args": 0.002926583052612841
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287666.768284916,
        "stability": null
      },
      {
        "type": "test_case",
        "status": "passed",
        "status_reason": "",
        "representation": "test_corpus_consider_coverage(\n    args=[(TestCaseObservation(type='test_case',\n       property='\u622d\\x02\\U000ad176\\nqt\u00cb',\n       run_start=-7.004653948125441e+16,\n       status='passed',\n       status_reason='',\n       representation='',\n       arguments={},\n       how_generated='',\n       features={'xZ\u00cb\\U0007190e\\U000683dd\\x93|': 12114,\n        '\\x12\\x19\\U0007be7e_`g\u00d2A\u00b9D\\x9e\\U0005e9d0\u00b4\u00e7\\x9f\\x85\\U000c73db\u00ce': 8918,\n        '5\u00cc\u00c8\\x16': 9.847535743807982e+262},\n       coverage=None,\n       timing={'': -5.390636231967979e+16,\n        '\\x02\\U000dc1c0S\\U0010db0fN\\U000c8874b^': 1.0,\n        '{m': 1000.0,\n        '\\U000bd48e\u00e6\u00a6m\u00ed\\x81u\\x07\\x94\u00ae\u00b7\u00e5\\U0007a68dC': 1e-12,\n        '\\x08\\U0003a725': -1.074078438119972e-25,\n        '\u03a9\u2248\u00e7\u221a\u222b\u02dc\u00b5\u2264\u2265\u00f7\u00e5\u00df\u2202\u0192\u00a9\u02d9\u2206\u02da\u00ac\u2026\u00e6\u0153\u2211\u00b4\u00ae\u2020\u00a5\u00a8\u02c6\u00f8\u03c0\u201c\u2018\u00a1\u2122\u00a3\u00a2\u221e\u00a7\u00b6\u2022\u00aa\u00ba\u2013\u2260\u00b8\u02db\u00c7\u25ca\u0131\u02dc\u00c2\u00af\u02d8\u00bf\u00c5\u00cd\u00ce\u00cf\u02dd\u00d3\u00d4\\uf8ff\u00d2\u00da\u00c6\u2603\u0152\u201e\u00b4\u2030\u02c7\u00c1\u00a8\u02c6\u00d8\u220f\u201d\u2019`\u2044\u20ac\u2039\u203a\ufb01\ufb02\u2021\u00b0\u00b7\u201a\u2014\u00b1': 0.0},\n       metadata=ObservationMetadata(traceback=None,\n        reproduction_decorator=None,\n        predicates={},\n        backend={},\n        sys_argv=[],\n        os_getpid=0,\n        imported_at=0.0,\n        data_status=Status.VALID,\n        interesting_origin=InterestingOrigin(exc_type=<class 'ValueError'>, filename='/Users/tybug/Desktop/Liam/coding/hypofuzz/tests/common.py', lineno=-124, context=(), group_elems=()),\n        choice_nodes=(ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.6592881803895249},\n          was_forced=True,\n          index=None),\n         ChoiceNode(type='boolean',\n          value=False,\n          constraints={'p': 0.32541196160596725},\n          was_forced=False,\n          index=None)),\n        choice_spans=None)),\n      frozenset(),\n      True)],\n)",
        "arguments": {},
        "how_generated": "during unknown phase",
        "features": {},
        "timing": {
          "execute:test": 0.0019061670755036175,
          "overall:gc": 0.0008636658894829452,
          "generate:args": 0.00221308198524639
        },
        "metadata": {
          "traceback": null,
          "reproduction_decorator": null
        },
        "property": "tests/test_corpus.py::test_corpus_consider_coverage",
        "run_start": 287668.33045675,
        "stability": null
      }
    ]
  }
}