{"version":3,"file":"index-D-YSl9qX.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.js","../../node_modules/react/jsx-runtime.js","../../src/utils/prototypes.tsx","../../node_modules/react/cjs/react-compiler-runtime.production.js","../../node_modules/react/compiler-runtime.js","../../src/components/Notification.tsx","../../src/context/NotificationProvider.tsx","../../src/hooks/useIsMobile.ts","../../src/components/Toggle.tsx","../../src/tyche/FilterContext.tsx","../../src/utils/tooltip.tsx","../../src/utils/utils.ts","../../src/tyche/NominalChart.tsx","../../src/components/Collapsible.tsx","../../src/tyche/TycheSection.tsx","../../src/tyche/Features.tsx","../../src/tyche/Filters.tsx","../../node_modules/highlight.js/es/languages/python.js","../../src/components/Pagination.tsx","../../src/tyche/Representation.tsx","../../src/tyche/MosaicChart.tsx","../../src/tyche/Summary.tsx","../../src/tyche/Tyche.tsx","../../src/types/dashboard.ts","../../src/types/test.ts","../../src/utils/fuzzjson.ts","../../src/context/DataProvider.tsx","../../src/Layout.tsx","../../src/components/Table.tsx","../../src/utils/api.ts","../../src/pages/CollectionStatus.tsx","../../src/pages/NotFound.tsx","../../node_modules/highlight.js/es/languages/diff.js","../../src/components/TestPatches.tsx","../../src/pages/Patches.tsx","../../src/components/graph/Axis.tsx","../../src/components/graph/DataLines.tsx","../../src/components/graph/types.ts","../../src/hooks/useSetting.ts","../../src/components/graph/quadtree.ts","../../src/components/graph/together.ts","../../src/components/graph/useScales.ts","../../src/components/graph/useZoom.ts","../../src/components/graph/CoverageGraph.tsx","../../src/components/TestStatusPill.tsx","../../src/components/Tooltip.tsx","../../src/utils/testStats.tsx","../../src/pages/Test.tsx","../../src/components/TestTable.tsx","../../src/pages/Tests.tsx","../../src/components/RangeSlider.tsx","../../src/pages/Workers.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export {}\n\ndeclare global {\n  interface Array<T> {\n    /**\n     * Similar to Array.sort, but uses a per-item key function, like python's list.sort(key=lambda x: x.id).\n     */\n    sortKey<K extends any[] | string | number>(key: (item: T) => K): T[]\n  }\n}\n\nif (!Array.prototype.sortKey) {\n  Array.prototype.sortKey = function <T, K extends any[] | string | number>(\n    key: (item: T) => K,\n  ): T[] {\n    return this.sort((a, b) => {\n      const keyA = key(a)\n      const keyB = key(b)\n\n      if (Array.isArray(keyA) && Array.isArray(keyB)) {\n        for (let i = 0; i < Math.min(keyA.length, keyB.length); i++) {\n          if (keyA[i] < keyB[i]) return -1\n          if (keyA[i] > keyB[i]) return 1\n        }\n        return 0\n      }\n      if (keyA < keyB) return -1\n      if (keyA > keyB) return 1\n      return 0\n    })\n  }\n}\n","/**\n * @license React\n * react-compiler-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals =\n  require(\"react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nexports.c = function (size) {\n  return ReactSharedInternals.H.useMemoCache(size);\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-compiler-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-compiler-runtime.development.js');\n}\n","import { faXmark } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode, useEffect, useState } from \"react\"\n\ninterface NotificationProps {\n  message: string | ReactNode\n  onDismiss: () => void\n  isVisible: boolean\n}\n\nexport function Notification({ message, onDismiss, isVisible }: NotificationProps) {\n  const [shouldRender, setShouldRender] = useState(isVisible)\n\n  useEffect(() => {\n    if (isVisible) {\n      setShouldRender(true)\n      return\n    } else {\n      // Delay unmounting to allow exit animation\n      const timer = setTimeout(() => {\n        setShouldRender(false)\n      }, 300)\n\n      return () => clearTimeout(timer)\n    }\n  }, [isVisible])\n\n  if (!shouldRender) {\n    return null\n  }\n\n  return (\n    <div\n      className={`notification ${isVisible ? \"notification--visible\" : \"notification--hidden\"}`}\n      onClick={onDismiss}\n    >\n      <div className=\"notification__content\">{message}</div>\n      <button\n        className=\"notification__close\"\n        onClick={e => {\n          e.stopPropagation()\n          onDismiss()\n        }}\n        aria-label=\"Close notification\"\n      >\n        <FontAwesomeIcon icon={faXmark} />\n      </button>\n    </div>\n  )\n}\n","import React, { createContext, ReactNode, useContext, useRef, useState } from \"react\"\nimport { Notification } from \"src/components/Notification\"\n\ninterface NotificationData {\n  id: number\n  message: ReactNode\n  duration: number | null\n}\n\ninterface NotificationContextType {\n  addNotification: (message: ReactNode, duration: number | null) => number\n  updateNotification: (id: number, message: ReactNode, duration: number | null) => void\n  dismissNotification: (id: number) => void\n}\n\nconst NotificationContext = createContext<NotificationContextType | null>(null)\n\ninterface NotificationProviderProps {\n  children: React.ReactNode\n}\n\nexport function NotificationProvider({ children }: NotificationProviderProps) {\n  const [notifications, setNotifications] = useState<NotificationData[]>([])\n  const timers = useRef<Map<number, number>>(new Map())\n  const idCounter = useRef(0)\n\n  const dismissNotification = (id: number) => {\n    clearTimeout(timers.current.get(id)!)\n    timers.current.delete(id)\n\n    setNotifications(prev => prev.filter(n => n.id !== id))\n  }\n\n  const addNotification = (message: ReactNode, duration: number | null) => {\n    const id = ++idCounter.current\n    const notification: NotificationData = { id, message, duration }\n\n    setNotifications(prev => [...prev, notification])\n\n    if (duration !== null) {\n      const timer = setTimeout(() => {\n        dismissNotification(id)\n      }, duration)\n      timers.current.set(id, timer)\n    }\n\n    return id\n  }\n\n  const updateNotification = (\n    id: number,\n    message: ReactNode,\n    duration: number | null,\n  ) => {\n    setNotifications(prev =>\n      prev.map(notification =>\n        notification.id === id ? { ...notification, message, duration } : notification,\n      ),\n    )\n\n    if (duration !== null) {\n      clearTimeout(timers.current.get(id)!)\n      const timer = setTimeout(() => {\n        dismissNotification(id)\n      }, duration)\n      timers.current.set(id, timer)\n    }\n  }\n\n  return (\n    <NotificationContext.Provider\n      value={{ addNotification, updateNotification, dismissNotification }}\n    >\n      {children}\n      <div className=\"notifications\">\n        {notifications.map((notification, index) => (\n          <div\n            key={notification.id}\n            className=\"notification-wrapper\"\n            style={{ top: `${20 + index * 80}px` }}\n          >\n            <Notification\n              message={notification.message}\n              isVisible={true}\n              onDismiss={() => dismissNotification(notification.id)}\n            />\n          </div>\n        ))}\n      </div>\n    </NotificationContext.Provider>\n  )\n}\n\nexport function useNotification() {\n  const context = useContext(NotificationContext)\n  if (!context) {\n    throw new Error(\"useNotification must be used within a NotificationProvider\")\n  }\n  return context\n}\n","import { useEffect, useState } from \"react\"\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = useState(false)\n\n  useEffect(() => {\n    function checkIfMobile() {\n      setIsMobile(window.matchMedia(\"(max-width: 768px)\").matches)\n    }\n    checkIfMobile()\n    window.addEventListener(\"resize\", checkIfMobile)\n    return () => window.removeEventListener(\"resize\", checkIfMobile)\n  }, [])\n\n  return isMobile\n}\n","import { Set } from \"immutable\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\n\ninterface Option<T> {\n  value: T\n  content: React.ReactNode\n  mobileContent?: React.ReactNode\n}\n\ninterface Props<T> {\n  value: T\n  onChange: (value: T) => void\n  options: Option<T>[]\n  disabled?: boolean\n}\n\nexport function Toggle<T>({ value, onChange, options, disabled = false }: Props<T>) {\n  const isMobile = useIsMobile()\n  // option values must be unique\n  console.assert(Set(options.map(o => o.value)).size === options.length)\n\n  return (\n    <div className={`toggle ${disabled ? \"toggle--disabled\" : \"\"}`}>\n      {options.map(option => (\n        <button\n          key={String(option.value)}\n          className={`toggle__button${value === option.value ? \" toggle__button--active\" : \"\"} ${disabled ? \"toggle__button--disabled\" : \"\"}`}\n          onClick={() => {\n            if (disabled) {\n              return\n            }\n            if (options.length == 2 && value === option.value) {\n              const otherValue = options.find(o => o.value !== option.value)!.value\n              onChange(otherValue)\n            } else {\n              onChange(option.value)\n            }\n          }}\n        >\n          {isMobile ? (option.mobileContent ?? option.content) : option.content}\n        </button>\n      ))}\n    </div>\n  )\n}\n","import { createContext, ReactNode, useContext, useState } from \"react\"\nimport { Observation } from \"src/types/dashboard\"\n\nexport type ObservationCategory = \"covering\" | \"rolling\"\n\nexport class Filter {\n  createdAt: number\n\n  constructor(\n    // display value for the left half (key) of a \"current filters\" tag\n    public readonly name: string,\n    // display value for the right half (value) of a \"current filters\" tag\n    public readonly valueName: string,\n    public readonly predicate: (observation: Observation) => boolean,\n    public readonly key: string,\n    public readonly extraData?: any,\n  ) {\n    this.createdAt = Date.now()\n  }\n}\n\ntype Filters = Map<string, Filter[]>\n\ninterface FilterContextType {\n  filters: Filters\n  setFilters: (filters: Filters) => void\n  removeFilter: (key: string) => void\n  observationCategory: ObservationCategory\n  setObservationCategory: (observationCategory: ObservationCategory) => void\n}\n\nconst FilterContext = createContext<FilterContextType | undefined>(undefined)\n\nexport function FilterProvider({ children }: { children: ReactNode }) {\n  const [filtersByObsType, setFiltersByKey] = useState<\n    Map<ObservationCategory, Filters>\n  >(\n    new Map([\n      [\"covering\", new Map()],\n      [\"rolling\", new Map()],\n    ]),\n  )\n  const [observationCategory, setObservationCategory] =\n    useState<ObservationCategory>(\"covering\")\n\n  const filters =\n    filtersByObsType.get(observationCategory) || new Map<string, Filter[]>()\n  const setFilters = (newFilters: Filters) => {\n    setFiltersByKey(prev => {\n      const newMap = new Map(prev)\n      newMap.set(observationCategory, newFilters)\n      return newMap\n    })\n  }\n\n  const removeFilter = (key: string) => {\n    const newFilters = new Map(filters)\n    const keyFilters = newFilters.get(key) || []\n    const filteredFilters = keyFilters.filter(f => f.key !== key)\n\n    if (filteredFilters.length === 0) {\n      newFilters.delete(key)\n    } else {\n      newFilters.set(key, filteredFilters)\n    }\n\n    setFilters(newFilters)\n  }\n\n  const value: FilterContextType = {\n    filters,\n    setFilters,\n    removeFilter,\n    observationCategory,\n    setObservationCategory,\n  }\n\n  return <FilterContext.Provider value={value}>{children}</FilterContext.Provider>\n}\n\nexport function useFilters() {\n  const context = useContext(FilterContext)\n  if (context === undefined) {\n    throw new Error(\"useFilters must be used within a FilterProvider\")\n  }\n  return context\n}\n","import React, { createContext, useContext, useEffect, useRef, useState } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { useLocation } from \"react-router-dom\"\n\ninterface TooltipState {\n  visible: boolean\n  content: React.ReactNode\n  x: number\n  y: number\n  // the concept of a \"tooltip owner\" simplifies investigation if anything goes wrong. For instance,\n  // I got into an infinite render loop when multiple components used tooltips. This ended up being\n  // because of an over-aggressive useEffect for cleanup, but I at first thought it was due to conflicting\n  // components.\n  //\n  // And also the concept of an owner probably genuinely removes a class of bugs - but that's not why I\n  // added it initially.\n  owner: string | null\n}\n\ninterface TooltipContextType {\n  showTooltip: (content: React.ReactNode, x: number, y: number, owner: string) => void\n  hideTooltip: (owner: string) => void\n  moveTooltip: (x: number, y: number, owner: string) => void\n  visible: boolean\n}\n\nconst TooltipContext = createContext<TooltipContextType | null>(null)\nconst TOOLTIP_OFFSET = 10\nconst TOOLTIP_TOP_OFFSET = 25\nconst SCREEN_MARGIN = 10\n\nfunction TooltipPortal({ state }: { state: TooltipState }) {\n  const tooltipRef = useRef<HTMLDivElement>(null)\n  // place offscreen initially until we compute its position\n  const [position, setPosition] = useState({ left: -9999, top: -9999 })\n\n  useEffect(() => {\n    if (!state.visible || !tooltipRef.current) {\n      return\n    }\n    // prevent tooltip from going out of bounds. flip to the left side if we're going to go\n    // off the screen on the right. etc.\n    const tooltipRect = tooltipRef.current.getBoundingClientRect()\n    const tooltipWidth = tooltipRect.width\n    const tooltipHeight = tooltipRect.height\n\n    let left = state.x + TOOLTIP_OFFSET\n    let top = state.y - TOOLTIP_TOP_OFFSET\n\n    const rightEdge = left + tooltipWidth\n    if (rightEdge > window.innerWidth - SCREEN_MARGIN) {\n      left = state.x - tooltipWidth - TOOLTIP_OFFSET\n\n      if (left < SCREEN_MARGIN) {\n        left = SCREEN_MARGIN\n      }\n    }\n\n    if (left < SCREEN_MARGIN) {\n      left = SCREEN_MARGIN\n    }\n\n    if (top < SCREEN_MARGIN) {\n      top = SCREEN_MARGIN\n    }\n\n    const bottomEdge = top + tooltipHeight\n    if (bottomEdge > window.innerHeight - SCREEN_MARGIN) {\n      top = state.y - tooltipHeight - TOOLTIP_OFFSET\n\n      if (top < SCREEN_MARGIN) {\n        top = SCREEN_MARGIN\n      }\n    }\n\n    setPosition({ left, top })\n  }, [state.x, state.y, state.visible])\n\n  if (!state.visible) {\n    return null\n  }\n\n  return createPortal(\n    <div\n      ref={tooltipRef}\n      className=\"cursor-tooltip\"\n      style={{\n        position: \"fixed\",\n        left: `${position.left}px`,\n        top: `${position.top}px`,\n        display: \"block\",\n        pointerEvents: \"none\", // prevent tooltip from interfering with mouse events\n        zIndex: 9999,\n      }}\n    >\n      {typeof state.content === \"string\" ? (\n        <div dangerouslySetInnerHTML={{ __html: state.content }} />\n      ) : (\n        state.content\n      )}\n    </div>,\n    document.body,\n  )\n}\n\nexport function TooltipProvider({ children }: { children: React.ReactNode }) {\n  const location = useLocation()\n  const [tooltipState, setTooltipState] = useState<TooltipState>({\n    visible: false,\n    content: \"\",\n    x: 0,\n    y: 0,\n    owner: null,\n  })\n\n  // Navigation avoids firing onmouseleave events, leaving dangling tooltips.\n  // Hide any tooltips when navigating to a new page.\n  useEffect(() => {\n    setTooltipState(prev => ({\n      ...prev,\n      visible: false,\n      owner: null,\n    }))\n  }, [location.pathname])\n\n  const showTooltip = (\n    content: React.ReactNode,\n    x: number,\n    y: number,\n    owner: string,\n  ) => {\n    setTooltipState({\n      visible: true,\n      content,\n      x,\n      y,\n      owner,\n    })\n  }\n\n  const hideTooltip = (owner: string) => {\n    setTooltipState(prev => {\n      if (prev.owner === owner) {\n        return {\n          ...prev,\n          visible: false,\n          owner: null,\n        }\n      }\n      return prev\n    })\n  }\n\n  const moveTooltip = (x: number, y: number, owner: string) => {\n    setTooltipState(prev => {\n      if (prev.visible && prev.owner === owner && (prev.x !== x || prev.y !== y)) {\n        return {\n          ...prev,\n          x,\n          y,\n        }\n      }\n      return prev\n    })\n  }\n\n  const contextValue: TooltipContextType = {\n    showTooltip,\n    hideTooltip,\n    moveTooltip,\n    visible: tooltipState.visible,\n  }\n\n  return (\n    <TooltipContext.Provider value={contextValue}>\n      {children}\n      <TooltipPortal state={tooltipState} />\n    </TooltipContext.Provider>\n  )\n}\n\nexport function useTooltip() {\n  const context = useContext(TooltipContext)\n  if (!context) {\n    throw new Error(\"useTooltip must be used within a TooltipProvider\")\n  }\n  return context\n}\n","import hljs from \"highlight.js/lib/core\"\n\n// a small taste of home in this wild land\nexport function sum(values: Iterable<number>, start: number = 0): number {\n  return Array.from(values).reduce((total, val) => total + val, start)\n}\n\nexport function reHighlight(\n  containerRef: React.RefObject<HTMLElement | null>,\n  force: boolean = false,\n) {\n  if (!containerRef.current) {\n    return\n  }\n\n  if (force) {\n    containerRef.current.querySelectorAll(\"code\").forEach(element => {\n      element.removeAttribute(\"data-highlighted\")\n    })\n  }\n\n  containerRef.current\n    .querySelectorAll(\"code:not([data-highlighted='yes'])\")\n    .forEach(element => {\n      hljs.highlightElement(element as HTMLElement)\n    })\n}\n\nexport function max<T>(array: T[], key: (value: T) => number): T | null\nexport function max(array: number[]): number | null\nexport function max<T>(\n  array: T[] | number[],\n  key?: (value: T) => number,\n): T | number | null {\n  if (key) {\n    let maxElement: T | null = null\n    let maxValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const element = array[i] as T\n      const value = key(element)\n\n      if (value != null && (maxValue === null || value > maxValue)) {\n        maxValue = value\n        maxElement = element\n      }\n    }\n\n    return maxElement\n  } else {\n    let maxValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i] as number\n\n      if (value != null && (maxValue === null || value > maxValue)) {\n        maxValue = value\n      }\n    }\n\n    return maxValue\n  }\n}\n\nexport function min<T>(array: T[], key: (value: T) => number): T | null\nexport function min(array: number[]): number | null\nexport function min<T>(\n  array: T[] | number[],\n  key?: (value: T) => number,\n): T | number | null {\n  if (key) {\n    let minElement: T | null = null\n    let minValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const element = array[i] as T\n      const value = key(element)\n\n      if (value != null && (minValue === null || value < minValue)) {\n        minValue = value\n        minElement = element\n      }\n    }\n\n    return minElement\n  } else {\n    let minValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i] as number\n\n      if (value != null && (minValue === null || value < minValue)) {\n        minValue = value\n      }\n    }\n\n    return minValue\n  }\n}\n\nexport function mapsEqual(m1: Map<any, any>, m2: Map<any, any>): boolean {\n  return (\n    m1.size === m2.size &&\n    Array.from(m1.keys()).every(key => m1.get(key) === m2.get(key))\n  )\n}\n\nexport function setsEqual(s1: Set<any>, s2: Set<any>): boolean {\n  return s1.size === s2.size && Array.from(s1).every(key => s2.has(key))\n}\n\n// https://github.com/d3/d3-array/blob/be0ae0d2b36ab91b833294ad2cfc5d5905acbd0f/src/bisector.js#L22\nexport function bisectLeft(arr: any[], x: number, key?: (x: any) => number): number {\n  let low = 0\n  let high = arr.length\n  while (low < high) {\n    const mid = (low + high) >>> 1\n    if (key ? key(arr[mid]) < x : arr[mid] < x) {\n      low = mid + 1\n    } else {\n      high = mid\n    }\n  }\n  return low\n}\n\nexport function bisectRight(arr: any[], x: number, key?: (x: any) => number): number {\n  let low = 0\n  let high = arr.length\n  while (low < high) {\n    const mid = (low + high) >>> 1\n    if (key ? key(arr[mid]) <= x : arr[mid] <= x) {\n      low = mid + 1\n    } else {\n      high = mid\n    }\n  }\n  return low\n}\n\n// Dedicated container for text measurement - created once and reused\nlet measureContainer: HTMLElement | null = null\n\nfunction getMeasureContainer(): HTMLElement {\n  if (!measureContainer) {\n    measureContainer = document.createElement(\"div\")\n    measureContainer.style.cssText = `\n      position: absolute;\n      visibility: hidden;\n      white-space: nowrap;\n      top: -9999px;\n      left: -9999px;\n      pointer-events: none;\n      z-index: -1;\n    `\n    document.body.appendChild(measureContainer)\n  }\n  return measureContainer\n}\n\nexport function measureText(\n  text: string,\n  className: string = \"\",\n): { width: number; height: number } {\n  const container = getMeasureContainer()\n\n  // reset to passed values\n  container.className = className\n  container.textContent = text\n\n  const rect = container.getBoundingClientRect()\n  return { width: rect.width, height: rect.height }\n}\n\nexport function navigateOnClick(\n  event: MouseEvent | React.MouseEvent,\n  url: string,\n  navigate: (path: string) => void,\n): void {\n  // support cmd, ctrl, and middle mouse click to open in a new tab\n  if (event.metaKey || event.ctrlKey || event.button === 1) {\n    // ideally react router would have a utility to resolve a path to the\n    // url that the router would navgiate to for that path. useHref does the\n    // trick, but that's a hook, which restricts where it can be used.\n    //\n    // It's not worth spending more time trying to figure this out when hardcoding\n    // works well.\n    const usingHashRouter = import.meta.env.VITE_ROUTER_TYPE === \"hash\"\n    const location = window.location\n    const resolvedUrl = usingHashRouter\n      ? `${location.origin}${location.pathname}#${url}`\n      : `${location.origin}${url}`\n\n    window.open(resolvedUrl, \"_blank\")\n  } else {\n    navigate(url)\n  }\n}\n\nexport function readableNodeid(nodeid: string): string {\n  return nodeid.split(\"::\").pop() || nodeid\n}\n\nexport function commonPrefix(strings: string[], delimiter: string = \"/\"): string {\n  if (!strings || strings.length < 2) {\n    return \"\"\n  }\n\n  const segments = strings.map(s => s.split(delimiter))\n  const minLen = Math.min(...segments.map(s => s.length))\n\n  const prefix: string[] = []\n  for (let i = 0; i < minLen; i++) {\n    const seg = segments[0][i]\n    const allMatch = segments.every(parts => parts[i] === seg)\n    if (!allMatch) {\n      break\n    }\n    prefix.push(seg)\n  }\n\n  if (prefix.length === 0) {\n    return \"\"\n  }\n\n  const joined = prefix.join(delimiter)\n  const withDelim = joined ? joined + delimiter : \"\"\n  if (withDelim && strings.every(s => s.startsWith(withDelim))) {\n    return withDelim\n  }\n  return \"\"\n}\n","import { faGear } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { axisBottom as d3_axisBottom, axisLeft as d3_axisLeft } from \"d3-axis\"\nimport {\n  scaleBand as d3_scaleBand,\n  scaleLinear as d3_scaleLinear,\n  scaleOrdinal as d3_scaleOrdinal,\n} from \"d3-scale\"\nimport { select as d3_select } from \"d3-selection\"\nimport { Set } from \"immutable\"\nimport { useEffect, useRef } from \"react\"\nimport { Filter, useFilters } from \"src/tyche/FilterContext\"\nimport { TYCHE_COLOR } from \"src/tyche/Tyche\"\nimport { NOT_PRESENT_STRING, PRESENT_STRING } from \"src/tyche/Tyche\"\nimport { Observation } from \"src/types/dashboard\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { max, sum } from \"src/utils/utils\"\n\nconst d3 = {\n  select: d3_select,\n  scaleLinear: d3_scaleLinear,\n  scaleOrdinal: d3_scaleOrdinal,\n  scaleBand: d3_scaleBand,\n  axisBottom: d3_axisBottom,\n  axisLeft: d3_axisLeft,\n}\n\nexport abstract class Feature {\n  abstract isSystem: boolean\n\n  constructor(\n    public key: string,\n    public name: string,\n  ) {}\n\n  getValue(observation: Observation): any {\n    return observation.features.get(this.name)\n  }\n}\n\nexport class UserFeature extends Feature {\n  isSystem = false\n}\n\nexport class SystemFeature extends Feature {\n  isSystem = true\n\n  constructor(\n    public override key: string,\n    public override name: string,\n    public value: (observation: Observation) => any,\n  ) {\n    super(key, name)\n  }\n\n  override getValue(observation: Observation): any {\n    return this.value(observation)\n  }\n}\n\ntype NominalChartProps = {\n  feature: Feature\n  observations: { raw: Observation[]; filtered: Observation[] }\n}\n\nconst HORIZONTAL_BAR_FEATURE_CUTOFF = 5\nconst SELECTION_STROKE_WIDTH = 2.5\n\nexport function NominalChart({ feature, observations }: NominalChartProps) {\n  const parentRef = useRef<HTMLDivElement>(null)\n  const svgRef = useRef<SVGSVGElement>(null)\n  const { filters, setFilters } = useFilters()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n\n  function getSelectedValues() {\n    const nominalFilters = filters.get(feature.key) || []\n    if (nominalFilters.length === 0) {\n      return Set<string>()\n    }\n\n    console.assert(nominalFilters.length === 1)\n    const filter = nominalFilters[0]\n    return Set(filter.extraData.selectedValues)\n  }\n\n  const selectedValues = getSelectedValues()\n  const filteredObservations = {\n    raw: observations.raw.filter(obs => obs.status !== \"gave_up\"),\n    filtered: observations.filtered.filter(obs => obs.status !== \"gave_up\"),\n  }\n\n  const onValueClick = (value: string) => {\n    let newSelection = Set<string>()\n\n    // If clicking the same value that's already selected alone, deselect it\n    if (selectedValues.equals(Set([value]))) {\n      newSelection = Set()\n    } else {\n      // Otherwise, select just this value\n      newSelection = Set([value])\n    }\n\n    let valueName\n    if (newSelection.size === 1) {\n      valueName = newSelection.first()!\n    } else {\n      valueName = newSelection.map(value => `${value}`).join(\" or \")\n    }\n\n    const nominalFilters = []\n    if (newSelection.size > 0) {\n      nominalFilters.push(\n        new Filter(\n          feature.name,\n          valueName,\n          (obs: Observation) => {\n            return newSelection.some(value => {\n              return value === feature.getValue(obs)\n            })\n          },\n          `nominal-${feature.key}`,\n          {\n            selectedValues: newSelection,\n          },\n        ),\n      )\n    }\n\n    const newFilters = new Map(filters)\n    newFilters.set(feature.key, nominalFilters)\n    setFilters(newFilters)\n  }\n\n  useEffect(() => {\n    if (filteredObservations.filtered.length == 0) {\n      return\n    }\n\n    const distinctRawValues = Set<string>(\n      filteredObservations.raw.map(obs => feature.getValue(obs)),\n    )\n    // value: count\n    let data = new Map<string, number>()\n\n    for (const observation of filteredObservations.filtered) {\n      const value = feature.getValue(observation)\n      data.set(value, (data.get(value) || 0) + 1)\n    }\n    const total = sum(Array.from(data.values()))\n\n    data = new Map(\n      [...data.entries()].sortKey(([value, _count]) => {\n        if (value === PRESENT_STRING) return 0\n        if (value === NOT_PRESENT_STRING) return 1\n        return value\n      }),\n    )\n\n    d3.select(svgRef.current).selectAll(\"*\").remove()\n\n    const width = parentRef.current!.clientWidth\n    const height = distinctRawValues.size < HORIZONTAL_BAR_FEATURE_CUTOFF ? 85 : 170\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n\n    const showTooltipHandler = function (event: MouseEvent, d: [string, number]) {\n      const [label, count] = d\n      showTooltip(\n        `${feature.name}<br>${label}: ${count}`,\n        event.clientX,\n        event.clientY,\n        \"tyche-nominal\",\n      )\n    }\n\n    // use a horizontally-stacked bar chart for 1-4 different feature labels,\n    // and a standard histogram otherwise.\n    //\n    // use the number of distinct values in the unfiltered observations, so we\n    // don't change up the display type on the user when they're drilling down.\n    if (distinctRawValues.size < HORIZONTAL_BAR_FEATURE_CUTOFF) {\n      const margin = { top: 0, right: 15, bottom: 20, left: 10 }\n      const innerWidth = width - margin.left - margin.right\n      const innerHeight = height - margin.top - margin.bottom\n\n      const x = d3.scaleLinear().domain([0, 1]).range([0, innerWidth])\n\n      let colorScale: (feature: string) => string\n      if (data.has(PRESENT_STRING) || data.has(NOT_PRESENT_STRING)) {\n        colorScale = (feature: string) => {\n          if (feature === PRESENT_STRING) return TYCHE_COLOR.SUCCESS\n          if (feature === NOT_PRESENT_STRING) return TYCHE_COLOR.ERROR\n          return TYCHE_COLOR.PRIMARY\n        }\n      } else {\n        colorScale = d3\n          .scaleOrdinal<string>()\n          // use raw values so the coloring doesn't change as we drill down\n          .domain(distinctRawValues)\n          .range([\n            TYCHE_COLOR.PRIMARY,\n            TYCHE_COLOR.ACCENT,\n            TYCHE_COLOR.ACCENT2,\n            TYCHE_COLOR.ACCENT3,\n            TYCHE_COLOR.ACCENT4,\n          ])\n      }\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n      let xAccumulator = 0\n      const barHeight = innerHeight - margin.bottom\n\n      data.forEach((count, value) => {\n        const barWidth = (count / total) * innerWidth\n        const isSelected = selectedValues.has(value)\n\n        // outer rect\n        g.append(\"rect\")\n          .attr(\"x\", xAccumulator)\n          .attr(\"y\", 0)\n          .attr(\"width\", barWidth)\n          .attr(\"height\", barHeight)\n          .attr(\"fill\", colorScale(value))\n          .style(\"cursor\", \"pointer\")\n          .on(\"click\", () => onValueClick(value))\n          .on(\"mouseover\", event => {\n            showTooltipHandler(event, [value, count])\n          })\n          .on(\"mousemove\", event =>\n            moveTooltip(event.clientX, event.clientY, \"tyche-nominal\"),\n          )\n          .on(\"mouseleave\", () => hideTooltip(\"tyche-nominal\"))\n\n        // inner rect (for inset white border when selected)\n        if (isSelected) {\n          g.append(\"rect\")\n            .attr(\"x\", xAccumulator + SELECTION_STROKE_WIDTH)\n            .attr(\"y\", SELECTION_STROKE_WIDTH)\n            .attr(\"width\", barWidth - 2 * SELECTION_STROKE_WIDTH)\n            .attr(\"height\", barHeight - 2 * SELECTION_STROKE_WIDTH)\n            .attr(\"fill\", colorScale(value))\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-width\", SELECTION_STROKE_WIDTH)\n            .style(\"pointer-events\", \"none\") // let outer rect handle all of the clicks\n        }\n\n        g.append(\"text\")\n          .attr(\"x\", xAccumulator + barWidth / 2)\n          .attr(\"y\", barHeight / 2)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dominant-baseline\", \"central\")\n          .attr(\"fill\", \"white\")\n          .text(value)\n          .style(\"font-size\", \"14px\")\n          .style(\"font-weight\", \"bold\")\n        xAccumulator += barWidth\n      })\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0,${barHeight})`)\n        .call(d3.axisBottom(x).tickFormat(d => `${Math.round(Number(d) * 100)}%`))\n\n      g.append(\"text\")\n        .attr(\"x\", innerWidth / 2)\n        .attr(\"y\", barHeight + 35)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"% of observations\")\n        .style(\"font-size\", \"13px\")\n    } else {\n      // add some margin inset for the graph proper so the axes don't get cut off\n      const margin = { top: 5, right: 5, bottom: 30, left: 10 }\n      const innerWidth = width - margin.left - margin.right\n      const innerHeight = height - margin.top - margin.bottom\n\n      const x = d3\n        .scaleBand()\n        .domain(Array.from(data.keys()))\n        .range([0, innerWidth])\n        .padding(0.2)\n\n      const y = d3\n        .scaleLinear()\n        .domain([0, max(Array.from(data.values())) || 0])\n        .range([innerHeight, 0])\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n      g.selectAll(\".bar\")\n        .data(Array.from(data.entries()))\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", ([value, _count]) => x(value) || 0)\n        .attr(\"y\", ([_value, count]) => y(count))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", ([_value, count]) => innerHeight - y(count))\n        .attr(\"fill\", TYCHE_COLOR.PRIMARY)\n        .style(\"cursor\", \"pointer\")\n        .on(\"click\", function (event, [value, _count]) {\n          onValueClick(value)\n        })\n        .on(\"mouseover\", function (event, d) {\n          showTooltipHandler(event, d)\n        })\n        .on(\"mousemove\", event =>\n          moveTooltip(event.clientX, event.clientY, \"tyche-nominal\"),\n        )\n        .on(\"mouseleave\", () => hideTooltip(\"tyche-nominal\"))\n\n      g.selectAll(\".inner-bar\")\n        .data(\n          Array.from(data.entries()).filter(([value, _count]) =>\n            selectedValues.has(value),\n          ),\n        )\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"inner-bar\")\n        .attr(\"x\", ([value, _count]) => (x(value) || 0) + SELECTION_STROKE_WIDTH)\n        .attr(\"y\", ([_value, count]) => y(count) + SELECTION_STROKE_WIDTH)\n        .attr(\"width\", x.bandwidth() - 2 * SELECTION_STROKE_WIDTH)\n        .attr(\n          \"height\",\n          ([_value, count]) => innerHeight - y(count) - 2 * SELECTION_STROKE_WIDTH,\n        )\n        .attr(\"fill\", TYCHE_COLOR.PRIMARY)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", SELECTION_STROKE_WIDTH)\n        .style(\"pointer-events\", \"none\")\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"transform\", \"rotate(-45)\")\n        .style(\"text-anchor\", \"end\")\n\n      g.append(\"g\").call(\n        d3\n          .axisLeft(y)\n          .ticks(7)\n          .tickFormat(d => Math.round(Number(d)).toString()),\n      )\n\n      g.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -30)\n        .attr(\"x\", -innerHeight / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Count\")\n        .style(\"font-size\", \"12px\")\n    }\n  }, [\n    filteredObservations,\n    feature,\n    hideTooltip,\n    moveTooltip,\n    onValueClick,\n    selectedValues,\n    showTooltip,\n  ])\n\n  if (filteredObservations.filtered.length == 0) {\n    return null\n  }\n\n  return (\n    <div>\n      <div className=\"tyche__nominal__feature\">\n        {feature.isSystem && (\n          <span className=\"tooltip\">\n            <FontAwesomeIcon icon={faGear} className=\"tyche__nominal__feature__icon\" />\n            <span className=\"tooltip__text\">\n              This feature is generated automatically for all tests\n            </span>\n          </span>\n        )}\n        <span className=\"tyche__nominal__feature__text\">{feature.name}</span>\n      </div>\n      <div ref={parentRef} className=\"tyche__nominal__chart\">\n        <svg ref={svgRef} style={{ width: \"100%\" }}></svg>\n      </div>\n    </div>\n  )\n}\n","import { faCaretDown, faCaretRight } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode, useState } from \"react\"\n\ninterface CollapsibleProps {\n  title: ReactNode\n  children: ReactNode\n  defaultState?: \"open\" | \"closed\"\n  onStateChange?: (state: \"open\" | \"closed\") => void\n  className?: string\n  headerClass?: string\n  contentClass?: string\n}\n\nexport function Collapsible({\n  title,\n  children,\n  defaultState = \"open\",\n  onStateChange,\n  headerClass = \"\",\n  contentClass = \"\",\n}: CollapsibleProps) {\n  const [state, setState] = useState(defaultState)\n\n  const toggleState = () => {\n    const newState = state === \"open\" ? \"closed\" : \"open\"\n    setState(newState)\n    onStateChange?.(newState)\n  }\n\n  return (\n    <div>\n      <div className={`collapsible__header ${headerClass}`} onClick={toggleState}>\n        <span className=\"collapsible__toggle\">\n          {state === \"open\" ? (\n            <FontAwesomeIcon icon={faCaretDown} />\n          ) : (\n            <FontAwesomeIcon icon={faCaretRight} />\n          )}\n        </span>\n        {title}\n      </div>\n\n      {state === \"open\" && <div className={`${contentClass}`}>{children}</div>}\n    </div>\n  )\n}\n","import { ReactNode } from \"react\"\nimport { Collapsible } from \"src/components/Collapsible\"\n\ninterface TycheSectionProps {\n  title: string\n  children: ReactNode\n  defaultState?: \"open\" | \"closed\"\n  onStateChange?: (state: \"open\" | \"closed\") => void\n}\n\nexport function TycheSection({\n  title,\n  children,\n  defaultState = \"open\",\n  onStateChange,\n}: TycheSectionProps) {\n  return (\n    <div className=\"tyche__section\">\n      <Collapsible\n        title={title}\n        defaultState={defaultState}\n        onStateChange={onStateChange}\n        headerClass=\"tyche__section__header\"\n        contentClass=\"tyche__section__content\"\n      >\n        {children}\n      </Collapsible>\n    </div>\n  )\n}\n","import { ObservationCategory } from \"src/tyche/FilterContext\"\nimport { NominalChart, SystemFeature, UserFeature } from \"src/tyche/NominalChart\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\n// use a private name to avoid collisions with user features.\nconst STABILITY_FEATURE_KEY = \"__hypofuzz_stability\"\n\nexport function Features({\n  observations,\n  observationCategory,\n}: {\n  observations: { raw: Observation[]; filtered: Observation[] }\n  observationCategory: ObservationCategory\n}) {\n  const featureNames = new Set<string>()\n\n  observations.raw.forEach(obs => {\n    for (const key of obs.features.keys()) {\n      if (key.startsWith(\"Retried draw from\")) {\n        continue\n      }\n      featureNames.add(key)\n    }\n  })\n\n  const features = Array.from(featureNames).map(\n    feature => new UserFeature(feature, feature),\n  )\n  // we currently only add covering observations if they are stable, and don't re-check for\n  // stability after. Skip here to avoid showing a boring graph full of \"stable\" for the\n  // covering observation view.\n  //\n  // We should also enable this for covering if/when we have more interesting data to show.\n  if (observationCategory == \"rolling\") {\n    features.push(\n      new SystemFeature(\n        STABILITY_FEATURE_KEY,\n        \"Stability\",\n        observation => observation.stability ?? \"unknown\",\n      ),\n    )\n  }\n\n  if (features.length === 0) {\n    return null\n  }\n\n  // if all the nominal charts would be empty, don't show the Features header.\n  // we'll probably want to refactor this (and the entire tyche setup) to make\n  // nominal charts etc first-class classes which expose \"filtered observations\",\n  // so we can have a single source of truth for stuff like this.\n  if (!observations.filtered.some(obs => obs.status !== \"gave_up\")) {\n    return null\n  }\n\n  return (\n    <TycheSection title=\"Features\">\n      {/* sort for stable display order */}\n      {Array.from(features)\n        .sortKey(feature => feature.name)\n        .map(feature => (\n          <NominalChart feature={feature} observations={observations} />\n        ))}\n    </TycheSection>\n  )\n}\n","import { faXmark } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useFilters } from \"src/tyche/FilterContext\"\n\nexport function Filters() {\n  const { filters, removeFilter } = useFilters()\n\n  const allFilters = Array.from(filters.values())\n    .flat()\n    .sortKey(filter => filter.createdAt)\n\n  if (allFilters.length === 0) {\n    return null\n  }\n\n  return (\n    <div className=\"tyche__filters\">\n      <div className=\"tyche__filters__title\">Filters</div>\n      {allFilters.map(filter => (\n        <div key={filter.key} className=\"tyche__filters__filter\">\n          <div className=\"tyche__filters__filter__name\">\n            <div\n              className=\"tyche__filters__filter__remove\"\n              onClick={() => removeFilter(filter.key)}\n            >\n              <FontAwesomeIcon icon={faXmark} />\n            </div>\n            {filter.name}\n          </div>\n          <div className=\"tyche__filters__filter__value-name\">{filter.valueName}</div>\n        </div>\n      ))}\n    </div>\n  )\n}\n","/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        scope: 'variable.language',\n        match: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      { match: /\\bor\\b/, scope: \"keyword\" },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport { python as default };\n","import { faArrowLeftLong, faArrowRightLong } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\ninterface PaginationProps {\n  currentPage: number\n  pageCount: number\n  onPageChange: (page: number) => void\n}\n\nexport function Pagination({ currentPage, pageCount, onPageChange }: PaginationProps) {\n  console.assert(pageCount > 1)\n\n  function getPageNumbers(): (number | \"ellipsis\")[] {\n    if (pageCount <= 7) {\n      return Array.from({ length: pageCount }, (_, i) => i)\n    }\n\n    if (currentPage <= 3) {\n      return [0, 1, 2, 3, 4, \"ellipsis\", pageCount - 1]\n    }\n\n    if (currentPage >= pageCount - 4) {\n      return [\n        0,\n        \"ellipsis\",\n        pageCount - 5,\n        pageCount - 4,\n        pageCount - 3,\n        pageCount - 2,\n        pageCount - 1,\n      ]\n    }\n\n    return [\n      0,\n      \"ellipsis\",\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      \"ellipsis\",\n      pageCount - 1,\n    ]\n  }\n\n  const pageNumbers = getPageNumbers()\n\n  function handlePageClick(page: number | string) {\n    if (typeof page === \"number\" && currentPage !== page) {\n      onPageChange(page)\n    }\n  }\n\n  function handlePrevious() {\n    if (currentPage > 0) {\n      onPageChange(currentPage - 1)\n    }\n  }\n\n  function handleNext() {\n    if (currentPage < pageCount - 1) {\n      onPageChange(currentPage + 1)\n    }\n  }\n\n  return (\n    <div className=\"pagination\">\n      <div\n        className={`pagination__nav pagination__nav--left ${\n          currentPage === 0 ? \"pagination__nav--disabled\" : \"\"\n        }`}\n        onClick={handlePrevious}\n      >\n        <FontAwesomeIcon icon={faArrowLeftLong} />\n      </div>\n\n      {pageNumbers.map((page, index) => {\n        if (page === \"ellipsis\") {\n          return (\n            <div key={`ellipsis-${index}`} className=\" pagination__ellipsis\">\n              ...\n            </div>\n          )\n        }\n\n        const isCurrentPage = page === currentPage\n\n        return (\n          <div\n            key={page}\n            className={`pagination__number ${\n              isCurrentPage ? \"pagination__number--current\" : \"\"\n            }`}\n            onClick={() => handlePageClick(page)}\n          >\n            {page + 1}\n          </div>\n        )\n      })}\n\n      <div\n        className={`pagination__nav pagination__nav--right ${\n          currentPage === pageCount - 1 ? \"pagination__nav--disabled\" : \"\"\n        }`}\n        onClick={handleNext}\n      >\n        <FontAwesomeIcon icon={faArrowRightLong} />\n      </div>\n    </div>\n  )\n}\n","import \"highlight.js/styles/github.css\"\n\nimport hljs from \"highlight.js/lib/core\"\nimport python from \"highlight.js/lib/languages/python\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Pagination } from \"src/components/Pagination\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\nhljs.registerLanguage(\"python\", python)\n\ninterface Props {\n  observations: { raw: Observation[]; filtered: Observation[] }\n  observationCategory: \"covering\" | \"rolling\"\n}\n\nconst perPage = 30\n\nexport function Representation({\n  observations,\n  observationCategory: observationType,\n}: Props) {\n  const observationsDivRef = useRef<HTMLDivElement>(null)\n  const [page, setPage] = useState(0)\n\n  useEffect(() => {\n    // reset when switching from e.g. covering to rolling, since one might have fewer\n    // observations than the other.\n    //\n    // Do we want to reset to page 0 whenever `observations` changes at all? I'd prefer\n    // not to, to avoid resetting your page position whenever a rolling observation\n    // comes in, but I think you can get into an invalid page state if we don't...\n    // (e.g. a corpus observation being deleted when you're on the last page)\n    setPage(0)\n  }, [observationType])\n\n  function reHighlight() {\n    if (observationsDivRef.current) {\n      // only highlight new elements\n      observationsDivRef.current\n        .querySelectorAll(\"code:not([data-highlighted='yes'])\")\n        .forEach(element => {\n          hljs.highlightElement(element as HTMLElement)\n        })\n    }\n  }\n\n  useEffect(() => {\n    reHighlight()\n  }, [observations, page])\n\n  const rawRepresentations = new Map<string, number>()\n  observations.filtered.forEach(observation => {\n    const repr = observation.representation\n    rawRepresentations.set(repr, (rawRepresentations.get(repr) || 0) + 1)\n  })\n\n  const pageCount = Math.ceil(rawRepresentations.size / perPage)\n  const representations = Array.from(rawRepresentations.entries())\n    .sortKey(([rep, count]) => -count)\n    .slice(page * perPage, (page + 1) * perPage)\n\n  return (\n    <TycheSection\n      title=\"Test cases\"\n      defaultState=\"closed\"\n      onStateChange={state => {\n        if (state === \"open\") {\n          // wait for observationsDivRef to be set before rehighlighting\n          requestAnimationFrame(() => {\n            reHighlight()\n          })\n        }\n      }}\n    >\n      <div ref={observationsDivRef}>\n        {pageCount > 1 && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginBottom: \"12px\",\n            }}\n          >\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              onPageChange={setPage}\n            />\n          </div>\n        )}\n\n        {representations.map(([rep, count]) => (\n          // establish a new positioning context for the absolutely-positioned pill\n          <div\n            key={rep}\n            style={{ position: \"relative\" }}\n            className=\"tyche__representation__example\"\n          >\n            <pre>\n              <code className=\"language-python\">{rep}</code>\n            </pre>\n            {count > 1 && (\n              <div className=\"tyche__representation__example__count\">x {count}</div>\n            )}\n          </div>\n        ))}\n\n        {pageCount > 1 && (\n          <div\n            style={{ display: \"flex\", justifyContent: \"flex-end\", marginTop: \"12px\" }}\n          >\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              onPageChange={setPage}\n            />\n          </div>\n        )}\n      </div>\n    </TycheSection>\n  )\n}\n","import { List, Set } from \"immutable\"\nimport React from \"react\"\nimport { Filter, useFilters } from \"src/tyche/FilterContext\"\nimport { Observation } from \"src/types/dashboard\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { measureText } from \"src/utils/utils\"\n\nconst MAX_MOSAIC_WIDTH = 640\n\ntype AxisItem = [string, (observation: Observation) => boolean]\n\ninterface MosaicChartProps {\n  name: string\n  observations: { raw: Observation[]; filtered: Observation[] }\n  verticalAxis: AxisItem[]\n  horizontalAxis: AxisItem[]\n  cssStyle: (row: string, column: string) => React.CSSProperties\n}\n\ninterface Cell {\n  count: number\n  widthPercent: number\n}\n\nexport function MosaicChart({\n  name,\n  observations,\n  verticalAxis,\n  horizontalAxis,\n  cssStyle = (row, column) => ({}),\n}: MosaicChartProps) {\n  const { filters, setFilters } = useFilters()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n\n  function getSelectedCells() {\n    const mosaicFilters = filters.get(name) || []\n    if (mosaicFilters.length === 0) {\n      return Set<List<number>>()\n    }\n\n    console.assert(mosaicFilters.length === 1)\n    const filter = mosaicFilters[0]\n    return Set(filter.extraData.selectedCells)\n  }\n\n  const selectedCells = getSelectedCells()\n  const cells: Cell[][] = []\n  const rowTotals: number[] = Array(verticalAxis.length).fill(0)\n  const columnTotals: number[] = Array(horizontalAxis.length).fill(0)\n  let grandTotal = 0\n\n  for (let i = 0; i < verticalAxis.length; i++) {\n    cells[i] = []\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      cells[i][j] = { count: 0, widthPercent: 0 }\n    }\n  }\n\n  observations.filtered.forEach(observation => {\n    for (let i = 0; i < verticalAxis.length; i++) {\n      const [, verticalPredicate] = verticalAxis[i]\n\n      if (verticalPredicate(observation)) {\n        for (let j = 0; j < horizontalAxis.length; j++) {\n          const [, horizontalPredicate] = horizontalAxis[j]\n\n          if (horizontalPredicate(observation)) {\n            cells[i][j].count++\n            rowTotals[i]++\n            columnTotals[j]++\n            grandTotal++\n            // An observation can only belong to one horizontal category\n            break\n          }\n        }\n        // An observation can only belong to one vertical category\n        break\n      }\n    }\n  })\n\n  // don't show rows/columns with 0 entries\n  const visibleRows = rowTotals\n    .map((total, index) => (total > 0 ? index : null))\n    .filter(index => index !== null)\n  const visibleCols = columnTotals\n    .map((total, index) => (total > 0 ? index : null))\n    .filter(index => index !== null)\n\n  const onCellClick = (rowIndex: number | null, colIndex: number | null) => {\n    let newSelection = Set<List<number>>()\n\n    if (rowIndex !== null && colIndex !== null) {\n      const cell = List([rowIndex, colIndex])\n      // if this cell is already selected and it's the only selection, deselect it\n      if (selectedCells.equals(Set([cell]))) {\n        newSelection = Set()\n      } else {\n        newSelection = Set([cell])\n      }\n    } else if (rowIndex !== null) {\n      console.assert(colIndex === null)\n      // select all cells in this row\n      visibleCols.forEach(colIdx => {\n        if (cells[rowIndex][colIdx].count > 0) {\n          newSelection = newSelection.add(List([rowIndex, colIdx]))\n        }\n      })\n    } else if (colIndex !== null) {\n      console.assert(rowIndex === null)\n      // select all cells in this column\n      visibleRows.forEach(rowIdx => {\n        if (cells[rowIdx][colIndex].count > 0) {\n          newSelection = newSelection.add(List([rowIdx, colIndex]))\n        }\n      })\n    }\n\n    function filterName(): string {\n      if (newSelection.size === 0) {\n        return \"\"\n      }\n\n      let remainingCells = newSelection\n      const canonicalNames: string[] = []\n\n      const axes = [\n        ...visibleRows.map(rowIndex => ({\n          name: verticalAxis[rowIndex][0],\n          cells: visibleCols\n            .filter(colIndex => cells[rowIndex][colIndex].count > 0)\n            .map(colIndex => List([rowIndex, colIndex])),\n        })),\n        ...visibleCols.map(colIndex => ({\n          name: horizontalAxis[colIndex][0],\n          cells: visibleRows\n            .filter(rowIndex => cells[rowIndex][colIndex].count > 0)\n            .map(rowIndex => List([rowIndex, colIndex])),\n        })),\n      ]\n\n      for (const axis of axes) {\n        if (\n          axis.cells.length > 0 &&\n          axis.cells.every(cell => remainingCells.has(cell))\n        ) {\n          canonicalNames.push(axis.name)\n          remainingCells = remainingCells.subtract(Set(axis.cells))\n        }\n      }\n\n      while (remainingCells.size > 0) {\n        const cell = remainingCells.first()!\n        const [row, col] = cell.toArray()\n        canonicalNames.push(`${verticalAxis[row][0]}+${horizontalAxis[col][0]}`)\n        remainingCells = remainingCells.delete(cell)\n      }\n      console.assert(remainingCells.size == 0)\n\n      return canonicalNames.join(\" or \")\n    }\n\n    const mosaicFilters = []\n    if (newSelection.size > 0) {\n      mosaicFilters.push(\n        new Filter(\n          name,\n          filterName(),\n          (obs: Observation) => {\n            return newSelection.some(cell => {\n              const [row, col] = cell.toArray()\n              const verticalPredicate = verticalAxis[row][1]\n              const horizontalPredicate = horizontalAxis[col][1]\n              return verticalPredicate(obs) && horizontalPredicate(obs)\n            })\n          },\n          name,\n          { selectedCells: newSelection },\n        ),\n      )\n    }\n\n    const newFilters = new Map(filters)\n    newFilters.set(name, mosaicFilters)\n    setFilters(newFilters)\n  }\n\n  const rowHeaderWidth = Math.max(\n    ...visibleRows.map(\n      rowIndex =>\n        measureText(verticalAxis[rowIndex][0], \"tyche__mosaic__row-header\").width,\n    ),\n  )\n\n  const columnHeaderHeight = Math.max(\n    ...visibleCols.map(\n      colIndex =>\n        measureText(horizontalAxis[colIndex][0], \"tyche__mosaic__column-header\").height,\n    ),\n  )\n  const rowTotalWidth = Math.max(\n    ...visibleRows.map(\n      rowIndex =>\n        measureText(rowTotals[rowIndex].toString(), \"tyche__mosaic__row-total\").width,\n    ),\n  )\n\n  if (visibleRows.length === 0 || visibleCols.length === 0) {\n    return <div>No observations</div>\n  }\n\n  const minCellWidth = 30\n  const minCellHeight = 30\n\n  for (let i = 0; i < verticalAxis.length; i++) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      cells[i][j].widthPercent =\n        rowTotals[i] > 0 ? (cells[i][j].count / rowTotals[i]) * 100 : 0\n    }\n  }\n\n  const rowHeights = visibleRows.map(rowIndex =>\n    Math.max(\n      (rowTotals[rowIndex] / grandTotal) * 45 * visibleRows.length,\n      minCellHeight,\n    ),\n  )\n\n  const columnHeaderPositions = visibleCols.map((colIndex, i) => {\n    if (i === 0) {\n      // Left-align first column\n      return 0\n    } else if (i === visibleCols.length - 1) {\n      // Right-align last column\n      return 100\n    } else {\n      // Distribute middle columns evenly\n      return (i / (visibleCols.length - 1)) * 100\n    }\n  })\n\n  // Enforce minimum cell widths by adjusting proportions\n  const cellContainerWidth = MAX_MOSAIC_WIDTH - rowHeaderWidth - rowTotalWidth\n  visibleRows.forEach(rowIndex => {\n    const rowCells = visibleCols.map(colIndex => cells[rowIndex][colIndex])\n    const totalRowPercent = rowCells.reduce((sum, cell) => sum + cell.widthPercent, 0)\n\n    if (totalRowPercent > 0) {\n      const actualWidths = rowCells.map(\n        cell => (cell.widthPercent / 100) * cellContainerWidth,\n      )\n\n      const adjustedWidths = actualWidths.map((width, i) => {\n        const cellCount = rowCells[i].count\n        // only enforce minimum width on cells with data (empty cells will not be rendered)\n        if (cellCount > 0 && width > 0 && width < minCellWidth) {\n          return minCellWidth\n        }\n        return width\n      })\n\n      const totalAdjustedWidth = adjustedWidths.reduce((sum, width) => sum + width, 0)\n      visibleCols.forEach((colIndex, i) => {\n        cells[rowIndex][colIndex].widthPercent =\n          totalAdjustedWidth > 0 ? (adjustedWidths[i] / totalAdjustedWidth) * 100 : 0\n      })\n    }\n  })\n\n  return (\n    <div\n      className=\"tyche__mosaic__container\"\n      // constant min height so that the ui doesn't jitter when we filter down\n      style={{ maxWidth: `${MAX_MOSAIC_WIDTH}px`, minHeight: `175px` }}\n    >\n      <div\n        className=\"tyche__mosaic__column-headers\"\n        style={{\n          marginLeft: `${rowHeaderWidth}px`,\n          marginRight: `${rowTotalWidth}px`,\n          height: `${columnHeaderHeight}px`,\n        }}\n      >\n        {visibleCols.map((colIndex, i) => {\n          const isFirst = i === 0\n          const isLast = i === visibleCols.length - 1\n\n          return (\n            <div\n              key={`header-${colIndex}`}\n              className=\"tyche__mosaic__column-header\"\n              style={{\n                left: `${columnHeaderPositions[i]}%`,\n                transform: isFirst\n                  ? \"translateX(0%)\"\n                  : isLast\n                    ? \"translateX(-100%)\"\n                    : \"translateX(-50%)\",\n                textAlign: isFirst ? \"left\" : isLast ? \"right\" : \"center\",\n              }}\n              onClick={() => onCellClick(null, colIndex)}\n            >\n              {horizontalAxis[colIndex][0]}\n            </div>\n          )\n        })}\n      </div>\n\n      {visibleRows.map((rowIndex, rowDisplayIndex) => (\n        <div\n          key={`row-${rowIndex}`}\n          className=\"tyche__mosaic__row\"\n          style={{\n            height: `${rowHeights[rowDisplayIndex]}px`,\n          }}\n        >\n          <div\n            className=\"tyche__mosaic__row-header\"\n            style={{\n              width: `${rowHeaderWidth}px`,\n              cursor: \"pointer\",\n            }}\n            onClick={() => onCellClick(rowIndex, null)}\n          >\n            {verticalAxis[rowIndex][0]}\n          </div>\n\n          <div className=\"tyche__mosaic__row-cells\">\n            {visibleCols.map(colIndex => {\n              const cell = cells[rowIndex][colIndex]\n              // don't display cells with no data\n              if (cell.count === 0) {\n                return null\n              }\n\n              const isSelected = selectedCells.has(List([rowIndex, colIndex]))\n              const tooltipContent = `${verticalAxis[rowIndex][0]} and ${horizontalAxis[colIndex][0]}<br>Count: ${cell.count}`\n\n              return (\n                <div\n                  key={`cell-${rowIndex}-${colIndex}`}\n                  className={`tyche__mosaic__cell${isSelected ? \" tyche__mosaic__cell--selected\" : \"\"}`}\n                  style={{\n                    width: `${cell.widthPercent}%`,\n                    minWidth: `${minCellWidth}px`,\n                    minHeight: `${minCellHeight}px`,\n                    ...cssStyle(verticalAxis[rowIndex][0], horizontalAxis[colIndex][0]),\n                  }}\n                  onClick={() => onCellClick(rowIndex, colIndex)}\n                  onMouseEnter={e =>\n                    showTooltip(tooltipContent, e.clientX, e.clientY, \"tyche-mosaic\")\n                  }\n                  onMouseMove={e => moveTooltip(e.clientX, e.clientY, \"tyche-mosaic\")}\n                  onMouseLeave={() => hideTooltip(\"tyche-mosaic\")}\n                >\n                  <span className=\"tyche__mosaic__cell-value\">{cell.count}</span>\n                </div>\n              )\n            })}\n          </div>\n\n          <div\n            className=\"tyche__mosaic__row-total\"\n            style={{\n              width: `${rowTotalWidth}px`,\n            }}\n          >\n            {rowTotals[rowIndex]}\n          </div>\n        </div>\n      ))}\n\n      <div\n        className=\"tyche__mosaic__column-totals-row\"\n        style={{ height: `${columnHeaderHeight}px` }}\n      >\n        <div style={{ width: `${rowHeaderWidth}px` }}></div>\n        <div\n          className=\"tyche__mosaic__column-totals\"\n          style={{\n            marginRight: `${rowTotalWidth}px`,\n          }}\n        >\n          {visibleCols.map((colIndex, i) => {\n            const isFirst = i === 0\n            const isLast = i === visibleCols.length - 1\n\n            return (\n              <div\n                key={`total-${colIndex}`}\n                className=\"tyche__mosaic__column-total\"\n                style={{\n                  left: `${columnHeaderPositions[i]}%`,\n                  transform: isFirst\n                    ? \"translateX(0%)\"\n                    : isLast\n                      ? \"translateX(-100%)\"\n                      : \"translateX(-50%)\",\n                  textAlign: isFirst ? \"left\" : isLast ? \"right\" : \"center\",\n                }}\n              >\n                {columnTotals[colIndex]}\n              </div>\n            )\n          })}\n        </div>\n        <div\n          className=\"tyche__mosaic__grand-total\"\n          style={{ width: `${rowTotalWidth}px` }}\n        >\n          {grandTotal}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { MosaicChart } from \"src/tyche/MosaicChart\"\nimport { TYCHE_COLOR } from \"src/tyche/Tyche\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\nexport function Summary({\n  observations,\n}: {\n  observations: { raw: Observation[]; filtered: Observation[] }\n}) {\n  function cellStyle(row: string, column: string): React.CSSProperties {\n    const style: React.CSSProperties = {}\n\n    if (row === \"Passed\") {\n      style.backgroundColor = TYCHE_COLOR.SUCCESS\n    } else if (row === \"Invalid\") {\n      style.backgroundColor = TYCHE_COLOR.WARNING\n    } else if (row === \"Failed\") {\n      style.backgroundColor = TYCHE_COLOR.ERROR\n    }\n\n    if (column === \"Duplicate\") {\n      style.opacity = 0.7\n    }\n\n    return style\n  }\n\n  return (\n    <TycheSection title=\"Summary\">\n      <MosaicChart\n        name=\"summary\"\n        observations={observations}\n        verticalAxis={[\n          [\"Passed\", obs => obs.status === \"passed\"],\n          [\"Invalid\", obs => obs.status === \"gave_up\"],\n        ]}\n        horizontalAxis={[\n          [\"Unique\", obs => obs.isUnique ?? false],\n          [\"Duplicate\", obs => obs.isDuplicate ?? false],\n        ]}\n        cssStyle={cellStyle}\n      />\n    </TycheSection>\n  )\n}\n","import { Toggle } from \"src/components/Toggle\"\nimport { Features } from \"src/tyche/Features\"\nimport { FilterProvider, useFilters } from \"src/tyche/FilterContext\"\nimport { Filters } from \"src/tyche/Filters\"\nimport { Representation } from \"src/tyche/Representation\"\nimport { Summary } from \"src/tyche/Summary\"\nimport { Test } from \"src/types/test\"\n\nexport const PRESENT_STRING = \"Present\"\nexport const NOT_PRESENT_STRING = \"Not present\"\n\nexport enum TYCHE_COLOR {\n  // https://github.com/tyche-pbt/tyche-extension/blob/main/webview-ui/src/utilities/colors.ts\n  // plus a 10% blend of #ECEFF4 to soften them\n  PRIMARY = \"#6b8ab5\",\n  SUCCESS = \"#8ba86b\",\n  WARNING = \"#d59a7e\",\n  ERROR = \"#c77a7e\",\n  ACCENT = \"#c1a2bb\",\n  ACCENT2 = \"#9fc7c6\",\n  ACCENT3 = \"#edd39a\",\n  ACCENT4 = \"#99c7d6\",\n  ACCENT5 = \"#8faac6\",\n}\n\nfunction TycheInner({ test }: { test: Test }) {\n  const { filters, observationCategory, setObservationCategory } = useFilters()\n\n  const rawObservations =\n    observationCategory === \"rolling\"\n      ? // newest first for rolling observations\n        test.rolling_observations.sortKey(observation => -observation.run_start)\n      : test.corpus_observations\n\n  function filteredObservations() {\n    const allFilters = Array.from(filters.values()).flat()\n\n    if (allFilters.length === 0) {\n      return rawObservations\n    }\n\n    return rawObservations.filter(observation => {\n      return allFilters.every(filter => filter.predicate(observation))\n    })\n  }\n\n  const observations = {\n    raw: rawObservations,\n    filtered: filteredObservations(),\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n        <span>Observations</span>\n      </div>\n      <div\n        style={{\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\",\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"flex-start\",\n          gap: \"20px\",\n          fontSize: \"1.05rem\",\n          fontWeight: \"500\",\n        }}\n      >\n        <Toggle\n          value={observationCategory}\n          onChange={setObservationCategory}\n          options={[\n            { value: \"covering\", content: \"Covering\" },\n            { value: \"rolling\", content: \"Rolling\" },\n          ]}\n        />\n        <Filters />\n      </div>\n      {observations.raw.length > 0 ? (\n        <>\n          <Summary observations={observations} />\n          <Features\n            observations={observations}\n            observationCategory={observationCategory}\n          />\n          <Representation\n            observations={observations}\n            observationCategory={observationCategory}\n          />\n        </>\n      ) : (\n        <div className=\"tyche__section\">No observations</div>\n      )}\n    </div>\n  )\n}\n\nexport function Tyche({ test }: { test: Test }) {\n  return (\n    <FilterProvider>\n      <TycheInner test={test} />\n    </FilterProvider>\n  )\n}\n","import { sum } from \"src/utils/utils\"\n\nexport const SKIP_EXCEPTIONS = [\"Skipped\", \"SkipTest\"]\n\nexport abstract class Dataclass<T> {\n  withProperties(props: Partial<T>): T {\n    return Object.assign(Object.create(this.constructor.prototype), this, props) as T\n  }\n}\n\nexport enum FailureState {\n  SHRUNK = \"shrunk\",\n  UNSHRUNK = \"unshrunk\",\n  FIXED = \"fixed\",\n}\n\nexport class Failure extends Dataclass<Failure> {\n  constructor(\n    public state: FailureState,\n    public observation: Observation,\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): Failure {\n    return new Failure(data.state, Observation.fromJson(data.observation))\n  }\n}\n\nexport class FatalFailure extends Dataclass<FatalFailure> {\n  constructor(public traceback: string) {\n    super()\n  }\n}\n\nexport class StatusCounts extends Dataclass<StatusCounts> {\n  constructor(\n    public counts: Map<Status, number> = new Map([\n      [Status.OVERRUN, 0],\n      [Status.INVALID, 0],\n      [Status.VALID, 0],\n      [Status.INTERESTING, 0],\n    ]),\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): StatusCounts {\n    const counts = new Map<Status, number>([\n      [Status.OVERRUN, 0],\n      [Status.INVALID, 0],\n      [Status.VALID, 0],\n      [Status.INTERESTING, 0],\n    ])\n\n    for (const [status, count] of Object.entries(data)) {\n      console.assert(typeof count === \"number\")\n      counts.set(Number(status) as Status, count as number)\n    }\n    return new StatusCounts(counts)\n  }\n\n  add(statuses: StatusCounts): StatusCounts {\n    const newStatuses = new Map(this.counts)\n    for (const [status, count] of statuses.counts.entries()) {\n      newStatuses.set(status, newStatuses.get(status)! + count)\n    }\n    return new StatusCounts(newStatuses)\n  }\n\n  subtract(statuses: StatusCounts): StatusCounts {\n    const newStatusCounts = new Map(this.counts)\n    for (const [status, count] of statuses.counts.entries()) {\n      newStatusCounts.set(status, newStatusCounts.get(status)! - count)\n    }\n    return new StatusCounts(newStatusCounts)\n  }\n\n  sum(): number {\n    return sum(this.counts.values())\n  }\n}\n\nexport enum Status {\n  OVERRUN = 0,\n  INVALID = 1,\n  VALID = 2,\n  INTERESTING = 3,\n}\n\nexport enum Phase {\n  GENERATE = \"generate\",\n  REPLAY = \"replay\",\n  DISTILL = \"distill\",\n  SHRINK = \"shrink\",\n  FAILED = \"failed\",\n}\n\nexport interface WorkerIdentity {\n  uuid: string\n  operating_system: string\n  python_version: string\n  hypothesis_version: string\n  hypofuzz_version: string\n  pid: number\n  hostname: string\n  pod_name: string | null\n  pod_namespace: string | null\n  node_name: string | null\n  pod_ip: string | null\n  container_id: string | null\n  git_hash: string | null\n}\n\nexport class Report extends Dataclass<Report> {\n  public status_counts_diff: StatusCounts | null\n  public elapsed_time_diff: number | null\n  public timestamp_monotonic: number | null\n\n  constructor(\n    public elapsed_time: number,\n    public timestamp: number,\n    public status_counts: StatusCounts,\n    public behaviors: number,\n    public fingerprints: number,\n    public since_new_behavior: number | null,\n    public phase: Phase,\n    public worker_uuid: string,\n  ) {\n    super()\n    this.status_counts_diff = null\n    this.elapsed_time_diff = null\n    this.timestamp_monotonic = null\n  }\n\n  get ninputs(): number {\n    return this.status_counts.sum()\n  }\n\n  static fromJson(worker_uuid: string, data: any): Report {\n    return new Report(\n      data.elapsed_time,\n      data.timestamp,\n      StatusCounts.fromJson(data.status_counts),\n      data.behaviors,\n      data.fingerprints,\n      data.since_new_behavior,\n      data.phase,\n      worker_uuid,\n    )\n  }\n}\n\nexport enum ObservationStatus {\n  PASSED = \"passed\",\n  FAILED = \"failed\",\n  GAVE_UP = \"gave_up\",\n}\n\nexport enum Stability {\n  STABLE = \"stable\",\n  UNSTABLE = \"unstable\",\n}\n\nexport class Observation extends Dataclass<Observation> {\n  public isDuplicate: boolean | null = null\n  public isUnique: boolean | null = null\n\n  // https://hypothesis.readthedocs.io/en/latest/reference/integrations.html#test-case\n  constructor(\n    public type: string,\n    public status: ObservationStatus,\n    public status_reason: string,\n    public representation: string,\n    // arguments is a reserved keyword in javascript\n    public arguments_: Map<string, any>,\n    public how_generated: string,\n    public features: Map<string, any>,\n    public timing: Map<string, any>,\n    public metadata: Map<string, any>,\n    public property: string,\n    public run_start: number,\n    public stability: Stability | null,\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): Observation {\n    return new Observation(\n      data.type,\n      data.status,\n      data.status_reason,\n      data.representation,\n      new Map(Object.entries(data.arguments)),\n      data.how_generated,\n      new Map(Object.entries(data.features)),\n      new Map(Object.entries(data.timing)),\n      new Map(Object.entries(data.metadata)),\n      data.property,\n      Number(data.run_start),\n      data.stability,\n    )\n  }\n}\n\nexport enum TestStatus {\n  FAILED_FATALLY = 0,\n  FAILED = 1,\n  SHRINKING = 2,\n  RUNNING = 3,\n  SKIPPED_DYNAMICALLY = 4,\n  WAITING = 5,\n}\n","import {\n  Dataclass,\n  Failure,\n  FatalFailure,\n  Observation,\n  Phase,\n  Report,\n  SKIP_EXCEPTIONS,\n  StatusCounts,\n  TestStatus,\n} from \"src/types/dashboard\"\nimport { bisectRight } from \"src/utils/utils\"\n\nfunction report_with_diff(report: Report, last_worker_report: Report | null): Report {\n  const last_status_counts = last_worker_report\n    ? last_worker_report.status_counts\n    : new StatusCounts()\n  const last_elapsed_time = last_worker_report ? last_worker_report.elapsed_time : 0.0\n  const status_counts_diff = report.status_counts.subtract(last_status_counts)\n  const elapsed_time_diff = report.elapsed_time - last_elapsed_time\n  const timestamp_monotonic = last_worker_report\n    ? Math.max(\n        report.timestamp,\n        last_worker_report.timestamp_monotonic! + elapsed_time_diff,\n      )\n    : report.timestamp\n\n  console.assert(\n    Array.from(status_counts_diff.counts.values()).every(count => count >= 0),\n  )\n  console.assert(elapsed_time_diff >= 0.0)\n\n  return report.withProperties({\n    status_counts_diff: status_counts_diff,\n    elapsed_time_diff: elapsed_time_diff,\n    timestamp_monotonic: timestamp_monotonic,\n  })\n}\n\nexport class Test extends Dataclass<Test> {\n  // if it's been this long since the last report in seconds, consider the test status\n  // to be \"waiting\" instead of \"running\"\n  static WAITING_STATUS_DURATION = 120\n\n  public linear_reports: Report[]\n  private _status_counts_cumsum: Map<number, [number, StatusCounts[]]>\n  private _elapsed_time_cumsum: Map<number, [number, number[]]>\n  // when we finished receiving all data for this worker from the websocket. null if\n  // we have not finished receiving data.\n  public load_finished_at: number | null = null\n\n  constructor(\n    public database_key: string | null,\n    public nodeid: string,\n    public rolling_observations: Observation[],\n    public corpus_observations: Observation[],\n    public failures: Map<string, Failure>,\n    public fatal_failure: FatalFailure | null,\n    public reports_by_worker: Map<string, Report[]>,\n    public stability: number | null,\n  ) {\n    super()\n    this.linear_reports = []\n    // TODO we should use an actual LRUCache for memory here, like in python.\n    // https://github.com/isaacs/node-lru-cache looks like a good option\n    this._status_counts_cumsum = new Map()\n    this._elapsed_time_cumsum = new Map()\n    this.load_finished_at = null\n\n    const reports_by_worker_ = this.reports_by_worker\n    this.reports_by_worker = new Map()\n\n    // TODO: use k-way merge for performance?\n\n    // list of (worker_uuid, report) for each report, sorted by report.timestamp\n    const sorted_reports = Array.from(reports_by_worker_.entries())\n      .flatMap(([worker_uuid, reports]) => reports.map(report => [worker_uuid, report]))\n      .sortKey(([_worker_uuid, report]) => (report as Report).timestamp)\n    for (const [worker_uuid, report] of sorted_reports) {\n      this.add_report(worker_uuid as string, report as Report)\n    }\n    this._check_invariants()\n  }\n\n  static fromJson(data: any): Test {\n    return new Test(\n      data.database_key,\n      data.nodeid,\n      // observations will be updated later by another websocket event\n      [],\n      [],\n      new Map(\n        Object.entries(data.failures).map(([key, value]) => [\n          key,\n          Failure.fromJson(value),\n        ]),\n      ),\n      data.fatal_failure,\n      new Map(\n        Object.entries(data.reports_by_worker).map(([key, value]) => [\n          key,\n          (value as any[]).map(Report.fromJson),\n        ]),\n      ),\n      data.stability,\n    )\n  }\n\n  _assert_reports_ordered(reports: Report[]) {\n    for (let i = 0; i < reports.length - 1; i++) {\n      console.assert(\n        reports[i].timestamp_monotonic! <= reports[i + 1].timestamp_monotonic!,\n      )\n    }\n  }\n\n  _check_invariants() {\n    this._assert_reports_ordered(this.linear_reports)\n\n    const linear_status_counts = this.linear_status_counts(null)\n    for (let i = 0; i < linear_status_counts.length - 1; i++) {\n      console.assert(linear_status_counts[i].sum() <= linear_status_counts[i + 1].sum())\n    }\n    const linear_elapsed_time = this.linear_elapsed_time(null)\n    for (let i = 0; i < linear_elapsed_time.length - 1; i++) {\n      console.assert(linear_elapsed_time[i] <= linear_elapsed_time[i + 1])\n    }\n    console.assert(\n      linear_elapsed_time.length === linear_status_counts.length &&\n        linear_status_counts.length === this.linear_reports.length,\n    )\n\n    for (const [_worker_uuid, reports] of this.reports_by_worker.entries()) {\n      this._assert_reports_ordered(reports)\n    }\n  }\n\n  add_report(worker_uuid: string, report: Report) {\n    // This function implements Test.add_report in python. Make sure to keep the\n    // two versions in sync.\n\n    let last_report_worker: Report | null = null\n    let reports_index = 0\n    if (this.reports_by_worker.has(worker_uuid)) {\n      const reports = this.reports_by_worker.get(worker_uuid)!\n      reports_index = bisectRight(reports, report.elapsed_time, r => r.elapsed_time)\n      last_report_worker = reports_index != 0 ? reports[reports_index - 1] : null\n    }\n\n    const linear_report = report_with_diff(report, last_report_worker)\n\n    if (!this.reports_by_worker.has(worker_uuid)) {\n      this.reports_by_worker.set(worker_uuid, [])\n    }\n    this.reports_by_worker.get(worker_uuid)!.splice(reports_index, 0, linear_report)\n\n    if (\n      linear_report.phase !== Phase.REPLAY ||\n      (linear_report.behaviors >= this.behaviors &&\n        linear_report.fingerprints >= this.fingerprints)\n    ) {\n      const index = bisectRight(\n        this.linear_reports,\n        linear_report.timestamp_monotonic!,\n        r => r.timestamp_monotonic,\n      )\n      this.linear_reports.splice(index, 0, linear_report)\n      if (index != this.linear_reports.length - 1) {\n        let next_worker_report = null\n        let i_offset\n        for (\n          i_offset = 0;\n          i_offset < this.linear_reports.length - (index + 1);\n          i_offset++\n        ) {\n          const report_candidate = this.linear_reports[index + 1 + i_offset]\n          if (linear_report.worker_uuid === report_candidate.worker_uuid!) {\n            next_worker_report = report_candidate\n            break\n          }\n        }\n\n        if (next_worker_report) {\n          console.assert(\n            this.linear_reports[index + 1 + i_offset] === next_worker_report,\n          )\n          this.linear_reports[index + 1 + i_offset] = report_with_diff(\n            next_worker_report,\n            linear_report,\n          )\n        }\n\n        for (const cache of [this._status_counts_cumsum, this._elapsed_time_cumsum]) {\n          for (const [key, [start_idx, values]] of cache.entries()) {\n            if (index >= start_idx) {\n              cache.set(key, [start_idx, values.slice(0, index - start_idx) as any[]])\n            }\n          }\n        }\n      }\n    }\n  }\n\n  get normalFailures() {\n    return Array.from(this.failures.entries())\n      .filter(\n        ([origin, failure]) =>\n          !SKIP_EXCEPTIONS.some(exception => origin.includes(`${exception} at`)),\n      )\n      .map(([_, failure]) => failure)\n  }\n\n  get skipFailures() {\n    return Array.from(this.failures.entries())\n      .filter(([origin, failure]) =>\n        SKIP_EXCEPTIONS.some(exception => origin.includes(`${exception} at`)),\n      )\n      .map(([_, failure]) => failure)\n  }\n\n  get status() {\n    if (this.skipFailures.length > 0) {\n      return TestStatus.SKIPPED_DYNAMICALLY\n    }\n    if (this.fatal_failure) {\n      return TestStatus.FAILED_FATALLY\n    }\n    if (this.failures.size > 0) {\n      return TestStatus.FAILED\n    }\n    if (this.linear_reports.length === 0) {\n      return TestStatus.WAITING\n    }\n\n    const latest = this.linear_reports[this.linear_reports.length - 1]\n    const timestamp = new Date().getTime() / 1000\n    if (latest.phase == Phase.SHRINK) {\n      return TestStatus.SHRINKING\n    }\n    if (\n      (latest.ninputs === 0 ||\n        latest.timestamp < timestamp - Test.WAITING_STATUS_DURATION) &&\n      // don't show a \"waiting\" state in the preview dashboard, it doesn't look good.\n      // just pretend everything is running\n      import.meta.env.VITE_USE_DASHBOARD_STATE !== \"1\"\n    ) {\n      return TestStatus.WAITING\n    }\n    return TestStatus.RUNNING\n  }\n\n  get behaviors() {\n    if (this.linear_reports.length === 0) {\n      return 0\n    }\n    return this.linear_reports[this.linear_reports.length - 1].behaviors\n  }\n\n  get fingerprints() {\n    if (this.linear_reports.length === 0) {\n      return 0\n    }\n    return this.linear_reports[this.linear_reports.length - 1].fingerprints\n  }\n\n  get since_new_behavior() {\n    // TODO take linearization into account properly here. I think we want \"linearized\n    // inputs since branch count last increased\". Iterate backwards over linear_status_counts?\n    if (this.linear_reports.length === 0) {\n      return null\n    }\n    return this.linear_reports[this.linear_reports.length - 1].since_new_behavior\n  }\n\n  elapsed_time(since: number | null): number {\n    const elapsed_times = this.linear_elapsed_time(since)\n    if (elapsed_times.length === 0) {\n      return 0.0\n    }\n    return elapsed_times[elapsed_times.length - 1]\n  }\n\n  ninputs(since: number | null): number {\n    const counts = this.linear_status_counts(since)\n    if (counts.length === 0) {\n      return 0\n    }\n    return counts[counts.length - 1].sum()\n  }\n\n  _cumsum<T>(\n    cache: Map<number, [number, T[]]>,\n    attr: keyof Report,\n    add: (a: T, b: T) => T,\n    since: number | null,\n    initial: T,\n  ): T[] {\n    if (since === null) {\n      since = -Infinity\n    }\n\n    if (cache.has(since)) {\n      const [start_idx, cumsum] = cache.get(since)!\n      if (cumsum.length < this.linear_reports.slice(start_idx).length) {\n        // extend cumsum with any new reports\n        let running = cumsum.length > 0 ? cumsum[cumsum.length - 1] : initial\n        for (const report of this.linear_reports.slice(start_idx + cumsum.length)) {\n          running = add(running, report[attr] as T)\n          cumsum.push(running)\n        }\n        cache.set(since, [start_idx, cumsum])\n      }\n      return cumsum\n    }\n\n    const cumsum: T[] = []\n    const start_idx = bisectRight(\n      this.linear_reports,\n      since,\n      r => r.timestamp_monotonic!,\n    )\n    let running = initial\n    for (const report of this.linear_reports.slice(start_idx)) {\n      running = add(running, report[attr] as T)\n      cumsum.push(running)\n    }\n    cache.set(since, [start_idx, cumsum])\n    return cumsum\n  }\n\n  linear_status_counts(since: number | null): StatusCounts[] {\n    return this._cumsum(\n      this._status_counts_cumsum,\n      \"status_counts_diff\",\n      (a, b) => a.add(b),\n      since,\n      new StatusCounts(),\n    )\n  }\n\n  linear_elapsed_time(since: number | null): number[] {\n    return this._cumsum(\n      this._elapsed_time_cumsum,\n      \"elapsed_time_diff\",\n      (a, b) => a + b,\n      since,\n      0.0,\n    )\n  }\n}\n","// must match python's hypofuzz.utils\nconst FUZZJSON_INF = \"hypofuzz-inf-a928fa52\"\nconst FUZZJSON_NINF = \"hypofuzz-ninf-a928fa52\"\nconst FUZZJSON_NAN = \"hypofuzz-nan-a928fa52\"\n\nexport function fuzzjsonReviver(_key: string, value: any): any {\n  if (value === FUZZJSON_INF) return Infinity\n  if (value === FUZZJSON_NINF) return -Infinity\n  if (value === FUZZJSON_NAN) return NaN\n  return value\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\"\nimport { ProgressBar } from \"src/components/ProgressBar\"\nimport { useNotification } from \"src/context/NotificationProvider\"\nimport { NOT_PRESENT_STRING, PRESENT_STRING } from \"src/tyche/Tyche\"\nimport { Failure, FatalFailure, Observation, Report } from \"src/types/dashboard\"\nimport { Test } from \"src/types/test\"\nimport { fuzzjsonReviver } from \"src/utils/fuzzjson\"\n\ninterface DataContextType {\n  tests: Map<string, Test>\n  socket: WebSocket | null\n  doLoadData: (nodeid: string | null) => void\n  testsLoaded: () => boolean\n}\n\nconst DataContext = createContext<DataContextType | null>(null)\n\ninterface DataProviderProps {\n  children: React.ReactNode\n}\n\ninterface LoadingStatus {\n  // the number of tests collected by the dashboard.\n  count_tests: number | null\n  // the number of tests the dashboard has fully loaded from the database so far.\n  count_tests_loaded: number | null\n}\n\nenum DashboardEventType {\n  SET_STATUS = 1,\n  ADD_TESTS = 2,\n  ADD_REPORTS = 3,\n  ADD_OBSERVATIONS = 4,\n  ADD_FAILURES = 5,\n  SET_FAILURES = 6,\n  TEST_LOAD_FINISHED = 7,\n  SET_FATAL_FAILURE = 8,\n}\n\ntype TestsAction =\n  | {\n      type: DashboardEventType.SET_STATUS\n      loading_status: LoadingStatus\n    }\n  | {\n      type: DashboardEventType.ADD_TESTS\n      tests: {\n        database_key: string\n        nodeid: string\n        failures: Map<string, Failure>\n        fatal_failure: FatalFailure | null\n        stability: number | null\n      }[]\n    }\n  | {\n      type: DashboardEventType.ADD_REPORTS\n      nodeid: string\n      worker_uuid: string\n      reports: Report[]\n    }\n  | {\n      type: DashboardEventType.ADD_FAILURES\n      nodeid: string\n      failures: Map<string, Failure>\n    }\n  | {\n      type: DashboardEventType.SET_FAILURES\n      nodeid: string\n      failures: Map<string, Failure>\n    }\n  | {\n      type: DashboardEventType.ADD_OBSERVATIONS\n      nodeid: string\n      observation_type: \"rolling\" | \"corpus\"\n      observations: Observation[]\n    }\n  | {\n      type: DashboardEventType.TEST_LOAD_FINISHED\n      nodeids: string[]\n    }\n  | {\n      type: DashboardEventType.SET_FATAL_FAILURE\n      nodeid: string\n      fatal_failure: FatalFailure | null\n    }\nfunction prepareObservations(observations: Observation[]) {\n  // compute uniqueness\n  const reprCounts = new Map<string, number>()\n  observations.forEach(obs => {\n    reprCounts.set(obs.representation, (reprCounts.get(obs.representation) || 0) + 1)\n  })\n\n  observations.forEach(observation => {\n    const count = reprCounts.get(observation.representation)!\n    observation.isUnique = count == 1\n    observation.isDuplicate = count > 1\n  })\n\n  // We want tyche to be able to rely on observations having a value for every feature. This makes\n  // things easier for e.g. the sorting logic. To support this, first make a set of all features.\n  // Then, for each observation, if that feature is not present, insert it with value \"Not present\".\n  //\n  // Also, if an observation's feature value is ever \"\", change that to \"Present\". These come from\n  // e.g. ``event(value)``, without an associated payload.\n  const features = new Set<string>()\n  observations.forEach(obs => {\n    obs.features.forEach((_value, feature) => {\n      features.add(feature)\n    })\n  })\n\n  observations.forEach(obs => {\n    features.forEach(feature => {\n      if (!obs.features.has(feature)) {\n        obs.features.set(feature, NOT_PRESENT_STRING)\n      }\n    })\n\n    for (const [feature, value] of obs.features) {\n      if (value === \"\") {\n        obs.features.set(feature, PRESENT_STRING)\n      }\n    }\n  })\n}\n\nfunction testsReducer(\n  state: Map<string, Test>,\n  action: TestsAction,\n): Map<string, Test> {\n  const newState = new Map(state)\n\n  function getOrCreateTest(nodeid: string): Test {\n    if (newState.has(nodeid)) {\n      return newState.get(nodeid)!\n    } else {\n      const test = new Test(null, nodeid, [], [], new Map(), null, new Map(), null)\n      newState.set(test.nodeid, test)\n      return test\n    }\n  }\n\n  switch (action.type) {\n    case DashboardEventType.SET_STATUS: {\n      return state\n    }\n\n    case DashboardEventType.ADD_TESTS: {\n      const { tests } = action\n      for (const {\n        database_key,\n        nodeid,\n        failures,\n        fatal_failure,\n        stability,\n      } of tests) {\n        const test = getOrCreateTest(nodeid)\n        test.database_key = database_key\n        failures.forEach((failure, interesting_origin) => {\n          test.failures.set(interesting_origin, failure)\n        })\n        test.fatal_failure = fatal_failure\n        test.stability = stability\n      }\n      return newState\n    }\n\n    case DashboardEventType.ADD_REPORTS: {\n      const { nodeid, worker_uuid, reports } = action\n      const test = getOrCreateTest(nodeid)\n      for (const report of reports) {\n        test.add_report(worker_uuid, report)\n      }\n      return newState\n    }\n\n    case DashboardEventType.ADD_FAILURES: {\n      const { nodeid, failures } = action\n      const test = getOrCreateTest(nodeid)\n      failures.forEach((failure, interesting_origin) => {\n        test.failures.set(interesting_origin, failure)\n      })\n      return newState\n    }\n\n    case DashboardEventType.SET_FAILURES: {\n      const { nodeid, failures } = action\n      const test = getOrCreateTest(nodeid)\n      test.failures = failures\n      return newState\n    }\n\n    case DashboardEventType.ADD_OBSERVATIONS: {\n      const { nodeid, observation_type, observations } = action\n      const test = getOrCreateTest(nodeid)\n      if (observation_type === \"rolling\") {\n        // make sure to create a new ref, not mutate the existing one\n        test.rolling_observations = [...test.rolling_observations, ...observations]\n        // keep only the most recent 300 rolling observations, by run_start\n        //\n        // this is a good candidate for a proper nlogn SortedList\n        test.rolling_observations = test.rolling_observations\n          .sortKey(observation => -observation.run_start)\n          .slice(0, 300)\n        prepareObservations(test.rolling_observations)\n      } else {\n        console.assert(observation_type === \"corpus\")\n        test.corpus_observations = [...test.corpus_observations, ...observations]\n        prepareObservations(test.corpus_observations)\n      }\n      return newState\n    }\n\n    case DashboardEventType.TEST_LOAD_FINISHED: {\n      const { nodeids } = action\n      for (const nodeid of nodeids) {\n        const test = getOrCreateTest(nodeid)\n        test.load_finished_at = Date.now()\n      }\n      return newState\n    }\n\n    case DashboardEventType.SET_FATAL_FAILURE: {\n      const { nodeid, fatal_failure } = action\n      const test = getOrCreateTest(nodeid)\n      test.fatal_failure = fatal_failure\n      return newState\n    }\n\n    default:\n      throw new Error(\"non-exhaustive switch in testsReducer\")\n  }\n}\n\nexport function DataProvider({ children }: DataProviderProps) {\n  const [socket, setSocket] = useState<WebSocket | null>(null)\n  const [tests, dispatch] = useReducer(testsReducer, new Map<string, Test>())\n  const [loadData, setLoadData] = useState(false)\n  const [nodeid, setNodeid] = useState<string | null>(null)\n  const [loadingStatus, setLoadingStatus] = useState<LoadingStatus>({\n    count_tests: null,\n    count_tests_loaded: null,\n  })\n  const { addNotification, updateNotification, dismissNotification } = useNotification()\n  const statusNotification = useRef<number | null>(null)\n\n  const doLoadData = (nodeid: string | null) => {\n    setLoadData(true)\n    setNodeid(nodeid)\n  }\n\n  const testsLoaded = () => {\n    const now = Date.now()\n    return (\n      loadingStatus.count_tests_loaded !== null &&\n      loadingStatus.count_tests !== null &&\n      loadingStatus.count_tests_loaded === loadingStatus.count_tests &&\n      Array.from(tests.values()).every(test => {\n        if (test.load_finished_at === null) {\n          return false\n        }\n        return now - test.load_finished_at > 200\n      })\n    )\n  }\n\n  useEffect(\n    () => {\n      if (!loadData) {\n        return\n      }\n\n      // clear `tests` whenever we navigate to a new page. We want to avoid the following:\n      //\n      // * navigate to page A\n      //   * tests[A] = v1\n      // * navigate to page B\n      //   * tests[B] = v2\n      // * navigate back to page A\n      //   * tests[A] = v1 + v1\n      //\n      // where the data in tests[A] gets doubled because we sent multiple e.g. ADD_REPORTS events,\n      // where the backend re-sent the entire reports list under the assumption this was a fresh\n      // page load, but the frontend simply appends them and duplicates the data.\n      tests.clear()\n      setLoadingStatus({\n        count_tests: null,\n        count_tests_loaded: null,\n      })\n\n      // load data from local dashboard state json files iff the appropriate env var was set\n      // during building.\n      if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n        fetch(new URL(/* @vite-ignore */ \"dashboard_state/tests.json\", import.meta.url))\n          .then(response => response.text())\n          .then(text => JSON.parse(text, fuzzjsonReviver) as Record<string, any>)\n          .then(data => {\n            Object.entries(data).forEach(([nodeid, testData]) => {\n              dispatch({\n                type: DashboardEventType.ADD_TESTS,\n                tests: [\n                  {\n                    database_key: testData.database_key,\n                    nodeid: nodeid,\n                    failures: new Map(\n                      Object.entries(testData.failures).map(([key, value]) => [\n                        key,\n                        Failure.fromJson(value),\n                      ]),\n                    ),\n                    fatal_failure: testData.fatal_failure,\n                    stability: testData.stability,\n                  },\n                ],\n              })\n\n              for (const [worker_uuid, reports] of Object.entries(\n                testData.reports_by_worker,\n              )) {\n                dispatch({\n                  type: DashboardEventType.ADD_REPORTS,\n                  nodeid: nodeid,\n                  worker_uuid: worker_uuid,\n                  reports: (reports as any[]).map(report =>\n                    Report.fromJson(worker_uuid, report),\n                  ),\n                })\n              }\n\n              dispatch({\n                type: DashboardEventType.TEST_LOAD_FINISHED,\n                nodeids: [nodeid],\n              })\n            })\n          })\n\n        // json.parse is sync (blocks ui) and expensive. Push it to a background worker to make it async.\n        // We pay a small serialization cost; ~5% by my measurement.\n        const worker = new Worker(new URL(\"./jsonWorker.js\", import.meta.url))\n        fetch(\n          new URL(\n            /* @vite-ignore */ \"dashboard_state/observations.json\",\n            import.meta.url,\n          ),\n        )\n          .then(response => response.text())\n          .then(text => {\n            return new Promise<Record<string, { rolling: any[]; corpus: any[] }>>(\n              resolve => {\n                worker.onmessage = e => resolve(e.data)\n                worker.postMessage(text)\n              },\n            )\n          })\n          .then(data => {\n            for (const [nodeid, test] of Object.entries(data)) {\n              dispatch({\n                type: DashboardEventType.ADD_OBSERVATIONS,\n                nodeid: nodeid,\n                observation_type: \"rolling\",\n                observations: test.rolling.map(Observation.fromJson),\n              })\n              dispatch({\n                type: DashboardEventType.ADD_OBSERVATIONS,\n                nodeid: nodeid,\n                observation_type: \"corpus\",\n                observations: test.corpus.map(Observation.fromJson),\n              })\n            }\n          })\n\n        return () => worker.terminate()\n      }\n\n      const url = new URL(\n        `ws${window.location.protocol === \"https:\" ? \"s\" : \"\"}://${window.location.host}/ws`,\n      )\n      if (nodeid) {\n        url.searchParams.set(\"nodeid\", nodeid)\n      }\n\n      const ws = new WebSocket(url)\n\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data, fuzzjsonReviver)\n        const type = Number(data.type)\n        const count_tests = Number(data.count_tests)\n        const count_tests_loaded = Number(data.count_tests_loaded)\n\n        switch (type) {\n          case DashboardEventType.SET_STATUS: {\n            const loading_status = {\n              count_tests: count_tests,\n              count_tests_loaded: count_tests_loaded,\n            }\n            setLoadingStatus(loading_status)\n\n            dispatch({\n              type: DashboardEventType.SET_STATUS,\n              loading_status: loading_status,\n            })\n\n            if (count_tests_loaded === count_tests) {\n              if (statusNotification.current !== null) {\n                dismissNotification(statusNotification.current)\n                statusNotification.current = null\n              }\n              break\n            }\n\n            const progressContent = React.createElement(ProgressBar, {\n              current: count_tests_loaded,\n              total: count_tests,\n              message: `Dashboard is still starting up (${count_tests_loaded}/${count_tests} tests loaded)`,\n            })\n\n            if (!statusNotification.current) {\n              statusNotification.current = addNotification(progressContent, null)\n            } else {\n              updateNotification(statusNotification.current, progressContent, null)\n            }\n\n            break\n          }\n\n          case DashboardEventType.ADD_TESTS: {\n            dispatch({\n              type: DashboardEventType.ADD_TESTS,\n              tests: data.tests.map((test: any) => ({\n                database_key: test.database_key,\n                nodeid: test.nodeid,\n                failures: new Map(\n                  Object.entries(test.failures).map(([key, value]) => [\n                    key,\n                    Failure.fromJson(value),\n                  ]),\n                ),\n                fatal_failure: test.fatal_failure,\n                stability: test.stability,\n              })),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_REPORTS: {\n            dispatch({\n              type: DashboardEventType.ADD_REPORTS,\n              nodeid: data.nodeid,\n              worker_uuid: data.worker_uuid,\n              reports: (data.reports as any[]).map(report =>\n                Report.fromJson(data.worker_uuid, report),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_OBSERVATIONS: {\n            dispatch({\n              type: DashboardEventType.ADD_OBSERVATIONS,\n              nodeid: data.nodeid,\n              observation_type: data.observation_type,\n              observations: data.observations.map(Observation.fromJson),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_FAILURES: {\n            dispatch({\n              type: DashboardEventType.ADD_FAILURES,\n              nodeid: data.nodeid,\n              failures: new Map(\n                Object.entries(data.failures).map(([key, value]) => [\n                  key,\n                  Failure.fromJson(value),\n                ]),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.SET_FAILURES: {\n            dispatch({\n              type: DashboardEventType.SET_FAILURES,\n              nodeid: data.nodeid,\n              failures: new Map(\n                Object.entries(data.failures).map(([key, value]) => [\n                  key,\n                  Failure.fromJson(value),\n                ]),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.TEST_LOAD_FINISHED: {\n            dispatch({\n              type: DashboardEventType.TEST_LOAD_FINISHED,\n              nodeids: data.nodeids,\n            })\n            break\n          }\n\n          case DashboardEventType.SET_FATAL_FAILURE: {\n            dispatch({\n              type: DashboardEventType.SET_FATAL_FAILURE,\n              nodeid: data.nodeid,\n              fatal_failure: data.fatal_failure,\n            })\n            break\n          }\n\n          default:\n            throw new Error(`Unknown event type: ${data.type}`)\n        }\n      }\n\n      setSocket(ws)\n\n      return () => {\n        ws.close()\n      }\n      // a single DataProvider is created for the entire lifetime of a tab. We want to re-load\n      // the provided data whenever we change the nodeid (e.g. going from overview to a specific\n      // test page) or we go from a page which doesn't want data (because it didn't call useData)\n      // to one that does.\n    },\n    // calls tests.clear, but dont want an infinite loop dependency\n\n    [nodeid, loadData, addNotification, dismissNotification, updateNotification],\n  )\n\n  return (\n    <DataContext.Provider value={{ tests, socket, doLoadData, testsLoaded }}>\n      {children}\n    </DataContext.Provider>\n  )\n}\n\nexport function useData(nodeid: string | null = null) {\n  const context = useContext(DataContext)\n  if (!context) {\n    throw new Error(\"useData must be used within a DataProvider\")\n  }\n\n  useEffect(() => {\n    context.doLoadData(nodeid)\n  }, [nodeid, context])\n\n  return context\n}\n","import {\n  faBars,\n  faBook,\n  faBookOpen,\n  faBox,\n  faCode,\n  faCodeCompare,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link, Outlet, useLocation } from \"react-router-dom\"\n\nfunction SidebarLink({\n  to,\n  icon,\n  children,\n  isActive,\n}: {\n  to: string\n  icon: React.ReactNode\n  children: React.ReactNode\n  isActive: (pathname: string) => boolean\n}) {\n  const location = useLocation()\n  return (\n    <Link to={to} className={`sidebar__link__text`}>\n      <div\n        className={`sidebar__link ${isActive(location.pathname) ? \"sidebar__link--active\" : \"\"}`}\n      >\n        <span className=\"sidebar__link__icon\">{icon}</span>\n        {children}\n      </div>\n    </Link>\n  )\n}\n\nexport function Layout() {\n  const location = useLocation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const sidebarRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    function listener(event: MouseEvent) {\n      if (sidebarOpen && sidebarRef.current?.contains(event.target as Node) === false) {\n        setSidebarOpen(false)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", listener)\n    return () => {\n      document.removeEventListener(\"mousedown\", listener)\n    }\n  }, [sidebarOpen])\n\n  useEffect(() => {\n    // close sidebar whenever route changes\n    setSidebarOpen(false)\n  }, [location])\n\n  return (\n    <div className=\"layout\">\n      {!sidebarOpen && (\n        <div className=\"toggle-sidebar\" onClick={() => setSidebarOpen(true)}>\n          <FontAwesomeIcon icon={faBars} size=\"lg\" />\n        </div>\n      )}\n      {/* dim everything when sidebar is open\n         TODO this dims the sidebar itself as well I think, probably don't want\n         to do that*/}\n      {sidebarOpen && <div className=\"opacity-overlay\" />}\n      <div ref={sidebarRef} className={`sidebar ${sidebarOpen ? \"sidebar--open\" : \"\"}`}>\n        <Link to=\"/\" className=\"sidebar__title\">\n          HypoFuzz\n        </Link>\n        <nav className=\"sidebar__nav\">\n          <SidebarLink\n            to=\"/\"\n            isActive={pathname => pathname === \"/\" || pathname.startsWith(\"/tests/\")}\n            icon={<FontAwesomeIcon icon={faCode} />}\n          >\n            Tests\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faCodeCompare} />}\n            to=\"/patches\"\n            isActive={pathname => pathname === \"/patches\"}\n          >\n            Patches\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faBox} />}\n            to=\"/collected\"\n            isActive={pathname => pathname === \"/collected\"}\n          >\n            Collection\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faUser} />}\n            to=\"/workers\"\n            isActive={pathname => pathname === \"/workers\"}\n          >\n            Workers\n          </SidebarLink>\n\n          <div className=\"sidebar__separator\"></div>\n          <a\n            href={`${import.meta.env.BASE_URL.replace(/\\/$/, \"\")}/docs/`}\n            className=\"sidebar__link__text\"\n          >\n            <div className={`sidebar__link`}>\n              <span className=\"sidebar__link__icon\">\n                <FontAwesomeIcon icon={faBookOpen} />\n              </span>\n              Docs\n            </div>\n          </a>\n        </nav>\n      </div>\n      <div className=\"content\">\n        <Outlet />\n      </div>\n    </div>\n  )\n}\n","import { faArrowDown, faArrowUp, faTimes } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { ReactNode, useEffect, useMemo, useState } from \"react\"\nimport { Pagination } from \"src/components/Pagination\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\n\ninterface TableHeader<T> {\n  content: ReactNode\n  sortKey?: (item: T) => any[] | string | number\n  align?: string\n}\n\ninterface TableProps<T> {\n  headers: TableHeader<T>[]\n  data: T[]\n  row: (item: T) => React.ReactNode[]\n  mobileRow?: (item: T) => React.ReactNode\n  getKey?: (item: T) => string | number | undefined\n  filterStrings?: (item: T) => string[]\n  onFilterChange?: (filter: string) => void\n  perPage?: number\n}\n\nenum SortOrder {\n  ASC = 0,\n  DESC = 1,\n}\n\nexport function Table<T>({\n  headers,\n  data,\n  row,\n  mobileRow,\n  getKey,\n  onFilterChange,\n  filterStrings,\n  perPage,\n}: TableProps<T>) {\n  const [sortColumn, setSortColumn] = useState<number | null>(null)\n  const [sortDirection, setSortDirection] = useState<SortOrder>(SortOrder.ASC)\n  const [filterString, setFilterString] = useState(\"\")\n  const [page, setPage] = useState(0)\n  const isMobile = useIsMobile()\n\n  function getDisplayData() {\n    let displayData = data\n\n    if (filterString) {\n      displayData = data.filter(item => {\n        if (filterStrings) {\n          return filterStrings(item).some(checkString =>\n            checkString.toLowerCase().includes(filterString.toLowerCase()),\n          )\n        }\n        return true\n      })\n    }\n\n    if (sortColumn === null) {\n      return displayData\n    }\n\n    const sorted = [...displayData].sortKey(item => headers[sortColumn].sortKey!(item))\n    return sortDirection === SortOrder.ASC ? sorted : sorted.reverse()\n  }\n\n  // recompute display data when inputs change\n  const displayData = useMemo(\n    () => getDisplayData(),\n    [data, filterString, sortColumn, sortDirection],\n  )\n\n  const pageCount = useMemo(() => {\n    if (!perPage) {\n      return 1\n    }\n    return Math.max(1, Math.ceil(displayData.length / perPage))\n  }, [displayData.length, perPage])\n\n  // Clamp page index if data size changes\n  useEffect(() => {\n    if (!perPage) {\n      return\n    }\n    if (page >= pageCount) {\n      setPage(pageCount - 1)\n    }\n  }, [page, pageCount, perPage])\n\n  const handleHeaderClick = (index: number) => {\n    if (!headers[index].sortKey) return\n\n    if (sortColumn === index) {\n      setSortDirection(prev =>\n        prev === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC,\n      )\n    } else {\n      setSortColumn(index)\n      setSortDirection(SortOrder.ASC)\n    }\n    if (perPage) {\n      setPage(0)\n    }\n  }\n\n  function doFilterChange(filter: string) {\n    setFilterString(filter)\n    onFilterChange?.(filter)\n    if (perPage) {\n      setPage(0)\n    }\n  }\n\n  const pagedData = useMemo(() => {\n    if (!perPage) {\n      return displayData\n    }\n    const start = page * perPage\n    const end = (page + 1) * perPage\n    return displayData.slice(start, end)\n  }, [displayData, page, perPage])\n\n  return (\n    <div className=\"table\">\n      {/* only show filter box if some rows are filterable */}\n      {filterStrings !== undefined && (\n        <div className=\"table__controls\">\n          <div className=\"table__filter\">\n            <input\n              type=\"text\"\n              placeholder=\"Filter\"\n              value={filterString}\n              onChange={e => doFilterChange(e.target.value)}\n              className=\"table__filter__input\"\n            />\n            {filterString && (\n              <span className=\"table__filter__clear\" onClick={() => doFilterChange(\"\")}>\n                <FontAwesomeIcon icon={faTimes} />\n              </span>\n            )}\n          </div>\n          {perPage && pageCount > 1 && (\n            <div className=\"table__pagination table__pagination--top\">\n              <Pagination\n                currentPage={page}\n                pageCount={pageCount}\n                onPageChange={setPage}\n              />\n            </div>\n          )}\n        </div>\n      )}\n      {filterStrings === undefined && perPage && pageCount > 1 && (\n        <div className=\"table__pagination table__pagination--top\">\n          <Pagination currentPage={page} pageCount={pageCount} onPageChange={setPage} />\n        </div>\n      )}\n      {mobileRow !== undefined && isMobile ? (\n        pagedData.map(item => (\n          <div key={getKey ? getKey(item) : undefined}>{mobileRow(item)}</div>\n        ))\n      ) : (\n        <table className=\"table__table\">\n          <thead>\n            <tr>\n              {headers.map((header, index) => (\n                <th\n                  key={index}\n                  onClick={() => handleHeaderClick(index)}\n                  className={header.sortKey ? \"table--sortable\" : \"\"}\n                >\n                  <div\n                    className={`table__header table__header--${header.align ?? \"left\"}`}\n                  >\n                    {header.content}\n                    {header.sortKey && (\n                      <div className=\"table__sort\">\n                        {[SortOrder.ASC, SortOrder.DESC].map(order => (\n                          <div\n                            className={`table__sort__arrow table__sort__arrow--${\n                              order === SortOrder.ASC ? \"asc\" : \"desc\"\n                            } ${\n                              sortColumn === index && sortDirection === order\n                                ? \"table__sort__arrow--active\"\n                                : \"\"\n                            }`}\n                          >\n                            {order === SortOrder.ASC ? (\n                              <FontAwesomeIcon icon={faArrowUp} />\n                            ) : (\n                              <FontAwesomeIcon icon={faArrowDown} />\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {pagedData.map(item => {\n              const rowValue = row(item)\n              console.assert(rowValue.length === headers.length)\n              return (\n                <tr key={getKey ? getKey(item) : undefined}>\n                  {rowValue.map((cell, colIndex) => (\n                    <td key={colIndex}>{cell}</td>\n                  ))}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      )}\n      {perPage && pageCount > 1 && (\n        <div className=\"table__pagination table__pagination--bottom\">\n          <Pagination currentPage={page} pageCount={pageCount} onPageChange={setPage} />\n        </div>\n      )}\n      {filterString && displayData.length < data.length && (\n        <div className=\"table__filter-status\">\n          Showing {displayData.length} of {data.length} rows\n          <span\n            className=\"table__filter-status__clear\"\n            onClick={() => {\n              setFilterString(\"\")\n              onFilterChange?.(\"\")\n            }}\n          >\n            [clear]\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\n","export interface CollectionResult {\n  database_key: string\n  nodeid: string\n  status: string\n  status_reason?: string\n}\n\nexport async function fetchData<T>(endpoint: string): Promise<T | null> {\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    const response = await fetch(\n      new URL(/* @vite-ignore */ \"dashboard_state/api.json\", import.meta.url),\n    )\n    return await response.json()\n  }\n\n  try {\n    const response = await fetch(`/api/${endpoint}`)\n    return await response.json()\n  } catch (e) {\n    console.error(`Failed to fetch /api/${endpoint}`, e)\n    return null\n  }\n}\n\nexport async function fetchPatches<T>(nodeid: string): Promise<T | null> {\n  const data = await fetchData<T>(`patches/${nodeid}`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.patches?.[nodeid]\n  }\n  return data\n}\n\nexport async function fetchAvailablePatches(): Promise<string[] | null> {\n  const data = await fetchData<string[]>(`available_patches/`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    const patches = (data as any)?.patches\n    return Object.keys(patches).filter(\n      nodeid => patches[nodeid].failing || patches[nodeid].covering,\n    )\n  }\n  return data\n}\n\nexport async function fetchCollectionStatus(): Promise<CollectionResult[] | null> {\n  const data = await fetchData<CollectionResult[]>(`collection_status/`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.collection_status\n  }\n  return data\n}\n","import { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Table } from \"src/components/Table\"\nimport { CollectionResult, fetchCollectionStatus } from \"src/utils/api\"\nimport { commonPrefix } from \"src/utils/utils\"\n\nconst statusOrder = {\n  not_collected: 0,\n  collected: 1,\n}\n\nexport function CollectionStatusPage() {\n  const [collectionStatus, setCollectionStatus] = useState<CollectionResult[] | null>(\n    null,\n  )\n\n  useEffect(() => {\n    fetchCollectionStatus().then(data => {\n      setCollectionStatus(data)\n    })\n  }, [])\n\n  if (collectionStatus === null) {\n    return null\n  }\n\n  if (!collectionStatus.length) {\n    return (\n      <div className=\"card\">\n        <div className=\"card__header\">Test collection</div>\n        No tests collected.\n      </div>\n    )\n  }\n\n  const sortedResults = [...collectionStatus].sortKey(result => [\n    statusOrder[result.status as keyof typeof statusOrder],\n    result.status_reason,\n    result.nodeid,\n  ])\n\n  const nodeidPrefix = commonPrefix(sortedResults.map(r => r.nodeid))\n\n  const headers = [\n    {\n      content: \"Test\",\n      sortKey: (item: CollectionResult) => item.nodeid,\n    },\n    {\n      content: \"Status\",\n      sortKey: (item: CollectionResult) => [\n        statusOrder[item.status as keyof typeof statusOrder],\n        item.status_reason,\n      ],\n      align: \"center\",\n    },\n  ]\n\n  const row = (item: CollectionResult): React.ReactNode[] => {\n    const nodeid = item.nodeid.slice(nodeidPrefix.length)\n    const nodeidRow = (\n      <div style={{ wordBreak: \"break-all\" }}>\n        {/* don't link to a nonexistent page */}\n        {item.status == \"collected\" ? (\n          <Link to={`/tests/${encodeURIComponent(item.nodeid)}`} className=\"test__link\">\n            {nodeid}\n          </Link>\n        ) : (\n          nodeid\n        )}\n      </div>\n    )\n\n    return [\n      nodeidRow,\n      <div style={{ textAlign: \"center\" }}>\n        {item.status === \"collected\" ? (\n          <div className=\"pill pill__success\">Collected</div>\n        ) : (\n          <div className=\"pill pill__neutral\">\n            Not collected ({item.status_reason!})\n          </div>\n        )}\n      </div>,\n    ]\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Test collection status</div>\n      <Table\n        headers={headers}\n        data={sortedResults}\n        row={row}\n        getKey={item => item.database_key}\n        filterStrings={item => [\n          item.nodeid,\n          item.status === \"collected\"\n            ? \"Collected\"\n            : `Not collected (${item.status_reason})`,\n        ]}\n        perPage={100}\n      />\n    </div>\n  )\n}\n","export function NotFoundPage() {\n  return <h1>Page not found!</h1>\n}\n","/*\nLanguage: Diff\nDescription: Unified and context diff\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nWebsite: https://www.gnu.org/software/diffutils/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction diff(hljs) {\n  const regex = hljs.regex;\n  return {\n    name: 'Diff',\n    aliases: [ 'patch' ],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        match: regex.either(\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n          /^--- +\\d+,\\d+ +----$/\n        )\n      },\n      {\n        className: 'comment',\n        variants: [\n          {\n            begin: regex.either(\n              /Index: /,\n              /^index/,\n              /={3,}/,\n              /^-{3}/,\n              /^\\*{3} /,\n              /^\\+{3}/,\n              /^diff --git/\n            ),\n            end: /$/\n          },\n          { match: /^\\*{15}$/ }\n        ]\n      },\n      {\n        className: 'addition',\n        begin: /^\\+/,\n        end: /$/\n      },\n      {\n        className: 'deletion',\n        begin: /^-/,\n        end: /$/\n      },\n      {\n        className: 'addition',\n        begin: /^!/,\n        end: /$/\n      }\n    ]\n  };\n}\n\nexport { diff as default };\n","import \"highlight.js/styles/github.css\"\n\nimport { faCheck, faCopy, faDownload } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport hljs from \"highlight.js/lib/core\"\nimport diff from \"highlight.js/lib/languages/diff\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Toggle } from \"src/components/Toggle\"\nimport { fetchPatches } from \"src/utils/api\"\nimport { reHighlight } from \"src/utils/utils\"\n\nhljs.registerLanguage(\"diff\", diff)\n\nexport function TestPatches({ nodeid }: { nodeid: string }) {\n  const [patches, setPatches] = useState<Record<string, string>>({})\n  const [loading, setLoading] = useState(true)\n  const [patchType, setPatchType] = useState<string | null>(null)\n  const [copySuccess, setCopySuccess] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    fetchPatches<Record<string, string>>(nodeid).then(data => {\n      if (data) {\n        setPatches(data)\n      }\n      setLoading(false)\n    })\n  }, [nodeid])\n\n  useEffect(() => {\n    reHighlight(containerRef, true)\n  }, [patches, patchType])\n\n  if (loading) {\n    return (\n      <div className=\"card\">\n        <p>Loading patches...</p>\n      </div>\n    )\n  }\n\n  if (Object.values(patches).every(patch => patch === null)) {\n    return (\n      <div className=\"card\">\n        <p>No patches for this test</p>\n      </div>\n    )\n  }\n\n  // also defines patch display order by iteration order here\n  const patchNames = new Map([\n    [\"failing\", \"Failing\"],\n    [\"covering\", \"Covering\"],\n  ])\n\n  // get the first patch name which is present in patches\n  const activePatch =\n    patchType ?? Array.from(patchNames.keys()).find(name => patches[name])!\n  const patch = patches[activePatch]\n\n  const handleCopy = async () => {\n    await navigator.clipboard.writeText(patch)\n    setCopySuccess(true)\n    setTimeout(() => {\n      setCopySuccess(false)\n    }, 2000)\n  }\n\n  const handleDownload = () => {\n    const blob = new Blob([patch], { type: \"text/plain\" })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement(\"a\")\n    a.href = url\n    // drop the filename, use just the test name\n    a.download = `${activePatch}-${nodeid.split(\"::\").pop()}.patch`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div ref={containerRef}>\n      <div\n        style={{\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\",\n          display: \"flex\",\n          fontSize: \"1.05rem\",\n          fontWeight: \"500\",\n        }}\n      >\n        <Toggle\n          value={activePatch}\n          onChange={setPatchType}\n          options={Array.from(patchNames.entries())\n            .filter(([value]) => patches[value])\n            .map(([value, content]) => ({\n              value,\n              content,\n            }))}\n        />\n      </div>\n      <pre className=\"patch__pre\">\n        <div className=\"patch__controls\">\n          <div\n            className={`patch__controls__control ${copySuccess ? \"patch__controls__control--success\" : \"\"}`}\n            onClick={handleCopy}\n            title={\"Copy patch\"}\n          >\n            <FontAwesomeIcon icon={copySuccess ? faCheck : faCopy} />\n          </div>\n          <div\n            className=\"patch__controls__control\"\n            onClick={handleDownload}\n            title=\"Download patch\"\n          >\n            <FontAwesomeIcon icon={faDownload} />\n          </div>\n        </div>\n        <code className=\"language-diff\">{patch}</code>\n      </pre>\n    </div>\n  )\n}\n","import { faArrowRight } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Collapsible } from \"src/components/Collapsible\"\nimport { TestPatches } from \"src/components/TestPatches\"\nimport { fetchAvailablePatches } from \"src/utils/api\"\n\nexport function PatchesPage() {\n  const [nodeids, setNodeids] = useState<string[] | null>(null)\n\n  useEffect(() => {\n    fetchAvailablePatches().then(data => {\n      setNodeids(data)\n    })\n  }, [])\n\n  if (nodeids === null || nodeids.length === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"card__header\">Patches</div>\n        <p>No tests with patches present.</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\" style={{ marginBottom: \"1rem\" }}>\n        Patches\n      </div>\n      {nodeids.map(nodeid => (\n        <Collapsible\n          title={\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <span>{nodeid}</span>\n              <Link\n                to={`/tests/${encodeURIComponent(nodeid)}`}\n                className=\"patches__test__link\"\n                style={{\n                  marginLeft: \"8px\",\n                }}\n              >\n                View test <FontAwesomeIcon icon={faArrowRight} />\n              </Link>\n            </div>\n          }\n          headerClass=\"patches__test\"\n          defaultState=\"closed\"\n        >\n          <TestPatches nodeid={nodeid} />\n        </Collapsible>\n      ))}\n    </div>\n  )\n}\n","import { ScaleContinuousNumeric, scaleLinear, scaleSymlog } from \"d3-scale\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\ninterface AxisProps {\n  // viewport scale with zoom transformations applied\n  viewportScale: ScaleContinuousNumeric<number, number>\n  // original scale\n  baseScale: ScaleContinuousNumeric<number, number>\n  orientation: \"bottom\" | \"left\"\n  tickCount?: number\n  transform?: string\n  isLogScale?: boolean\n  zoomState: ZoomState\n}\n\ninterface Tick {\n  offset: number\n  name: string\n}\n\nfunction formatTick(value: number): string {\n  if (value >= 1_000_000) {\n    return `${Math.floor(value / 1_000_000)}M`\n  } else if (value >= 1000) {\n    return `${Math.floor(value / 1000)}k`\n  } else if (value > 0) {\n    return value.toLocaleString()\n  } else {\n    return \"0\"\n  }\n}\n\nfunction getTicks({\n  baseScale,\n  viewportScale,\n  tickCount,\n  zoomState,\n  orientation,\n}: {\n  baseScale: ScaleContinuousNumeric<number, number>\n  viewportScale: ScaleContinuousNumeric<number, number>\n  tickCount: number\n  zoomState: ZoomState\n  orientation: \"bottom\" | \"left\"\n}): Tick[] {\n  const range = baseScale.range()\n  let visibleDomain: [number, number]\n\n  if (orientation === \"bottom\") {\n    visibleDomain = [\n      baseScale.invert((range[0] - zoomState.x) / zoomState.scaleX),\n      baseScale.invert((range[1] - zoomState.x) / zoomState.scaleX),\n    ]\n  } else {\n    visibleDomain = [\n      baseScale.invert(range[0] - zoomState.y),\n      baseScale.invert(range[1] - zoomState.y),\n    ]\n  }\n\n  let tickValues = baseScale\n    .domain(visibleDomain)\n    .range(range)\n    .ticks(tickCount)\n    // don't show negative tick values\n    .filter(value => value >= 0)\n\n  return tickValues.map(value => ({\n    offset: viewportScale(value),\n    name: formatTick(value),\n  }))\n}\n\nexport function Axis({\n  baseScale,\n  viewportScale,\n  orientation,\n  tickCount = 5,\n  transform,\n  zoomState,\n}: AxisProps) {\n  const ticks = getTicks({\n    baseScale,\n    viewportScale,\n    tickCount,\n    zoomState,\n    orientation,\n  })\n\n  const isHorizontal = orientation === \"bottom\"\n  const [x1, y1, x2, y2] = isHorizontal\n    ? [0, 0, baseScale.range()[1], 0] // horizontal line\n    : [0, 0, 0, baseScale.range()[0]] // vertical line\n\n  return (\n    <g className={`axis axis--${orientation}`} transform={transform}>\n      {/* Main axis line */}\n      <line\n        className=\"domain\"\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      {/* end caps */}\n      <line\n        className=\"domain\"\n        x1={isHorizontal ? x1 : x1}\n        y1={isHorizontal ? y1 : y1}\n        x2={isHorizontal ? x1 : x1 - 6}\n        y2={isHorizontal ? y1 + 6 : y1}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      <line\n        className=\"domain\"\n        x1={isHorizontal ? x2 : x2}\n        y1={isHorizontal ? y2 : y2}\n        x2={isHorizontal ? x2 : x2 - 6}\n        y2={isHorizontal ? y2 + 6 : y2}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      {/* Tick marks and labels */}\n      {ticks.map((tick, i) => {\n        const tickX = isHorizontal ? tick.offset : 0\n        const tickY = isHorizontal ? 0 : tick.offset\n        const labelX = isHorizontal ? tick.offset : -10\n        const labelY = isHorizontal ? 15 : tick.offset + 4\n\n        return (\n          <g className=\"tick\" key={i}>\n            {/* Tick mark */}\n            <line\n              x1={tickX}\n              y1={tickY}\n              x2={tickX + (isHorizontal ? 0 : -6)}\n              y2={tickY + (isHorizontal ? 6 : 0)}\n              stroke=\"currentColor\"\n              strokeWidth={1}\n            />\n\n            {/* Tick label */}\n            <text\n              x={labelX}\n              y={labelY}\n              textAnchor={isHorizontal ? \"middle\" : \"end\"}\n              fontSize=\"12\"\n              fill=\"currentColor\"\n            >\n              {tick.name}\n            </text>\n          </g>\n        )\n      })}\n    </g>\n  )\n}\n","import { ScaleContinuousNumeric } from \"d3-scale\"\nimport { line as d3_line } from \"d3-shape\"\nimport { TestStatus } from \"src/types/dashboard\"\nimport { navigateOnClick } from \"src/utils/utils\"\n\nimport { GraphLine, GraphReport } from \"./types\"\n\ninterface DataLinesProps {\n  lines: GraphLine[]\n  // viewport scale with zoom applied\n  viewportXScale: ScaleContinuousNumeric<number, number>\n  viewportYScale: ScaleContinuousNumeric<number, number>\n  xValue: (d: GraphReport) => number\n  yValue: (d: GraphReport) => number\n  navigate: (path: string) => void\n}\n\nexport function DataLines({\n  lines,\n  viewportXScale,\n  viewportYScale,\n  xValue,\n  yValue,\n  navigate,\n}: DataLinesProps) {\n  // Calculate path data using D3 with viewport scales (zoom already applied)\n  const lineGenerator = d3_line<GraphReport>()\n    .x(d => viewportXScale(xValue(d)))\n    .y(d => viewportYScale(yValue(d)))\n  return (\n    <g style={{ pointerEvents: \"auto\" }}>\n      {lines.map(line => {\n        const pathData = lineGenerator(line.reports) || \"\"\n\n        return (\n          <path\n            key={`line-${line.url || \"no-url\"}`}\n            d={pathData}\n            fill=\"none\"\n            stroke={line.color}\n            className={`coverage-line ${line.isActive ? \"coverage-line__selected\" : \"\"} ${\n              line.status === TestStatus.FAILED ||\n              line.status === TestStatus.FAILED_FATALLY\n                ? \"coverage-line__failing\"\n                : \"\"\n            }`}\n            style={{\n              cursor: line.url ? \"pointer\" : \"default\",\n            }}\n          />\n        )\n      })}\n    </g>\n  )\n}\n","import { Report, StatusCounts, TestStatus } from \"../../types/dashboard\"\n\nexport class GraphReport {\n  constructor(\n    public nodeid: string,\n    public linear_status_counts: StatusCounts,\n    public linear_elapsed_time: number,\n    public behaviors: number,\n    public fingerprints: number,\n    public worker_uuid: string,\n    public timestamp_monotonic: number,\n  ) {}\n\n  static fromReport(nodeid: string, report: Report): GraphReport {\n    return new GraphReport(\n      nodeid,\n      report.status_counts,\n      report.elapsed_time,\n      report.behaviors,\n      report.fingerprints,\n      report.worker_uuid,\n      report.timestamp_monotonic!,\n    )\n  }\n}\n\nexport interface GraphLine {\n  nodeid: string\n  url: string | null\n  reports: GraphReport[]\n  color: string\n  isActive: boolean\n  status: TestStatus\n}\n","import { useEffect, useState } from \"react\"\n\nconst settingCallbacks = new Map<string, Set<(value: any) => void>>()\n\nexport function useSetting<T>(key: string, defaultValue: T): [T, (value: T) => void] {\n  const [value, _setValue] = useState<T>(() => {\n    // note: sessionStorage is per-tab. localStorage is per-browser-session.\n    // we may want to add a param to use one or the other (with a fallback from\n    // session to local storage?)\n    const saved = sessionStorage.getItem(key)\n    if (saved === null) return defaultValue\n    return JSON.parse(saved)\n  })\n\n  useEffect(() => {\n    if (!settingCallbacks.has(key)) {\n      settingCallbacks.set(key, new Set())\n    }\n    settingCallbacks.get(key)!.add(_setValue)\n\n    return () => {\n      settingCallbacks.get(key)!.delete(_setValue)\n    }\n  }, [key])\n\n  function setValue(newValue: T) {\n    sessionStorage.setItem(key, JSON.stringify(newValue))\n    // broadcast settings changes to other listeners. This way if there are two\n    // useSetting call for the same setting key, changes in one get reflected in the other.\n    settingCallbacks.get(key)!.forEach(callback => callback(newValue))\n  }\n\n  return [value, setValue]\n}\n","import { DISTANCE_THRESHOLD } from \"./CoverageGraph\"\nimport { GraphLine } from \"./types\"\n\n// number of pixels per sample\nconst QUADTREE_SAMPLE_INTERVAL = 10\n// sanity check to avoid bad performance in pathological cases. ideally our sampling\n// algorithm is good enough that we never hit this\nconst MAX_SAMPLES_PER_LINE = 1000\n\nexport interface SampledPoint {\n  x: number\n  y: number\n  line: GraphLine\n}\n\nexport function sampleLinePoints(scales: any, line: GraphLine): SampledPoint[] {\n  const points: SampledPoint[] = []\n  const reports = line.reports\n\n  if (reports.length < 2) return points\n\n  // Determine visible viewport bounds in screen space\n  const viewWidth = scales.baseX.range()[1]\n  const viewHeight = scales.baseY.range()[0]\n  const PADDING = 0\n\n  // Precompute viewport coordinates for all reports (avoid repeated scaling)\n  const coords = reports.map((r: any) => ({\n    x: scales.viewportX(scales.xValue(r)),\n    y: scales.viewportY(scales.yValue(r)),\n  }))\n\n  // Build list of visible segments (any that intersect the viewport) with their screen-space lengths\n  type Segment = {\n    x1: number\n    y1: number\n    x2: number\n    y2: number\n    length: number\n  }\n  const visibleSegments: Segment[] = []\n  for (let i = 1; i < coords.length; i++) {\n    const { x: x1, y: y1 } = coords[i - 1]\n    const { x: x2, y: y2 } = coords[i]\n\n    // Quick reject using segment bounding box vs viewport rectangle\n    const minX = Math.min(x1, x2)\n    const maxX = Math.max(x1, x2)\n    const minY = Math.min(y1, y2)\n    const maxY = Math.max(y1, y2)\n    const outside =\n      maxX < -PADDING ||\n      minX > viewWidth + PADDING ||\n      maxY < -PADDING ||\n      minY > viewHeight + PADDING\n    if (outside) continue\n\n    const length = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n    if (length === 0) continue\n    visibleSegments.push({ x1, y1, x2, y2, length })\n  }\n\n  if (visibleSegments.length === 0) return points\n\n  // Merge consecutive horizontal segments (cheap check: constant y within small epsilon)\n  const EPS_Y = 0.0001\n  const mergedSegments: Segment[] = []\n  for (const seg of visibleSegments) {\n    const isHoriz = Math.abs(seg.y1 - seg.y2) <= EPS_Y\n    if (mergedSegments.length > 0) {\n      const last = mergedSegments[mergedSegments.length - 1]\n      const lastIsHoriz = Math.abs(last.y1 - last.y2) <= EPS_Y\n      const sameY =\n        isHoriz &&\n        lastIsHoriz &&\n        Math.abs((last.y1 + last.y2) / 2 - (seg.y1 + seg.y2) / 2) <= EPS_Y\n      if (sameY) {\n        // Extend horizontally; keep y constant\n        const yConst = (last.y1 + last.y2) / 2\n        const newX1 = Math.min(last.x1, seg.x1, last.x2, seg.x2)\n        const newX2 = Math.max(last.x1, seg.x1, last.x2, seg.x2)\n        last.x1 = newX1\n        last.x2 = newX2\n        last.y1 = yConst\n        last.y2 = yConst\n        last.length = Math.abs(newX2 - newX1)\n        continue\n      }\n    }\n    mergedSegments.push({ ...seg })\n  }\n\n  const totalVisibleLength = mergedSegments.reduce((acc, s) => acc + s.length, 0)\n  if (totalVisibleLength <= 0) return points\n\n  // Helper to dedupe closely spaced points\n  function pushIfFar(x: number, y: number) {\n    const last = points[points.length - 1]\n    if (!last) {\n      points.push({ x, y, line })\n      return\n    }\n    const dx = x - last.x\n    const dy = y - last.y\n    // the farthest apart the points can be and still totally cover all hover events\n    // is DISTANCE_THRESHOLD / 2.\n    if (Math.sqrt(dx * dx + dy * dy) >= DISTANCE_THRESHOLD / 2) {\n      points.push({ x, y, line })\n    }\n  }\n\n  // 1) Always include segment endpoints for reliable hit-testing at vertices\n  if (mergedSegments.length > 0) {\n    pushIfFar(mergedSegments[0].x1, mergedSegments[0].y1)\n    for (let i = 0; i < mergedSegments.length; i++) {\n      const seg = mergedSegments[i]\n      pushIfFar(seg.x2, seg.y2)\n    }\n  }\n\n  // 2) Add equally spaced samples along the visible length at multiples of the interval\n  const interval = QUADTREE_SAMPLE_INTERVAL\n  const maxIntervals = Math.floor(totalVisibleLength / interval)\n  const capacity = Math.max(0, MAX_SAMPLES_PER_LINE - points.length)\n  const numIntervalSamples = Math.min(capacity, maxIntervals)\n\n  // Sample at distances interval, 2*interval, ..., up to but not including the exact end\n  for (let k = 1; k <= numIntervalSamples; k++) {\n    const targetDistance = k * interval\n    if (targetDistance >= totalVisibleLength) break\n\n    let currentDistance = 0\n    for (let j = 0; j < mergedSegments.length; j++) {\n      const seg = mergedSegments[j]\n      const nextDistance = currentDistance + seg.length\n      if (targetDistance <= nextDistance || j === mergedSegments.length - 1) {\n        const segT =\n          seg.length > 0 ? (targetDistance - currentDistance) / seg.length : 0\n        const x = seg.x1 + (seg.x2 - seg.x1) * segT\n        const y = seg.y1 + (seg.y2 - seg.y1) * segT\n        // Only add interval samples that are within viewport bounds\n        if (x >= 0 && x <= viewWidth && y >= 0 && y <= viewHeight) {\n          pushIfFar(x, y)\n        }\n        break\n      }\n      currentDistance = nextDistance\n    }\n  }\n\n  return points\n}\n","import { Report } from \"src/types/dashboard\"\n\nimport { GraphReport } from \"./types\"\n\n// returns workerid: [workerid], mapping each worker to a list of workers that\n// overlapped it at any point\nfunction workerOverlaps(reportsByWorker: Map<string, Report[]>): Map<string, string[]> {\n  const intervals = new Map<string, { start: number; end: number }>()\n  for (const [workerUuid, workerReports] of reportsByWorker.entries()) {\n    if (workerReports.length === 0) {\n      continue\n    }\n    intervals.set(workerUuid, {\n      start: workerReports[0].timestamp_monotonic!,\n      end: workerReports[workerReports.length - 1].timestamp_monotonic!,\n    })\n  }\n\n  const workerIds = Array.from(intervals.keys())\n  const overlaps = new Map<string, string[]>()\n\n  for (const id of workerIds) {\n    overlaps.set(id, [])\n  }\n\n  for (let i = 0; i < workerIds.length; i++) {\n    const aId = workerIds[i]\n    const a = intervals.get(aId)!\n    for (let j = i + 1; j < workerIds.length; j++) {\n      const bId = workerIds[j]\n      const b = intervals.get(bId)!\n      if (a.start <= b.end && b.start <= a.end) {\n        overlaps.get(aId)!.push(bId)\n        overlaps.get(bId)!.push(aId)\n      }\n    }\n  }\n\n  return overlaps\n}\n\n// - compute a map of workers: [overlapping_workers], mapping each worker to a list of\n//   workers which ever overlapped with it\n// - for each report1, report2 in zip(reports, reports[1:]), if report2 decreases from\n//   report1 in either fingerprints or behaviors, and the worker of report2 is concurrent\n//   with the worker of report1, then filter out report2 from the list of reports.\nexport function togetherReports(\n  reportsByWorker: Map<string, Report[]>,\n  reports: GraphReport[],\n): GraphReport[] {\n  if (reports.length <= 1) {\n    return reports\n  }\n\n  const overlaps = workerOverlaps(reportsByWorker)\n  const result: GraphReport[] = []\n  result.push(reports[0])\n  let mostRecentVisible = reports[0]\n  for (let i = 1; i < reports.length; i++) {\n    const r1 = mostRecentVisible\n    const r2 = reports[i]\n    const w1 = mostRecentVisible.worker_uuid\n    const w2 = r2.worker_uuid\n\n    const decreases = r2.behaviors < r1.behaviors || r2.fingerprints < r1.fingerprints\n    if (decreases && overlaps.get(w1)!.includes(w2)) {\n      continue\n    }\n    mostRecentVisible = r2\n    result.push(r2)\n  }\n\n  return result\n}\n","import { ScaleContinuousNumeric } from \"d3-scale\"\nimport { scaleLinear as d3_scaleLinear, scaleSymlog as d3_scaleSymlog } from \"d3-scale\"\n\nimport { max } from \"../../utils/utils\"\nimport { GraphReport } from \"./types\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\nexport interface ScaleBounds {\n  xMin?: number\n  xMax?: number\n  yMin?: number\n  yMax?: number\n}\n\nconst identityZoomState: ZoomState = { x: 0, y: 0, scaleX: 1 }\n\nfunction getConstrainedTransform({\n  zoomState,\n  bounds,\n  baseX,\n  baseY,\n}: {\n  zoomState: ZoomState\n  bounds: ScaleBounds\n  baseX: ScaleContinuousNumeric<number, number>\n  baseY: ScaleContinuousNumeric<number, number>\n}) {\n  if (!bounds) return zoomState\n\n  let constrained = { ...zoomState }\n\n  // Check horizontal bounds\n  if (bounds.xMin !== undefined || bounds.xMax !== undefined) {\n    const xRange = baseX.range()\n    const rangeStart = xRange[0]\n    const rangeEnd = xRange[1]\n\n    const leftVisibleValue = baseX.invert(\n      (rangeStart - constrained.x) / constrained.scaleX,\n    )\n    const rightVisibleValue = baseX.invert(\n      (rangeEnd - constrained.x) / constrained.scaleX,\n    )\n\n    if (bounds.xMin !== undefined && leftVisibleValue < bounds.xMin) {\n      constrained.x = rangeStart - baseX(bounds.xMin) * constrained.scaleX\n    }\n    if (bounds.xMax !== undefined && rightVisibleValue > bounds.xMax) {\n      constrained.x = rangeEnd - baseX(bounds.xMax) * constrained.scaleX\n    }\n  }\n\n  // Check vertical bounds\n  if (bounds.yMin !== undefined || bounds.yMax !== undefined) {\n    const yRange = baseY.range()\n    const rangeTop = yRange[1]\n    const rangeBottom = yRange[0]\n\n    if (\n      bounds.yMin !== undefined &&\n      baseY.invert(rangeBottom - constrained.y) < bounds.yMin\n    ) {\n      constrained.y = rangeBottom - baseY(bounds.yMin)\n    }\n    if (\n      bounds.yMax !== undefined &&\n      baseY.invert(rangeTop - constrained.y) > bounds.yMax\n    ) {\n      constrained.y = rangeTop - baseY(bounds.yMax)\n    }\n  }\n\n  return constrained\n}\n\nexport function useScales(\n  data: GraphReport[],\n  scaleSetting: string,\n  scaleSettingY: string,\n  axisSettingX: string,\n  axisSettingY: string,\n  width: number,\n  height: number,\n  zoomState: ZoomState = identityZoomState,\n  bounds: ScaleBounds,\n) {\n  const xValue = (report: GraphReport) =>\n    axisSettingX === \"time\"\n      ? report.linear_elapsed_time\n      : report.linear_status_counts.sum()\n\n  const yValue = (report: GraphReport) =>\n    axisSettingY === \"behaviors\" ? report.behaviors : report.fingerprints\n\n  const baseX = (scaleSetting === \"log\" ? d3_scaleSymlog() : d3_scaleLinear())\n    .domain([0, max(data.map(r => xValue(r))) || 1])\n    .range([0, width])\n\n  const baseY = (scaleSettingY === \"log\" ? d3_scaleSymlog() : d3_scaleLinear())\n    .domain([0, max(data.map(r => yValue(r))) || 0])\n    .range([height, 0])\n\n  const constrainedTransform = getConstrainedTransform({\n    zoomState,\n    bounds,\n    baseX,\n    baseY,\n  })\n\n  // Apply horizontal zoom and translation\n  const originalXRange = baseX.range()\n  const viewportX = baseX\n    .copy()\n    .range([\n      originalXRange[0] * constrainedTransform.scaleX + constrainedTransform.x,\n      originalXRange[1] * constrainedTransform.scaleX + constrainedTransform.x,\n    ])\n\n  // Only apply translation to Y scale, not scaling - for horizontal-only zoom\n  const viewportY = baseY\n    .copy()\n    .range([\n      baseY.range()[0] + constrainedTransform.y,\n      baseY.range()[1] + constrainedTransform.y,\n    ])\n\n  return {\n    xValue,\n    yValue,\n    baseX,\n    baseY,\n    viewportX,\n    viewportY,\n    constrainedTransform,\n  }\n}\n","import { interpolate } from \"d3-interpolate\"\nimport { MouseEvent, useEffect, useRef, useState } from \"react\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\ninterface UseZoomOptions {\n  minScale?: number\n  maxScale?: number\n  wheelSensitivity?: number\n  containerRef: React.RefObject<HTMLElement | null>\n  onZoomEnd: () => void\n  onDragEnd: () => void\n}\n\ninterface UseZoomReturn {\n  transform: ZoomState\n  onMouseDown: (event: MouseEvent<HTMLElement>) => void\n  onDoubleClick: (event: MouseEvent<HTMLElement>) => void\n  resetZoom: () => void\n  setTransform: (transform: ZoomState) => void\n}\n\nconst defaultZoomState: ZoomState = { x: 0, y: 0, scaleX: 1 }\n\nexport function useZoom({\n  minScale = 1,\n  maxScale = 50,\n  wheelSensitivity = 0.0013,\n  containerRef,\n  onZoomEnd = () => {},\n  onDragEnd = () => {},\n}: UseZoomOptions): UseZoomReturn {\n  const [transform, setTransformState] = useState<ZoomState>(defaultZoomState)\n  const isDragging = useRef(false)\n  const lastPointer = useRef({ x: 0, y: 0 })\n  const animationRef = useRef<number | null>(null)\n  const isZooming = useRef(false)\n  const wheelTimeoutRef = useRef<number | null>(null)\n\n  const cancelAnimation = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current)\n      animationRef.current = null\n    }\n  }\n\n  const setTransform = (newTransform: ZoomState) => {\n    cancelAnimation()\n    const constrainedTransform = newTransform\n    setTransformState(constrainedTransform)\n  }\n\n  const resetZoom = () => {\n    cancelAnimation()\n\n    const startTransform = transform\n    const endTransform = defaultZoomState\n    const duration = 500 // milliseconds\n    const startTime = performance.now()\n\n    const interpolateX = interpolate(startTransform.x, endTransform.x)\n    const interpolateY = interpolate(startTransform.y, endTransform.y)\n    const interpolateScaleX = interpolate(startTransform.scaleX, endTransform.scaleX)\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime\n      const progress = Math.min(elapsed / duration, 1)\n\n      // ease-out cubic\n      const eased = 1 - Math.pow(1 - progress, 3)\n\n      const newTransform: ZoomState = {\n        x: interpolateX(eased),\n        y: interpolateY(eased),\n        scaleX: interpolateScaleX(eased),\n      }\n\n      setTransformState(newTransform)\n\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animate)\n      } else {\n        // reset zoom has ended\n        animationRef.current = null\n        requestAnimationFrame(() => onZoomEnd())\n      }\n    }\n\n    animationRef.current = requestAnimationFrame(animate)\n  }\n\n  useEffect(() => {\n    const container = containerRef.current\n    if (!container) return\n\n    const handleWheel = (event: WheelEvent) => {\n      cancelAnimation()\n\n      const rect = container.getBoundingClientRect()\n      const mouseX = event.clientX - rect.left\n\n      // ignore horizontal swipes\n      if (Math.abs(event.deltaX) > Math.abs(event.deltaY)) {\n        return\n      }\n\n      const scaleFactor = 1 - event.deltaY * wheelSensitivity\n      const newScale = Math.max(\n        minScale,\n        Math.min(maxScale, transform.scaleX * scaleFactor),\n      )\n      const wouldZoom = newScale !== transform.scaleX\n\n      // Only treat as zooming when a zoom actually happens or we are in an active session\n      if (wouldZoom || isZooming.current) {\n        event.preventDefault()\n        event.stopPropagation()\n\n        if (wouldZoom) {\n          isZooming.current = true\n\n          const scaleRatio = newScale / transform.scaleX\n          const newX = mouseX - (mouseX - transform.x) * scaleRatio\n          // horizontal-only zoom; keep y unchanged\n          const newTransform = {\n            x: newX,\n            y: transform.y,\n            scaleX: newScale,\n          }\n          const constrainedTransform = newTransform\n          setTransformState(constrainedTransform)\n        }\n\n        // Debounce end-of-zoom notification\n        if (wheelTimeoutRef.current) {\n          clearTimeout(wheelTimeoutRef.current)\n        }\n        wheelTimeoutRef.current = window.setTimeout(() => {\n          isZooming.current = false\n          onZoomEnd()\n          wheelTimeoutRef.current = null\n        }, 150)\n      }\n    }\n\n    container.addEventListener(\"wheel\", handleWheel, { passive: false })\n\n    return () => {\n      container.removeEventListener(\"wheel\", handleWheel)\n    }\n  }, [transform, minScale, maxScale, wheelSensitivity, cancelAnimation])\n\n  const onMouseDown = (event: MouseEvent<HTMLElement>) => {\n    if (event.button !== 0) return // Only accept left mouse button\n    cancelAnimation()\n\n    isDragging.current = true\n    lastPointer.current = { x: event.clientX, y: event.clientY }\n\n    const handleMouseMove = (e: globalThis.MouseEvent) => {\n      if (!isDragging.current) return\n\n      const deltaX = e.clientX - lastPointer.current.x\n      const deltaY = e.clientY - lastPointer.current.y\n\n      setTransformState(prev => {\n        const newTransform = {\n          x: prev.x + deltaX,\n          y: prev.y + deltaY,\n          scaleX: prev.scaleX,\n        }\n        return newTransform\n      })\n\n      lastPointer.current = { x: e.clientX, y: e.clientY }\n    }\n\n    const handleMouseUp = () => {\n      isDragging.current = false\n      document.removeEventListener(\"mousemove\", handleMouseMove)\n      document.removeEventListener(\"mouseup\", handleMouseUp)\n      onDragEnd()\n    }\n\n    document.addEventListener(\"mousemove\", handleMouseMove)\n    document.addEventListener(\"mouseup\", handleMouseUp)\n  }\n\n  const onDoubleClick = (event: MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n    resetZoom()\n  }\n\n  useEffect(() => {\n    return () => {\n      cancelAnimation()\n      if (wheelTimeoutRef.current) {\n        clearTimeout(wheelTimeoutRef.current)\n      }\n    }\n  }, [cancelAnimation])\n\n  return {\n    transform,\n    onMouseDown,\n    onDoubleClick,\n    resetZoom,\n    setTransform,\n  }\n}\n","import {\n  faCircleDot,\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { interpolateRgb as d3_interpolateRgb } from \"d3-interpolate\"\nimport { Quadtree, quadtree } from \"d3-quadtree\"\nimport {\n  scaleLinear as d3_scaleLinear,\n  scaleOrdinal as d3_scaleOrdinal,\n} from \"d3-scale\"\nimport {\n  interpolateViridis as d3_interpolateViridis,\n  schemeCategory10 as d3_schemeCategory10,\n} from \"d3-scale-chromatic\"\nimport { select as d3_select } from \"d3-selection\"\nimport { zoomIdentity as d3_zoomIdentity } from \"d3-zoom\"\nimport { Set } from \"immutable\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Axis } from \"src/components/graph/Axis\"\nimport { DataLines } from \"src/components/graph/DataLines\"\nimport { GraphLine, GraphReport } from \"src/components/graph/types\"\nimport { Toggle } from \"src/components/Toggle\"\n// import BoxSelect from \"src/assets/box-select.svg?react\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\nimport { useSetting } from \"src/hooks/useSetting\"\nimport { Test } from \"src/types/test\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { max, min, navigateOnClick, readableNodeid } from \"src/utils/utils\"\n\nimport { SampledPoint, sampleLinePoints } from \"./quadtree\"\nimport { togetherReports } from \"./together\"\nimport { useScales } from \"./useScales\"\nimport { useZoom } from \"./useZoom\"\n\nexport const DISTANCE_THRESHOLD = 24\nconst GRAPH_HEIGHT = 270\n\nconst d3 = {\n  zoomIdentity: d3_zoomIdentity,\n  select: d3_select,\n  scaleLinear: d3_scaleLinear,\n  scaleOrdinal: d3_scaleOrdinal,\n  interpolateViridis: d3_interpolateViridis,\n  interpolateRgb: d3_interpolateRgb,\n  schemeCategory10: d3_schemeCategory10,\n}\n\nfunction graphLines(\n  tests: Map<string, Test>,\n  viewSetting: WorkerView,\n  workers_after: number | null,\n  reportsColor: (nodeid: string) => string,\n): GraphLine[] {\n  let lines: GraphLine[] = []\n\n  if (viewSetting === WorkerView.TOGETHER) {\n    lines = Array.from(tests.entries())\n      .sortKey(([nodeid, test]) => nodeid)\n      .map(([nodeid, test]) => {\n        let reports = graphReports(test, workers_after)\n        reports = togetherReports(test.reports_by_worker, reports)\n        return {\n          nodeid: nodeid,\n          url: `/tests/${encodeURIComponent(nodeid)}`,\n          reports: reports,\n          color: reportsColor(nodeid),\n          isActive: false,\n          status: test.status,\n        }\n      })\n  } else if (viewSetting === WorkerView.SEPARATE) {\n    const timestamps: number[] = []\n    for (const test of tests.values()) {\n      for (const workerReports of test.reports_by_worker.values()) {\n        if (workerReports.length > 0) {\n          timestamps.push(workerReports[0].timestamp)\n        }\n      }\n    }\n\n    const minTimestamp = min(timestamps) ?? 0\n    const maxTimestamp = max(timestamps) ?? 0\n\n    function timeColor(timestamp: number) {\n      if (timestamps.length <= 1) {\n        return timeColorScale(0.5) // Use middle color if only one worker\n      }\n      const normalized = (timestamp - minTimestamp) / (maxTimestamp - minTimestamp)\n      return timeColorScale(normalized)\n    }\n\n    for (const [nodeid, test] of tests.entries()) {\n      for (const workerReports of test.reports_by_worker.values()) {\n        if (workerReports.length > 0) {\n          lines.push({\n            nodeid: nodeid,\n            url: `/tests/${encodeURIComponent(nodeid)}`,\n            reports: workerReports.map(report =>\n              GraphReport.fromReport(nodeid, report),\n            ),\n            color: timeColor(workerReports[0].timestamp),\n            isActive: false,\n            status: test.status,\n          })\n        }\n      }\n    }\n  } else if (viewSetting === WorkerView.LATEST) {\n    for (const [nodeid, test] of tests.entries()) {\n      const recentReports = max(\n        Array.from(test.reports_by_worker.values()),\n        reports => reports[0].elapsed_time,\n      )\n\n      if (recentReports) {\n        lines.push({\n          nodeid: nodeid,\n          url: `/tests/${encodeURIComponent(nodeid)}`,\n          reports: recentReports.map(report => GraphReport.fromReport(nodeid, report)),\n          // use the same color as the linearized view\n          color: reportsColor(nodeid),\n          isActive: false,\n          status: test.status,\n        })\n      }\n    }\n  }\n\n  return lines\n}\n\n// lifted from github's \"blame\" color scale for \"time since now\".\n//\n// including the commented-out colors makes the color a bit too extreme.\nconst timeColorScale = d3\n  .scaleLinear<string>()\n  .domain([0, 1])\n  .range([\n    // \"rgb(255, 223, 182)\",\n    \"rgb(255, 198, 128)\",\n    \"rgb(240, 136, 62)\",\n    \"rgb(219, 109, 40)\",\n    \"rgb(189, 86, 29)\",\n    \"rgb(155, 66, 21)\",\n    \"rgb(118, 45, 10)\",\n    \"rgb(90, 30, 2)\",\n    // \"rgb(61, 19, 0)\"\n  ])\n  .interpolate(d3.interpolateRgb)\n\nexport enum WorkerView {\n  TOGETHER = \"linearized\",\n  SEPARATE = \"individual\",\n  LATEST = \"latest\",\n}\n\ninterface Props {\n  tests: Map<string, Test>\n  filterString?: string\n  workers_after?: number | null\n  workerViews?: WorkerView[]\n  workerViewSetting: string\n}\n\nfunction graphReports(test: Test, workers_after: number | null): GraphReport[] {\n  // zip up linear_status_counts, linear_elapsed_time, and linear_reports.\n  const linearStatusCounts = test.linear_status_counts(workers_after)\n  const linearElapsedTime = test.linear_elapsed_time(workers_after)\n  const reports: GraphReport[] = []\n  for (let i = 0; i < linearStatusCounts.length; i++) {\n    const report = test.linear_reports[i]\n    reports.push({\n      nodeid: test.nodeid,\n      linear_status_counts: linearStatusCounts[i],\n      linear_elapsed_time: linearElapsedTime[i],\n      behaviors: report.behaviors,\n      fingerprints: report.fingerprints,\n      worker_uuid: report.worker_uuid,\n      timestamp_monotonic: report.timestamp_monotonic!,\n    })\n  }\n  return reports\n}\n\nfunction LogLinearToggle({\n  value,\n  onChange,\n}: {\n  value: \"log\" | \"linear\"\n  onChange: (value: \"log\" | \"linear\") => void\n}) {\n  return (\n    <Toggle\n      value={value}\n      onChange={onChange}\n      options={[\n        { value: \"log\", content: \"Log\" },\n        { value: \"linear\", content: \"Linear\" },\n      ]}\n    />\n  )\n}\n\nfunction LabelX() {\n  const [scale, setScale] = useSetting<\"log\" | \"linear\">(\"graph_scale_x\", \"log\")\n  const [axis, setAxis] = useSetting<\"time\" | \"inputs\">(\"graph_axis_x\", \"time\")\n  return (\n    <div\n      className=\"coverage-graph__label coverage-graph__label--x\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"0.5rem\",\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <FontAwesomeIcon\n          icon={axis === \"inputs\" ? faHashtag : faClock}\n          style={{ fontSize: \"0.9rem\" }}\n        />\n        {axis === \"inputs\" ? \"Inputs\" : \"Time\"}\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <LogLinearToggle value={scale} onChange={setScale} />\n        <Toggle\n          value={axis}\n          onChange={setAxis}\n          options={[\n            {\n              value: \"inputs\",\n              content: <FontAwesomeIcon icon={faHashtag} />,\n            },\n            {\n              value: \"time\",\n              content: <FontAwesomeIcon icon={faClock} />,\n            },\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction LabelY() {\n  const [scale, setScale] = useSetting<\"log\" | \"linear\">(\"graph_scale_y\", \"linear\")\n  const [axis, setAxis] = useSetting<\"behaviors\" | \"fingerprints\">(\n    \"graph_axis_y\",\n    \"fingerprints\",\n  )\n  return (\n    <div\n      className=\"coverage-graph__label coverage-graph__label--y\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"0.5rem\",\n        zIndex: 1,\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <LogLinearToggle value={scale} onChange={setScale} />\n        <Toggle\n          value={axis}\n          onChange={setAxis}\n          options={[\n            {\n              value: \"behaviors\",\n              content: <FontAwesomeIcon icon={faCodeBranch} />,\n            },\n            {\n              value: \"fingerprints\",\n              content: <FontAwesomeIcon icon={faFingerprint} />,\n            },\n          ]}\n        />\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <FontAwesomeIcon\n          icon={axis === \"behaviors\" ? faCodeBranch : faFingerprint}\n          style={{ fontSize: \"0.9rem\" }}\n        />\n        {axis === \"behaviors\" ? \"Behaviors\" : \"Fingerprints\"}\n      </div>\n    </div>\n  )\n}\n\nconst workerToggleContent = {\n  [WorkerView.TOGETHER]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faUser} /> Together\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faUser} />,\n  },\n  [WorkerView.SEPARATE]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faUsers} /> Separate\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faUsers} />,\n  },\n  [WorkerView.LATEST]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faCircleDot} /> Latest\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faCircleDot} />,\n  },\n}\n\nconst GRAPH_MARGIN = {\n  top: 5,\n  right: 5,\n  bottom: 25,\n  left: 40,\n}\n\ntype HoveredState = {\n  line: GraphLine\n  report: GraphReport\n} | null\n\nexport function GraphComponent({\n  tests,\n  filterString = \"\",\n  workers_after = null,\n  viewSetting,\n}: {\n  tests: Map<string, Test>\n  filterString?: string\n  workers_after?: number | null\n  viewSetting: WorkerView\n}) {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const quadtreeRef = useRef<Quadtree<SampledPoint> | null>(null)\n  const [scaleSettingX, setScaleSettingX] = useSetting<\"log\" | \"linear\">(\n    \"graph_scale_x\",\n    \"log\",\n  )\n  const [scaleSettingY, setScaleSettingY] = useSetting<\"log\" | \"linear\">(\n    \"graph_scale_y\",\n    \"linear\",\n  )\n  const [axisSettingX, setAxisSettingX] = useSetting<\"time\" | \"inputs\">(\n    \"graph_axis_x\",\n    \"time\",\n  )\n  const [axisSettingY, setAxisSettingY] = useSetting<\"behaviors\" | \"fingerprints\">(\n    \"graph_axis_y\",\n    \"fingerprints\",\n  )\n  const navigate = useNavigate()\n  const isMobile = useIsMobile()\n  const tooltip = useTooltip()\n  const [containerWidth, setContainerWidth] = useState(800)\n  const [hoveredState, setHoveredState] = useState<HoveredState>(null)\n  const scalesRef = useRef<typeof scales | null>(null)\n  const mouseDownPosRef = useRef<{ x: number; y: number } | null>(null)\n\n  // use the unfiltered reports as the domain so colors are stable across filtering.\n  const reportsColor = d3\n    .scaleOrdinal(d3.schemeCategory10)\n    .domain(Array.from(tests.keys()))\n\n  // pretty sure this is a react compiler bug, because this useMemo is necessary to avoid graphLines\n  // being called on every render.\n  const lines = useMemo(\n    () => graphLines(tests, viewSetting, workers_after, reportsColor),\n    [tests, viewSetting, workers_after],\n  )\n  let filteredLines = lines\n  if (filterString) {\n    filteredLines = lines.filter(line =>\n      line.url?.toLowerCase().includes(filterString.toLowerCase()),\n    )\n  }\n\n  let activeLine: GraphLine | null = null\n  filteredLines.forEach(line => {\n    line.isActive = false\n    if (\n      hoveredState != null &&\n      line.nodeid === hoveredState.line.nodeid &&\n      (viewSetting === WorkerView.TOGETHER\n        ? true\n        : line.reports[0].worker_uuid === hoveredState?.line.reports[0].worker_uuid)\n    ) {\n      line.isActive = true\n      activeLine = line\n    }\n  })\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          setContainerWidth(entry.contentRect.width)\n        }\n      })\n      resizeObserver.observe(containerRef.current)\n      return () => resizeObserver.disconnect()\n    }\n    return undefined\n  }, [])\n\n  const graphWidth = containerWidth - GRAPH_MARGIN.left - GRAPH_MARGIN.right\n  const graphHeight = GRAPH_HEIGHT - GRAPH_MARGIN.top - GRAPH_MARGIN.bottom\n  const allReports = filteredLines.flatMap(line => line.reports)\n\n  function rebuildQuadtree() {\n    // for each line, we sample points from it proportional to its current display length,\n    // and track them in a quadtree. This lets us find the line closest to the cursor\n    // (up to some sampling error; increase QUADTREE_SAMPLE_INTERVAL to improve this).\n    // Once we have the closest line, it's cheap to find the closest report on that line for\n    // the actual tooltip contents.\n    const sampledPoints = filteredLines.flatMap(line =>\n      sampleLinePoints(scalesRef.current!, line),\n    )\n    quadtreeRef.current = quadtree<SampledPoint>()\n      .x(d => d.x)\n      .y(d => d.y)\n      .addAll(sampledPoints)\n  }\n\n  const zoom = useZoom({\n    minScale: 1,\n    maxScale: 50,\n    containerRef,\n    onZoomEnd: rebuildQuadtree,\n    onDragEnd: rebuildQuadtree,\n  })\n  const scales = useScales(\n    allReports,\n    scaleSettingX,\n    scaleSettingY,\n    axisSettingX,\n    axisSettingY,\n    graphWidth,\n    graphHeight,\n    zoom.transform,\n    { yMin: 0 },\n  )\n\n  // if we don't do this, onDragEnd (but not onZoomEnd?!) refers to the `scales` from the previous\n  // render, and our quadtree updates incorrectly.\n  scalesRef.current = scales\n\n  useEffect(() => {\n    rebuildQuadtree()\n  }, [\n    filteredLines,\n    scaleSettingX,\n    scaleSettingY,\n    axisSettingX,\n    axisSettingY,\n    // rebuild when screen size changes due to eg user resizes\n    graphWidth,\n    graphHeight,\n  ])\n\n  return (\n    <div\n      ref={element => {\n        if (containerRef.current !== element) {\n          containerRef.current = element\n        }\n      }}\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: `${GRAPH_HEIGHT}px`,\n        userSelect: \"none\",\n        cursor: activeLine ? \"pointer\" : \"default\",\n      }}\n      onMouseDown={event => {\n        mouseDownPosRef.current = { x: event.clientX, y: event.clientY }\n        zoom.onMouseDown(event)\n      }}\n      onDoubleClick={zoom.onDoubleClick}\n      onClick={event => {\n        // If the pointer moved more than a small threshold since mousedown,\n        // treat as a drag and suppress navigation.\n        const start = mouseDownPosRef.current\n        mouseDownPosRef.current = null\n        const DRAG_SUPPRESS_PX = 5\n        if (\n          start &&\n          (Math.abs(event.clientX - start.x) > DRAG_SUPPRESS_PX ||\n            Math.abs(event.clientY - start.y) > DRAG_SUPPRESS_PX)\n        ) {\n          return\n        }\n\n        if (activeLine && activeLine.url) {\n          navigateOnClick(event as any, activeLine.url, navigate)\n        }\n      }}\n      onMouseMove={event => {\n        const rect = event.currentTarget.getBoundingClientRect()\n        const mouseX = event.clientX - rect.left - GRAPH_MARGIN.left\n        const mouseY = event.clientY - rect.top - GRAPH_MARGIN.top\n\n        if (!quadtreeRef.current) return\n\n        const closestPoint =\n          quadtreeRef.current!.find(mouseX, mouseY, DISTANCE_THRESHOLD) || null\n\n        if (closestPoint) {\n          const reports = closestPoint.line.reports\n\n          // find the closest actual report on this line. We know the closest sampled point\n          // and therefore the closest line, but not the closest report on that line.\n          let closestReport = reports[0]\n          let minDistance = Infinity\n\n          reports.forEach(report => {\n            const reportX = scales.viewportX(scales.xValue(report))\n            const reportY = scales.viewportY(scales.yValue(report))\n            const distance = Math.sqrt(\n              (mouseX - reportX) ** 2 + (mouseY - reportY) ** 2,\n            )\n\n            if (distance < minDistance) {\n              minDistance = distance\n              closestReport = report\n            }\n          })\n\n          const content = (\n            <div style={{ display: \"flex\", flexDirection: \"column\", gap: 4 }}>\n              <div style={{ fontWeight: 600, marginBottom: 2 }}>\n                {readableNodeid(closestReport.nodeid)}\n              </div>\n              <div style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\n                <span style={{ display: \"inline-flex\", alignItems: \"center\", gap: 6 }}>\n                  <FontAwesomeIcon icon={faCodeBranch} />\n                  <span>{closestReport.behaviors.toLocaleString()}</span>\n                </span>\n                <span>/</span>\n                <span style={{ display: \"inline-flex\", alignItems: \"center\", gap: 6 }}>\n                  <FontAwesomeIcon icon={faFingerprint} />\n                  <span>{closestReport.fingerprints.toLocaleString()}</span>\n                </span>\n              </div>\n              <div style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\n                <span style={{ display: \"inline-flex\", alignItems: \"center\", gap: 6 }}>\n                  <FontAwesomeIcon icon={faHashtag} />\n                  <span>\n                    {closestReport.linear_status_counts.sum().toLocaleString()}\n                  </span>\n                </span>\n                <span>/</span>\n                <span style={{ display: \"inline-flex\", alignItems: \"center\", gap: 6 }}>\n                  <FontAwesomeIcon icon={faClock} />\n                  <span>{closestReport.linear_elapsed_time.toFixed(1)}s</span>\n                </span>\n              </div>\n              {/* TODO: add a \"debug\" or \"advanced\" view somewhere (settings?) and enable this there?\n                  I've found this useful for debugging, which means some advanced users may as well. */}\n              {/* <div style={{ display: \"flex\", alignItems: \"center\", gap: 8 }}>\n                <span style={{ display: \"inline-flex\", alignItems: \"center\", gap: 6 }}>\n                  <FontAwesomeIcon icon={faUser} />\n                  <span>{closestReport.worker_uuid}</span>\n                </span>\n              </div> */}\n            </div>\n          )\n\n          tooltip.showTooltip(content, event.clientX, event.clientY, \"coverage-graph\")\n          setHoveredState({\n            line: closestPoint.line,\n            report: closestReport,\n          })\n        } else {\n          setHoveredState(null)\n          tooltip.hideTooltip(\"coverage-graph\")\n        }\n      }}\n      onMouseLeave={() => {\n        setHoveredState(null)\n        tooltip.hideTooltip(\"coverage-graph\")\n      }}\n    >\n      <svg\n        className=\"coverage-graph__svg\"\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: `${GRAPH_HEIGHT}px`,\n          pointerEvents: \"none\",\n        }}\n      >\n        <defs>\n          <clipPath id=\"clip-content\">\n            {/* add some padding so the stroke width doesn't get clipped, even though the center\n            of the line would still be inside the clip path */}\n            <rect y={-2} width={graphWidth} height={graphHeight + 4} />\n          </clipPath>\n        </defs>\n\n        <g transform={`translate(${GRAPH_MARGIN.left}, ${GRAPH_MARGIN.top})`}>\n          <g clipPath=\"url(#clip-content)\">\n            <DataLines\n              lines={filteredLines}\n              viewportXScale={scales.viewportX}\n              viewportYScale={scales.viewportY}\n              xValue={scales.xValue}\n              yValue={scales.yValue}\n              navigate={navigate}\n            />\n            {hoveredState && (\n              <circle\n                cx={scales.viewportX(scales.xValue(hoveredState.report))}\n                cy={scales.viewportY(scales.yValue(hoveredState.report))}\n                r={5}\n                fill={hoveredState.line.color}\n                stroke=\"#fff\"\n                strokeWidth={1.5}\n              />\n            )}\n          </g>\n\n          <Axis\n            baseScale={scales.baseX}\n            viewportScale={scales.viewportX}\n            orientation=\"bottom\"\n            transform={`translate(0, ${scales.baseY.range()[0]})`}\n            isLogScale={scaleSettingX === \"log\"}\n            zoomState={scales.constrainedTransform}\n          />\n\n          <Axis\n            baseScale={scales.baseY}\n            viewportScale={scales.viewportY}\n            orientation=\"left\"\n            isLogScale={scaleSettingY === \"log\"}\n            zoomState={scales.constrainedTransform}\n          />\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nfunction ColorLegend() {\n  const colors = [\n    \"rgb(255, 198, 128)\",\n    \"rgb(240, 136, 62)\",\n    \"rgb(219, 109, 40)\",\n    \"rgb(189, 86, 29)\",\n    \"rgb(155, 66, 21)\",\n    \"rgb(118, 45, 10)\",\n    \"rgb(90, 30, 2)\",\n  ]\n\n  return (\n    <div className=\"coverage-graph__color-legend\">\n      <span>Older</span>\n      <div style={{ display: \"flex\", gap: \"2px\" }}>\n        {colors.map((color, index) => (\n          <div\n            key={index}\n            className=\"coverage-graph__color-legend__square\"\n            style={{ backgroundColor: color }}\n          />\n        ))}\n      </div>\n      <span>Newer</span>\n    </div>\n  )\n}\n\nexport function CoverageGraph({\n  tests,\n  filterString = \"\",\n  workers_after = null,\n  workerViews = [WorkerView.TOGETHER, WorkerView.SEPARATE, WorkerView.LATEST],\n  workerViewSetting,\n}: Props) {\n  let [viewSetting, setWorkerView] = useSetting<WorkerView>(\n    workerViewSetting,\n    WorkerView.TOGETHER,\n  )\n\n  const workers = Set(\n    Array.from(tests.values()).flatMap(test =>\n      Array.from(test.reports_by_worker.values()),\n    ),\n  )\n  const disabled = workers.size == 1\n  // force view setting to be the default WorkerView.TOGETHER if we're disabled, to avoid\n  // confusing people that they can't switch away from the default\n  if (disabled) {\n    viewSetting = WorkerView.TOGETHER\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\" style={{ marginBottom: \"1rem\" }}>\n        Coverage\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent:\n            viewSetting === WorkerView.SEPARATE ? \"space-between\" : \"flex-end\",\n          alignItems: viewSetting === WorkerView.SEPARATE ? \"center\" : \"default\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        {viewSetting === WorkerView.SEPARATE && <ColorLegend />}\n        <span className=\"tooltip\">\n          <Toggle\n            value={viewSetting}\n            onChange={setWorkerView}\n            options={workerViews.map(view => ({\n              value: view,\n              content: workerToggleContent[view].content,\n              mobileContent: workerToggleContent[view].mobileContent,\n            }))}\n            disabled={disabled}\n          />\n          {disabled && (\n            <span className=\"tooltip__text\">\n              Switching display mode requires multiple workers\n            </span>\n          )}\n        </span>\n      </div>\n      <div className=\"coverage-graph__container\">\n        <div\n          className=\"coverage-graph__grid\"\n          style={{ marginRight: \"15px\", flex: 1, height: \"auto\" }}\n        >\n          {/* top left */}\n          <LabelY />\n          {/* top right */}\n          <GraphComponent\n            tests={tests}\n            viewSetting={viewSetting}\n            workers_after={workers_after}\n            filterString={filterString}\n          />\n          {/* bottom left */}\n          <div></div>\n          {/* bottom right */}\n          <LabelX />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { TestStatus } from \"src/types/dashboard\"\n\nexport const statusStrings = {\n  [TestStatus.FAILED_FATALLY]: \"Failed fatally\",\n  [TestStatus.FAILED]: \"Failed\",\n  [TestStatus.SHRINKING]: \"Shrinking\",\n  [TestStatus.RUNNING]: \"Running\",\n  [TestStatus.SKIPPED_DYNAMICALLY]: \"Skipped dynamically\",\n  [TestStatus.WAITING]: \"Waiting\",\n}\n\nexport function TestStatusPill({ status }: { status: TestStatus }) {\n  return (\n    <span style={{ textAlign: \"center\" }}>\n      {status === TestStatus.FAILED_FATALLY ? (\n        <span className=\"pill pill__failure\">{statusStrings[status]}</span>\n      ) : status === TestStatus.FAILED ? (\n        <span className=\"pill pill__failure\">{statusStrings[status]}</span>\n      ) : status === TestStatus.SHRINKING ? (\n        <span className=\"pill pill__warning\">{statusStrings[status]}</span>\n      ) : status === TestStatus.RUNNING ? (\n        <span className=\"pill pill__success\">{statusStrings[status]}</span>\n      ) : (\n        <span className=\"pill pill__neutral\">{statusStrings[status]}</span>\n      )}\n    </span>\n  )\n}\n","interface TooltipProps {\n  content: React.ReactNode\n  tooltip: string\n}\n\nexport function Tooltip({ content, tooltip }: TooltipProps) {\n  return (\n    <span className=\"tooltip tooltip--underline\">\n      {content}\n      <div className=\"tooltip__text\">{tooltip}</div>\n    </span>\n  )\n}\n","import { faCheck } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode } from \"react\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { Test } from \"src/types/test\"\n\nexport interface TestStats {\n  inputs: string\n  behaviors: string\n  fingerprints: string\n  executions: string\n  inputsSinceBranch: string\n  timeSpent: string\n  stability: ReactNode\n}\n\nexport function formatTime(t: number): string {\n  const hours = Math.floor(t / 3600)\n  const minutes = Math.floor((t % 3600) / 60)\n  const seconds = Math.floor(t % 60)\n\n  // displays as hh:mm:ss. eg:\n  // 0:53\n  // 6:53\n  // 1:06:53\n  //\n  // only pad minutes to two digits if hours are present\n  return `${hours > 0 ? `${hours}:${minutes.toString().padStart(2, \"0\")}` : minutes}:${seconds.toString().padStart(2, \"0\")}`\n}\n\nexport function inputsPerSecond(test: Test): number | null {\n  const ninputs = test.ninputs(null)\n  const elapsed = test.elapsed_time(null)\n  return elapsed === 0.0 ? null : ninputs / elapsed\n}\n\nfunction formatInputsPerSecond(perSecond: number): string {\n  // toPrecision converts to exponential notation sometimes.\n  // parseFloat gets rid of that.\n  return formatNumber(parseFloat(perSecond.toPrecision(3)))\n}\n\nfunction formatStability(value: number): string {\n  // we don't have enough confidence for anything beyond the decimal place\n  return (value * 100).toFixed(0)\n}\n\nexport function formatNumber(value: number): string {\n  if (!Number.isFinite(value)) {\n    return String(value)\n  }\n\n  const sign = value < 0 ? \"-\" : \"\"\n  const abs = Math.abs(value)\n\n  if (abs < 1000) {\n    return `${sign}${abs.toLocaleString()}`\n  }\n\n  const suffixes = [\"k\", \"M\", \"B\"]\n  const magnitude = Math.min(Math.floor(Math.log10(abs) / 3), suffixes.length)\n  const divisor = 1000 ** magnitude\n  const scaled = abs / divisor\n\n  const decimals = scaled < 100 ? 1 : 0\n  const rounded = scaled.toFixed(decimals)\n\n  return `${sign}${rounded}${suffixes[magnitude - 1]}`\n}\n\nexport function getTestStats(test: Test): TestStats {\n  if (test.linear_reports.length === 0) {\n    return {\n      inputs: \"—\",\n      behaviors: \"—\",\n      fingerprints: \"—\",\n      executions: \"—\",\n      inputsSinceBranch: \"—\",\n      timeSpent: \"—\",\n      stability: \"—\",\n    }\n  }\n\n  const perSecond = inputsPerSecond(test)\n  return {\n    inputs: formatNumber(test.ninputs(null)),\n    behaviors: formatNumber(test.behaviors),\n    fingerprints: formatNumber(test.fingerprints),\n    executions: perSecond === null ? \"—\" : `${formatInputsPerSecond(perSecond)}/s`,\n    inputsSinceBranch: test.since_new_behavior\n      ? formatNumber(test.since_new_behavior)\n      : \"—\",\n    timeSpent: formatTime(test.elapsed_time(null)),\n    stability:\n      test.stability === null ? (\n        \"—\"\n      ) : test.stability == 1 ? (\n        <Tooltip\n          content={<FontAwesomeIcon icon={faCheck} />}\n          tooltip={\"100% stability\"}\n        />\n      ) : (\n        `${formatStability(test.stability)}%`\n      ),\n  }\n}\n","import \"highlight.js/styles/github.css\"\n\nimport {\n  faArrowLeft,\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faLocationPinLock,\n  faSeedling,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport hljs from \"highlight.js/lib/core\"\nimport python from \"highlight.js/lib/languages/python\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\nimport { Collapsible } from \"src/components/Collapsible\"\nimport { CoverageGraph } from \"src/components/graph/CoverageGraph\"\nimport { Table } from \"src/components/Table\"\nimport { TestPatches } from \"src/components/TestPatches\"\nimport { TestStatusPill } from \"src/components/TestStatusPill\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { useData } from \"src/context/DataProvider\"\nimport { Tyche } from \"src/tyche/Tyche\"\nimport { Failure, FatalFailure } from \"src/types/dashboard\"\nimport { Test } from \"src/types/test\"\nimport { fetchAvailablePatches } from \"src/utils/api\"\nimport { getTestStats } from \"src/utils/testStats\"\nimport { readableNodeid, reHighlight } from \"src/utils/utils\"\n\nhljs.registerLanguage(\"python\", python)\n\nfunction FailureStatusPill({ failure }: { failure: Failure }) {\n  return (\n    <span style={{ textAlign: \"center\" }}>\n      {failure.state === \"shrunk\" ? (\n        <span className=\"pill pill__neutral\">Fully shrunk</span>\n      ) : failure.state === \"unshrunk\" ? (\n        <span className=\"pill pill__neutral\">Still shrinking...</span>\n      ) : (\n        // this case shouldn't happen\n        <></>\n      )}\n    </span>\n  )\n}\n\nfunction FailureCard({ failure }: { failure: Failure }) {\n  return (\n    <div className=\"card\">\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"0.7rem\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        <div className=\"failure__title\">Failure</div>\n        <FailureStatusPill failure={failure} />\n      </div>\n      <div className=\"failure__item\">\n        <div className=\"failure__item__subtitle\">Failing input</div>\n        <pre>\n          <code className=\"language-python\">{failure.observation.representation}</code>\n        </pre>\n        <div className=\"failure__item__subtitle\">Traceback</div>\n        <pre>\n          <code className=\"language-python\">\n            {failure.observation.metadata.get(\"traceback\")}\n          </code>\n        </pre>\n        <div className=\"failure__item__subtitle\">Reproduction</div>\n        <pre>\n          <code className=\"language-python\">\n            {failure.observation.metadata.get(\"reproduction_decorator\") +\n              \"\\n\" +\n              `def ${readableNodeid(failure.observation.property)}(...): ...`}\n          </code>\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nfunction FatalFailureCard({ failure }: { failure: FatalFailure }) {\n  return (\n    <div className=\"card\">\n      <div className=\"failure__title\">Fatal failure</div>\n      <div className=\"failure__item\">\n        <div className=\"failure__item__subtitle\">Traceback</div>\n        <pre>\n          <code className=\"language-python\" style={{ whiteSpace: \"pre-wrap\" }}>\n            {failure.traceback}\n          </code>\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport function TestPage() {\n  const { nodeid } = useParams<{ nodeid: string }>()\n  const { tests } = useData(nodeid)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [nodeidsWithPatches, setNodeidsWithPatches] = useState<string[] | null>(null)\n\n  useEffect(() => {\n    fetchAvailablePatches().then(data => {\n      setNodeidsWithPatches(data)\n    })\n  }, [])\n\n  const existing = tests.get(nodeid!)\n  // make a new object each time we rerender, or the component will never update.\n  //\n  // I feel like this should be fixed at a more basic level by creating a new Test each\n  // time in DataProvider's getOrCreateTest, but that didn't work. I'm misunderstanding\n  // something in react renders.\n  const test = existing\n    ? new Test(\n        existing.database_key,\n        existing.nodeid,\n        existing.rolling_observations,\n        existing.corpus_observations,\n        existing.failures,\n        existing.fatal_failure,\n        existing.reports_by_worker,\n        existing.stability,\n      )\n    : null\n\n  useEffect(() => {\n    if (test) {\n      reHighlight(containerRef)\n    }\n  }, [test])\n\n  if (!nodeid || !test) {\n    return <div>Test not found</div>\n  }\n\n  const stats = getTestStats(test)\n\n  const headers = [\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faHashtag} />\n            </div>\n          }\n          tooltip=\"Number of inputs\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faCodeBranch} />\n            </div>\n          }\n          tooltip=\"Number of behaviors (typically branches) found\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faFingerprint} />\n            </div>\n          }\n          tooltip=\"Number of fingerprints (sets of behaviors) found\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faTachometerAlt} />\n            </div>\n          }\n          tooltip=\"Inputs per second\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faSeedling} />\n            </div>\n          }\n          tooltip=\"Number of inputs since a new behavior\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faClock} />\n            </div>\n          }\n          tooltip=\"Total time spent running\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faLocationPinLock} />\n            </div>\n          }\n          tooltip=\"Coverage stability (percentage of inputs with deterministic coverage when replayed)\"\n        />\n      ),\n    },\n  ]\n\n  return (\n    <div ref={containerRef}>\n      <Link to=\"/\" className=\"back-link\">\n        <FontAwesomeIcon icon={faArrowLeft} /> All tests\n      </Link>\n      <div className=\"card\">\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.7rem\" }}>\n          <span\n            style={{\n              wordBreak: \"break-all\",\n              fontSize: \"1.5rem\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {nodeid}\n          </span>\n          <TestStatusPill status={test.status} />\n        </div>\n        <div style={{ paddingTop: \"1rem\", paddingBottom: \"1rem\" }}>\n          <Table\n            headers={headers}\n            data={[stats]}\n            row={item => [\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>{item.inputs}</div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.behaviors}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.fingerprints}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.executions}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.inputsSinceBranch}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.timeSpent}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.stability}\n              </div>,\n            ]}\n          />\n        </div>\n      </div>\n      <CoverageGraph\n        tests={new Map([[nodeid, test]])}\n        workerViewSetting=\"graph_worker_view_test\"\n      />\n      {test.normalFailures.map(failure => (\n        <FailureCard failure={failure} />\n      ))}\n      {test.fatal_failure && <FatalFailureCard failure={test.fatal_failure} />}\n      <Tyche test={test} />\n      {nodeidsWithPatches?.includes(nodeid) && (\n        <div className=\"card\">\n          <Collapsible title=\"Patches\" defaultState=\"closed\" headerClass=\"card__header\">\n            <TestPatches nodeid={nodeid} />\n          </Collapsible>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { IconDefinition } from \"@fortawesome/fontawesome-svg-core\"\nimport {\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faLocationPinLock,\n  faSeedling,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Link } from \"react-router-dom\"\nimport { Table } from \"src/components/Table\"\nimport { statusStrings, TestStatusPill } from \"src/components/TestStatusPill\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { Test } from \"src/types/test\"\nimport { getTestStats, inputsPerSecond } from \"src/utils/testStats\"\nimport { commonPrefix } from \"src/utils/utils\"\n\nfunction Icon({ icon, tooltip }: { icon: IconDefinition; tooltip: string }) {\n  return (\n    <Tooltip\n      content={\n        <div className=\"table__header__icon\">\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      }\n      tooltip={tooltip}\n    />\n  )\n}\n\nfunction InlineStatistic({\n  icon,\n  value,\n}: {\n  icon: React.ReactNode\n  value: React.ReactNode\n}) {\n  return (\n    <div className=\"table__inline-statistic\">\n      {icon}\n      <span className=\"table__inline-statistic__value\">{value}</span>\n    </div>\n  )\n}\n\ninterface Props {\n  tests: Map<string, Test>\n  onFilterChange?: (filter: string) => void\n}\n\nexport function TestTable({ tests, onFilterChange }: Props) {\n  const sortedTests = Array.from(tests)\n    .sortKey(([nodeid, test]) => {\n      const ninputs = test.ninputs(null)\n      return [test.status, ninputs != null ? -ninputs : -1, nodeid]\n    })\n    .map(([nodeid, test]) => test)\n\n  const nodeidPrefix = commonPrefix(sortedTests.map(t => t.nodeid))\n  const iconInputs = <Icon icon={faHashtag} tooltip=\"Number of inputs\" />\n  const iconBehaviors = (\n    <Icon\n      icon={faCodeBranch}\n      tooltip=\"Number of behaviors (typically branches) found\"\n    />\n  )\n  const iconFingerprints = (\n    <Icon\n      icon={faFingerprint}\n      tooltip=\"Number of fingerprints (sets of behaviors) found\"\n    />\n  )\n  const iconExecutions = <Icon icon={faTachometerAlt} tooltip=\"Inputs per second\" />\n  const iconSinceNewBranch = (\n    <Icon icon={faSeedling} tooltip=\"Number of inputs since a new behavior\" />\n  )\n  const iconTimeSpent = <Icon icon={faClock} tooltip=\"Total time spent running\" />\n  const iconStability = (\n    <Icon\n      icon={faLocationPinLock}\n      tooltip=\"Coverage stability (percentage of inputs with deterministic coverage when replayed)\"\n    />\n  )\n\n  const headers = [\n    {\n      content: \"Test\",\n      sortKey: (test: Test) => test.nodeid,\n    },\n    {\n      content: \"Status\",\n      sortKey: (test: Test) => test.status,\n      align: \"center\",\n    },\n    {\n      content: iconInputs,\n      align: \"right\",\n      sortKey: (test: Test) => test.ninputs(null),\n    },\n    {\n      content: iconBehaviors,\n      align: \"right\",\n      sortKey: (test: Test) => test.behaviors,\n    },\n    {\n      content: iconFingerprints,\n      align: \"right\",\n      sortKey: (test: Test) => test.fingerprints,\n    },\n    {\n      content: iconExecutions,\n      align: \"right\",\n      sortKey: (test: Test) => inputsPerSecond(test) ?? -1,\n    },\n    {\n      content: iconSinceNewBranch,\n      align: \"right\",\n      sortKey: (test: Test) => test.since_new_behavior ?? 0,\n    },\n    {\n      content: iconTimeSpent,\n      align: \"right\",\n      sortKey: (test: Test) => test.elapsed_time(null),\n    },\n    {\n      content: iconStability,\n      align: \"right\",\n      sortKey: (test: Test) => test.stability ?? 0,\n    },\n  ]\n\n  const row = (test: Test): React.ReactNode[] => {\n    const stats = getTestStats(test)\n    const nodeid = test.nodeid.slice(nodeidPrefix.length)\n\n    return [\n      <Link\n        to={`/tests/${encodeURIComponent(test.nodeid)}`}\n        className=\"test__link\"\n        style={{ wordBreak: \"break-all\" }}\n      >\n        {nodeid}\n      </Link>,\n      <div style={{ textAlign: \"center\" }}>\n        <TestStatusPill status={test.status} />\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.inputs}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.behaviors}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.fingerprints}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.executions}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.inputsSinceBranch}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.timeSpent}\n      </div>,\n      <div style={{ textAlign: \"center\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.stability}\n      </div>,\n    ]\n  }\n\n  function mobileRow(test: Test) {\n    const stats = getTestStats(test)\n    const nodeid = test.nodeid.slice(nodeidPrefix.length)\n\n    return (\n      <div className=\"table__mobile-row\">\n        <div className=\"table__mobile-row__header\">\n          <Link\n            to={`/tests/${encodeURIComponent(test.nodeid)}`}\n            className=\"test__link\"\n            style={{ wordBreak: \"break-all\" }}\n          >\n            {nodeid}\n          </Link>\n          <TestStatusPill status={test.status} />\n        </div>\n        <div className=\"table__mobile-row__statistics\">\n          <InlineStatistic icon={iconInputs} value={stats.inputs} />\n          <InlineStatistic icon={iconBehaviors} value={stats.behaviors} />\n          <InlineStatistic icon={iconExecutions} value={stats.executions} />\n          <InlineStatistic icon={iconSinceNewBranch} value={stats.inputsSinceBranch} />\n          <InlineStatistic icon={iconTimeSpent} value={stats.timeSpent} />\n          <InlineStatistic icon={iconStability} value={stats.stability} />\n        </div>\n      </div>\n    )\n  }\n\n  function filterStrings(test: Test) {\n    return [test.nodeid, statusStrings[test.status]]\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Tests</div>\n      <Table\n        headers={headers}\n        data={sortedTests}\n        row={row}\n        mobileRow={mobileRow}\n        // `test` is not guaranteed to have a databse_key set (if e.g.\n        // ADD_REPORTS arrives before ADD_TESTS). Fall back to the default array\n        // index key if it's not set yet.\n        getKey={test => test.database_key ?? undefined}\n        filterStrings={filterStrings}\n        onFilterChange={onFilterChange}\n        perPage={40}\n      />\n    </div>\n  )\n}\n","import { useState } from \"react\"\nimport { CoverageGraph, WorkerView } from \"src/components/graph/CoverageGraph\"\nimport { TestTable } from \"src/components/TestTable\"\nimport { useData } from \"src/context/DataProvider\"\n\nexport function TestsPage() {\n  const { tests } = useData()\n  const [filterString, setFilterString] = useState(\"\")\n\n  return (\n    <div className=\"dashboard\">\n      <CoverageGraph\n        tests={tests}\n        filterString={filterString}\n        workerViews={[WorkerView.TOGETHER, WorkerView.LATEST]}\n        workerViewSetting=\"graph_worker_view_tests\"\n      />\n      <TestTable tests={tests} onFilterChange={setFilterString} />\n    </div>\n  )\n}\n","import { useEffect, useRef, useState } from \"react\"\n\ninterface RangeSliderProps {\n  min: number\n  max: number\n  value: [number, number]\n  onChange: (value: [number, number]) => void\n  step?: number\n}\n\nexport function RangeSlider({ min, max, value, onChange, step = 1 }: RangeSliderProps) {\n  const [dragging, setDragging] = useState<\"min\" | \"max\" | null>(null)\n  const sliderRef = useRef<HTMLDivElement>(null)\n  console.assert(min <= max, `min: ${min} max: ${max}`)\n\n  const [minValue, maxValue] = value\n  const range = max - min\n\n  const minPercent = range === 0 ? 0 : ((minValue - min) / range) * 100\n  const maxPercent = range === 0 ? 100 : ((maxValue - min) / range) * 100\n\n  // ensure that if both are overlapped on the very left (right) edge, the thumb\n  // with room to move right (left) is on top\n  const zIndexMin = minPercent < 50 ? 1 : 2\n  const zIndexMax = maxPercent < 50 ? 2 : 1\n\n  const getValueFromPosition = (clientX: number): number => {\n    if (!sliderRef.current) return min\n\n    const rect = sliderRef.current.getBoundingClientRect()\n    const percent = Math.max(\n      0,\n      Math.min(100, ((clientX - rect.left) / rect.width) * 100),\n    )\n    const rawValue = min + (percent / 100) * range\n\n    // Snap to step\n    const steppedValue = Math.round(rawValue / step) * step\n    return Math.max(min, Math.min(max, steppedValue))\n  }\n\n  const handleMouseDown = (thumb: \"min\" | \"max\") => (event: React.MouseEvent) => {\n    event.preventDefault()\n    setDragging(thumb)\n  }\n\n  const handleMouseMove = (event: MouseEvent) => {\n    if (!dragging) return\n\n    const newValue = getValueFromPosition(event.clientX)\n\n    if (dragging === \"min\") {\n      onChange([Math.min(newValue, maxValue), maxValue])\n    } else {\n      onChange([minValue, Math.max(newValue, minValue)])\n    }\n  }\n\n  const handleMouseUp = () => {\n    setDragging(null)\n  }\n\n  const handleTrackMouseDown = (event: React.MouseEvent) => {\n    if (dragging) return\n\n    const newValue = getValueFromPosition(event.clientX)\n    const minDistance = Math.abs(newValue - minValue)\n    const maxDistance = Math.abs(newValue - maxValue)\n\n    if (minDistance < maxDistance) {\n      onChange([Math.min(newValue, maxValue), maxValue])\n      setDragging(\"min\")\n    } else {\n      onChange([minValue, Math.max(newValue, minValue)])\n      setDragging(\"max\")\n    }\n  }\n\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener(\"mousemove\", handleMouseMove)\n      document.addEventListener(\"mouseup\", handleMouseUp)\n      return () => {\n        document.removeEventListener(\"mousemove\", handleMouseMove)\n        document.removeEventListener(\"mouseup\", handleMouseUp)\n      }\n    }\n    return () => {}\n  }, [dragging, handleMouseMove, handleMouseUp])\n\n  return (\n    <div className=\"range-slider\">\n      <div className=\"range-slider__container\">\n        <div\n          ref={sliderRef}\n          className=\"range-slider__track\"\n          onMouseDown={handleTrackMouseDown}\n        >\n          <div\n            className=\"range-slider__range\"\n            style={{\n              left: `${minPercent}%`,\n              width: `${maxPercent - minPercent}%`,\n            }}\n          />\n          <div\n            className={`range-slider__thumb range-slider__thumb--min`}\n            style={{\n              left: `${minPercent}%`,\n              zIndex: zIndexMin,\n            }}\n            onMouseDown={handleMouseDown(\"min\")}\n          />\n          <div\n            className={`range-slider__thumb range-slider__thumb--max`}\n            style={{\n              left: `${maxPercent}%`,\n              zIndex: zIndexMax,\n            }}\n            onMouseDown={handleMouseDown(\"max\")}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { OrderedSet } from \"immutable\"\nimport React, { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { RangeSlider } from \"src/components/RangeSlider\"\nimport { useData } from \"src/context/DataProvider\"\nimport { formatTime } from \"src/utils/testStats\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { navigateOnClick, readableNodeid } from \"src/utils/utils\"\n\ninterface Segment {\n  nodeid: string\n  start: number\n  end: number\n}\n\ninterface WorkerReport {\n  timestamp_monotonic: number\n  nodeid: string\n}\n\nclass Worker {\n  constructor(\n    public uuid: string,\n    public segments: Segment[],\n  ) {}\n\n  visibleSegments(range: [number, number]): Segment[] {\n    return this.segments.filter(\n      segment => segment.end >= range[0] && segment.start <= range[1],\n    )\n  }\n}\n\ninterface TimePeriod {\n  label: string\n  // duration in seconds\n  duration: number | null\n}\n\nconst TIME_PERIODS: TimePeriod[] = [\n  { label: \"Latest\", duration: null },\n  { label: \"1 hour\", duration: 1 * 60 * 60 },\n  { label: \"1 day\", duration: 24 * 60 * 60 },\n  { label: \"7 days\", duration: 7 * 24 * 60 * 60 },\n  { label: \"1 month\", duration: 30 * 24 * 60 * 60 },\n  { label: \"3 months\", duration: 90 * 24 * 60 * 60 },\n]\n\nfunction formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp * 1000)\n  return date.toLocaleString()\n}\n\n// tolerance for a region, in seconds\nconst REGION_TOLERANCE = 5 * 60\n\nfunction segmentRegions(segments: Segment[]): [number, number][] {\n  // returns a list of [start, end] regions, where a region is defined as the largest\n  // interval where there is no timestamp without an active segment.\n  // so in\n  //\n  // ```\n  //  [--]          [-------]\n  //   [---]  [-]     [------]\n  // [----]   [--]\n  // ```\n  // there are 3 regions.\n\n  // We iterate over the egments in order of start time. We track the latest seen end time.\n  // If we ever see a segment with a later start time than the current end time, that means\n  // there must have been empty space between them, which marks a new region.\n\n  // assert segments are sorted by segment.start\n  console.assert(\n    segments.every(\n      (segment, index) => index === 0 || segment.start >= segments[index - 1].start,\n    ),\n  )\n\n  if (segments.length == 0) {\n    return []\n  }\n\n  let regions: [number, number][] = []\n  let regionStart = segments[0].start\n  let latestEnd = segments[0].end\n  for (const segment of segments) {\n    if (segment.start > latestEnd + REGION_TOLERANCE) {\n      // this marks a new region\n      regions.push([regionStart, latestEnd])\n      regionStart = segment.start\n    }\n\n    latestEnd = Math.max(latestEnd, segment.end)\n  }\n\n  // finalize the current region\n  regions.push([regionStart, latestEnd])\n  return regions\n}\n\nfunction nodeColor(nodeid: string): string {\n  let hash = 0\n  for (let i = 0; i < nodeid.length; i++) {\n    hash = ((hash << 5) - hash + nodeid.charCodeAt(i)) & 0xffffffff\n  }\n\n  const hue = Math.abs(hash) % 360\n  const saturation = 45 + (Math.abs(hash >> 8) % 30) // 45-75%\n  const lightness = 45 + (Math.abs(hash >> 16) % 20) // 45-65%\n\n  return `hsl(${hue}, ${saturation}%, ${lightness}%)`\n}\n\nfunction DetailsItem({ label, value }: { label: string; value: React.ReactNode }) {\n  return (\n    <div className=\"workers__worker__details__item\">\n      <span className=\"workers__worker__details__label\">{label}</span>\n      <span className=\"workers__worker__details__value\">{value}</span>\n    </div>\n  )\n}\n\nconst WorkerBar = ({\n  worker,\n  range,\n  expandedWorkers,\n  onWorkerClick,\n  segmentStyle,\n  navigate,\n  showTooltip,\n  hideTooltip,\n  moveTooltip,\n}: {\n  worker: Worker\n  range: [number, number]\n  expandedWorkers: Set<string>\n  onWorkerClick: (uuid: string) => void\n  segmentStyle: (segment: Segment) => React.CSSProperties\n  navigate: ReturnType<typeof useNavigate>\n  showTooltip: (text: string, x: number, y: number, id: string) => void\n  hideTooltip: (id: string) => void\n  moveTooltip: (x: number, y: number, id: string) => void\n}) => {\n  return (\n    <div\n      key={worker.uuid}\n      className={`workers__worker${expandedWorkers.has(worker.uuid) ? \" workers__worker--expanded\" : \"\"}`}\n      onClick={() => onWorkerClick(worker.uuid)}\n      // these extra onMouseLeave calls shouldn't be necessary, but I've had trouble\n      // with the workers__timeline__segment mouse leave handler not firing consistently\n      onMouseLeave={() => hideTooltip(\"workers\")}\n    >\n      <div className=\"workers__worker__bar\" onMouseLeave={() => hideTooltip(\"workers\")}>\n        {worker.visibleSegments(range).map((segment, index) => (\n          <div\n            key={index}\n            className=\"workers__timeline__segment\"\n            style={segmentStyle(segment)}\n            onClick={event => {\n              navigateOnClick(\n                event,\n                `/tests/${encodeURIComponent(segment.nodeid)}`,\n                navigate,\n              )\n              // prevent the worker click handler from firing (which would distractingly\n              // expand the worker details for this worker during navigation)\n              event.stopPropagation()\n            }}\n            onMouseEnter={event =>\n              showTooltip(\n                readableNodeid(segment.nodeid),\n                event.clientX,\n                event.clientY,\n                \"workers\",\n              )\n            }\n            onMouseLeave={() => hideTooltip(\"workers\")}\n            onMouseMove={event => moveTooltip(event.clientX, event.clientY, \"workers\")}\n          />\n        ))}\n      </div>\n      {expandedWorkers.has(worker.uuid) && <WorkerDetails worker={worker} />}\n    </div>\n  )\n}\n\nconst WorkerDetails = ({ worker }: { worker: Worker }) => {\n  return (\n    <div className=\"workers__worker__details\">\n      <div className=\"workers__worker__details__grid\">\n        <DetailsItem label=\"Worker UUID\" value={worker.uuid} />\n        <DetailsItem\n          label=\"Lifetime\"\n          value={formatTime(\n            worker.segments[worker.segments.length - 1].end - worker.segments[0].start,\n          )}\n        />\n        <DetailsItem\n          label=\"Started\"\n          value={formatTimestamp(worker.segments[0].start)}\n        />\n        <DetailsItem\n          label=\"Last seen\"\n          value={formatTimestamp(worker.segments[worker.segments.length - 1].end)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function WorkersPage() {\n  const { tests } = useData()\n  const navigate = useNavigate()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n  const [expandedWorkers, setExpandedWorkers] = useState<Set<string>>(new Set())\n  const [selectedPeriod, setSelectedPeriod] = useState<TimePeriod>(TIME_PERIODS[0])\n  const [userRange, _setUserRange] = useState<[number, number] | null>(null)\n  const [rightSticky, setRightSticky] = useState<boolean>(false)\n\n  function setUserRange(range: [number, number] | null) {\n    _setUserRange(range)\n    // if a user sets the slider all the way to the right, consider it \"stickied\": future\n    // events which change the maximum range should also implicitly change the user range,\n    // because when a user sets the slider to the right, the want \"the most recent timestamp\n    // as of anytime\", not \"the most recent timestamp as of now\".\n    setRightSticky(range?.[1] == maxTimestamp)\n  }\n\n  const workerUuids = OrderedSet(\n    Array.from(tests.values())\n      .map(test => Array.from(test.reports_by_worker.keys()))\n      .flat()\n      .sortKey(uuid => uuid),\n  )\n\n  const workerReports = new Map<string, WorkerReport[]>()\n  workerUuids.forEach(uuid => {\n    const allReports: WorkerReport[] = []\n    workerReports.set(uuid, allReports)\n    Array.from(tests.values()).forEach(test => {\n      if (!test.reports_by_worker.has(uuid)) {\n        return\n      }\n\n      const reports = test.reports_by_worker.get(uuid)!\n      allReports.push(\n        ...reports.map(report => ({\n          timestamp_monotonic: report.timestamp_monotonic!,\n          nodeid: test.nodeid,\n        })),\n      )\n    })\n\n    allReports.sortKey(report => report.timestamp_monotonic)\n  })\n\n  let minTimestamp: number = Infinity\n  let maxTimestamp: number = -Infinity\n\n  let workers: Worker[] = []\n  workerUuids.forEach(uuid => {\n    const reports = workerReports.get(uuid)!\n    const segments: Segment[] = []\n    let currentSegment: Segment | null = null\n\n    reports.forEach((report, index) => {\n      minTimestamp = Math.min(minTimestamp, report.timestamp_monotonic)\n      maxTimestamp = Math.max(maxTimestamp, report.timestamp_monotonic)\n\n      if (!currentSegment || currentSegment.nodeid !== report.nodeid) {\n        // flush the current segment\n        if (currentSegment) {\n          segments.push(currentSegment)\n        }\n        currentSegment = {\n          nodeid: report.nodeid,\n          start: report.timestamp_monotonic,\n          end: report.timestamp_monotonic,\n        }\n      } else {\n        // extend the current segment\n        currentSegment.end = report.timestamp_monotonic\n      }\n\n      // if this is the last report, flush the segment\n      if (index === reports.length - 1 && currentSegment) {\n        segments.push(currentSegment)\n      }\n    })\n\n    workers.push(new Worker(uuid, segments))\n  })\n\n  workers.sortKey(worker => worker.segments[0].start)\n  const segments = workers\n    .flatMap(worker => worker.segments)\n    .sortKey(segment => segment.start)\n  const regions = segmentRegions(segments)\n\n  const span = maxTimestamp - minTimestamp\n  // find the first time period which is larger than the span of the workers.\n  // that time period is available, but anything after is not.\n  const firstLargerPeriod = TIME_PERIODS.findIndex(\n    period => period.duration !== null && period.duration >= span,\n  )\n\n  function getSliderRange(): [number, number] {\n    if (selectedPeriod.duration === null) {\n      const latestRegion = regions[regions.length - 1]\n      // the range is just the last region, unless there are no segments, in which case\n      // we use the min/max timestamp\n      return regions.length > 0\n        ? [latestRegion[0], latestRegion[1]]\n        : [minTimestamp, maxTimestamp]\n    }\n\n    const range: [number, number] = [\n      Math.max(minTimestamp, maxTimestamp - selectedPeriod.duration!),\n      maxTimestamp,\n    ]\n\n    // trim the slider range to remove any time at the beginning or end when there\n    // are no active workers\n    let trimmedMin: number | null = null\n    let trimmedMax: number | null = null\n    for (const worker of workers) {\n      const visibleSegments = worker.visibleSegments(range)\n      if (visibleSegments.length === 0) {\n        continue\n      }\n\n      if (trimmedMin === null || visibleSegments[0].start < trimmedMin) {\n        trimmedMin = visibleSegments[0].start\n      }\n\n      if (\n        trimmedMax === null ||\n        visibleSegments[visibleSegments.length - 1].end > trimmedMax\n      ) {\n        trimmedMax = visibleSegments[visibleSegments.length - 1].end\n      }\n    }\n\n    return [trimmedMin ?? range[0], trimmedMax ?? range[1]]\n  }\n\n  const sliderRange = getSliderRange()\n  // create a new ref to avoid a lint warning about mutating a useState value\n  let visibleRange: [number, number] = [...(userRange ?? sliderRange)]\n  if (rightSticky && userRange) {\n    visibleRange[1] = maxTimestamp\n  }\n\n  useEffect(() => {\n    setUserRange(null)\n  }, [selectedPeriod])\n\n  const [visibleMin, visibleMax] = visibleRange\n  const visibleDuration = visibleMax - visibleMin\n\n  const segmentStyle = (segment: Segment) => {\n    let left: number\n    let width: number\n    if (visibleDuration === 0) {\n      left = 0\n      width = 100\n    } else {\n      left = ((segment.start - visibleMin) / visibleDuration) * 100\n      width = ((segment.end - segment.start) / visibleDuration) * 100\n    }\n\n    // TODO we should compute a min in pixels, not percentage.\n    width = Math.max(width, 0.1)\n\n    return {\n      left: `${left}%`,\n      width: `${width}%`,\n      backgroundColor: nodeColor(segment.nodeid),\n    }\n  }\n\n  const onWorkerClick = (uuid: string) => {\n    setExpandedWorkers(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(uuid)) {\n        newSet.delete(uuid)\n      } else {\n        newSet.add(uuid)\n      }\n      return newSet\n    })\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Workers </div>\n      <div className=\"card__body\">\n        <div className=\"card__text\">\n          <div className=\"card__text__paragraph\">\n            This page shows the history of your workers, and what tests they have been\n            fuzzing.\n          </div>\n          <div className=\"card__text__paragraph\">\n            Roughly speaking, \"one worker\" = \"one CPU core\".\n          </div>\n        </div>\n        <div className=\"workers\">\n          <div className=\"workers__controls\">\n            <div className=\"workers__durations\">\n              {TIME_PERIODS.map((period, index) => {\n                const available = index <= firstLargerPeriod\n                return (\n                  <div\n                    key={index}\n                    className={`workers__durations__button ${\n                      selectedPeriod.label === period.label\n                        ? \"workers__durations__button--active\"\n                        : \"\"\n                    } ${!available ? \"workers__durations__button--disabled\" : \"\"}`}\n                    onClick={() => {\n                      if (!available) {\n                        return\n                      }\n                      setSelectedPeriod(period)\n                      // reset the range when clicking on a period, even if it's the same period. This gives a\n                      // nice \"reset button\" ux to users.\n                      setUserRange(null)\n                    }}\n                  >\n                    {period.label}\n                  </div>\n                )\n              })}\n            </div>\n            <RangeSlider\n              min={sliderRange[0]}\n              max={sliderRange[1]}\n              value={visibleRange}\n              onChange={newRange => setUserRange(newRange)}\n              step={(sliderRange[1] - sliderRange[0]) / 1000}\n            />\n          </div>\n          <div className=\"workers__timeline-header\">\n            <span className=\"workers__timeline-header__label\">\n              {formatTimestamp(visibleMin)}\n            </span>\n            <span className=\"workers__timeline-header__label\">\n              {formatTimestamp(visibleMax)}\n            </span>\n          </div>\n          {workers.map(\n            worker =>\n              worker.visibleSegments(visibleRange).length > 0 && (\n                <WorkerBar\n                  key={worker.uuid}\n                  worker={worker}\n                  range={visibleRange}\n                  expandedWorkers={expandedWorkers}\n                  onWorkerClick={onWorkerClick}\n                  segmentStyle={segmentStyle}\n                  navigate={navigate}\n                  showTooltip={showTooltip}\n                  hideTooltip={hideTooltip}\n                  moveTooltip={moveTooltip}\n                />\n              ),\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { BrowserRouter, HashRouter, Route, Routes } from \"react-router-dom\"\nimport { DataProvider } from \"src/context/DataProvider\"\nimport { NotificationProvider } from \"src/context/NotificationProvider\"\nimport { Layout } from \"src/Layout\"\nimport { CollectionStatusPage } from \"src/pages/CollectionStatus\"\nimport { NotFoundPage } from \"src/pages/NotFound\"\nimport { PatchesPage } from \"src/pages/Patches\"\nimport { TestPage } from \"src/pages/Test\"\nimport { TestsPage } from \"src/pages/Tests\"\nimport { WorkersPage } from \"src/pages/Workers\"\nimport { TooltipProvider } from \"src/utils/tooltip\"\n\nexport function App() {\n  const Router =\n    import.meta.env.VITE_ROUTER_TYPE === \"hash\" ? HashRouter : BrowserRouter\n\n  return (\n    <Router>\n      <NotificationProvider>\n        <DataProvider>\n          <TooltipProvider>\n            <Routes>\n              <Route element={<Layout />}>\n                <Route path=\"/\" element={<TestsPage />} />\n                <Route path=\"/patches\" element={<PatchesPage />} />\n                <Route path=\"/collected\" element={<CollectionStatusPage />} />\n                <Route path=\"/workers\" element={<WorkersPage />} />\n                <Route path=\"/tests/:nodeid\" element={<TestPage />} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n              </Route>\n            </Routes>\n          </TooltipProvider>\n        </DataProvider>\n      </NotificationProvider>\n    </Router>\n  )\n}\n","import \"src/styles/styles.scss\"\n// ensure our array prototype definitions get loaded\nimport \"src/utils/prototypes\"\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom/client\"\nimport { App } from \"src/App\"\n\nReactDOM.createRoot(document.getElementById(\"app\")!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","jsxRuntimeModule","require$$0","Array","prototype","sortKey","sort","a","b","keyA","keyB","isArray","i","Math","min","length","ReactSharedInternals","reactCompilerRuntime_production","size","compilerRuntimeModule","Notification","t0","$","_c","message","onDismiss","isVisible","shouldRender","setShouldRender","useState","t1","t2","timer","setTimeout","clearTimeout","useEffect","t3","t4","jsx","t5","e","stopPropagation","t6","Symbol","for","FontAwesomeIcon","faXmark","t7","t8","jsxs","NotificationContext","createContext","NotificationProvider","children","notifications","setNotifications","Map","timers","useRef","idCounter","id","current","get","delete","prev","filter","n","dismissNotification","duration","id_0","notification","prev_0","set","addNotification","id_1","message_0","duration_0","map","notification_0","timer_0","updateNotification","notification_1","index","top","t9","useNotification","context","useContext","Error","useIsMobile","isMobile","setIsMobile","checkIfMobile","window","matchMedia","matches","addEventListener","removeEventListener","Toggle","value","onChange","options","disabled","undefined","console","assert","Set","_temp","option","otherValue","find","o_0","o","mobileContent","content","String","Filter","constructor","name","valueName","predicate","extraData","createdAt","Date","now","FilterContext","FilterProvider","filtersByObsType","setFiltersByKey","observationCategory","setObservationCategory","filters","newFilters","newMap","setFilters","newFilters_0","filteredFilters","f","removeFilter","useFilters","TooltipContext","TOOLTIP_OFFSET","TOOLTIP_TOP_OFFSET","SCREEN_MARGIN","TooltipPortal","state","tooltipRef","left","position","setPosition","visible","x","y","tooltipRect","getBoundingClientRect","tooltipWidth","width","tooltipHeight","height","innerWidth","innerHeight","display","pointerEvents","zIndex","__html","createPortal","document","body","TooltipProvider","location","useLocation","owner","tooltipState","setTooltipState","pathname","showTooltip","owner_0","hideTooltip","x_0","y_0","owner_1","prev_1","moveTooltip","contextValue","useTooltip","sum","values","start","from","reduce","total","val","reHighlight","containerRef","force","querySelectorAll","forEach","element","removeAttribute","hljs","highlightElement","max","array","maxElement","maxValue","minValue","bisectRight","arr","low","high","mid","measureContainer","getMeasureContainer","createElement","style","cssText","appendChild","measureText","text","className","container","textContent","rect","navigateOnClick","event","url","navigate","metaKey","ctrlKey","button","resolvedUrl","origin","open","readableNodeid","nodeid","split","pop","commonPrefix","strings","delimiter","segments","s","minLen","prefix","seg","every","parts","push","joined","join","withDelim","startsWith","d3","select","d3_select","scaleLinear","d3_scaleLinear","scaleOrdinal","d3_scaleOrdinal","scaleBand","d3_scaleBand","axisBottom","d3_axisBottom","axisLeft","d3_axisLeft","Feature","getValue","observation","features","UserFeature","isSystem","SystemFeature","HORIZONTAL_BAR_FEATURE_CUTOFF","SELECTION_STROKE_WIDTH","NominalChart","feature","observations","parentRef","svgRef","nominalFilters","selectedValues","getSelectedValues","raw","filtered","_temp2","filteredObservations","newSelection","equals","first","_temp3","nominalFilters_0","some","obs","onValueClick","distinctRawValues","data","value_2","entries","_temp4","selectAll","remove","clientWidth","svg","attr","append","showTooltipHandler","d","label","count","clientX","clientY","margin","right","bottom","domain","range","colorScale","has","PRESENT_STRING","NOT_PRESENT_STRING","TYCHE_COLOR","PRIMARY","ACCENT","ACCENT2","ACCENT3","ACCENT4","g","xAccumulator","barHeight","count_0","value_4","barWidth","isSelected","on","event_0","event_1","call","tickFormat","_temp6","margin_0","innerWidth_0","innerHeight_0","keys","padding","g_0","enter","value_5","count_1","bandwidth","t10","count_2","event_2","t11","value_6","event_3","d_1","event_4","t12","value_7","t13","value_8","t14","count_3","t15","count_4","ticks","_temp7","faGear","d_2","round","Number","toString","d_0","_temp5","feature_0","SUCCESS","ERROR","value_3","value_0","obs_0","status","Collapsible","title","defaultState","onStateChange","headerClass","contentClass","setState","newState","toggleState","faCaretDown","faCaretRight","TycheSection","STABILITY_FEATURE_KEY","Features","T0","bb0","featureNames","add","feature_1","stability","Filters","allFilters","flat","filter_0","python","regex","IDENT_RE","RESERVED_WORDS","KEYWORDS","PROMPT","SUBST","LITERAL_BRACKET","STRING","digitpart","pointfloat","lookahead","NUMBER","COMMENT_TYPE","PARAMS","Pagination","currentPage","pageCount","onPageChange","getPageNumbers","pageNumbers","page","handlePageClick","handlePrevious","handleNext","faArrowLeftLong","page_0","isCurrentPage","faArrowRightLong","_","registerLanguage","perPage","Representation","observationType","observationsDivRef","setPage","rawRepresentations","repr","representation","ceil","representations","slice","requestAnimationFrame","justifyContent","marginBottom","marginTop","rep_0","MAX_MOSAIC_WIDTH","MosaicChart","verticalAxis","horizontalAxis","cssStyle","row","column","getSelectedCells","mosaicFilters","selectedCells","cells","rowTotals","fill","columnTotals","grandTotal","j","widthPercent","verticalPredicate","horizontalPredicate","visibleRows","visibleCols","onCellClick","rowIndex","colIndex","cell","List","colIdx","rowIdx","filterName","remainingCells","canonicalNames","axes","axis","subtract","col","toArray","rowHeaderWidth","columnHeaderHeight","rowTotalWidth","minCellWidth","minCellHeight","rowHeights","columnHeaderPositions","cellContainerWidth","rowCells","adjustedWidths","totalAdjustedWidth","maxWidth","minHeight","marginLeft","marginRight","isFirst","isLast","transform","textAlign","rowDisplayIndex","cursor","tooltipContent","minWidth","Summary","backgroundColor","WARNING","opacity","cellStyle","obs_2","isDuplicate","obs_1","isUnique","ACCENT5","TycheInner","test","corpus_observations","rolling_observations","rawObservations","observation_0","paddingTop","paddingBottom","alignItems","gap","fontSize","fontWeight","Fragment","run_start","Tyche","SKIP_EXCEPTIONS","Dataclass","withProperties","props","Object","assign","create","Failure","fromJson","Observation","StatusCounts","counts","Status","statuses","newStatuses","newStatusCounts","Phase","GENERATE","REPLAY","DISTILL","SHRINK","FAILED","Report","elapsed_time","timestamp","status_counts","behaviors","fingerprints","since_new_behavior","phase","worker_uuid","status_counts_diff","elapsed_time_diff","timestamp_monotonic","ninputs","status_reason","arguments_","how_generated","timing","metadata","property","arguments","TestStatus","FAILED_FATALLY","SHRINKING","RUNNING","SKIPPED_DYNAMICALLY","WAITING","report_with_diff","report","last_worker_report","last_status_counts","last_elapsed_time","Test","database_key","failures","fatal_failure","reports_by_worker","linear_reports","_status_counts_cumsum","_elapsed_time_cumsum","load_finished_at","reports_by_worker_","sorted_reports","flatMap","reports","_worker_uuid","add_report","_check_invariants","WAITING_STATUS_DURATION","_assert_reports_ordered","linear_status_counts","linear_elapsed_time","last_report_worker","reports_index","r","linear_report","splice","next_worker_report","i_offset","report_candidate","cache","start_idx","normalFailures","failure","exception","includes","skipFailures","latest","getTime","since","elapsed_times","_cumsum","initial","cumsum","running","FUZZJSON_INF","FUZZJSON_NINF","FUZZJSON_NAN","fuzzjsonReviver","_key","Infinity","NaN","DataContext","prepareObservations","reprCounts","_value","testsReducer","action","getOrCreateTest","DashboardEventType","tests","interesting_origin","observation_type","nodeids","DataProvider","socket","setSocket","dispatch","useReducer","loadData","setLoadData","setNodeid","count_tests","count_tests_loaded","loadingStatus","setLoadingStatus","nodeid_0","doLoadData","testsLoaded","clear","fetch","then","nodeid_1","testData","worker","Worker","text_0","Promise","resolve","onmessage","postMessage","data_0","nodeid_2","test_0","rolling","corpus","terminate","response_0","response","JSON","parse","useData","SidebarLink","to","icon","isActive","Link","Layout","sidebarOpen","setSidebarOpen","sidebarRef","listener","contains","target","faBars","faCode","faCodeCompare","faBox","faUser","import","replace","faBookOpen","Outlet","t16","pathname_2","pathname_1","pathname_0","Table","headers","mobileRow","getKey","onFilterChange","filterStrings","sortColumn","setSortColumn","sortDirection","setSortDirection","SortOrder","filterString","setFilterString","getDisplayData","displayData","item","checkString","toLowerCase","sorted","reverse","useMemo","handleHeaderClick","doFilterChange","pagedData","end","faTimes","header","align","order","faArrowUp","faArrowDown","rowValue","fetchData","endpoint","URL","json","fetchPatches","patches","fetchAvailablePatches","failing","covering","fetchCollectionStatus","collection_status","statusOrder","not_collected","collected","CollectionStatusPage","collectionStatus","setCollectionStatus","sortedResults","nodeidPrefix","item_1","wordBreak","encodeURIComponent","item_3","item_2","item_0","result","NotFoundPage","diff","TestPatches","setPatches","loading","setLoading","patchType","setPatchType","copySuccess","setCopySuccess","handleCopy","handleDownload","patch_0","patchNames","activePatch","navigator","clipboard","writeText","patch","blob","Blob","createObjectURL","href","download","click","removeChild","revokeObjectURL","faCheck","faCopy","t17","t18","faDownload","t19","t20","t21","t22","t23","PatchesPage","setNodeids","faArrowRight","formatTick","floor","toLocaleString","getTicks","baseScale","viewportScale","tickCount","zoomState","orientation","visibleDomain","invert","scaleX","offset","Axis","isHorizontal","x1","y1","x2","y2","tick","tickX","tickY","labelX","labelY","DataLines","lines","viewportXScale","viewportYScale","xValue","yValue","lineGenerator","d3_line","line","pathData","color","GraphReport","fromReport","settingCallbacks","useSetting","defaultValue","saved","sessionStorage","getItem","_setValue","newValue","setItem","stringify","callback","setValue","QUADTREE_SAMPLE_INTERVAL","MAX_SAMPLES_PER_LINE","sampleLinePoints","scales","points","viewWidth","baseX","viewHeight","baseY","PADDING","coords","viewportX","viewportY","visibleSegments","minX","maxX","minY","maxY","sqrt","EPS_Y","mergedSegments","isHoriz","abs","last","lastIsHoriz","yConst","newX1","newX2","totalVisibleLength","acc","pushIfFar","dx","dy","DISTANCE_THRESHOLD","interval","maxIntervals","capacity","numIntervalSamples","k","targetDistance","currentDistance","nextDistance","segT","workerOverlaps","reportsByWorker","intervals","workerUuid","workerReports","workerIds","overlaps","aId","bId","togetherReports","mostRecentVisible","r1","r2","w1","w2","identityZoomState","getConstrainedTransform","bounds","constrained","xMin","xMax","xRange","rangeStart","rangeEnd","leftVisibleValue","rightVisibleValue","yMin","yMax","yRange","rangeTop","rangeBottom","useScales","scaleSetting","scaleSettingY","axisSettingX","axisSettingY","d3_scaleSymlog","constrainedTransform","originalXRange","copy","defaultZoomState","useZoom","minScale","maxScale","wheelSensitivity","onZoomEnd","onDragEnd","setTransformState","isDragging","lastPointer","animationRef","isZooming","wheelTimeoutRef","cancelAnimationFrame","cancelAnimation","newTransform","setTransform","startTransform","startTime","performance","interpolateX","interpolate","interpolateY","interpolateScaleX","animate","currentTime","elapsed","progress","eased","pow","newTransform_0","resetZoom","handleWheel","mouseX","deltaX","deltaY","scaleFactor","newScale","wouldZoom","preventDefault","scaleRatio","constrainedTransform_0","passive","handleMouseMove","handleMouseUp","onMouseDown","onDoubleClick","GRAPH_HEIGHT","zoomIdentity","d3_zoomIdentity","interpolateViridis","d3_interpolateViridis","interpolateRgb","d3_interpolateRgb","schemeCategory10","d3_schemeCategory10","graphLines","viewSetting","workers_after","reportsColor","WorkerView","graphReports","timeColor","timestamps","timeColorScale","normalized","minTimestamp","maxTimestamp","recentReports","TOGETHER","SEPARATE","LATEST","linearStatusCounts","linearElapsedTime","LogLinearToggle","LabelX","scale","setScale","setAxis","flexDirection","faHashtag","faClock","LabelY","faCodeBranch","faFingerprint","workerToggleContent","faUsers","faCircleDot","GRAPH_MARGIN","GraphComponent","quadtreeRef","scaleSettingX","setScaleSettingX","setScaleSettingY","setAxisSettingX","setAxisSettingY","useNavigate","tooltip","containerWidth","setContainerWidth","hoveredState","setHoveredState","scalesRef","mouseDownPosRef","filteredLines","activeLine","resizeObserver","ResizeObserver","entry","contentRect","observe","disconnect","graphWidth","graphHeight","allReports","rebuildQuadtree","sampledPoints","quadtree","addAll","zoom","userSelect","DRAG_SUPPRESS_PX","currentTarget","mouseY","closestPoint","closestReport","minDistance","reportX","reportY","distance","toFixed","ColorLegend","colors","CoverageGraph","workerViews","workerViewSetting","setWorkerView","flex","view","statusStrings","TestStatusPill","Tooltip","formatTime","t","hours","minutes","seconds","padStart","inputsPerSecond","formatInputsPerSecond","perSecond","formatNumber","parseFloat","toPrecision","formatStability","isFinite","sign","suffixes","magnitude","log10","divisor","scaled","decimals","rounded","getTestStats","inputs","executions","inputsSinceBranch","timeSpent","FailureStatusPill","FailureCard","FatalFailureCard","whiteSpace","traceback","TestPage","useParams","nodeidsWithPatches","setNodeidsWithPatches","existing","stats","faTachometerAlt","faSeedling","faLocationPinLock","faArrowLeft","t24","t25","t26","t27","t28","fontVariantNumeric","Icon","InlineStatistic","TestTable","sortedTests","iconInputs","iconBehaviors","iconFingerprints","iconExecutions","iconSinceNewBranch","iconTimeSpent","iconStability","_temp8","_temp9","_temp0","_temp1","_temp10","test_10","test_11","stats_0","test_12","_temp11","test_13","test_9","test_8","test_7","test_6","test_5","test_4","test_3","test_2","test_1","TestsPage","RangeSlider","step","dragging","setDragging","sliderRef","minPercent","maxPercent","zIndexMin","zIndexMax","percent","rawValue","steppedValue","getValueFromPosition","thumb","handleMouseDown","newValue_0","maxDistance","handleTrackMouseDown","Worker$1","uuid","segment","TIME_PERIODS","formatTimestamp","REGION_TOLERANCE","segmentRegions","regions","regionStart","latestEnd","nodeColor","hash","charCodeAt","hue","saturation","lightness","DetailsItem","WorkerBar","expandedWorkers","onWorkerClick","segmentStyle","WorkerDetails","WorkersPage","setExpandedWorkers","selectedPeriod","setSelectedPeriod","userRange","_setUserRange","rightSticky","setRightSticky","setUserRange","workerUuids","OrderedSet","uuid_0","workers","uuid_1","reports_0","currentSegment","report_1","segments_0","span","period","firstLargerPeriod","findIndex","sliderRange","latestRegion","range_0","trimmedMin","trimmedMax","worker_1","getSliderRange","visibleRange","visibleMin","visibleMax","visibleDuration","segment_0","uuid_2","newSet","period_0","index_0","available","newRange","worker_2","worker_0","report_0","App","Router","HashRouter","Route","Routes","ReactDOM","createRoot","getElementById","render","React"],"mappings":";;;;;;;;6CAWA,IAAIA,EAAqB,OAAO,IAAI,4BAA4B,EAC9DC,EAAsB,OAAO,IAAI,gBAAgB,EACnD,SAASC,EAAQC,EAAMC,EAAQC,EAAU,CACvC,IAAIC,EAAM,KAGV,GAFWD,IAAX,SAAwBC,EAAM,GAAKD,GACxBD,EAAO,MAAlB,SAA0BE,EAAM,GAAKF,EAAO,KACxC,QAASA,EAAQ,CACnBC,EAAW,CAAA,EACX,QAASE,KAAYH,EACTG,IAAV,QAAuBF,EAASE,CAAQ,EAAIH,EAAOG,CAAQ,EACjE,MAASF,EAAWD,EAClB,OAAAA,EAASC,EAAS,IACX,CACL,SAAUL,EACV,KAAMG,EACN,IAAKG,EACL,IAAgBF,IAAX,OAAoBA,EAAS,KAClC,MAAOC,EAEX,CACA,OAAAG,GAAA,SAAmBP,EACnBO,GAAA,IAAcN,EACdM,GAAA,KAAeN,2CC9BbO,GAAA,QAAiBC,GAAA,yBCQdC,MAAMC,UAAUC,UACnBF,MAAMC,UAAUC,QAAU,SACxBP,EACK,CACL,OAAO,KAAKQ,KAAK,CAACC,EAAGC,IAAM,CACzB,MAAMC,EAAOX,EAAIS,CAAC,EACZG,EAAOZ,EAAIU,CAAC,EAElB,GAAIL,MAAMQ,QAAQF,CAAI,GAAKN,MAAMQ,QAAQD,CAAI,EAAG,CAC9C,QAASE,EAAI,EAAGA,EAAIC,KAAKC,IAAIL,EAAKM,OAAQL,EAAKK,MAAM,EAAGH,IAAK,CAC3D,GAAIH,EAAKG,CAAC,EAAIF,EAAKE,CAAC,EAAG,MAAO,GAC9B,GAAIH,EAAKG,CAAC,EAAIF,EAAKE,CAAC,EAAG,MAAO,EAChC,CACA,MAAO,EACT,CACA,OAAIH,EAAOC,EAAa,GACpBD,EAAOC,EAAa,EACjB,CACT,CAAC,CACH;;;;;;;;6CCnBF,IAAIM,EACFd,GAAA,EAAiB,gEACnB,OAAAe,GAAA,EAAY,SAAUC,EAAM,CAC1B,OAAOF,EAAqB,EAAE,aAAaE,CAAI,CACjD,2CCLEC,GAAA,QAAiBjB,GAAA,yBCAZ,SAAAkB,GAAAC,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAsB,CAAAC,QAAAA,EAAAC,UAAAA,EAAAC,UAAAA,CAAAA,EAAAL,EAC3B,CAAAM,EAAAC,CAAA,EAAwCC,EAAAA,SAASH,CAAS,EAAC,IAAAI,EAAAC,EAc5C,GAd4CT,OAAAI,GAEjDI,EAAAA,IAAA,CAAA,GACJJ,EAAS,CACXE,IAAoB,EAAC,MAAA,KAAA,CAIrB,MAAAI,EAAcC,WAAA,IAAA,CACZL,IAAqB,CAAC,EAAA,GAClB,EAAC,MAAA,IAEMM,aAAaF,CAAK,CAAC,CAAA,EAEjCD,GAACL,CAAS,EAACJ,KAAAI,EAAAJ,KAAAQ,EAAAR,KAAAS,IAAAD,EAAAR,EAAA,CAAA,EAAAS,EAAAT,EAAA,CAAA,GAZda,EAAAA,UAAUL,EAYPC,CAAW,EAAC,CAEVJ,EAAY,OAAA,KAMF,MAAAS,EAAA,gBAAgBV,EAAY,wBAA0B,sBAAsB,GAAE,IAAAW,EAAAf,OAAAE,GAGzFa,EAAAC,EAAAA,IAAA,MAAA,CAAe,UAAA,wBAAyBd,SAAAA,EAAQ,EAAMF,KAAAE,EAAAF,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EAAA,IAAAiB,EAAAjB,OAAAG,GAG3Cc,EAAAC,GAAA,CACPA,EAACC,gBAAAA,EACDhB,EAAAA,CAAW,EACZH,KAAAG,EAAAH,KAAAiB,GAAAA,EAAAjB,EAAA,CAAA,EAAA,IAAAoB,EAAApB,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAGDF,QAACG,EAAA,CAAsBC,KAAAA,EAAAA,CAAO,EAAIxB,KAAAoB,GAAAA,EAAApB,EAAA,CAAA,EAAA,IAAAyB,EAAAzB,OAAAiB,GARpCQ,EAAAT,EAAAA,IAAA,UACY,UAAA,sBACD,QAAAC,EAIE,aAAA,qBAEXG,SAAAA,CAAAA,CACF,EAASpB,KAAAiB,EAAAjB,KAAAyB,GAAAA,EAAAzB,EAAA,CAAA,EAAA,IAAA0B,EAAA,OAAA1B,EAAA,EAAA,IAAAG,GAAAH,EAAA,EAAA,IAAAc,GAAAd,EAAA,EAAA,IAAAe,GAAAf,QAAAyB,GAdXC,EAAAC,EAAAA,KAAA,MAAA,CACa,UAAAb,EACFX,UAETY,SAAAA,CAAAA,EACAU,CAAAA,EAUF,EAAMzB,MAAAG,EAAAH,MAAAc,EAAAd,MAAAe,EAAAf,MAAAyB,EAAAzB,MAAA0B,GAAAA,EAAA1B,EAAA,EAAA,EAfN0B,CAeM,CChCV,MAAME,GAAsBC,EAAAA,cAA8C,IAAI,EAMvE,SAAAC,GAAA/B,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAA8B,CAAA8B,SAAAA,CAAAA,EAAAhC,EAAuC,IAAAS,EAAAR,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GACHd,EAAA,CAAA,EAAER,KAAAQ,GAAAA,EAAAR,EAAA,CAAA,EAAzE,KAAA,CAAAgC,EAAAC,CAAA,EAA0C1B,EAAAA,SAA6BC,CAAE,EAAC,IAAAC,EAAAT,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAC/Bb,MAAAyB,IAASlC,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAApD,MAAAmC,EAAeC,EAAAA,OAA4B3B,CAAS,EACpD4B,EAAkBD,EAAAA,OAAA,CAAQ,EAAC,IAAAtB,EAAAd,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAECR,EAAAwB,GAAA,CAC1B1B,aAAauB,EAAMI,QAAAC,IAAaF,CAAE,CAAE,EACpCH,EAAMI,QAAAE,OAAgBH,CAAE,EAExBL,KAAyBS,EAAIC,UAAaC,EAACN,KAAQA,CAAE,CAAC,CAAC,EACxDtC,KAAAc,GAAAA,EAAAd,EAAA,CAAA,EALD,MAAA6C,EAA4B/B,EAK3B,IAAAC,EAAAf,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAEuBP,EAAAA,CAAAb,EAAA4C,IAAA,CACtB,MAAAC,EAAaV,EAASE,QAATF,EAASE,QAAA,EACtBS,EAAA,CAAAV,GAAyCA,EAAEpC,QAAAA,EAAA4C,SAAAA,CAAAA,EAEM,GAAjDb,EAAgBgB,GAAA,CAAA,GAAaP,EAAMM,CAAY,CAAC,EAE5CF,IAAQ,KAAS,CACnB,MAAApC,EAAcC,WAAA,IAAA,CACZkC,EAAoBP,CAAE,CAAC,EACtBQ,CAAQ,EACXX,EAAMI,QAAAW,IAAaZ,EAAI5B,CAAK,CAAC,CAAA,OAGxB4B,CAAE,EACVtC,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EAdD,MAAAmD,EAAwBpC,EAcvB,IAAAE,EAAAjB,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAE0BL,EAAAA,CAAAmC,EAAAC,EAAAC,IAAA,CASxB,GAJDrB,KACES,EAAIa,IAAAC,GACFR,EAAYV,KAAQA,EAAE,CAAA,GAAQU,EAAY9C,QAAEA,EAAO4C,SAAEA,CAAAA,EAAaE,CACpE,CACF,EAEIF,IAAQ,KAAS,CACnBlC,aAAauB,EAAMI,QAAAC,IAAaF,CAAE,CAAE,EACpC,MAAAmB,EAAc9C,WAAA,IAAA,CACZkC,EAAoBP,CAAE,CAAC,EACtBQ,CAAQ,EACXX,EAAMI,QAAAW,IAAaZ,EAAI5B,CAAK,CAAC,CAAA,EAEhCV,KAAAiB,GAAAA,EAAAjB,EAAA,CAAA,EAlBD,MAAA0D,EAA2BzC,EAkB1B,IAAAG,EAAApB,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAIUF,EAAA,CAAA+B,gBAAAA,EAAAO,mBAAAA,EAAAb,oBAAAA,CAAAA,EAA4D7C,KAAAoB,GAAAA,EAAApB,EAAA,CAAA,EAAA,IAAAyB,EAAA,GAAAzB,OAAAgC,EAAA,CAAA,IAAAN,EAAA1B,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAI9CI,EAAAA,CAAAiC,EAAAC,UACjB,MAAA,CAEY,UAAA,uBACH,MAAA,CAAAC,IAAO,GAAG,GAAKD,EAAK,EAAK,IAAA,EAEhC,SAAA5C,EAAAA,IAAClB,GAAA,CACU,QAAAkD,EAAY9C,QACV,UAAA,GACA,UAAA,IAAM2C,EAAoBG,EAAYV,EAAG,CAAA,CAAC,CAAA,EAPlDU,EAAYV,EASnB,EACDtC,KAAA0B,GAAAA,EAAA1B,EAAA,CAAA,EAZAyB,EAAAO,EAAauB,IAAK7B,CAYlB,EAAC1B,KAAAgC,EAAAhC,KAAAyB,CAAA,MAAAA,EAAAzB,EAAA,CAAA,EAAA,IAAA0B,EAAA1B,OAAAyB,GAbJC,EAAAV,EAAAA,IAAA,MAAA,CAAe,UAAA,gBACZS,SAAAA,EAaH,EAAMzB,KAAAyB,EAAAzB,MAAA0B,GAAAA,EAAA1B,EAAA,EAAA,EAAA,IAAA8D,EAAA,OAAA9D,EAAA,EAAA,IAAA+B,GAAA/B,QAAA0B,GAlBRoC,EAAAnC,EAAAA,KAAAC,GAAA,SAAA,CACS,MAAAR,EAENW,SAAAA,CAAAA,EACDL,CAAAA,EAeF,EAA+B1B,MAAA+B,EAAA/B,MAAA0B,EAAA1B,MAAA8D,GAAAA,EAAA9D,EAAA,EAAA,EAnB/B8D,CAmB+B,CAI5B,SAAAC,IAAA,CACL,MAAAC,EAAgBC,EAAAA,WAAArC,EAA8B,EAAC,GAAA,CAC1CoC,EAAO,MAAA,IAAAE,MACM,4DAA4D,EAAA,OAEvEF,CAAO,CChGT,SAAAG,IAAA,CAAA,MAAAnE,EAAAC,EAAAA,EAAA,CAAA,EACL,CAAAmE,EAAAC,CAAA,EAAgC9D,EAAAA,WAAc,EAAC,IAAAR,EAAAS,EAAA,OAAAR,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAErCvB,EAAAA,IAAA,CACR,MAAAuE,YAAA,CACED,EAAYE,OAAAC,WAAkB,oBAAoB,EAACC,OAAQ,CAAC,EAE9DH,OAAAA,EAAAA,EACAC,OAAAG,iBAAwB,SAAUJ,CAAa,EAAC,IACnCC,OAAAI,oBAA2B,SAAUL,CAAa,CAAC,EAC/D9D,EAAA,CAAA,EAAER,KAAAD,EAAAC,KAAAQ,IAAAT,EAAAC,EAAA,CAAA,EAAAQ,EAAAR,EAAA,CAAA,GAPLa,EAAAA,UAAUd,EAOPS,CAAE,EAEE4D,CAAQ,CCEV,SAAAQ,GAAA7E,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,CAAA,EAAmB,CAAA4E,MAAAA,EAAAC,SAAAA,EAAAC,QAAAA,EAAAC,SAAAxE,CAAAA,EAAAT,EAA4BiF,EAAAxE,IAAgByE,UAAhBzE,EACpD4D,EAAiBD,GAAAA,EAEjBe,QAAAC,OAAeC,GAAIL,EAAOxB,IAAA8B,EAAiB,CAAC,EAACzF,OAAUmF,EAAOtF,MAAO,EAGnD,MAAAgB,EAAA,UAAUuE,EAAW,mBAAqB,EAAE,GAAE,IAAAlE,EAAAd,EAAA,CAAA,IAAAgF,GAAAhF,EAAA,CAAA,IAAAoE,GAAApE,EAAA,CAAA,IAAA8E,GAAA9E,EAAA,CAAA,IAAA+E,GAAA/E,OAAA6E,GAC3D/D,EAAAiE,EAAOxB,IAAA+B,SACN,SAAA,CAEa,UAAA,iBAAiBT,IAAUS,EAAMT,MAAS,0BAA4B,EAAE,IAAIG,EAAW,2BAA6B,EAAE,GACxH,QAAA,IAAA,CAAA,GACHA,CAAAA,EAAQ,GAGRD,EAAOtF,QAAA,GAAgBoF,IAAUS,EAAMT,MAAM,CAC/C,MAAAU,EAAmBR,EAAOS,KAAAC,GAAWC,EAACb,QAAWS,EAAMT,KAAM,EAACA,MAC9DC,EAASS,CAAU,CAAC,MAEpBT,EAASQ,EAAMT,KAAM,CAAC,EAIzBT,SAAAA,EAAYkB,EAAMK,eAAkBL,EAAMM,QAAYN,EAAMM,OAAAA,EAdxDC,OAAOP,EAAMT,KAAM,CAe1B,CACD,EAAC7E,KAAAgF,EAAAhF,KAAAoE,EAAApE,KAAA8E,EAAA9E,KAAA+E,EAAA/E,KAAA6E,EAAA7E,KAAAc,GAAAA,EAAAd,EAAA,CAAA,EAAA,IAAAe,EAAA,OAAAf,EAAA,CAAA,IAAAS,GAAAT,OAAAc,GAnBJC,EAAAC,EAAAA,IAAA,MAAA,CAAgB,UAAAP,EACbK,SAAAA,EAmBH,EAAMd,KAAAS,EAAAT,KAAAc,EAAAd,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EApBNe,CAoBM,CA1BH,SAAAsE,GAAAK,EAAA,CAAA,OAG+BA,EAACb,KAAA,CCdhC,MAAMiB,EAAO,CAGlBC,YAEkBC,EAEAC,EACAC,EACA1H,EACA2H,EAChB,CANgBH,KAAAA,KAAAA,EAEAC,KAAAA,UAAAA,EACAC,KAAAA,UAAAA,EACA1H,KAAAA,IAAAA,EACA2H,KAAAA,UAAAA,EAEhB,KAAKC,UAAYC,KAAKC,IAAAA,CACxB,CAZAF,SAaF,CAYA,MAAMG,GAAgB1E,EAAAA,cAA6CoD,MAAS,EAErE,SAAAuB,GAAAzG,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAwB,CAAA8B,SAAAA,CAAAA,EAAAhC,EAAqC,IAAAS,EAAAR,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAK9Dd,EAAA,CAAC,WAAU,IAAA0B,GAAA,EAAYlC,KAAAQ,GAAAA,EAAAR,EAAA,CAAA,EAAA,IAAAS,EAAAT,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GADzBb,MAAAyB,IAAA,CACE1B,EAAuB,CACtB,cAAS0B,GAAA,CAAA,CAAA,EACVlC,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EANJ,KAAA,CAAAyG,EAAAC,CAAA,EAA4CnG,EAAAA,SAG1CE,CAIF,EACA,CAAAkG,EAAAC,CAAA,EACErG,EAAAA,SAA8B,UAAU,EAAC,IAAAO,EAAAd,EAAA,CAAA,IAAAyG,GAAAzG,OAAA2G,GAGzC7F,EAAA2F,EAAgBjE,IAAKmE,CAAmB,OAACzE,IAA+BlC,KAAAyG,EAAAzG,KAAA2G,EAAA3G,KAAAc,GAAAA,EAAAd,EAAA,CAAA,EAD1E,MAAA6G,EACE/F,EAAwE,IAAAC,EAAAf,OAAA2G,GACvD5F,EAAA+F,GAAA,CACjBJ,EAAehE,GAAA,CACb,MAAAqE,EAAA,IAAA7E,IAAuBQ,CAAI,EAC3BqE,OAAAA,EAAM7D,IAAKyD,EAAqBG,CAAU,EACnCC,CAAM,CACd,CAAC,EACH/G,KAAA2G,EAAA3G,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EAND,MAAAgH,EAAmBjG,EAMlB,IAAAE,EAAAjB,EAAA,CAAA,IAAA6G,GAAA7G,OAAAgH,GAEoB/F,EAAAzC,GAAA,CACnB,MAAAyI,EAAA,IAAA/E,IAA2B2E,CAAO,EAElCK,GADmBJ,EAAUtE,IAAKhE,CAAG,GAAC,CAAA,GACJmE,OAAAwE,GAAaA,EAAC3I,MAASA,CAAG,EAExD0I,EAAezH,SAAA,EACjBqH,EAAUrE,OAAQjE,CAAG,EAErBsI,EAAU5D,IAAK1E,EAAK0I,CAAe,EAGrCF,EAAWF,CAAU,CAAC,EACvB9G,KAAA6G,EAAA7G,KAAAgH,EAAAhH,KAAAiB,GAAAA,EAAAjB,EAAA,CAAA,EAZD,MAAAoH,EAAqBnG,EAYpB,IAAAG,EAAApB,EAAA,EAAA,IAAA6G,GAAA7G,EAAA,EAAA,IAAA2G,GAAA3G,EAAA,EAAA,IAAAoH,GAAApH,QAAAgH,GAEgC5F,EAAA,CAAAyF,QAAAA,EAAAG,WAAAA,EAAAI,aAAAA,EAAAT,oBAAAA,EAAAC,uBAAAA,CAAAA,EAMhC5G,MAAA6G,EAAA7G,MAAA2G,EAAA3G,MAAAoH,EAAApH,MAAAgH,EAAAhH,MAAAoB,GAAAA,EAAApB,EAAA,EAAA,EAND,MAAA6E,EAAiCzD,EAMhC,IAAAK,EAAA,OAAAzB,EAAA,EAAA,IAAA+B,GAAA/B,QAAA6E,GAEMpD,EAAAT,EAAAA,IAAAuF,GAAA,SAAA,CAA+B1B,MAAAA,EAAQ9C,SAAAA,EAAS,EAAyB/B,MAAA+B,EAAA/B,MAAA6E,EAAA7E,MAAAyB,GAAAA,EAAAzB,EAAA,EAAA,EAAzEyB,CAAyE,CAG3E,SAAA4F,IAAA,CACL,MAAArD,EAAgBC,EAAAA,WAAAsC,EAAwB,EAAC,GACrCvC,IAAOiB,OAAc,MAAA,IAAAf,MACP,iDAAiD,EAAA,OAE5DF,CAAO,CC3DhB,MAAMsD,GAAiBzF,EAAAA,cAAyC,IAAI,EAC9D0F,GAAiB,GACjBC,GAAqB,GACrBC,GAAgB,GAEtB,SAAAC,GAAA3H,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAuB,CAAA0H,MAAAA,CAAAA,EAAA5H,EACrB6H,EAAmBxF,EAAAA,OAAA,IAA2B,EAAC,IAAA5B,EAAAR,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAENd,EAAA,CAAAqH,KAAA,MAAAhE,IAAA,KAAA,EAA2B7D,KAAAQ,GAAAA,EAAAR,EAAA,CAAA,EAApE,KAAA,CAAA8H,EAAAC,CAAA,EAAgCxH,EAAAA,SAASC,CAA2B,EAAC,IAAAC,EAAAK,EA0ChC,GA1CgCd,EAAA,CAAA,IAAA2H,EAAAK,SAAAhI,EAAA,CAAA,IAAA2H,EAAAM,GAAAjI,EAAA,CAAA,IAAA2H,EAAAO,GAE3DzH,EAAAA,IAAA,CAAA,GACJ,CAACkH,EAAKK,SAAA,CAAaJ,EAAUrF,QAAQ,OAKzC,MAAA4F,EAAoBP,EAAUrF,QAAA6F,sBAAAA,EAC9BC,EAAqBF,EAAWG,MAChCC,EAAsBJ,EAAWK,OAEjC,IAAAX,EAAWF,EAAKM,EAAAV,GAChB1D,EAAU8D,EAAKO,EAAAV,GAEGK,EAAOQ,EACT9D,OAAAkE,WAAAhB,KACdI,EAAOF,EAAKM,EAAKI,EAAYd,GAEzBM,EAAIJ,KACNI,EAAAA,KAIAA,EAAIJ,KACNI,EAAAA,IAGEhE,EAAG4D,KACL5D,EAAAA,IAGiBA,EAAM0E,EACRhE,OAAAmE,YAAAjB,KACf5D,EAAM8D,EAAKO,EAAKK,EAAahB,GAEzB1D,EAAG4D,KACL5D,EAAAA,KAIJkE,EAAW,CAAAF,KAAAA,EAAAhE,IAAAA,CAAAA,CAAc,CAAC,EACzB/C,EAAA,CAAC6G,EAAKM,EAAIN,EAAKO,EAAIP,EAAKK,OAAA,EAAShI,EAAA,CAAA,EAAA2H,EAAAK,QAAAhI,EAAA,CAAA,EAAA2H,EAAAM,EAAAjI,EAAA,CAAA,EAAA2H,EAAAO,EAAAlI,KAAAS,EAAAT,KAAAc,IAAAL,EAAAT,EAAA,CAAA,EAAAc,EAAAd,EAAA,CAAA,GAxCpCa,EAAAA,UAAUJ,EAwCPK,CAAiC,EAAC,CAEhC6G,EAAKK,QAAA,OAAA,KAUE,MAAAjH,EAAA,GAAG+G,EAAQD,IAAA,KACZ5G,EAAA,GAAG6G,EAAQjE,GAAA,KAAQ,IAAAzC,EAAApB,EAAA,CAAA,IAAAe,GAAAf,OAAAiB,GAHnBG,EAAA,CAAA0G,SACK,QAAOD,KACX9G,EAAoB8C,IACrB5C,EAAmB0H,QACf,QAAOC,cACD,OAAMC,OAAA,IAAA,EAEtB7I,KAAAe,EAAAf,KAAAiB,EAAAjB,KAAAoB,GAAAA,EAAApB,EAAA,CAAA,EAAA,IAAAyB,EAAAzB,EAAA,CAAA,IAAA2H,EAAA/B,SAEAnE,EAAA,OAAOkG,EAAK/B,SAAa,SACxB5E,MAAA,OAA8B,wBAAA,CAAA8H,OAAUnB,EAAK/B,OAAAA,CAAA,CAAU,EAEvD+B,EAAK/B,QACN5F,EAAA,CAAA,EAAA2H,EAAA/B,QAAA5F,MAAAyB,GAAAA,EAAAzB,EAAA,EAAA,EAAA,IAAA0B,EAAA,OAAA1B,EAAA,EAAA,IAAAoB,GAAApB,QAAAyB,GAjBEC,EAAAqH,GAAAA,aACL/H,EAAAA,IAAA,MAAA,CACO4G,IAAAA,EACK,UAAA,iBACH,MAAAxG,EASNK,SAAAA,CAAAA,CAKH,EAAMuH,SAAAC,IAER,EAACjJ,MAAAoB,EAAApB,MAAAyB,EAAAzB,MAAA0B,GAAAA,EAAA1B,EAAA,EAAA,EApBM0B,CAoBN,CAGI,SAAAwH,GAAAnJ,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAyB,CAAA8B,SAAAA,CAAAA,EAAAhC,EAC9BoJ,EAAiBC,GAAAA,EAAa,IAAA5I,EAAAR,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GACiCd,EAAA,CAAAwH,QAAA,GAAApC,QAEpD,GAAEqC,EAAA,EAAAC,EAAA,EAAAmB,MAAA,IAAA,EAIZrJ,KAAAQ,GAAAA,EAAAR,EAAA,CAAA,EAND,KAAA,CAAAsJ,EAAAC,CAAA,EAAwChJ,EAAAA,SAAuBC,CAM9D,EAAC,IAAAC,EAAAT,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAIQb,EAAAA,IAAA,CACR8I,EAAelE,EAIb,CAAC,EACJrF,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAAA,IAAAc,EAAAd,EAAA,CAAA,IAAAmJ,EAAAK,UAAE1I,EAAA,CAACqI,EAAQK,QAAA,EAAUxJ,EAAA,CAAA,EAAAmJ,EAAAK,SAAAxJ,KAAAc,GAAAA,EAAAd,EAAA,CAAA,EANtBa,EAAAA,UAAUJ,EAMPK,CAAmB,EAAC,IAAAC,EAAAf,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAEHP,EAAAA,CAAA6E,EAAAqC,EAAAC,EAAAmB,IAAA,CAMlBE,EAAe,CAAAvB,QAAA,GAAApC,QAAAA,EAAAqC,EAAAA,EAAAC,EAAAA,EAAAmB,MAAAA,CAAAA,CAMd,CAAC,EACHrJ,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EAbD,MAAAyJ,EAAoB1I,EAanB,IAAAE,EAAAjB,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAEmBL,EAAAyI,GAAA,CAClBH,EAAetG,GACTP,EAAI2G,QAAWA,EAAK,CAAA,GAEjB3G,EAAIsF,QAAA,GAAAqB,MAAA,IAAA,EAKJ3G,CACR,CAAC,EACH1C,KAAAiB,GAAAA,EAAAjB,EAAA,CAAA,EAXD,MAAA2J,EAAoB1I,EAWnB,IAAAG,EAAApB,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAEmBF,EAAAA,CAAAwI,EAAAC,EAAAC,IAAA,CAClBP,EAAeQ,GACTrH,EAAIsF,SAAYtF,EAAI2G,QAAWA,IAAU3G,EAAIuF,IAAOA,GAAKvF,EAAIwF,IAAOA,GAAE,CAAA,GAEnExF,EAAIuF,EACPA,EAACC,EACDA,CAAAA,EAGGxF,CACR,CAAC,EACH1C,KAAAoB,GAAAA,EAAApB,EAAA,CAAA,EAXD,MAAAgK,EAAoB5I,EAWnB,IAAAK,EAAAzB,EAAA,CAAA,IAAAsJ,EAAAtB,SAEwCvG,EAAA,CAAAgI,YAAAA,EAAAE,YAAAA,EAAAK,YAAAA,EAAAhC,QAI9BsB,EAAYtB,OAAAA,EACtBhI,EAAA,CAAA,EAAAsJ,EAAAtB,QAAAhI,KAAAyB,GAAAA,EAAAzB,EAAA,CAAA,EALD,MAAAiK,EAAyCxI,EAKxC,IAAAC,EAAA1B,OAAAsJ,GAKG5H,QAACgG,GAAA,CAAqB4B,MAAAA,CAAAA,CAAY,EAAItJ,KAAAsJ,EAAAtJ,MAAA0B,GAAAA,EAAA1B,EAAA,EAAA,EAAA,IAAA8D,EAAA,OAAA9D,EAAA,EAAA,IAAA+B,GAAA/B,QAAAiK,GAAAjK,EAAA,EAAA,IAAA0B,GAFxCoC,EAAAnC,EAAAA,KAAA2F,GAAA,SAAA,CAAgC2C,MAAAA,EAC7BlI,SAAAA,CAAAA,EACDL,CAAAA,EACF,EAA0B1B,MAAA+B,EAAA/B,MAAAiK,EAAAjK,MAAA0B,EAAA1B,MAAA8D,GAAAA,EAAA9D,EAAA,EAAA,EAH1B8D,CAG0B,CAxEvB,SAAAuB,GAAA3C,EAAA,CAAA,MAAA,CAAA,GAcEA,EAAIsF,QAAA,GAAAqB,MAAA,IAAA,CAAA,CA8DN,SAAAa,IAAA,CACL,MAAAlG,EAAgBC,EAAAA,WAAAqD,EAAyB,EAAC,GAAA,CACrCtD,EAAO,MAAA,IAAAE,MACM,kDAAkD,EAAA,OAE7DF,CAAO,6BCvLT,SAASmG,GAAIC,EAA0BC,EAAgB,EAAW,CACvE,OAAOxL,MAAMyL,KAAKF,CAAM,EAAEG,OAAO,CAACC,EAAOC,IAAQD,EAAQC,EAAKJ,CAAK,CACrE,CAEO,SAASK,GACdC,EACAC,EAAiB,GACjB,CACKD,EAAapI,UAIdqI,GACFD,EAAapI,QAAQsI,iBAAiB,MAAM,EAAEC,QAAQC,GAAW,CAC/DA,EAAQC,gBAAgB,kBAAkB,CAC5C,CAAC,EAGHL,EAAapI,QACVsI,iBAAiB,oCAAoC,EACrDC,QAAQC,GAAW,CAClBE,GAAKC,iBAAiBH,CAAsB,CAC9C,CAAC,EACL,CAIO,SAASI,GACdC,EACA5M,EACmB,CACnB,GAAIA,EAAK,CACP,IAAI6M,EAAuB,KACvBC,EAA0B,KAE9B,QAAShM,EAAI,EAAGA,EAAI8L,EAAM3L,OAAQH,IAAK,CACrC,MAAMyL,EAAUK,EAAM9L,CAAC,EACjBuF,EAAQrG,EAAIuM,CAAO,EAErBlG,GAAS,OAASyG,IAAa,MAAQzG,EAAQyG,KACjDA,EAAWzG,EACXwG,EAAaN,EAEjB,CAEA,OAAOM,CACT,KAAO,CACL,IAAIC,EAA0B,KAE9B,QAAShM,EAAI,EAAGA,EAAI8L,EAAM3L,OAAQH,IAAK,CACrC,MAAMuF,EAAQuG,EAAM9L,CAAC,EAEjBuF,GAAS,OAASyG,IAAa,MAAQzG,EAAQyG,KACjDA,EAAWzG,EAEf,CAEA,OAAOyG,CACT,CACF,CAIO,SAAS9L,GACd4L,EACA5M,EACmB,CAgBZ,CACL,IAAI+M,EAA0B,KAE9B,QAASjM,EAAI,EAAGA,EAAI8L,EAAM3L,OAAQH,IAAK,CACrC,MAAMuF,EAAQuG,EAAM9L,CAAC,EAEjBuF,GAAS,OAAS0G,IAAa,MAAQ1G,EAAQ0G,KACjDA,EAAW1G,EAEf,CAEA,OAAO0G,CACT,CACF,CA4BO,SAASC,GAAYC,EAAYxD,EAAWzJ,EAAkC,CACnF,IAAIkN,EAAM,EACNC,EAAOF,EAAIhM,OACf,KAAOiM,EAAMC,GAAM,CACjB,MAAMC,EAAOF,EAAMC,IAAU,GACzBnN,EAAMA,EAAIiN,EAAIG,CAAG,CAAC,GAAK3D,EAAIwD,EAAIG,CAAG,GAAK3D,GACzCyD,EAAME,EAAM,EAEZD,EAAOC,CAEX,CACA,OAAOF,CACT,CAGA,IAAIG,GAAuC,KAE3C,SAASC,IAAmC,CAC1C,OAAKD,KACHA,GAAmB7C,SAAS+C,cAAc,KAAK,EAC/CF,GAAiBG,MAAMC,QAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MASjCjD,SAASC,KAAKiD,YAAYL,EAAgB,GAErCA,EACT,CAEO,SAASM,GACdC,EACAC,EAAoB,GACe,CACnC,MAAMC,EAAYR,GAAAA,EAGlBQ,EAAUD,UAAYA,EACtBC,EAAUC,YAAcH,EAExB,MAAMI,EAAOF,EAAUlE,sBAAAA,EACvB,MAAO,CAAEE,MAAOkE,EAAKlE,MAAOE,OAAQgE,EAAKhE,MAAAA,CAC3C,CAEO,SAASiE,GACdC,EACAC,EACAC,EACM,CAEN,GAAIF,EAAMG,SAAWH,EAAMI,SAAWJ,EAAMK,SAAW,EAAG,CAQxD,MAAM5D,EAAW5E,OAAO4E,SAClB6D,EACF,GAAG7D,EAAS8D,MAAM,GAAG9D,EAASK,QAAQ,IAAImD,CAAG,GAGjDpI,OAAO2I,KAAKF,EAAa,QAAQ,CACnC,MACEJ,EAASD,CAAG,CAEhB,CAEO,SAASQ,GAAeC,EAAwB,CACrD,OAAOA,EAAOC,MAAM,IAAI,EAAEC,OAASF,CACrC,CAEO,SAASG,GAAaC,EAAmBC,EAAoB,IAAa,CAC/E,GAAI,CAACD,GAAWA,EAAQ/N,OAAS,EAC/B,MAAO,GAGT,MAAMiO,EAAWF,EAAQjK,OAASoK,EAAEN,MAAMI,CAAS,CAAC,EAC9CG,EAASrO,KAAKC,IAAI,GAAGkO,EAASnK,IAAIoK,GAAKA,EAAElO,MAAM,CAAC,EAEhDoO,EAAmB,CAAA,EACzB,QAASvO,EAAI,EAAGA,EAAIsO,EAAQtO,IAAK,CAC/B,MAAMwO,EAAMJ,EAAS,CAAC,EAAEpO,CAAC,EAEzB,GAAI,CADaoO,EAASK,SAAeC,EAAM1O,CAAC,IAAMwO,CAAG,EAEvD,MAEFD,EAAOI,KAAKH,CAAG,CACjB,CAEA,GAAID,EAAOpO,SAAW,EACpB,MAAO,GAGT,MAAMyO,EAASL,EAAOM,KAAKV,CAAS,EAC9BW,EAAYF,EAASA,EAAST,EAAY,GAChD,OAAIW,GAAaZ,EAAQO,MAAMJ,GAAKA,EAAEU,WAAWD,CAAS,CAAC,EAClDA,EAEF,EACT,CCrNA,MAAME,GAAK,CACTC,OAAQC,GACRC,YAAaC,GACbC,aAAcC,GACdC,UAAWC,GACXC,WAAYC,GACZC,SAAUC,EACZ,EAEO,MAAeC,EAAQ,CAG5BpJ,YACSvH,EACAwH,EACP,CAFOxH,KAAAA,IAAAA,EACAwH,KAAAA,KAAAA,CACN,CAEHoJ,SAASC,EAA+B,CACtC,OAAOA,EAAYC,SAAS9M,IAAI,KAAKwD,IAAI,CAC3C,CACF,CAEO,MAAMuJ,WAAoBJ,EAAQ,CACvCK,SAAW,EACb,CAEO,MAAMC,WAAsBN,EAAQ,CAGzCpJ,YACkBvH,EACAwH,EACTnB,EACP,CACA,MAAMrG,EAAKwH,CAAI,EAJCxH,KAAAA,IAAAA,EACAwH,KAAAA,KAAAA,EACTnB,KAAAA,MAAAA,CAGT,CARA2K,SAAW,GAUFJ,SAASC,EAA+B,CAC/C,OAAO,KAAKxK,MAAMwK,CAAW,CAC/B,CACF,CAOA,MAAMK,GAAgC,EAChCC,GAAyB,IAExB,SAAAC,GAAA7P,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAsB,CAAA4P,QAAAA,EAAAC,aAAAA,CAAAA,EAAA/P,EAC3BgQ,EAAkB3N,EAAAA,OAAA,IAA2B,EAC7C4N,EAAe5N,EAAAA,OAAA,IAA0B,EACzC,CAAAyE,QAAAA,EAAAG,WAAAA,CAAAA,EAAgCK,GAAAA,EAChC,CAAAoC,YAAAA,EAAAE,YAAAA,EAAAK,YAAAA,CAAAA,EAAkDE,GAAAA,EAAY,IAAA1J,EAAAR,OAAA6P,EAAArR,KAAAwB,OAAA6G,GAE9DrG,YAAA,CACE,MAAAyP,EAAuBpJ,EAAOrE,IAAKqN,EAAOrR,GAAI,GAAC,CAAA,EAAM,GACjDyR,EAAcxQ,SAAA,EAAa,OACtB2F,GAAAA,EAGTF,QAAAC,OAAe8K,EAAcxQ,UAAa,EAC1C,MAAAkD,EAAesN,EAAc,CAAA,EAAG,OACzB7K,GAAIzC,EAAMwD,UAAA+J,cAAyB,CAAC,EAC5ClQ,EAAA,CAAA,EAAA6P,EAAArR,IAAAwB,KAAA6G,EAAA7G,KAAAQ,GAAAA,EAAAR,EAAA,CAAA,EATD,MAAAmQ,EAAA3P,EASC,IAAAC,EAAAT,OAAAmQ,GAEsB1P,EAAA0P,EAAAA,EAAmBnQ,KAAAmQ,EAAAnQ,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAA1C,MAAAkQ,EAAuBzP,EAAmB,IAAAK,EAAAd,EAAA,CAAA,IAAA8P,EAAAM,KAEnCtP,EAAAgP,EAAYM,IAAAzN,OAAA0C,EAA2C,EAACrF,EAAA,CAAA,EAAA8P,EAAAM,IAAApQ,KAAAc,GAAAA,EAAAd,EAAA,CAAA,EAAA,IAAAe,EAAAf,EAAA,CAAA,IAAA8P,EAAAO,UACnDtP,EAAA+O,EAAYO,SAAA1N,OAAA2N,EAAgD,EAACtQ,EAAA,CAAA,EAAA8P,EAAAO,SAAArQ,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EAAA,IAAAiB,EAAAjB,EAAA,CAAA,IAAAc,GAAAd,QAAAe,GAF5CE,EAAA,CAAAmP,IACtBtP,EAAwDuP,SACnDtP,CAAAA,EACXf,KAAAc,EAAAd,MAAAe,EAAAf,MAAAiB,GAAAA,EAAAjB,EAAA,EAAA,EAHD,MAAAuQ,EAA6BtP,EAG5B,IAAAG,EAAApB,EAAA,EAAA,IAAA6P,GAAA7P,EAAA,EAAA,IAAA6G,GAAA7G,EAAA,EAAA,IAAAkQ,GAAAlQ,QAAAgH,GAEoB5F,EAAAyD,GAAA,CACnB,IAAA2L,EAAmBpL,GAAAA,EAGf8K,EAAcO,OAAQrL,GAAA,CAAKP,CAAK,CAAC,CAAC,EACpC2L,EAAeA,GAAAA,EAGfA,EAAeA,GAAAA,CAAK3L,CAAK,CAAC,EAGxBoB,IAAAA,EACAuK,EAAY5Q,OAAA,EACdqG,EAAYuK,EAAYE,MAAAA,EAExBzK,EAAYuK,EAAYjN,IAAAoN,EAAwB,EAACxC,KAAM,MAAM,EAG/D,MAAAyC,EAAA,CAAA,EACIJ,EAAY5Q,KAAA,GACdqQ,EAAchC,KAAA,IAAAnI,GAEV+J,EAAO7J,KACPC,KAESuK,EAAYK,QACVhM,IAAUgL,EAAOT,SAAU0B,CAAG,CACtC,EAEH,WAAWjB,EAAOrR,GAAA,GAAM,CAAA0R,eAENM,CAAAA,CAAY,CAGlC,EAGF,MAAA1J,EAAA,IAAA5E,IAA2B2E,CAAO,EAClCC,EAAU5D,IAAK2M,EAAOrR,IAAMyR,CAAc,EAC1CjJ,EAAWF,CAAU,CAAC,EACvB9G,MAAA6P,EAAA7P,MAAA6G,EAAA7G,MAAAkQ,EAAAlQ,MAAAgH,EAAAhH,MAAAoB,GAAAA,EAAApB,EAAA,EAAA,EAxCD,MAAA+Q,EAAqB3P,EAwCpB,IAAAK,EAAAzB,EAAA,EAAA,IAAA6P,GAAA7P,EAAA,EAAA,IAAAuQ,EAAAF,UAAArQ,EAAA,EAAA,IAAAuQ,EAAAH,KAAApQ,EAAA,EAAA,IAAA2J,GAAA3J,EAAA,EAAA,IAAAgK,GAAAhK,EAAA,EAAA,IAAA+Q,GAAA/Q,EAAA,EAAA,IAAAkQ,GAAAlQ,QAAAyJ,GAEShI,EAAAA,IAAA,CAAA,GACJ8O,EAAoBF,SAAA5Q,QAAA,EAAqB,OAI7C,MAAAuR,EAA0B5L,GACxBmL,EAAoBH,IAAA7M,OAAgBsM,EAAOT,SAAU0B,CAAG,CAAC,CAC3D,EAEA,IAAAG,MAAA/O,IAAoC,UAE/BmN,KAAqBkB,EAAoBF,SAAA,CAC5C,MAAAa,EAAcrB,EAAOT,SAAUC,CAAW,EAC1C4B,EAAI/N,IAAK2B,GAAQoM,EAAIzO,IAAKqC,CAAK,GAAC,IAAU,CAAC,CAE7C,MAAA2F,EAAcL,GAAItL,MAAAyL,KAAW2G,EAAI7G,OAAAA,CAAS,CAAC,EAE3C6G,EAAAA,IAAAA,IACEA,CAAAA,GAAIA,EAAIE,SAAU,EAAApS,QAAAqS,EAIjB,CAAC,EAGJ9C,GAAAC,OAAUyB,EAAMzN,OAAQ,EAAC8O,UAAW,GAAG,EAACC,OAAAA,EAExC,MAAAhJ,EAAcyH,EAASxN,QAAAgP,YACvB/I,EAAewI,EAAiBpR,KAAA8P,GAAqC,GAAA,IAErE8B,EAAYlD,GAAAC,OACFyB,EAAMzN,OAAQ,EAACkP,KACjB,QAASnJ,CAAK,EAACmJ,KACf,SAAUjJ,CAAM,EAACkJ,OACf,GAAG,EAEbC,EAAA,SAAAjF,EAAAkF,EAAA,CACE,KAAA,CAAAC,EAAAC,CAAA,EAAuBF,EACvBnI,EACE,GAAGoG,EAAO7J,IAAA,OAAY6L,CAAK,KAAKC,CAAK,GACrCpF,EAAKqF,QACLrF,EAAKsF,QACL,eACF,CAAC,EACF,GAOGhB,EAAiBpR,KAAA8P,GAAqC,CACxD,MAAAuC,EAAA,CAAApO,IAAA,EAAAqO,MAAA,GAAAC,OAAA,GAAAtK,KAAA,EAAA,EACAY,EAAmBH,EAAQ2J,EAAMpK,KAAQoK,EAAMC,MAC/CxJ,EAAoBF,EAASyJ,EAAMpO,IAAOoO,EAAME,OAEhDlK,EAAUqG,GAAAG,YAAAA,EAAgB2D,OAAA,CAAA,EAAA,CAAA,CAAc,EAACC,MAAA,CAAA,EAAW5J,CAAU,CAAC,EAE3D6J,IAAAA,EACArB,EAAIsB,IAAAC,EAAmB,GAAKvB,EAAIsB,IAAAE,EAAuB,EACzDH,EAAAA,GAMAA,EAAaA,GAAAA,aAAAA,EACYA,OAEftB,CAAiB,EAACqB,MAAA,CAAAK,GAAAC,QAAAD,GAAAE,OAAAF,GAAAG,QAAAH,GAAAI,QAAAJ,GAAAK,OAAA,CAOzB,EAGL,MAAAC,EAAUxB,EAAGE,OACH,GAAG,EAACD,KACN,YAAa,aAAaQ,EAAMpK,IAAA,IAASoK,EAAMpO,GAAA,GAAO,EAE9D,IAAAoP,EAAA,EACA,MAAAC,EAAkBxK,EAAcuJ,EAAME,OAEtClB,EAAInG,QAAA,CAAAqI,EAAAC,IAAA,CACF,MAAAC,EAAkBvB,EAAQtH,EAAS/B,EACnC6K,EAAmBpD,EAAcqC,IAAK1N,CAAK,EAG3CmO,EAACtB,OAAQ,MAAM,EAACD,KACR,IAAKwB,CAAY,EAACxB,KAClB,IAAG,CAAG,EAACA,KACP,QAAS4B,CAAQ,EAAC5B,KAClB,SAAUyB,CAAS,EAACzB,KACpB,OAAQa,EAAWzN,CAAK,CAAC,EAACmH,MACzB,SAAU,SAAS,EAACuH,GACvB,QAAO,IAAQxC,EAAalM,CAAK,CAAC,EAAC0O,GACnC,YAAWC,GAAA,CACb7B,EAAmBjF,EAAK,CAAG7H,EAAOiN,CAAK,CAAC,CAAC,CAC1C,EAACyB,GACE,YAAWE,GACbzJ,EAAY0C,EAAKqF,QAAUrF,EAAKsF,QAAU,eAAe,CAC3D,EAACuB,GACG,aAAY,IAAQ5J,EAAY,eAAe,CAAC,EAGlD2J,GACFN,EAACtB,OAAQ,MAAM,EAACD,KACR,IAAKwB,EAAYtD,EAAyB,EAAC8B,KAC3C,IAAG9B,EAAwB,EAAC8B,KAC5B,QAAS4B,EAAW,EAAA1D,EAA0B,EAAC8B,KAC/C,SAAUyB,EAAY,EAAAvD,EAA0B,EAAC8B,KACjD,OAAQa,EAAWzN,CAAK,CAAC,EAAC4M,KAC1B,SAAU,OAAO,EAACA,KAClB,eAAc9B,EAAwB,EAAC3D,MACtC,iBAAkB,MAAM,EAGnCgH,EAACtB,OAAQ,MAAM,EAACD,KACR,IAAKwB,EAAeI,EAAQ,CAAI,EAAC5B,KACjC,IAAKyB,EAAS,CAAI,EAACzB,KACnB,cAAe,QAAQ,EAACA,KACxB,oBAAqB,SAAS,EAACA,KAC/B,OAAQ,OAAO,EAACrF,KAChBvH,CAAK,EAACmH,MACL,YAAa,MAAM,EAACA,MACpB,cAAe,MAAM,EAC9BiH,EAAAA,EAAgBI,CAAJ,CACb,EAEDL,EAACtB,OAAQ,GAAG,EAACD,KACL,YAAa,eAAeyB,CAAS,GAAG,EAACQ,KACzCpF,GAAAS,WAAc9G,CAAC,EAAC0L,WAAAC,EAAkD,CAAC,EAE3EZ,EAACtB,OAAQ,MAAM,EAACD,KACR,IAAKhJ,EAAU,CAAI,EAACgJ,KACpB,IAAKyB,EAAS,EAAK,EAACzB,KACpB,cAAe,QAAQ,EAACrF,KACxB,mBAAmB,EAACJ,MACnB,YAAa,MAAM,CAAC,KAAA,CAG7B,MAAA6H,EAAA,CAAAhQ,IAAA,EAAAqO,MAAA,EAAAC,OAAA,GAAAtK,KAAA,EAAA,EACAiM,EAAmBxL,EAAQ2J,EAAMpK,KAAQoK,EAAMC,MAC/C6B,EAAoBvL,EAASyJ,EAAMpO,IAAOoO,EAAME,OAEhDvI,EAAU0E,GAAAO,UAAAA,EACIuD,OACJvT,MAAAyL,KAAW2G,EAAI+C,KAAAA,CAAO,CAAC,EAAC3B,MAAA,CAAA,EACrB5J,CAAU,CAAC,EAACwL,UACX,EAEd/L,EAAUoG,GAAAG,YAAAA,EACM2D,OAAA,CAAA,EACFjH,GAAItM,MAAAyL,KAAW2G,EAAI7G,QAAS,CAAC,GAAC,CAAK,CAAC,EAACiI,MAAA,CACzC3J,IAAe,EAEzBwL,EAAU1C,EAAGE,OACH,GAAG,EAACD,KACN,YAAa,aAAaQ,EAAMpK,IAAA,IAASoK,EAAMpO,GAAA,GAAO,EAE9DmP,EAAC3B,UAAW,MAAM,EAACJ,KACXpS,MAAAyL,KAAW2G,EAAIE,QAAAA,CAAU,CAAC,EAACgD,QACzBzC,OACA,MAAM,EAACD,KACT,QAAS,KAAK,EAACA,KACf,IAAG/P,GAAA,CAAG,KAAA,CAAA0S,CAAA,EAAA1S,EAAe,OAAKuG,EAAEpD,CAAK,GAAC,CAAK,CAAA,EAAC4M,KACxC,IAAG3N,GAAA,CAAG,KAAA,CAAA,CAAAuQ,CAAA,EAAAvQ,EAAe,OAAKoE,EAAE4J,CAAK,CAAC,CAAA,EAACL,KACnC,QAASxJ,EAACqM,UAAAA,CAAY,EAAC7C,KACvB,SAAQ8C,GAAA,CAAG,KAAA,CAAA,CAAAC,CAAA,EAAAD,EAAe,OAAK7L,EAAcR,EAAE4J,CAAK,CAAC,CAAA,EAACL,KACtD,OAAMiB,GAAAC,OAAqB,EAAC3G,MAC3B,SAAU,SAAS,EAACuH,GACvB,QAAO,SAAAkB,EAAAC,EAAA,CAAmB,KAAA,CAAAC,CAAA,EAAAD,EAC5B3D,EAAalM,CAAK,CAAC,CACpB,EAAC0O,GACE,YAAW,SAAAqB,EAAAC,EAAA,CACblD,EAAmBjF,EAAOkF,CAAC,CAAC,CAC7B,EAAC2B,GACE,YAAWuB,GACb9K,EAAY0C,EAAKqF,QAAUrF,EAAKsF,QAAU,eAAe,CAC3D,EAACuB,GACG,aAAY,IAAQ5J,EAAY,eAAe,CAAC,EAEtDqJ,EAAC3B,UAAW,YAAY,EAACJ,KAErBpS,MAAAyL,KAAW2G,EAAIE,QAAAA,CAAU,EAACxO,OAAAoS,GAAA,CAAS,KAAA,CAAAC,CAAA,EAAAD,EAAe,OAChD7E,EAAcqC,IAAK1N,CAAK,CAAC,CAC3B,CACF,EAACsP,QACOzC,OACA,MAAM,EAACD,KACT,QAAS,WAAW,EAACA,KACrB,IAAGwD,GAAA,CAAG,KAAA,CAAAC,CAAA,EAAAD,EAAe,OAAMhN,EAAEpD,CAAK,GAAC,GAAK8K,EAA0B,CAAA,EAAC8B,KACnE,IAAG0D,GAAA,CAAG,KAAA,CAAA,CAAAC,CAAA,EAAAD,EAAe,OAAKjN,EAAE4J,CAAK,EAACnC,EAAyB,CAAA,EAAC8B,KAC5D,QAASxJ,EAACqM,UAAAA,EAAe,EAAA3E,EAA0B,EAAC8B,KAExD,SAAQ4D,GAAA,CACP,KAAA,CAAA,CAAAC,CAAA,EAAAD,EAAe,OAAK3M,EAAcR,EAAE4J,CAAK,EAAI,EAAAnC,EAA0B,CAC1E,EAAC8B,KACK,OAAMiB,GAAAC,OAAqB,EAAClB,KAC5B,SAAU,OAAO,EAACA,KAClB,eAAc9B,EAAwB,EAAC3D,MACtC,iBAAkB,MAAM,EAEjCgH,EAACtB,OAAQ,GAAG,EAACD,KACL,YAAa,eAAe/I,CAAW,GAAG,EAACgL,KAC3CpF,GAAAS,WAAc9G,CAAC,CAAC,EAACoJ,UACZ,MAAM,EAACI,KACZ,YAAa,aAAa,EAACzF,MAC1B,cAAe,KAAK,EAE7BgH,EAACtB,OAAQ,GAAG,EAACgC,KACXpF,GAAAW,SACY/G,CAAC,EAACqN,MAAA,CACJ,EAAC5B,WAAA6B,EACwC,CACrD,EAEAxC,EAACtB,OAAQ,MAAM,EAACD,KACR,YAAa,aAAa,EAACA,KAC3B,OAAQ,EAACA,KACT,IAAK,CAAC/I,GAAe,EAAC+I,KACtB,cAAe,QAAQ,EAACrF,KACxB,OAAO,EAACJ,MACP,YAAa,MAAM,CAAC,CAAA,EAEhChM,MAAA6P,EAAA7P,EAAA,EAAA,EAAAuQ,EAAAF,SAAArQ,EAAA,EAAA,EAAAuQ,EAAAH,IAAApQ,MAAA2J,EAAA3J,MAAAgK,EAAAhK,MAAA+Q,EAAA/Q,MAAAkQ,EAAAlQ,MAAAyJ,EAAAzJ,MAAAyB,GAAAA,EAAAzB,EAAA,EAAA,EAAA,IAAA0B,EAQC,GARD1B,EAAA,EAAA,IAAA6P,GAAA7P,EAAA,EAAA,IAAAuQ,GAAAvQ,EAAA,EAAA,IAAA2J,GAAA3J,QAAAgK,GAAAhK,EAAA,EAAA,IAAA+Q,GAAA/Q,EAAA,EAAA,IAAAkQ,GAAAlQ,EAAA,EAAA,IAAAyJ,GAAE/H,EAAA,CACD6O,EACAV,EACAlG,EACAK,EACA+G,EACAb,EACAzG,CAAW,EACZzJ,MAAA6P,EAAA7P,MAAAuQ,EAAAvQ,MAAA2J,EAAA3J,MAAAgK,EAAAhK,MAAA+Q,EAAA/Q,MAAAkQ,EAAAlQ,MAAAyJ,EAAAzJ,MAAA0B,GAAAA,EAAA1B,EAAA,EAAA,EA5ODa,EAAAA,UAAUY,EAoOPC,CAQF,EAEG6O,EAAoBF,SAAA5Q,QAAA,EAAqB,OAAA,KAAA,IAAAqE,EAAA9D,EAAA,EAAA,IAAA6P,EAAAL,UAOtC1L,EAAA+L,EAAOL,UACN7N,EAAAA,KAAA,OAAA,CAAgB,UAAA,UACd,SAAA,CAAAX,EAAAA,IAACO,EAAA,CAAsBkU,KAAAA,GAAkB,UAAA,gCAA+B,EACxEzU,EAAAA,IAAA,OAAA,CAAgB,UAAA,gBAAgB,SAAA,uDAAA,CAEhC,CAAA,EACF,EACDhB,EAAA,EAAA,EAAA6P,EAAAL,SAAAxP,MAAA8D,GAAAA,EAAA9D,EAAA,EAAA,EAAA,IAAAuU,EAAAvU,EAAA,EAAA,IAAA6P,EAAA7J,MACDuO,EAAAvT,EAAAA,IAAA,OAAA,CAAgB,UAAA,gCAAiC6O,WAAO7J,KAAM,EAAOhG,EAAA,EAAA,EAAA6P,EAAA7J,KAAAhG,MAAAuU,GAAAA,EAAAvU,EAAA,EAAA,EAAA,IAAA0U,EAAA1U,EAAA,EAAA,IAAAuU,GAAAvU,QAAA8D,GATvE4Q,EAAA/S,EAAAA,KAAA,MAAA,CAAe,UAAA,0BACZmC,SAAAA,CAAAA,EAQDyQ,CAAAA,EACF,EAAMvU,MAAAuU,EAAAvU,MAAA8D,EAAA9D,MAAA0U,GAAAA,EAAA1U,EAAA,EAAA,EAAA,IAAA+U,EAAA/U,EAAA,EAAA,IAAAqB,OAAAC,IAAA,2BAAA,GACNyT,eAAUhF,IAAAA,EAAqB,UAAA,wBAC7B,SAAA/O,EAAAA,IAAA,MAAA,CAAUgP,MAAe,MAAA,CAAA1H,MAAS,MAAA,EAAQ,CAAA,CAC5C,EAAMtI,MAAA+U,GAAAA,EAAA/U,EAAA,EAAA,EAAA,IAAAiV,EAAA,OAAAjV,QAAA0U,GAdRO,SAAA,MAAA,CACEP,SAAAA,CAAAA,EAWAK,CAAAA,EAGF,EAAM/U,MAAA0U,EAAA1U,MAAAiV,GAAAA,EAAAjV,EAAA,EAAA,EAfNiV,CAeM,CAnUH,SAAAO,GAAAE,EAAA,CAAA,OA0RoBnW,KAAAoW,MAAWC,OAAOhE,CAAC,CAAC,EAACiE,SAAAA,CAAW,CA1RpD,SAAAjC,GAAAkC,EAAA,CAAA,MAuMwC,GAAGvW,KAAAoW,MAAWC,OAAOhE,CAAC,EAAC,GAAM,CAAC,GAAG,CAvMzE,SAAAmE,GAAAC,EAAA,CAAA,OA8HOnG,IAAO2C,GAAmBE,GAAAuD,QAC1BpG,IAAO4C,GAAuBC,GAAAwD,MAAAxD,GAAAC,OAAA,CA/HrC,SAAAvB,GAAArR,EAAA,CAmF4B,KAAA,CAAAoW,CAAA,EAAApW,EAAe,OACtC8E,IAAK2N,GAAmB,EACxB3N,IAAK4N,GAAuB,EACzB5N,CAAK,CAtFb,SAAA8L,GAAAyF,EAAA,CAAA,MAsCqC,GAAGvR,CAAK,EAAE,CAtC/C,SAAAyL,GAAA+F,EAAA,CAAA,OAoB2CvF,EAAGwF,SAAY,SAAS,CApBnE,SAAAjR,GAAAyL,EAAA,CAAA,OAmBiCA,EAAGwF,SAAY,SAAS,CCzEzD,SAAAC,GAAAxW,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAqB,CAAAuW,MAAAA,EAAAzU,SAAAA,EAAA0U,aAAAjW,EAAAkW,cAAAA,EAAAC,YAAAlW,EAAAmW,aAAA9V,CAAAA,EAAAf,EAG1B0W,EAAAjW,IAAqByE,OAAN,OAAfzE,EAEAmW,EAAAlW,IAAgBwE,OAAF,GAAdxE,EACAmW,EAAA9V,IAAiBmE,OAAF,GAAfnE,EAEA,CAAA6G,EAAAkP,CAAA,EAA0BtW,EAAAA,SAASkW,CAAY,EAAC,IAAA1V,EAAAf,EAAA,CAAA,IAAA0W,GAAA1W,OAAA2H,GAE5B5G,EAAAA,IAAA,CAClB,MAAA+V,EAAiBnP,IAAU,OAAS,SAAW,OAC/CkP,EAASC,CAAQ,EACjBJ,IAAgBI,CAAQ,CAAA,EACzB9W,KAAA0W,EAAA1W,KAAA2H,EAAA3H,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EAJD,MAAA+W,EAAoBhW,EAQAE,EAAA,uBAAuB0V,CAAW,GAAE,IAAAvV,EAAApB,OAAA2H,GAClDvG,EAAAJ,EAAAA,IAAA,OAAA,CAAgB,UAAA,sBACb2G,aAAU,OACT3G,EAAAA,IAACO,EAAA,CAAsByV,KAAAA,GAAW,EAElChW,EAAAA,IAACO,EAAA,CAAsB0V,KAAAA,GAAY,EAEvC,EAAOjX,KAAA2H,EAAA3H,KAAAoB,GAAAA,EAAApB,EAAA,CAAA,EAAA,IAAAyB,EAAAzB,EAAA,CAAA,IAAAiB,GAAAjB,EAAA,CAAA,IAAAoB,GAAApB,EAAA,CAAA,IAAAwW,GAAAxW,OAAA+W,GAPTtV,gBAAgB,UAAAR,EAA+C8V,QAAAA,EAC7D3V,SAAAA,CAAAA,EAOCoV,CAAAA,EACH,EAAMxW,KAAAiB,EAAAjB,KAAAoB,EAAApB,KAAAwW,EAAAxW,KAAA+W,EAAA/W,KAAAyB,GAAAA,EAAAzB,EAAA,CAAA,EAAA,IAAA0B,EAAA1B,EAAA,EAAA,IAAA+B,GAAA/B,QAAA4W,GAAA5W,EAAA,EAAA,IAAA2H,GAELjG,EAAAiG,IAAU,QAAU3G,EAAAA,WAAgB,UAAA,GAAG4V,CAAY,GAAK7U,SAAAA,CAAAA,CAAS,EAAM/B,MAAA+B,EAAA/B,MAAA4W,EAAA5W,MAAA2H,EAAA3H,MAAA0B,GAAAA,EAAA1B,EAAA,EAAA,EAAA,IAAA8D,EAAA,OAAA9D,EAAA,EAAA,IAAAyB,GAAAzB,QAAA0B,GAZ1EoC,SAAA,MAAA,CACErC,SAAAA,CAAAA,EAWCC,CAAAA,EACH,EAAM1B,MAAAyB,EAAAzB,MAAA0B,EAAA1B,MAAA8D,GAAAA,EAAA9D,EAAA,EAAA,EAbN8D,CAaM,CClCH,SAAAoT,GAAAnX,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,CAAA,EAAsB,CAAAuW,MAAAA,EAAAzU,SAAAA,EAAA0U,aAAAjW,EAAAkW,cAAAA,CAAAA,EAAA3W,EAG3B0W,EAAAjW,IAAqByE,OAAN,OAAfzE,EAAqB,IAAAC,EAAA,OAAAT,EAAA,CAAA,IAAA+B,GAAA/B,EAAA,CAAA,IAAAyW,GAAAzW,EAAA,CAAA,IAAA0W,GAAA1W,OAAAwW,GAInB/V,eAAe,UAAA,iBACb,eAAC8V,GAAA,CACQC,MAAAA,EACOC,aAAAA,EACCC,cAAAA,EACH,YAAA,yBACC,aAAA,0BAEZ3U,SAAAA,EACH,EACF,EAAM/B,KAAA+B,EAAA/B,KAAAyW,EAAAzW,KAAA0W,EAAA1W,KAAAwW,EAAAxW,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAVNS,CAUM,CCrBV,MAAM0W,GAAwB,uBAEvB,SAAAC,GAAArX,EAAA,CAAA,MAAAC,EAAAC,EAAAA,EAAA,EAAA,EAAkB,CAAA6P,aAAAA,EAAAnJ,oBAAAA,CAAAA,EAAA5G,EAMxB,IAAAsX,EAAA7W,EAAAC,EAAAK,EAAA,GAAAd,EAAA,CAAA,IAAA2G,GAAA3G,OAAA8P,EAAA,CA+BUhP,EAAAO,OAAAC,iCAAG,EAACgW,EAAA,CA9Bb,MAAAC,MAAAnS,IAEA0K,EAAYM,IAAAtF,QAAAgG,GAAA,CAAA,UACLtS,KAAasS,EAAGxB,SAAA0E,KAAAA,EACfxV,EAAG6P,WAAY,mBAAmB,GAGtCkJ,EAAYC,IAAKhZ,CAAG,CAAC,CAExB,EAED,MAAA8Q,EAAiBzQ,MAAAyL,KAAWiN,CAAY,EAAChU,IAAA8B,EAEzC,EAaG,GAPCsB,GAAuB,WACzB2I,EAAQrB,KAAA,IAAAwB,GAAA0H,GAGJ,YAAW7G,EAAA,CAGf,EAGEhB,EAAQ7P,SAAA,EAAa,CAChBqB,EAAA,KAAI,MAAAwW,CAAA,CAAA,GAAA,CAORxH,EAAYO,SAAAQ,KAAAF,EAA8C,EAAC,CACvD7P,EAAA,KAAI,MAAAwW,CAAA,CAIVD,EAAAH,GAAmB1W,EAAA,WAAU,IAAAO,EAAAf,OAAA8P,GAIrB/O,EAAA0W,GACHzW,MAAC4O,GAAA,CAAsBC,QAAAA,EAAuBC,aAAAA,EAAY,EAC3D9P,KAAA8P,EAAA9P,KAAAe,GAAAA,EAAAf,EAAA,CAAA,EAJFS,EAAA5B,MAAAyL,KAAWgF,CAAQ,EAACvQ,QAAAqS,EACa,EAAC7N,IAC5BxC,CAEJ,CAAC,CAAAf,KAAA2G,EAAA3G,KAAA8P,EAAA9P,KAAAqX,EAAArX,KAAAQ,EAAAR,KAAAS,EAAAT,KAAAc,CAAA,MAAAuW,EAAArX,EAAA,CAAA,EAAAQ,EAAAR,EAAA,CAAA,EAAAS,EAAAT,EAAA,CAAA,EAAAc,EAAAd,EAAA,CAAA,EAAA,GAAAc,IAAAO,OAAAC,IAAA,6BAAA,EAAA,OAAAR,EAAA,IAAAC,EAAA,OAAAf,EAAA,CAAA,IAAAqX,GAAArX,OAAAQ,GAAAR,EAAA,EAAA,IAAAS,GANNM,EAAAC,EAAAA,IAACqW,EAAA,CAAmB,MAAA7W,EAEjBC,SAAAA,EAKH,EAAeT,KAAAqX,EAAArX,KAAAQ,EAAAR,MAAAS,EAAAT,MAAAe,GAAAA,EAAAf,EAAA,EAAA,EAPfe,CAOe,CAxDZ,SAAAqQ,GAAA4E,EAAA,CAAA,OAoDqBnG,EAAO7J,IAAA,CApD5B,SAAA2K,GAAA0F,EAAA,CAAA,OA4CkCvF,EAAGwF,SAAY,SAAS,CA5C1D,SAAAhG,GAAAjB,EAAA,CAAA,OA+BgBA,EAAWqI,WAAc,SAAS,CA/BlD,SAAArS,GAAAwK,EAAA,CAAA,OAAA,IAAAN,GAmBwBM,EAASA,CAAO,CAAA,CCvBxC,SAAA8H,IAAA,CAAA,MAAA3X,EAAAC,EAAAA,EAAA,CAAA,EACL,CAAA4G,QAAAA,EAAAO,aAAAA,CAAAA,EAAkCC,GAAAA,EAAY,IAAAtH,EAAAS,EAAA,GAAAR,EAAA,CAAA,IAAA6G,GAAA7G,OAAAoH,EAAA,CAOrC5G,EAAAa,OAAAC,iCAAG,EAACgW,EAAA,CALb,MAAAM,EAAmB/Y,MAAAyL,KAAWzD,EAAOuD,OAAAA,CAAS,EAACyN,KAAAA,EACtC9Y,QAAAsG,EAC4B,EAAC,GAElCuS,EAAUnY,SAAA,EAAa,CAClBe,EAAA,KAAI,MAAA8W,CAAA,CAAA,IAAA7W,EAAAT,EAAA,CAAA,IAAAqB,OAAAC,IAAA,2BAAA,GAKTb,EAAAO,EAAAA,IAAA,MAAA,CAAe,UAAA,wBAAwB,SAAA,UAAO,EAAMhB,KAAAS,GAAAA,EAAAT,EAAA,CAAA,EAAA,IAAAc,EAAAd,OAAAoH,GACpCtG,EAAAgX,GACdnW,EAAAA,KAAA,MAAA,CAAgC,UAAA,yBAC9B,SAAA,CAAAA,EAAAA,KAAA,MAAA,CAAe,UAAA,+BACb,SAAA,CAAAX,EAAAA,WACY,UAAA,iCACD,QAAA,IAAMoG,EAAazE,EAAMnE,GAAI,EAEtC,SAAAwC,EAAAA,IAACO,EAAA,CAAsBC,KAAAA,GAAO,EAChC,EACCmB,EAAMqD,IAAAA,EACT,EACAhF,EAAAA,IAAA,MAAA,CAAe,UAAA,qCAAsC2B,WAAMsD,SAAAA,CAAW,CAAA,CAAA,EAV9DtD,EAAMnE,GAWhB,EACDwB,KAAAoH,EAAApH,KAAAc,GAAAA,EAAAd,EAAA,CAAA,EAfHD,gBAAe,UAAA,iBACbU,SAAAA,CAAAA,EACCmX,EAAUrU,IAAKzC,CAaf,CAAA,EACH,CAAM,CAAAd,KAAA6G,EAAA7G,KAAAoH,EAAApH,KAAAD,EAAAC,KAAAQ,CAAA,MAAAT,EAAAC,EAAA,CAAA,EAAAQ,EAAAR,EAAA,CAAA,EAAA,OAAAQ,IAAAa,OAAAC,IAAA,6BAAA,EAAAd,EAhBNT,CAgBM,CA5BH,SAAAsF,GAAA1C,EAAA,CAAA,OAKgBA,EAAMyD,SAAA,CCF7B,SAAS2R,GAAO9M,EAAM,CACpB,MAAM+M,EAAQ/M,EAAK,MACbgN,EAAW,WAAA,sCAAA,GAAoC,EAC/CC,EAAiB,CACrB,MACA,KACA,SACA,QACA,QACA,QACA,OACA,QACA,WACA,MACA,MACA,OACA,OACA,SACA,UACA,MACA,OACA,SACA,KACA,SACA,KACA,KACA,SACA,QACA,cACA,MACA,KACA,OACA,QACA,SACA,MACA,QACA,OACA,OACJ,EAsGQC,EAAW,CACf,SAAU,sBACV,QAASD,EACT,SAvGgB,CAChB,aACA,MACA,MACA,MACA,QACA,MACA,OACA,aACA,YACA,QACA,WACA,MACA,cACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,OACA,SACA,QACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,MACA,KACA,QACA,MACA,aACA,aACA,OACA,MACA,OACA,SACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,QACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,OACA,KACJ,EAkCI,QAhCe,CACf,YACA,WACA,QACA,OACA,iBACA,MACJ,EA0BI,KArBY,CACZ,MACA,WACA,YACA,OACA,OACA,UACA,UACA,WACA,WACA,MACA,QACA,OACA,OACJ,CAQA,EAEQE,EAAS,CACb,UAAW,OACX,MAAO,gBACX,EAEQC,EAAQ,CACZ,UAAW,QACX,MAAO,KACP,IAAK,KACL,SAAUF,EACV,QAAS,GACb,EAEQG,EAAkB,CACtB,MAAO,OACP,UAAW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","x_google_ignoreList":[0,1,3,4,17,32]}