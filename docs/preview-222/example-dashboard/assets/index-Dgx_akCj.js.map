{"version":3,"file":"index-Dgx_akCj.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.js","../../node_modules/react/jsx-runtime.js","../../src/utils/prototypes.tsx","../../node_modules/react/cjs/react-compiler-runtime.production.js","../../node_modules/react/compiler-runtime.js","../../src/components/Notification.tsx","../../src/context/NotificationProvider.tsx","../../src/hooks/useIsMobile.ts","../../src/components/Toggle.tsx","../../src/tyche/FilterContext.tsx","../../src/utils/tooltip.tsx","../../src/utils/utils.ts","../../src/tyche/NominalChart.tsx","../../src/components/Collapsible.tsx","../../src/tyche/TycheSection.tsx","../../src/tyche/Features.tsx","../../src/tyche/Filters.tsx","../../node_modules/highlight.js/es/languages/python.js","../../src/components/Pagination.tsx","../../src/tyche/Representation.tsx","../../src/tyche/MosaicChart.tsx","../../src/tyche/Samples.tsx","../../src/tyche/Tyche.tsx","../../src/types/dashboard.ts","../../src/types/test.ts","../../src/context/DataProvider.tsx","../../src/Layout.tsx","../../src/components/Table.tsx","../../src/utils/api.ts","../../src/pages/CollectionStatus.tsx","../../src/pages/NotFound.tsx","../../node_modules/highlight.js/es/languages/diff.js","../../src/components/TestPatches.tsx","../../src/pages/Patches.tsx","../../src/components/graph/Axis.tsx","../../src/components/graph/DataLines.tsx","../../src/components/graph/types.ts","../../src/hooks/useSetting.ts","../../src/components/graph/useScales.ts","../../src/components/graph/useZoom.ts","../../src/components/graph/CoverageGraph.tsx","../../src/components/TestStatusPill.tsx","../../src/components/Tooltip.tsx","../../src/utils/testStats.tsx","../../src/pages/Test.tsx","../../src/components/TestTable.tsx","../../src/pages/Tests.tsx","../../src/components/RangeSlider.tsx","../../src/pages/Workers.tsx","../../src/App.tsx","../../src/main.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar REACT_ELEMENT_TYPE = Symbol.for(\"react.transitional.element\"),\n  REACT_FRAGMENT_TYPE = Symbol.for(\"react.fragment\");\nfunction jsxProd(type, config, maybeKey) {\n  var key = null;\n  void 0 !== maybeKey && (key = \"\" + maybeKey);\n  void 0 !== config.key && (key = \"\" + config.key);\n  if (\"key\" in config) {\n    maybeKey = {};\n    for (var propName in config)\n      \"key\" !== propName && (maybeKey[propName] = config[propName]);\n  } else maybeKey = config;\n  config = maybeKey.ref;\n  return {\n    $$typeof: REACT_ELEMENT_TYPE,\n    type: type,\n    key: key,\n    ref: void 0 !== config ? config : null,\n    props: maybeKey\n  };\n}\nexports.Fragment = REACT_FRAGMENT_TYPE;\nexports.jsx = jsxProd;\nexports.jsxs = jsxProd;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","export {}\n\ndeclare global {\n  interface Array<T> {\n    /**\n     * Similar to Array.sort, but uses a per-item key function, like python's list.sort(key=lambda x: x.id).\n     */\n    sortKey<K extends any[] | string | number>(key: (item: T) => K): T[]\n  }\n}\n\nif (!Array.prototype.sortKey) {\n  Array.prototype.sortKey = function <T, K extends any[] | string | number>(\n    key: (item: T) => K,\n  ): T[] {\n    return this.sort((a, b) => {\n      const keyA = key(a)\n      const keyB = key(b)\n\n      if (Array.isArray(keyA) && Array.isArray(keyB)) {\n        for (let i = 0; i < Math.min(keyA.length, keyB.length); i++) {\n          if (keyA[i] < keyB[i]) return -1\n          if (keyA[i] > keyB[i]) return 1\n        }\n        return 0\n      }\n      if (keyA < keyB) return -1\n      if (keyA > keyB) return 1\n      return 0\n    })\n  }\n}\n","/**\n * @license React\n * react-compiler-runtime.production.js\n *\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n\"use strict\";\nvar ReactSharedInternals =\n  require(\"react\").__CLIENT_INTERNALS_DO_NOT_USE_OR_WARN_USERS_THEY_CANNOT_UPGRADE;\nexports.c = function (size) {\n  return ReactSharedInternals.H.useMemoCache(size);\n};\n","/**\n * Copyright (c) Meta Platforms, Inc. and affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-compiler-runtime.production.js');\n} else {\n  module.exports = require('./cjs/react-compiler-runtime.development.js');\n}\n","import { faXmark } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode, useEffect, useState } from \"react\"\n\ninterface NotificationProps {\n  message: string | ReactNode\n  onDismiss: () => void\n  isVisible: boolean\n}\n\nexport function Notification({ message, onDismiss, isVisible }: NotificationProps) {\n  const [shouldRender, setShouldRender] = useState(isVisible)\n\n  useEffect(() => {\n    if (isVisible) {\n      setShouldRender(true)\n      return\n    } else {\n      // Delay unmounting to allow exit animation\n      const timer = setTimeout(() => {\n        setShouldRender(false)\n      }, 300)\n\n      return () => clearTimeout(timer)\n    }\n  }, [isVisible])\n\n  if (!shouldRender) {\n    return null\n  }\n\n  return (\n    <div\n      className={`notification ${isVisible ? \"notification--visible\" : \"notification--hidden\"}`}\n      onClick={onDismiss}\n    >\n      <div className=\"notification__content\">{message}</div>\n      <button\n        className=\"notification__close\"\n        onClick={e => {\n          e.stopPropagation()\n          onDismiss()\n        }}\n        aria-label=\"Close notification\"\n      >\n        <FontAwesomeIcon icon={faXmark} />\n      </button>\n    </div>\n  )\n}\n","import React, { createContext, ReactNode, useContext, useRef, useState } from \"react\"\nimport { Notification } from \"src/components/Notification\"\n\ninterface NotificationData {\n  id: number\n  message: ReactNode\n  duration: number | null\n}\n\ninterface NotificationContextType {\n  addNotification: (message: ReactNode, duration: number | null) => number\n  updateNotification: (id: number, message: ReactNode, duration: number | null) => void\n  dismissNotification: (id: number) => void\n}\n\nconst NotificationContext = createContext<NotificationContextType | null>(null)\n\ninterface NotificationProviderProps {\n  children: React.ReactNode\n}\n\nexport function NotificationProvider({ children }: NotificationProviderProps) {\n  const [notifications, setNotifications] = useState<NotificationData[]>([])\n  const timers = useRef<Map<number, number>>(new Map())\n  const idCounter = useRef(0)\n\n  const dismissNotification = (id: number) => {\n    clearTimeout(timers.current.get(id)!)\n    timers.current.delete(id)\n\n    setNotifications(prev => prev.filter(n => n.id !== id))\n  }\n\n  const addNotification = (message: ReactNode, duration: number | null) => {\n    const id = ++idCounter.current\n    const notification: NotificationData = { id, message, duration }\n\n    setNotifications(prev => [...prev, notification])\n\n    if (duration !== null) {\n      const timer = setTimeout(() => {\n        dismissNotification(id)\n      }, duration)\n      timers.current.set(id, timer)\n    }\n\n    return id\n  }\n\n  const updateNotification = (\n    id: number,\n    message: ReactNode,\n    duration: number | null,\n  ) => {\n    setNotifications(prev =>\n      prev.map(notification =>\n        notification.id === id ? { ...notification, message, duration } : notification,\n      ),\n    )\n\n    if (duration !== null) {\n      clearTimeout(timers.current.get(id)!)\n      const timer = setTimeout(() => {\n        dismissNotification(id)\n      }, duration)\n      timers.current.set(id, timer)\n    }\n  }\n\n  return (\n    <NotificationContext.Provider\n      value={{ addNotification, updateNotification, dismissNotification }}\n    >\n      {children}\n      <div className=\"notifications\">\n        {notifications.map((notification, index) => (\n          <div\n            key={notification.id}\n            className=\"notification-wrapper\"\n            style={{ top: `${20 + index * 80}px` }}\n          >\n            <Notification\n              message={notification.message}\n              isVisible={true}\n              onDismiss={() => dismissNotification(notification.id)}\n            />\n          </div>\n        ))}\n      </div>\n    </NotificationContext.Provider>\n  )\n}\n\nexport function useNotification() {\n  const context = useContext(NotificationContext)\n  if (!context) {\n    throw new Error(\"useNotification must be used within a NotificationProvider\")\n  }\n  return context\n}\n","import { useEffect, useState } from \"react\"\n\nexport function useIsMobile() {\n  const [isMobile, setIsMobile] = useState(false)\n\n  useEffect(() => {\n    function checkIfMobile() {\n      setIsMobile(window.matchMedia(\"(max-width: 768px)\").matches)\n    }\n    checkIfMobile()\n    window.addEventListener(\"resize\", checkIfMobile)\n    return () => window.removeEventListener(\"resize\", checkIfMobile)\n  }, [])\n\n  return isMobile\n}\n","import { Set } from \"immutable\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\n\ninterface Option<T> {\n  value: T\n  content: React.ReactNode\n  mobileContent?: React.ReactNode\n}\n\ninterface Props<T> {\n  value: T\n  onChange: (value: T) => void\n  options: Option<T>[]\n  disabled?: boolean\n}\n\nexport function Toggle<T>({ value, onChange, options, disabled = false }: Props<T>) {\n  const isMobile = useIsMobile()\n  // option values must be unique\n  console.assert(Set(options.map(o => o.value)).size === options.length)\n\n  return (\n    <div className={`toggle ${disabled ? \"toggle--disabled\" : \"\"}`}>\n      {options.map(option => (\n        <button\n          key={String(option.value)}\n          className={`toggle__button${value === option.value ? \" toggle__button--active\" : \"\"} ${disabled ? \"toggle__button--disabled\" : \"\"}`}\n          onClick={() => {\n            if (disabled) {\n              return\n            }\n            if (options.length == 2 && value === option.value) {\n              const otherValue = options.find(o => o.value !== option.value)!.value\n              onChange(otherValue)\n            } else {\n              onChange(option.value)\n            }\n          }}\n        >\n          {isMobile ? (option.mobileContent ?? option.content) : option.content}\n        </button>\n      ))}\n    </div>\n  )\n}\n","import { createContext, ReactNode, useContext, useState } from \"react\"\nimport { Observation } from \"src/types/dashboard\"\n\nexport type ObservationCategory = \"covering\" | \"rolling\"\n\nexport class Filter {\n  createdAt: number\n\n  constructor(\n    // display value for the left half (key) of a \"current filters\" tag\n    public readonly name: string,\n    // display value for the right half (value) of a \"current filters\" tag\n    public readonly valueName: string,\n    public readonly predicate: (observation: Observation) => boolean,\n    public readonly key: string,\n    public readonly extraData?: any,\n  ) {\n    this.createdAt = Date.now()\n  }\n}\n\ntype Filters = Map<string, Filter[]>\n\ninterface FilterContextType {\n  filters: Filters\n  setFilters: (filters: Filters) => void\n  removeFilter: (key: string) => void\n  observationCategory: ObservationCategory\n  setObservationCategory: (observationCategory: ObservationCategory) => void\n}\n\nconst FilterContext = createContext<FilterContextType | undefined>(undefined)\n\nexport function FilterProvider({ children }: { children: ReactNode }) {\n  const [filtersByObsType, setFiltersByKey] = useState<\n    Map<ObservationCategory, Filters>\n  >(\n    new Map([\n      [\"covering\", new Map()],\n      [\"rolling\", new Map()],\n    ]),\n  )\n  const [observationCategory, setObservationCategory] =\n    useState<ObservationCategory>(\"covering\")\n\n  const filters =\n    filtersByObsType.get(observationCategory) || new Map<string, Filter[]>()\n  const setFilters = (newFilters: Filters) => {\n    setFiltersByKey(prev => {\n      const newMap = new Map(prev)\n      newMap.set(observationCategory, newFilters)\n      return newMap\n    })\n  }\n\n  const removeFilter = (key: string) => {\n    const newFilters = new Map(filters)\n    const keyFilters = newFilters.get(key) || []\n    const filteredFilters = keyFilters.filter(f => f.key !== key)\n\n    if (filteredFilters.length === 0) {\n      newFilters.delete(key)\n    } else {\n      newFilters.set(key, filteredFilters)\n    }\n\n    setFilters(newFilters)\n  }\n\n  const value: FilterContextType = {\n    filters,\n    setFilters,\n    removeFilter,\n    observationCategory,\n    setObservationCategory,\n  }\n\n  return <FilterContext.Provider value={value}>{children}</FilterContext.Provider>\n}\n\nexport function useFilters() {\n  const context = useContext(FilterContext)\n  if (context === undefined) {\n    throw new Error(\"useFilters must be used within a FilterProvider\")\n  }\n  return context\n}\n","import React, { createContext, useContext, useEffect, useState } from \"react\"\nimport { createPortal } from \"react-dom\"\nimport { useLocation } from \"react-router-dom\"\n\ninterface TooltipState {\n  visible: boolean\n  content: string\n  x: number\n  y: number\n  // the concept of a \"tooltip owner\" simplifies investigation if anything goes wrong. For instance,\n  // I got into an infinite render loop when multiple components used tooltips. This ended up being\n  // because of an over-aggressive useEffect for cleanup, but I at first thought it was due to conflicting\n  // components.\n  //\n  // And also the concept of an owner probably genuinely removes a class of bugs - but that's not why I\n  // added it initially.\n  owner: string | null\n}\n\ninterface TooltipContextType {\n  showTooltip: (content: string, x: number, y: number, owner: string) => void\n  hideTooltip: (owner: string) => void\n  moveTooltip: (x: number, y: number, owner: string) => void\n  visible: boolean\n}\n\nconst TooltipContext = createContext<TooltipContextType | null>(null)\n\nfunction TooltipPortal({ state }: { state: TooltipState }) {\n  if (!state.visible) return null\n\n  return createPortal(\n    <div\n      className=\"cursor-tooltip\"\n      style={{\n        position: \"fixed\",\n        left: `${state.x + 10}px`,\n        top: `${state.y - 28}px`,\n        display: \"block\",\n        pointerEvents: \"none\", // prevent tooltip from interfering with mouse events\n        zIndex: 9999,\n      }}\n      dangerouslySetInnerHTML={{ __html: state.content }}\n    />,\n    document.body,\n  )\n}\n\nexport function TooltipProvider({ children }: { children: React.ReactNode }) {\n  const location = useLocation()\n  const [tooltipState, setTooltipState] = useState<TooltipState>({\n    visible: false,\n    content: \"\",\n    x: 0,\n    y: 0,\n    owner: null,\n  })\n\n  // Navigation avoids firing onmouseleave events, leaving dangling tooltips.\n  // Hide any tooltips when navigating to a new page.\n  useEffect(() => {\n    setTooltipState(prev => ({\n      ...prev,\n      visible: false,\n      owner: null,\n    }))\n  }, [location.pathname])\n\n  const showTooltip = (content: string, x: number, y: number, owner: string) => {\n    setTooltipState({\n      visible: true,\n      content,\n      x,\n      y,\n      owner,\n    })\n  }\n\n  const hideTooltip = (owner: string) => {\n    setTooltipState(prev => {\n      if (prev.owner === owner) {\n        return {\n          ...prev,\n          visible: false,\n          owner: null,\n        }\n      }\n      return prev\n    })\n  }\n\n  const moveTooltip = (x: number, y: number, owner: string) => {\n    setTooltipState(prev => {\n      if (prev.visible && prev.owner === owner && (prev.x !== x || prev.y !== y)) {\n        return {\n          ...prev,\n          x,\n          y,\n        }\n      }\n      return prev\n    })\n  }\n\n  const contextValue: TooltipContextType = {\n    showTooltip,\n    hideTooltip,\n    moveTooltip,\n    visible: tooltipState.visible,\n  }\n\n  return (\n    <TooltipContext.Provider value={contextValue}>\n      {children}\n      <TooltipPortal state={tooltipState} />\n    </TooltipContext.Provider>\n  )\n}\n\nexport function useTooltip() {\n  const context = useContext(TooltipContext)\n  if (!context) {\n    throw new Error(\"useTooltip must be used within a TooltipProvider\")\n  }\n  return context\n}\n","import hljs from \"highlight.js/lib/core\"\n\n// a small taste of home in this wild land\nexport function sum(values: Iterable<number>, start: number = 0): number {\n  return Array.from(values).reduce((total, val) => total + val, start)\n}\n\nexport function reHighlight(\n  containerRef: React.RefObject<HTMLElement | null>,\n  force: boolean = false,\n) {\n  if (!containerRef.current) {\n    return\n  }\n\n  if (force) {\n    containerRef.current.querySelectorAll(\"code\").forEach(element => {\n      element.removeAttribute(\"data-highlighted\")\n    })\n  }\n\n  containerRef.current\n    .querySelectorAll(\"code:not([data-highlighted='yes'])\")\n    .forEach(element => {\n      hljs.highlightElement(element as HTMLElement)\n    })\n}\n\nexport function max<T>(array: T[], key: (value: T) => number): T | null\nexport function max(array: number[]): number | null\nexport function max<T>(\n  array: T[] | number[],\n  key?: (value: T) => number,\n): T | number | null {\n  if (key) {\n    let maxElement: T | null = null\n    let maxValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const element = array[i] as T\n      const value = key(element)\n\n      if (value != null && (maxValue === null || value > maxValue)) {\n        maxValue = value\n        maxElement = element\n      }\n    }\n\n    return maxElement\n  } else {\n    let maxValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i] as number\n\n      if (value != null && (maxValue === null || value > maxValue)) {\n        maxValue = value\n      }\n    }\n\n    return maxValue\n  }\n}\n\nexport function min<T>(array: T[], key: (value: T) => number): T | null\nexport function min(array: number[]): number | null\nexport function min<T>(\n  array: T[] | number[],\n  key?: (value: T) => number,\n): T | number | null {\n  if (key) {\n    let minElement: T | null = null\n    let minValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const element = array[i] as T\n      const value = key(element)\n\n      if (value != null && (minValue === null || value < minValue)) {\n        minValue = value\n        minElement = element\n      }\n    }\n\n    return minElement\n  } else {\n    let minValue: number | null = null\n\n    for (let i = 0; i < array.length; i++) {\n      const value = array[i] as number\n\n      if (value != null && (minValue === null || value < minValue)) {\n        minValue = value\n      }\n    }\n\n    return minValue\n  }\n}\n\nexport function mapsEqual(m1: Map<any, any>, m2: Map<any, any>): boolean {\n  return (\n    m1.size === m2.size &&\n    Array.from(m1.keys()).every(key => m1.get(key) === m2.get(key))\n  )\n}\n\nexport function setsEqual(s1: Set<any>, s2: Set<any>): boolean {\n  return s1.size === s2.size && Array.from(s1).every(key => s2.has(key))\n}\n\n// https://github.com/d3/d3-array/blob/be0ae0d2b36ab91b833294ad2cfc5d5905acbd0f/src/bisector.js#L22\nexport function bisectLeft(arr: any[], x: number, key?: (x: any) => number): number {\n  let low = 0\n  let high = arr.length\n  while (low < high) {\n    const mid = (low + high) >>> 1\n    if (key ? key(arr[mid]) < x : arr[mid] < x) {\n      low = mid + 1\n    } else {\n      high = mid\n    }\n  }\n  return low\n}\n\nexport function bisectRight(arr: any[], x: number, key?: (x: any) => number): number {\n  let low = 0\n  let high = arr.length\n  while (low < high) {\n    const mid = (low + high) >>> 1\n    if (key ? key(arr[mid]) <= x : arr[mid] <= x) {\n      low = mid + 1\n    } else {\n      high = mid\n    }\n  }\n  return low\n}\n\n// Dedicated container for text measurement - created once and reused\nlet measureContainer: HTMLElement | null = null\n\nfunction getMeasureContainer(): HTMLElement {\n  if (!measureContainer) {\n    measureContainer = document.createElement(\"div\")\n    measureContainer.style.cssText = `\n      position: absolute;\n      visibility: hidden;\n      white-space: nowrap;\n      top: -9999px;\n      left: -9999px;\n      pointer-events: none;\n      z-index: -1;\n    `\n    document.body.appendChild(measureContainer)\n  }\n  return measureContainer\n}\n\nexport function measureText(\n  text: string,\n  className: string = \"\",\n): { width: number; height: number } {\n  const container = getMeasureContainer()\n\n  // reset to passed values\n  container.className = className\n  container.textContent = text\n\n  const rect = container.getBoundingClientRect()\n  return { width: rect.width, height: rect.height }\n}\n\nexport function navigateOnClick(\n  event: MouseEvent | React.MouseEvent,\n  url: string,\n  navigate: (path: string) => void,\n): void {\n  // support cmd for onclick\n  if (event.metaKey || event.ctrlKey) {\n    // ideally react router would have a utility to resolve a path to the\n    // url that the router would navgiate to for that path. useHref does the\n    // trick, but that's a hook, which restricts where it can be used.\n    //\n    // It's not worth spending more time trying to figure this out when hardcoding\n    // works well.\n    const usingHashRouter = import.meta.env.VITE_ROUTER_TYPE === \"hash\"\n    const location = window.location\n    const resolvedUrl = usingHashRouter\n      ? `${location.origin}${location.pathname}#${url}`\n      : `${location.origin}${url}`\n\n    window.open(resolvedUrl, \"_blank\")\n  } else {\n    navigate(url)\n  }\n}\n\nexport function readableNodeid(nodeid: string): string {\n  return nodeid.split(\"::\").pop() || nodeid\n}\n","import { faGear } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { axisBottom as d3_axisBottom, axisLeft as d3_axisLeft } from \"d3-axis\"\nimport {\n  scaleBand as d3_scaleBand,\n  scaleLinear as d3_scaleLinear,\n  scaleOrdinal as d3_scaleOrdinal,\n} from \"d3-scale\"\nimport { select as d3_select } from \"d3-selection\"\nimport { Set } from \"immutable\"\nimport { useEffect, useRef } from \"react\"\nimport { Filter, useFilters } from \"src/tyche/FilterContext\"\nimport { TYCHE_COLOR } from \"src/tyche/Tyche\"\nimport { NOT_PRESENT_STRING, PRESENT_STRING } from \"src/tyche/Tyche\"\nimport { Observation } from \"src/types/dashboard\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { max, sum } from \"src/utils/utils\"\n\nconst d3 = {\n  select: d3_select,\n  scaleLinear: d3_scaleLinear,\n  scaleOrdinal: d3_scaleOrdinal,\n  scaleBand: d3_scaleBand,\n  axisBottom: d3_axisBottom,\n  axisLeft: d3_axisLeft,\n}\n\nexport abstract class Feature {\n  abstract isSystem: boolean\n\n  constructor(\n    public key: string,\n    public name: string,\n  ) {}\n\n  getValue(observation: Observation): any {\n    return observation.features.get(this.name)\n  }\n}\n\nexport class UserFeature extends Feature {\n  isSystem = false\n}\n\nexport class SystemFeature extends Feature {\n  isSystem = true\n\n  constructor(\n    public override key: string,\n    public override name: string,\n    public value: (observation: Observation) => any,\n  ) {\n    super(key, name)\n  }\n\n  override getValue(observation: Observation): any {\n    return this.value(observation)\n  }\n}\n\ntype NominalChartProps = {\n  feature: Feature\n  observations: { raw: Observation[]; filtered: Observation[] }\n}\n\nconst HORIZONTAL_BAR_FEATURE_CUTOFF = 5\nconst SELECTION_STROKE_WIDTH = 2.5\n\nexport function NominalChart({ feature, observations }: NominalChartProps) {\n  const parentRef = useRef<HTMLDivElement>(null)\n  const svgRef = useRef<SVGSVGElement>(null)\n  const { filters, setFilters } = useFilters()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n\n  function getSelectedValues() {\n    const nominalFilters = filters.get(feature.key) || []\n    if (nominalFilters.length === 0) {\n      return Set<string>()\n    }\n\n    console.assert(nominalFilters.length === 1)\n    const filter = nominalFilters[0]\n    return Set(filter.extraData.selectedValues)\n  }\n\n  const selectedValues = getSelectedValues()\n  const filteredObservations = {\n    raw: observations.raw.filter(obs => obs.status !== \"gave_up\"),\n    filtered: observations.filtered.filter(obs => obs.status !== \"gave_up\"),\n  }\n\n  const onValueClick = (value: string) => {\n    let newSelection = Set<string>()\n\n    // If clicking the same value that's already selected alone, deselect it\n    if (selectedValues.equals(Set([value]))) {\n      newSelection = Set()\n    } else {\n      // Otherwise, select just this value\n      newSelection = Set([value])\n    }\n\n    let valueName\n    if (newSelection.size === 1) {\n      valueName = newSelection.first()!\n    } else {\n      valueName = newSelection.map(value => `${value}`).join(\" or \")\n    }\n\n    const nominalFilters = []\n    if (newSelection.size > 0) {\n      nominalFilters.push(\n        new Filter(\n          feature.name,\n          valueName,\n          (obs: Observation) => {\n            return newSelection.some(value => {\n              return value === feature.getValue(obs)\n            })\n          },\n          `nominal-${feature.key}`,\n          {\n            selectedValues: newSelection,\n          },\n        ),\n      )\n    }\n\n    const newFilters = new Map(filters)\n    newFilters.set(feature.key, nominalFilters)\n    setFilters(newFilters)\n  }\n\n  useEffect(() => {\n    if (filteredObservations.filtered.length == 0) {\n      return\n    }\n\n    const distinctRawValues = Set<string>(\n      filteredObservations.raw.map(obs => feature.getValue(obs)),\n    )\n    // value: count\n    let data = new Map<string, number>()\n\n    for (const observation of filteredObservations.filtered) {\n      const value = feature.getValue(observation)\n      data.set(value, (data.get(value) || 0) + 1)\n    }\n    const total = sum(Array.from(data.values()))\n\n    data = new Map(\n      [...data.entries()].sortKey(([value, _count]) => {\n        if (value === PRESENT_STRING) return 0\n        if (value === NOT_PRESENT_STRING) return 1\n        return value\n      }),\n    )\n\n    d3.select(svgRef.current).selectAll(\"*\").remove()\n\n    const width = parentRef.current!.clientWidth\n    const height = distinctRawValues.size < HORIZONTAL_BAR_FEATURE_CUTOFF ? 85 : 170\n\n    const svg = d3\n      .select(svgRef.current)\n      .attr(\"width\", width)\n      .attr(\"height\", height)\n      .append(\"g\")\n\n    const showTooltipHandler = function (event: MouseEvent, d: [string, number]) {\n      const [label, count] = d\n      showTooltip(\n        `${feature.name}<br>${label}: ${count}`,\n        event.clientX,\n        event.clientY,\n        \"tyche-nominal\",\n      )\n    }\n\n    // use a horizontally-stacked bar chart for 1-4 different feature labels,\n    // and a standard histogram otherwise.\n    //\n    // use the number of distinct values in the unfiltered observations, so we\n    // don't change up the display type on the user when they're drilling down.\n    if (distinctRawValues.size < HORIZONTAL_BAR_FEATURE_CUTOFF) {\n      const margin = { top: 0, right: 15, bottom: 20, left: 10 }\n      const innerWidth = width - margin.left - margin.right\n      const innerHeight = height - margin.top - margin.bottom\n\n      const x = d3.scaleLinear().domain([0, 1]).range([0, innerWidth])\n\n      let colorScale: (feature: string) => string\n      if (data.has(PRESENT_STRING) || data.has(NOT_PRESENT_STRING)) {\n        colorScale = (feature: string) => {\n          if (feature === PRESENT_STRING) return TYCHE_COLOR.SUCCESS\n          if (feature === NOT_PRESENT_STRING) return TYCHE_COLOR.ERROR\n          return TYCHE_COLOR.PRIMARY\n        }\n      } else {\n        colorScale = d3\n          .scaleOrdinal<string>()\n          // use raw values so the coloring doesn't change as we drill down\n          .domain(distinctRawValues)\n          .range([\n            TYCHE_COLOR.PRIMARY,\n            TYCHE_COLOR.ACCENT,\n            TYCHE_COLOR.ACCENT2,\n            TYCHE_COLOR.ACCENT3,\n            TYCHE_COLOR.ACCENT4,\n          ])\n      }\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n      let xAccumulator = 0\n      const barHeight = innerHeight - margin.bottom\n\n      data.forEach((count, value) => {\n        const barWidth = (count / total) * innerWidth\n        const isSelected = selectedValues.has(value)\n\n        // outer rect\n        g.append(\"rect\")\n          .attr(\"x\", xAccumulator)\n          .attr(\"y\", 0)\n          .attr(\"width\", barWidth)\n          .attr(\"height\", barHeight)\n          .attr(\"fill\", colorScale(value))\n          .style(\"cursor\", \"pointer\")\n          .on(\"click\", () => onValueClick(value))\n          .on(\"mouseover\", event => {\n            showTooltipHandler(event, [value, count])\n          })\n          .on(\"mousemove\", event =>\n            moveTooltip(event.clientX, event.clientY, \"tyche-nominal\"),\n          )\n          .on(\"mouseleave\", () => hideTooltip(\"tyche-nominal\"))\n\n        // inner rect (for inset white border when selected)\n        if (isSelected) {\n          g.append(\"rect\")\n            .attr(\"x\", xAccumulator + SELECTION_STROKE_WIDTH)\n            .attr(\"y\", SELECTION_STROKE_WIDTH)\n            .attr(\"width\", barWidth - 2 * SELECTION_STROKE_WIDTH)\n            .attr(\"height\", barHeight - 2 * SELECTION_STROKE_WIDTH)\n            .attr(\"fill\", colorScale(value))\n            .attr(\"stroke\", \"white\")\n            .attr(\"stroke-width\", SELECTION_STROKE_WIDTH)\n            .style(\"pointer-events\", \"none\") // let outer rect handle all of the clicks\n        }\n\n        g.append(\"text\")\n          .attr(\"x\", xAccumulator + barWidth / 2)\n          .attr(\"y\", barHeight / 2)\n          .attr(\"text-anchor\", \"middle\")\n          .attr(\"dominant-baseline\", \"central\")\n          .attr(\"fill\", \"white\")\n          .text(value)\n          .style(\"font-size\", \"14px\")\n          .style(\"font-weight\", \"bold\")\n        xAccumulator += barWidth\n      })\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0,${barHeight})`)\n        .call(d3.axisBottom(x).tickFormat(d => `${Math.round(Number(d) * 100)}%`))\n\n      g.append(\"text\")\n        .attr(\"x\", innerWidth / 2)\n        .attr(\"y\", barHeight + 35)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"% of observations\")\n        .style(\"font-size\", \"13px\")\n    } else {\n      // add some margin inset for the graph proper so the axes don't get cut off\n      const margin = { top: 5, right: 5, bottom: 30, left: 10 }\n      const innerWidth = width - margin.left - margin.right\n      const innerHeight = height - margin.top - margin.bottom\n\n      const x = d3\n        .scaleBand()\n        .domain(Array.from(data.keys()))\n        .range([0, innerWidth])\n        .padding(0.2)\n\n      const y = d3\n        .scaleLinear()\n        .domain([0, max(Array.from(data.values())) || 0])\n        .range([innerHeight, 0])\n\n      const g = svg\n        .append(\"g\")\n        .attr(\"transform\", `translate(${margin.left},${margin.top})`)\n\n      g.selectAll(\".bar\")\n        .data(Array.from(data.entries()))\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"bar\")\n        .attr(\"x\", ([value, _count]) => x(value) || 0)\n        .attr(\"y\", ([_value, count]) => y(count))\n        .attr(\"width\", x.bandwidth())\n        .attr(\"height\", ([_value, count]) => innerHeight - y(count))\n        .attr(\"fill\", TYCHE_COLOR.PRIMARY)\n        .style(\"cursor\", \"pointer\")\n        .on(\"click\", function (event, [value, _count]) {\n          onValueClick(value)\n        })\n        .on(\"mouseover\", function (event, d) {\n          showTooltipHandler(event, d)\n        })\n        .on(\"mousemove\", event =>\n          moveTooltip(event.clientX, event.clientY, \"tyche-nominal\"),\n        )\n        .on(\"mouseleave\", () => hideTooltip(\"tyche-nominal\"))\n\n      g.selectAll(\".inner-bar\")\n        .data(\n          Array.from(data.entries()).filter(([value, _count]) =>\n            selectedValues.has(value),\n          ),\n        )\n        .enter()\n        .append(\"rect\")\n        .attr(\"class\", \"inner-bar\")\n        .attr(\"x\", ([value, _count]) => (x(value) || 0) + SELECTION_STROKE_WIDTH)\n        .attr(\"y\", ([_value, count]) => y(count) + SELECTION_STROKE_WIDTH)\n        .attr(\"width\", x.bandwidth() - 2 * SELECTION_STROKE_WIDTH)\n        .attr(\n          \"height\",\n          ([_value, count]) => innerHeight - y(count) - 2 * SELECTION_STROKE_WIDTH,\n        )\n        .attr(\"fill\", TYCHE_COLOR.PRIMARY)\n        .attr(\"stroke\", \"white\")\n        .attr(\"stroke-width\", SELECTION_STROKE_WIDTH)\n        .style(\"pointer-events\", \"none\")\n\n      g.append(\"g\")\n        .attr(\"transform\", `translate(0,${innerHeight})`)\n        .call(d3.axisBottom(x))\n        .selectAll(\"text\")\n        .attr(\"transform\", \"rotate(-45)\")\n        .style(\"text-anchor\", \"end\")\n\n      g.append(\"g\").call(\n        d3\n          .axisLeft(y)\n          .ticks(7)\n          .tickFormat(d => Math.round(Number(d)).toString()),\n      )\n\n      g.append(\"text\")\n        .attr(\"transform\", \"rotate(-90)\")\n        .attr(\"y\", -30)\n        .attr(\"x\", -innerHeight / 2)\n        .attr(\"text-anchor\", \"middle\")\n        .text(\"Count\")\n        .style(\"font-size\", \"12px\")\n    }\n  }, [\n    filteredObservations,\n    feature,\n    hideTooltip,\n    moveTooltip,\n    onValueClick,\n    selectedValues,\n    showTooltip,\n  ])\n\n  if (filteredObservations.filtered.length == 0) {\n    return null\n  }\n\n  return (\n    <div>\n      <div className=\"tyche__nominal__feature\">\n        {feature.isSystem && (\n          <span className=\"tooltip\">\n            <FontAwesomeIcon icon={faGear} className=\"tyche__nominal__feature__icon\" />\n            <span className=\"tooltip__text\">\n              This feature is generated automatically for all tests\n            </span>\n          </span>\n        )}\n        <span className=\"tyche__nominal__feature__text\">{feature.name}</span>\n      </div>\n      <div ref={parentRef} className=\"tyche__nominal__chart\">\n        <svg ref={svgRef} style={{ width: \"100%\" }}></svg>\n      </div>\n    </div>\n  )\n}\n","import { faCaretDown, faCaretRight } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode, useState } from \"react\"\n\ninterface CollapsibleProps {\n  title: ReactNode\n  children: ReactNode\n  defaultState?: \"open\" | \"closed\"\n  onStateChange?: (state: \"open\" | \"closed\") => void\n  className?: string\n  headerClass?: string\n  contentClass?: string\n}\n\nexport function Collapsible({\n  title,\n  children,\n  defaultState = \"open\",\n  onStateChange,\n  headerClass = \"\",\n  contentClass = \"\",\n}: CollapsibleProps) {\n  const [state, setState] = useState(defaultState)\n\n  const toggleState = () => {\n    const newState = state === \"open\" ? \"closed\" : \"open\"\n    setState(newState)\n    onStateChange?.(newState)\n  }\n\n  return (\n    <div>\n      <div className={`collapsible__header ${headerClass}`} onClick={toggleState}>\n        <span className=\"collapsible__toggle\">\n          {state === \"open\" ? (\n            <FontAwesomeIcon icon={faCaretDown} />\n          ) : (\n            <FontAwesomeIcon icon={faCaretRight} />\n          )}\n        </span>\n        {title}\n      </div>\n\n      {state === \"open\" && <div className={`${contentClass}`}>{children}</div>}\n    </div>\n  )\n}\n","import { ReactNode } from \"react\"\nimport { Collapsible } from \"src/components/Collapsible\"\n\ninterface TycheSectionProps {\n  title: string\n  children: ReactNode\n  defaultState?: \"open\" | \"closed\"\n  onStateChange?: (state: \"open\" | \"closed\") => void\n}\n\nexport function TycheSection({\n  title,\n  children,\n  defaultState = \"open\",\n  onStateChange,\n}: TycheSectionProps) {\n  return (\n    <div className=\"tyche__section\">\n      <Collapsible\n        title={title}\n        defaultState={defaultState}\n        onStateChange={onStateChange}\n        headerClass=\"tyche__section__header\"\n        contentClass=\"tyche__section__content\"\n      >\n        {children}\n      </Collapsible>\n    </div>\n  )\n}\n","import { ObservationCategory } from \"src/tyche/FilterContext\"\nimport { NominalChart, SystemFeature, UserFeature } from \"src/tyche/NominalChart\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\n// use a private name to avoid collisions with user features.\nconst STABILITY_FEATURE_KEY = \"__hypofuzz_stability\"\n\nexport function Features({\n  observations,\n  observationCategory,\n}: {\n  observations: { raw: Observation[]; filtered: Observation[] }\n  observationCategory: ObservationCategory\n}) {\n  const featureNames = new Set<string>()\n\n  observations.raw.forEach(obs => {\n    for (const key of obs.features.keys()) {\n      if (key.startsWith(\"Retried draw from\")) {\n        continue\n      }\n      featureNames.add(key)\n    }\n  })\n\n  const features = Array.from(featureNames).map(\n    feature => new UserFeature(feature, feature),\n  )\n  // we currently only add covering observations if they are stable, and don't re-check for\n  // stability after. Skip here to avoid showing a boring graph full of \"stable\" for the\n  // covering observation view.\n  //\n  // We should also enable this for covering if/when we have more interesting data to show.\n  if (observationCategory == \"rolling\") {\n    features.push(\n      new SystemFeature(\n        STABILITY_FEATURE_KEY,\n        \"Stability\",\n        observation => observation.stability ?? \"unknown\",\n      ),\n    )\n  }\n\n  if (features.length === 0) {\n    return null\n  }\n\n  return (\n    <TycheSection title=\"Features\">\n      {/* sort for stable display order */}\n      {Array.from(features)\n        .sortKey(feature => feature.name)\n        .map(feature => (\n          <NominalChart feature={feature} observations={observations} />\n        ))}\n    </TycheSection>\n  )\n}\n","import { faXmark } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useFilters } from \"src/tyche/FilterContext\"\n\nexport function Filters() {\n  const { filters, removeFilter } = useFilters()\n\n  const allFilters = Array.from(filters.values())\n    .flat()\n    .sortKey(filter => filter.createdAt)\n\n  if (allFilters.length === 0) {\n    return null\n  }\n\n  return (\n    <div className=\"tyche__filters\">\n      <div className=\"tyche__filters__title\">Current Filters</div>\n      {allFilters.map(filter => (\n        <div key={filter.key} className=\"tyche__filters__filter\">\n          <div className=\"tyche__filters__filter__name\">\n            <div\n              className=\"tyche__filters__filter__remove\"\n              onClick={() => removeFilter(filter.key)}\n            >\n              <FontAwesomeIcon icon={faXmark} />\n            </div>\n            {filter.name}\n          </div>\n          <div className=\"tyche__filters__filter__value-name\">{filter.valueName}</div>\n        </div>\n      ))}\n    </div>\n  )\n}\n","/*\nLanguage: Python\nDescription: Python is an interpreted, object-oriented, high-level programming language with dynamic semantics.\nWebsite: https://www.python.org\nCategory: common\n*/\n\nfunction python(hljs) {\n  const regex = hljs.regex;\n  const IDENT_RE = /[\\p{XID_Start}_]\\p{XID_Continue}*/u;\n  const RESERVED_WORDS = [\n    'and',\n    'as',\n    'assert',\n    'async',\n    'await',\n    'break',\n    'case',\n    'class',\n    'continue',\n    'def',\n    'del',\n    'elif',\n    'else',\n    'except',\n    'finally',\n    'for',\n    'from',\n    'global',\n    'if',\n    'import',\n    'in',\n    'is',\n    'lambda',\n    'match',\n    'nonlocal|10',\n    'not',\n    'or',\n    'pass',\n    'raise',\n    'return',\n    'try',\n    'while',\n    'with',\n    'yield'\n  ];\n\n  const BUILT_INS = [\n    '__import__',\n    'abs',\n    'all',\n    'any',\n    'ascii',\n    'bin',\n    'bool',\n    'breakpoint',\n    'bytearray',\n    'bytes',\n    'callable',\n    'chr',\n    'classmethod',\n    'compile',\n    'complex',\n    'delattr',\n    'dict',\n    'dir',\n    'divmod',\n    'enumerate',\n    'eval',\n    'exec',\n    'filter',\n    'float',\n    'format',\n    'frozenset',\n    'getattr',\n    'globals',\n    'hasattr',\n    'hash',\n    'help',\n    'hex',\n    'id',\n    'input',\n    'int',\n    'isinstance',\n    'issubclass',\n    'iter',\n    'len',\n    'list',\n    'locals',\n    'map',\n    'max',\n    'memoryview',\n    'min',\n    'next',\n    'object',\n    'oct',\n    'open',\n    'ord',\n    'pow',\n    'print',\n    'property',\n    'range',\n    'repr',\n    'reversed',\n    'round',\n    'set',\n    'setattr',\n    'slice',\n    'sorted',\n    'staticmethod',\n    'str',\n    'sum',\n    'super',\n    'tuple',\n    'type',\n    'vars',\n    'zip'\n  ];\n\n  const LITERALS = [\n    '__debug__',\n    'Ellipsis',\n    'False',\n    'None',\n    'NotImplemented',\n    'True'\n  ];\n\n  // https://docs.python.org/3/library/typing.html\n  // TODO: Could these be supplemented by a CamelCase matcher in certain\n  // contexts, leaving these remaining only for relevance hinting?\n  const TYPES = [\n    \"Any\",\n    \"Callable\",\n    \"Coroutine\",\n    \"Dict\",\n    \"List\",\n    \"Literal\",\n    \"Generic\",\n    \"Optional\",\n    \"Sequence\",\n    \"Set\",\n    \"Tuple\",\n    \"Type\",\n    \"Union\"\n  ];\n\n  const KEYWORDS = {\n    $pattern: /[A-Za-z]\\w+|__\\w+__/,\n    keyword: RESERVED_WORDS,\n    built_in: BUILT_INS,\n    literal: LITERALS,\n    type: TYPES\n  };\n\n  const PROMPT = {\n    className: 'meta',\n    begin: /^(>>>|\\.\\.\\.) /\n  };\n\n  const SUBST = {\n    className: 'subst',\n    begin: /\\{/,\n    end: /\\}/,\n    keywords: KEYWORDS,\n    illegal: /#/\n  };\n\n  const LITERAL_BRACKET = {\n    begin: /\\{\\{/,\n    relevance: 0\n  };\n\n  const STRING = {\n    className: 'string',\n    contains: [ hljs.BACKSLASH_ESCAPE ],\n    variants: [\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[bB]|[rR]|[bB][rR]|[rR][bB])?\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT\n        ],\n        relevance: 10\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'''/,\n        end: /'''/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"\"\"/,\n        end: /\"\"\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          PROMPT,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([uU]|[rR])'/,\n        end: /'/,\n        relevance: 10\n      },\n      {\n        begin: /([uU]|[rR])\"/,\n        end: /\"/,\n        relevance: 10\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])'/,\n        end: /'/\n      },\n      {\n        begin: /([bB]|[bB][rR]|[rR][bB])\"/,\n        end: /\"/\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])'/,\n        end: /'/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      {\n        begin: /([fF][rR]|[rR][fF]|[fF])\"/,\n        end: /\"/,\n        contains: [\n          hljs.BACKSLASH_ESCAPE,\n          LITERAL_BRACKET,\n          SUBST\n        ]\n      },\n      hljs.APOS_STRING_MODE,\n      hljs.QUOTE_STRING_MODE\n    ]\n  };\n\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#numeric-literals\n  const digitpart = '[0-9](_?[0-9])*';\n  const pointfloat = `(\\\\b(${digitpart}))?\\\\.(${digitpart})|\\\\b(${digitpart})\\\\.`;\n  // Whitespace after a number (or any lexical token) is needed only if its absence\n  // would change the tokenization\n  // https://docs.python.org/3.9/reference/lexical_analysis.html#whitespace-between-tokens\n  // We deviate slightly, requiring a word boundary or a keyword\n  // to avoid accidentally recognizing *prefixes* (e.g., `0` in `0x41` or `08` or `0__1`)\n  const lookahead = `\\\\b|${RESERVED_WORDS.join('|')}`;\n  const NUMBER = {\n    className: 'number',\n    relevance: 0,\n    variants: [\n      // exponentfloat, pointfloat\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#floating-point-literals\n      // optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      // Note: no leading \\b because floats can start with a decimal point\n      // and we don't want to mishandle e.g. `fn(.5)`,\n      // no trailing \\b for pointfloat because it can end with a decimal point\n      // and we don't want to mishandle e.g. `0..hex()`; this should be safe\n      // because both MUST contain a decimal point and so cannot be confused with\n      // the interior part of an identifier\n      {\n        begin: `(\\\\b(${digitpart})|(${pointfloat}))[eE][+-]?(${digitpart})[jJ]?(?=${lookahead})`\n      },\n      {\n        begin: `(${pointfloat})[jJ]?`\n      },\n\n      // decinteger, bininteger, octinteger, hexinteger\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#integer-literals\n      // optionally \"long\" in Python 2\n      // https://docs.python.org/2.7/reference/lexical_analysis.html#integer-and-long-integer-literals\n      // decinteger is optionally imaginary\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b([1-9](_?[0-9])*|0+(_?0)*)[lLjJ]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[bB](_?[01])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[oO](_?[0-7])+[lL]?(?=${lookahead})`\n      },\n      {\n        begin: `\\\\b0[xX](_?[0-9a-fA-F])+[lL]?(?=${lookahead})`\n      },\n\n      // imagnumber (digitpart-based)\n      // https://docs.python.org/3.9/reference/lexical_analysis.html#imaginary-literals\n      {\n        begin: `\\\\b(${digitpart})[jJ](?=${lookahead})`\n      }\n    ]\n  };\n  const COMMENT_TYPE = {\n    className: \"comment\",\n    begin: regex.lookahead(/# type:/),\n    end: /$/,\n    keywords: KEYWORDS,\n    contains: [\n      { // prevent keywords from coloring `type`\n        begin: /# type:/\n      },\n      // comment within a datatype comment includes no keywords\n      {\n        begin: /#/,\n        end: /\\b\\B/,\n        endsWithParent: true\n      }\n    ]\n  };\n  const PARAMS = {\n    className: 'params',\n    variants: [\n      // Exclude params in functions without params\n      {\n        className: \"\",\n        begin: /\\(\\s*\\)/,\n        skip: true\n      },\n      {\n        begin: /\\(/,\n        end: /\\)/,\n        excludeBegin: true,\n        excludeEnd: true,\n        keywords: KEYWORDS,\n        contains: [\n          'self',\n          PROMPT,\n          NUMBER,\n          STRING,\n          hljs.HASH_COMMENT_MODE\n        ]\n      }\n    ]\n  };\n  SUBST.contains = [\n    STRING,\n    NUMBER,\n    PROMPT\n  ];\n\n  return {\n    name: 'Python',\n    aliases: [\n      'py',\n      'gyp',\n      'ipython'\n    ],\n    unicodeRegex: true,\n    keywords: KEYWORDS,\n    illegal: /(<\\/|\\?)|=>/,\n    contains: [\n      PROMPT,\n      NUMBER,\n      {\n        // very common convention\n        scope: 'variable.language',\n        match: /\\bself\\b/\n      },\n      {\n        // eat \"if\" prior to string so that it won't accidentally be\n        // labeled as an f-string\n        beginKeywords: \"if\",\n        relevance: 0\n      },\n      { match: /\\bor\\b/, scope: \"keyword\" },\n      STRING,\n      COMMENT_TYPE,\n      hljs.HASH_COMMENT_MODE,\n      {\n        match: [\n          /\\bdef/, /\\s+/,\n          IDENT_RE,\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.function\"\n        },\n        contains: [ PARAMS ]\n      },\n      {\n        variants: [\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE, /\\s*/,\n              /\\(\\s*/, IDENT_RE,/\\s*\\)/\n            ],\n          },\n          {\n            match: [\n              /\\bclass/, /\\s+/,\n              IDENT_RE\n            ],\n          }\n        ],\n        scope: {\n          1: \"keyword\",\n          3: \"title.class\",\n          6: \"title.class.inherited\",\n        }\n      },\n      {\n        className: 'meta',\n        begin: /^[\\t ]*@/,\n        end: /(?=#)|$/,\n        contains: [\n          NUMBER,\n          PARAMS,\n          STRING\n        ]\n      }\n    ]\n  };\n}\n\nexport { python as default };\n","import { faArrowLeftLong, faArrowRightLong } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\n\ninterface PaginationProps {\n  currentPage: number\n  pageCount: number\n  onPageChange: (page: number) => void\n}\n\nexport function Pagination({ currentPage, pageCount, onPageChange }: PaginationProps) {\n  console.assert(pageCount > 1)\n\n  function getPageNumbers(): (number | \"ellipsis\")[] {\n    if (pageCount <= 7) {\n      return Array.from({ length: pageCount }, (_, i) => i)\n    }\n\n    if (currentPage <= 3) {\n      return [0, 1, 2, 3, 4, \"ellipsis\", pageCount - 1]\n    }\n\n    if (currentPage >= pageCount - 4) {\n      return [\n        0,\n        \"ellipsis\",\n        pageCount - 5,\n        pageCount - 4,\n        pageCount - 3,\n        pageCount - 2,\n        pageCount - 1,\n      ]\n    }\n\n    return [\n      0,\n      \"ellipsis\",\n      currentPage - 1,\n      currentPage,\n      currentPage + 1,\n      \"ellipsis\",\n      pageCount - 1,\n    ]\n  }\n\n  const pageNumbers = getPageNumbers()\n\n  function handlePageClick(page: number | string) {\n    if (typeof page === \"number\" && currentPage !== page) {\n      onPageChange(page)\n    }\n  }\n\n  function handlePrevious() {\n    if (currentPage > 0) {\n      onPageChange(currentPage - 1)\n    }\n  }\n\n  function handleNext() {\n    if (currentPage < pageCount - 1) {\n      onPageChange(currentPage + 1)\n    }\n  }\n\n  return (\n    <div className=\"pagination\">\n      <div\n        className={`pagination__nav pagination__nav--left ${\n          currentPage === 0 ? \"pagination__nav--disabled\" : \"\"\n        }`}\n        onClick={handlePrevious}\n      >\n        <FontAwesomeIcon icon={faArrowLeftLong} />\n      </div>\n\n      {pageNumbers.map((page, index) => {\n        if (page === \"ellipsis\") {\n          return (\n            <div key={`ellipsis-${index}`} className=\" pagination__ellipsis\">\n              ...\n            </div>\n          )\n        }\n\n        const isCurrentPage = page === currentPage\n\n        return (\n          <div\n            key={page}\n            className={`pagination__number ${\n              isCurrentPage ? \"pagination__number--current\" : \"\"\n            }`}\n            onClick={() => handlePageClick(page)}\n          >\n            {page + 1}\n          </div>\n        )\n      })}\n\n      <div\n        className={`pagination__nav pagination__nav--right ${\n          currentPage === pageCount - 1 ? \"pagination__nav--disabled\" : \"\"\n        }`}\n        onClick={handleNext}\n      >\n        <FontAwesomeIcon icon={faArrowRightLong} />\n      </div>\n    </div>\n  )\n}\n","import \"highlight.js/styles/github.css\"\n\nimport hljs from \"highlight.js/lib/core\"\nimport python from \"highlight.js/lib/languages/python\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Pagination } from \"src/components/Pagination\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\nhljs.registerLanguage(\"python\", python)\n\ninterface Props {\n  observations: { raw: Observation[]; filtered: Observation[] }\n  observationCategory: \"covering\" | \"rolling\"\n}\n\nconst perPage = 30\n\nexport function Representation({\n  observations,\n  observationCategory: observationType,\n}: Props) {\n  const observationsDivRef = useRef<HTMLDivElement>(null)\n  const [page, setPage] = useState(0)\n\n  useEffect(() => {\n    // reset when switching from e.g. covering to rolling, since one might have fewer\n    // observations than the other.\n    //\n    // Do we want to reset to page 0 whenever `observations` changes at all? I'd prefer\n    // not to, to avoid resetting your page position whenever a rolling observation\n    // comes in, but I think you can get into an invalid page state if we don't...\n    // (e.g. a corpus observation being deleted when you're on the last page)\n    setPage(0)\n  }, [observationType])\n\n  function reHighlight() {\n    if (observationsDivRef.current) {\n      // only highlight new elements\n      observationsDivRef.current\n        .querySelectorAll(\"code:not([data-highlighted='yes'])\")\n        .forEach(element => {\n          hljs.highlightElement(element as HTMLElement)\n        })\n    }\n  }\n\n  useEffect(() => {\n    reHighlight()\n  }, [observations, page])\n\n  const rawRepresentations = new Map<string, number>()\n  observations.filtered.forEach(observation => {\n    const repr = observation.representation\n    rawRepresentations.set(repr, (rawRepresentations.get(repr) || 0) + 1)\n  })\n\n  const pageCount = Math.ceil(rawRepresentations.size / perPage)\n  const representations = Array.from(rawRepresentations.entries())\n    .sortKey(([rep, count]) => -count)\n    .slice(page * perPage, (page + 1) * perPage)\n\n  return (\n    <TycheSection\n      title=\"String representations\"\n      defaultState=\"closed\"\n      onStateChange={state => {\n        if (state === \"open\") {\n          // wait for observationsDivRef to be set before rehighlighting\n          requestAnimationFrame(() => {\n            reHighlight()\n          })\n        }\n      }}\n    >\n      <div ref={observationsDivRef}>\n        {pageCount > 1 && (\n          <div\n            style={{\n              display: \"flex\",\n              justifyContent: \"flex-end\",\n              marginBottom: \"12px\",\n            }}\n          >\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              onPageChange={setPage}\n            />\n          </div>\n        )}\n\n        {representations.map(([rep, count]) => (\n          // establish a new positioning context for the absolutely-positioned pill\n          <div\n            key={rep}\n            style={{ position: \"relative\" }}\n            className=\"tyche__representation__example\"\n          >\n            <pre>\n              <code className=\"language-python\">{rep}</code>\n            </pre>\n            {count > 1 && (\n              <div className=\"tyche__representation__example__count\">x {count}</div>\n            )}\n          </div>\n        ))}\n\n        {pageCount > 1 && (\n          <div\n            style={{ display: \"flex\", justifyContent: \"flex-end\", marginTop: \"12px\" }}\n          >\n            <Pagination\n              currentPage={page}\n              pageCount={pageCount}\n              onPageChange={setPage}\n            />\n          </div>\n        )}\n      </div>\n    </TycheSection>\n  )\n}\n","import { List, Set } from \"immutable\"\nimport React from \"react\"\nimport { Filter, useFilters } from \"src/tyche/FilterContext\"\nimport { Observation } from \"src/types/dashboard\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { measureText } from \"src/utils/utils\"\n\nconst MAX_MOSAIC_WIDTH = 640\n\ntype AxisItem = [string, (observation: Observation) => boolean]\n\ninterface MosaicChartProps {\n  name: string\n  observations: { raw: Observation[]; filtered: Observation[] }\n  verticalAxis: AxisItem[]\n  horizontalAxis: AxisItem[]\n  cssStyle: (row: string, column: string) => React.CSSProperties\n}\n\ninterface Cell {\n  count: number\n  widthPercent: number\n}\n\nexport function MosaicChart({\n  name,\n  observations,\n  verticalAxis,\n  horizontalAxis,\n  cssStyle = (row, column) => ({}),\n}: MosaicChartProps) {\n  const { filters, setFilters } = useFilters()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n\n  function getSelectedCells() {\n    const mosaicFilters = filters.get(name) || []\n    if (mosaicFilters.length === 0) {\n      return Set<List<number>>()\n    }\n\n    console.assert(mosaicFilters.length === 1)\n    const filter = mosaicFilters[0]\n    return Set(filter.extraData.selectedCells)\n  }\n\n  const selectedCells = getSelectedCells()\n  const cells: Cell[][] = []\n  const rowTotals: number[] = Array(verticalAxis.length).fill(0)\n  const columnTotals: number[] = Array(horizontalAxis.length).fill(0)\n  let grandTotal = 0\n\n  for (let i = 0; i < verticalAxis.length; i++) {\n    cells[i] = []\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      cells[i][j] = { count: 0, widthPercent: 0 }\n    }\n  }\n\n  observations.filtered.forEach(observation => {\n    for (let i = 0; i < verticalAxis.length; i++) {\n      const [, verticalPredicate] = verticalAxis[i]\n\n      if (verticalPredicate(observation)) {\n        for (let j = 0; j < horizontalAxis.length; j++) {\n          const [, horizontalPredicate] = horizontalAxis[j]\n\n          if (horizontalPredicate(observation)) {\n            cells[i][j].count++\n            rowTotals[i]++\n            columnTotals[j]++\n            grandTotal++\n            // An observation can only belong to one horizontal category\n            break\n          }\n        }\n        // An observation can only belong to one vertical category\n        break\n      }\n    }\n  })\n\n  // don't show rows/columns with 0 entries\n  const visibleRows = rowTotals\n    .map((total, index) => (total > 0 ? index : null))\n    .filter(index => index !== null)\n  const visibleCols = columnTotals\n    .map((total, index) => (total > 0 ? index : null))\n    .filter(index => index !== null)\n\n  const onCellClick = (rowIndex: number | null, colIndex: number | null) => {\n    let newSelection = Set<List<number>>()\n\n    if (rowIndex !== null && colIndex !== null) {\n      const cell = List([rowIndex, colIndex])\n      // if this cell is already selected and it's the only selection, deselect it\n      if (selectedCells.equals(Set([cell]))) {\n        newSelection = Set()\n      } else {\n        newSelection = Set([cell])\n      }\n    } else if (rowIndex !== null) {\n      console.assert(colIndex === null)\n      // select all cells in this row\n      visibleCols.forEach(colIdx => {\n        if (cells[rowIndex][colIdx].count > 0) {\n          newSelection = newSelection.add(List([rowIndex, colIdx]))\n        }\n      })\n    } else if (colIndex !== null) {\n      console.assert(rowIndex === null)\n      // select all cells in this column\n      visibleRows.forEach(rowIdx => {\n        if (cells[rowIdx][colIndex].count > 0) {\n          newSelection = newSelection.add(List([rowIdx, colIndex]))\n        }\n      })\n    }\n\n    function filterName(): string {\n      if (newSelection.size === 0) {\n        return \"\"\n      }\n\n      let remainingCells = newSelection\n      const canonicalNames: string[] = []\n\n      const axes = [\n        ...visibleRows.map(rowIndex => ({\n          name: verticalAxis[rowIndex][0],\n          cells: visibleCols\n            .filter(colIndex => cells[rowIndex][colIndex].count > 0)\n            .map(colIndex => List([rowIndex, colIndex])),\n        })),\n        ...visibleCols.map(colIndex => ({\n          name: horizontalAxis[colIndex][0],\n          cells: visibleRows\n            .filter(rowIndex => cells[rowIndex][colIndex].count > 0)\n            .map(rowIndex => List([rowIndex, colIndex])),\n        })),\n      ]\n\n      for (const axis of axes) {\n        if (\n          axis.cells.length > 0 &&\n          axis.cells.every(cell => remainingCells.has(cell))\n        ) {\n          canonicalNames.push(axis.name)\n          remainingCells = remainingCells.subtract(Set(axis.cells))\n        }\n      }\n\n      while (remainingCells.size > 0) {\n        const cell = remainingCells.first()!\n        const [row, col] = cell.toArray()\n        canonicalNames.push(`${verticalAxis[row][0]}+${horizontalAxis[col][0]}`)\n        remainingCells = remainingCells.delete(cell)\n      }\n      console.assert(remainingCells.size == 0)\n\n      return canonicalNames.join(\" or \")\n    }\n\n    const mosaicFilters = []\n    if (newSelection.size > 0) {\n      mosaicFilters.push(\n        new Filter(\n          name,\n          filterName(),\n          (obs: Observation) => {\n            return newSelection.some(cell => {\n              const [row, col] = cell.toArray()\n              const verticalPredicate = verticalAxis[row][1]\n              const horizontalPredicate = horizontalAxis[col][1]\n              return verticalPredicate(obs) && horizontalPredicate(obs)\n            })\n          },\n          name,\n          { selectedCells: newSelection },\n        ),\n      )\n    }\n\n    const newFilters = new Map(filters)\n    newFilters.set(name, mosaicFilters)\n    setFilters(newFilters)\n  }\n\n  const rowHeaderWidth = Math.max(\n    ...visibleRows.map(\n      rowIndex =>\n        measureText(verticalAxis[rowIndex][0], \"tyche__mosaic__row-header\").width,\n    ),\n  )\n\n  const columnHeaderHeight = Math.max(\n    ...visibleCols.map(\n      colIndex =>\n        measureText(horizontalAxis[colIndex][0], \"tyche__mosaic__column-header\").height,\n    ),\n  )\n  const rowTotalWidth = Math.max(\n    ...visibleRows.map(\n      rowIndex =>\n        measureText(rowTotals[rowIndex].toString(), \"tyche__mosaic__row-total\").width,\n    ),\n  )\n\n  if (visibleRows.length === 0 || visibleCols.length === 0) {\n    return <div>No observations</div>\n  }\n\n  const minCellWidth = 30\n  const minCellHeight = 30\n  const totalHeight = 45 * visibleRows.length\n\n  for (let i = 0; i < verticalAxis.length; i++) {\n    for (let j = 0; j < horizontalAxis.length; j++) {\n      cells[i][j].widthPercent =\n        rowTotals[i] > 0 ? (cells[i][j].count / rowTotals[i]) * 100 : 0\n    }\n  }\n\n  const baseRowHeights = visibleRows.map(\n    rowIndex => (rowTotals[rowIndex] / grandTotal) * totalHeight,\n  )\n  const rowHeights = baseRowHeights.map(height => Math.max(height, minCellHeight))\n\n  const columnHeaderPositions = visibleCols.map((colIndex, i) => {\n    if (i === 0) {\n      // Left-align first column\n      return 0\n    } else if (i === visibleCols.length - 1) {\n      // Right-align last column\n      return 100\n    } else {\n      // Distribute middle columns evenly\n      return (i / (visibleCols.length - 1)) * 100\n    }\n  })\n\n  // Enforce minimum cell widths by adjusting proportions\n  const cellContainerWidth = MAX_MOSAIC_WIDTH - rowHeaderWidth - rowTotalWidth\n  visibleRows.forEach(rowIndex => {\n    const rowCells = visibleCols.map(colIndex => cells[rowIndex][colIndex])\n    const totalRowPercent = rowCells.reduce((sum, cell) => sum + cell.widthPercent, 0)\n\n    if (totalRowPercent > 0) {\n      const actualWidths = rowCells.map(\n        cell => (cell.widthPercent / 100) * cellContainerWidth,\n      )\n\n      const adjustedWidths = actualWidths.map((width, i) => {\n        const cellCount = rowCells[i].count\n        // only enforce minimum width on cells with data (empty cells will not be rendered)\n        if (cellCount > 0 && width > 0 && width < minCellWidth) {\n          return minCellWidth\n        }\n        return width\n      })\n\n      const totalAdjustedWidth = adjustedWidths.reduce((sum, width) => sum + width, 0)\n      visibleCols.forEach((colIndex, i) => {\n        cells[rowIndex][colIndex].widthPercent =\n          totalAdjustedWidth > 0 ? (adjustedWidths[i] / totalAdjustedWidth) * 100 : 0\n      })\n    }\n  })\n\n  return (\n    <div\n      className=\"tyche__mosaic__container\"\n      style={{ maxWidth: `${MAX_MOSAIC_WIDTH}px` }}\n    >\n      <div\n        className=\"tyche__mosaic__column-headers\"\n        style={{\n          marginLeft: `${rowHeaderWidth}px`,\n          marginRight: `${rowTotalWidth}px`,\n          height: `${columnHeaderHeight}px`,\n        }}\n      >\n        {visibleCols.map((colIndex, i) => {\n          const isFirst = i === 0\n          const isLast = i === visibleCols.length - 1\n\n          return (\n            <div\n              key={`header-${colIndex}`}\n              className=\"tyche__mosaic__column-header\"\n              style={{\n                left: `${columnHeaderPositions[i]}%`,\n                transform: isFirst\n                  ? \"translateX(0%)\"\n                  : isLast\n                    ? \"translateX(-100%)\"\n                    : \"translateX(-50%)\",\n                textAlign: isFirst ? \"left\" : isLast ? \"right\" : \"center\",\n              }}\n              onClick={() => onCellClick(null, colIndex)}\n            >\n              {horizontalAxis[colIndex][0]}\n            </div>\n          )\n        })}\n      </div>\n\n      {visibleRows.map((rowIndex, rowDisplayIndex) => (\n        <div\n          key={`row-${rowIndex}`}\n          className=\"tyche__mosaic__row\"\n          style={{\n            height: `${rowHeights[rowDisplayIndex]}px`,\n          }}\n        >\n          <div\n            className=\"tyche__mosaic__row-header\"\n            style={{\n              width: `${rowHeaderWidth}px`,\n              cursor: \"pointer\",\n            }}\n            onClick={() => onCellClick(rowIndex, null)}\n          >\n            {verticalAxis[rowIndex][0]}\n          </div>\n\n          <div className=\"tyche__mosaic__row-cells\">\n            {visibleCols.map(colIndex => {\n              const cell = cells[rowIndex][colIndex]\n              // don't display cells with no data\n              if (cell.count === 0) {\n                return null\n              }\n\n              const isSelected = selectedCells.has(List([rowIndex, colIndex]))\n              const tooltipContent = `${verticalAxis[rowIndex][0]} and ${horizontalAxis[colIndex][0]}<br>Count: ${cell.count}`\n\n              return (\n                <div\n                  key={`cell-${rowIndex}-${colIndex}`}\n                  className={`tyche__mosaic__cell${isSelected ? \" tyche__mosaic__cell--selected\" : \"\"}`}\n                  style={{\n                    width: `${cell.widthPercent}%`,\n                    minWidth: `${minCellWidth}px`,\n                    minHeight: `${minCellHeight}px`,\n                    ...cssStyle(verticalAxis[rowIndex][0], horizontalAxis[colIndex][0]),\n                  }}\n                  onClick={() => onCellClick(rowIndex, colIndex)}\n                  onMouseEnter={e =>\n                    showTooltip(tooltipContent, e.clientX, e.clientY, \"tyche-mosaic\")\n                  }\n                  onMouseMove={e => moveTooltip(e.clientX, e.clientY, \"tyche-mosaic\")}\n                  onMouseLeave={() => hideTooltip(\"tyche-mosaic\")}\n                >\n                  <span className=\"tyche__mosaic__cell-value\">{cell.count}</span>\n                </div>\n              )\n            })}\n          </div>\n\n          <div\n            className=\"tyche__mosaic__row-total\"\n            style={{\n              width: `${rowTotalWidth}px`,\n            }}\n          >\n            {rowTotals[rowIndex]}\n          </div>\n        </div>\n      ))}\n\n      <div\n        className=\"tyche__mosaic__column-totals-row\"\n        style={{ height: `${columnHeaderHeight}px` }}\n      >\n        <div style={{ width: `${rowHeaderWidth}px` }}></div>\n        <div\n          className=\"tyche__mosaic__column-totals\"\n          style={{\n            marginRight: `${rowTotalWidth}px`,\n          }}\n        >\n          {visibleCols.map((colIndex, i) => {\n            const isFirst = i === 0\n            const isLast = i === visibleCols.length - 1\n\n            return (\n              <div\n                key={`total-${colIndex}`}\n                className=\"tyche__mosaic__column-total\"\n                style={{\n                  left: `${columnHeaderPositions[i]}%`,\n                  transform: isFirst\n                    ? \"translateX(0%)\"\n                    : isLast\n                      ? \"translateX(-100%)\"\n                      : \"translateX(-50%)\",\n                  textAlign: isFirst ? \"left\" : isLast ? \"right\" : \"center\",\n                }}\n              >\n                {columnTotals[colIndex]}\n              </div>\n            )\n          })}\n        </div>\n        <div\n          className=\"tyche__mosaic__grand-total\"\n          style={{ width: `${rowTotalWidth}px` }}\n        >\n          {grandTotal}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { MosaicChart } from \"src/tyche/MosaicChart\"\nimport { TYCHE_COLOR } from \"src/tyche/Tyche\"\nimport { TycheSection } from \"src/tyche/TycheSection\"\nimport { Observation } from \"src/types/dashboard\"\n\nexport function Samples({\n  observations,\n}: {\n  observations: { raw: Observation[]; filtered: Observation[] }\n}) {\n  function cellStyle(row: string, column: string): React.CSSProperties {\n    const style: React.CSSProperties = {}\n\n    if (row === \"Passed\") {\n      style.backgroundColor = TYCHE_COLOR.SUCCESS\n    } else if (row === \"Invalid\") {\n      style.backgroundColor = TYCHE_COLOR.WARNING\n    } else if (row === \"Failed\") {\n      style.backgroundColor = TYCHE_COLOR.ERROR\n    }\n\n    if (column === \"Duplicate\") {\n      style.opacity = 0.7\n    }\n\n    return style\n  }\n\n  return (\n    <TycheSection title=\"Samples\">\n      <MosaicChart\n        name=\"samples\"\n        observations={observations}\n        verticalAxis={[\n          [\"Passed\", obs => obs.status === \"passed\"],\n          [\"Invalid\", obs => obs.status === \"gave_up\"],\n        ]}\n        horizontalAxis={[\n          [\"Unique\", obs => obs.isUnique ?? false],\n          [\"Duplicate\", obs => obs.isDuplicate ?? false],\n        ]}\n        cssStyle={cellStyle}\n      />\n    </TycheSection>\n  )\n}\n","import { Toggle } from \"src/components/Toggle\"\nimport { Features } from \"src/tyche/Features\"\nimport { FilterProvider, useFilters } from \"src/tyche/FilterContext\"\nimport { Filters } from \"src/tyche/Filters\"\nimport { Representation } from \"src/tyche/Representation\"\nimport { Samples } from \"src/tyche/Samples\"\nimport { Test } from \"src/types/test\"\n\nexport const PRESENT_STRING = \"Present\"\nexport const NOT_PRESENT_STRING = \"Not present\"\n\nexport enum TYCHE_COLOR {\n  // https://github.com/tyche-pbt/tyche-extension/blob/main/webview-ui/src/utilities/colors.ts\n  // plus a 10% blend of #ECEFF4 to soften them\n  PRIMARY = \"#6b8ab5\",\n  SUCCESS = \"#8ba86b\",\n  WARNING = \"#d59a7e\",\n  ERROR = \"#c77a7e\",\n  ACCENT = \"#c1a2bb\",\n  ACCENT2 = \"#9fc7c6\",\n  ACCENT3 = \"#edd39a\",\n  ACCENT4 = \"#99c7d6\",\n  ACCENT5 = \"#8faac6\",\n}\n\nfunction TycheInner({ test }: { test: Test }) {\n  const { filters, observationCategory, setObservationCategory } = useFilters()\n\n  const rawObservations =\n    observationCategory === \"rolling\"\n      ? // newest first for rolling observations\n        test.rolling_observations.sortKey(observation => -observation.run_start)\n      : test.corpus_observations\n\n  function filteredObservations() {\n    const allFilters = Array.from(filters.values()).flat()\n\n    if (allFilters.length === 0) {\n      return rawObservations\n    }\n\n    return rawObservations.filter(observation => {\n      return allFilters.every(filter => filter.predicate(observation))\n    })\n  }\n\n  const observations = {\n    raw: rawObservations,\n    filtered: filteredObservations(),\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">\n        <span>Observations</span>\n      </div>\n      <div\n        style={{\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\",\n          display: \"flex\",\n          fontSize: \"1.05rem\",\n          fontWeight: \"500\",\n        }}\n      >\n        <Toggle\n          value={observationCategory}\n          onChange={setObservationCategory}\n          options={[\n            { value: \"covering\", content: \"Covering\" },\n            { value: \"rolling\", content: \"Rolling\" },\n          ]}\n        />\n      </div>\n      <Filters />\n      {observations.raw.length > 0 ? (\n        <>\n          <Samples observations={observations} />\n          <Features\n            observations={observations}\n            observationCategory={observationCategory}\n          />\n          <Representation\n            observations={observations}\n            observationCategory={observationCategory}\n          />\n        </>\n      ) : (\n        <div className=\"tyche__section\">No observations</div>\n      )}\n    </div>\n  )\n}\n\nexport function Tyche({ test }: { test: Test }) {\n  return (\n    <FilterProvider>\n      <TycheInner test={test} />\n    </FilterProvider>\n  )\n}\n","import { sum } from \"src/utils/utils\"\n\nexport const SKIP_EXCEPTIONS = [\"Skipped\", \"SkipTest\"]\n\nexport abstract class Dataclass<T> {\n  withProperties(props: Partial<T>): T {\n    return Object.assign(Object.create(this.constructor.prototype), this, props) as T\n  }\n}\n\nexport enum FailureState {\n  SHRUNK = \"shrunk\",\n  UNSHRUNK = \"unshrunk\",\n  FIXED = \"fixed\",\n}\n\nexport class Failure extends Dataclass<Failure> {\n  constructor(\n    public state: FailureState,\n    public observation: Observation,\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): Failure {\n    return new Failure(data.state, Observation.fromJson(data.observation))\n  }\n}\n\nexport class FatalFailure extends Dataclass<FatalFailure> {\n  constructor(public traceback: string) {\n    super()\n  }\n}\n\nexport class StatusCounts extends Dataclass<StatusCounts> {\n  constructor(\n    public counts: Map<Status, number> = new Map([\n      [Status.OVERRUN, 0],\n      [Status.INVALID, 0],\n      [Status.VALID, 0],\n      [Status.INTERESTING, 0],\n    ]),\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): StatusCounts {\n    const counts = new Map<Status, number>([\n      [Status.OVERRUN, 0],\n      [Status.INVALID, 0],\n      [Status.VALID, 0],\n      [Status.INTERESTING, 0],\n    ])\n\n    for (const [status, count] of Object.entries(data)) {\n      console.assert(typeof count === \"number\")\n      counts.set(Number(status) as Status, count as number)\n    }\n    return new StatusCounts(counts)\n  }\n\n  add(statuses: StatusCounts): StatusCounts {\n    const newStatuses = new Map(this.counts)\n    for (const [status, count] of statuses.counts.entries()) {\n      newStatuses.set(status, newStatuses.get(status)! + count)\n    }\n    return new StatusCounts(newStatuses)\n  }\n\n  subtract(statuses: StatusCounts): StatusCounts {\n    const newStatusCounts = new Map(this.counts)\n    for (const [status, count] of statuses.counts.entries()) {\n      newStatusCounts.set(status, newStatusCounts.get(status)! - count)\n    }\n    return new StatusCounts(newStatusCounts)\n  }\n\n  sum(): number {\n    return sum(this.counts.values())\n  }\n}\n\nexport enum Status {\n  OVERRUN = 0,\n  INVALID = 1,\n  VALID = 2,\n  INTERESTING = 3,\n}\n\nexport enum Phase {\n  GENERATE = \"generate\",\n  REPLAY = \"replay\",\n  DISTILL = \"distill\",\n  SHRINK = \"shrink\",\n  FAILED = \"failed\",\n}\n\nexport interface WorkerIdentity {\n  uuid: string\n  operating_system: string\n  python_version: string\n  hypothesis_version: string\n  hypofuzz_version: string\n  pid: number\n  hostname: string\n  pod_name: string | null\n  pod_namespace: string | null\n  node_name: string | null\n  pod_ip: string | null\n  container_id: string | null\n  git_hash: string | null\n}\n\nexport class Report extends Dataclass<Report> {\n  public status_counts_diff: StatusCounts | null\n  public elapsed_time_diff: number | null\n  public timestamp_monotonic: number | null\n\n  constructor(\n    public elapsed_time: number,\n    public timestamp: number,\n    public status_counts: StatusCounts,\n    public behaviors: number,\n    public fingerprints: number,\n    public since_new_behavior: number | null,\n    public phase: Phase,\n    public worker_uuid: string,\n  ) {\n    super()\n    this.status_counts_diff = null\n    this.elapsed_time_diff = null\n    this.timestamp_monotonic = null\n  }\n\n  get ninputs(): number {\n    return this.status_counts.sum()\n  }\n\n  static fromJson(worker_uuid: string, data: any): Report {\n    return new Report(\n      data.elapsed_time,\n      data.timestamp,\n      StatusCounts.fromJson(data.status_counts),\n      data.behaviors,\n      data.fingerprints,\n      data.since_new_behavior,\n      data.phase,\n      worker_uuid,\n    )\n  }\n}\n\nexport enum ObservationStatus {\n  PASSED = \"passed\",\n  FAILED = \"failed\",\n  GAVE_UP = \"gave_up\",\n}\n\nexport enum Stability {\n  STABLE = \"stable\",\n  UNSTABLE = \"unstable\",\n}\n\nexport class Observation extends Dataclass<Observation> {\n  public isDuplicate: boolean | null = null\n  public isUnique: boolean | null = null\n\n  // https://hypothesis.readthedocs.io/en/latest/reference/integrations.html#test-case\n  constructor(\n    public type: string,\n    public status: ObservationStatus,\n    public status_reason: string,\n    public representation: string,\n    // arguments is a reserved keyword in javascript\n    public arguments_: Map<string, any>,\n    public how_generated: string,\n    public features: Map<string, any>,\n    public timing: Map<string, any>,\n    public metadata: Map<string, any>,\n    public property: string,\n    public run_start: number,\n    public stability: Stability | null,\n  ) {\n    super()\n  }\n\n  static fromJson(data: any): Observation {\n    return new Observation(\n      data.type,\n      data.status,\n      data.status_reason,\n      data.representation,\n      new Map(Object.entries(data.arguments)),\n      data.how_generated,\n      new Map(Object.entries(data.features)),\n      new Map(Object.entries(data.timing)),\n      new Map(Object.entries(data.metadata)),\n      data.property,\n      Number(data.run_start),\n      data.stability,\n    )\n  }\n}\n\nexport enum TestStatus {\n  FAILED_FATALLY = 0,\n  FAILED = 1,\n  SHRINKING = 2,\n  RUNNING = 3,\n  SKIPPED_DYNAMICALLY = 4,\n  WAITING = 5,\n}\n","import {\n  Dataclass,\n  Failure,\n  FatalFailure,\n  Observation,\n  Phase,\n  Report,\n  SKIP_EXCEPTIONS,\n  StatusCounts,\n  TestStatus,\n} from \"src/types/dashboard\"\nimport { bisectRight } from \"src/utils/utils\"\n\nfunction report_with_diff(report: Report, last_worker_report: Report | null): Report {\n  const last_status_counts = last_worker_report\n    ? last_worker_report.status_counts\n    : new StatusCounts()\n  const last_elapsed_time = last_worker_report ? last_worker_report.elapsed_time : 0.0\n  const status_counts_diff = report.status_counts.subtract(last_status_counts)\n  const elapsed_time_diff = report.elapsed_time - last_elapsed_time\n  const timestamp_monotonic = last_worker_report\n    ? Math.max(\n        report.timestamp,\n        last_worker_report.timestamp_monotonic! + elapsed_time_diff,\n      )\n    : report.timestamp\n\n  console.assert(\n    Array.from(status_counts_diff.counts.values()).every(count => count >= 0),\n  )\n  console.assert(elapsed_time_diff >= 0.0)\n\n  return report.withProperties({\n    status_counts_diff: status_counts_diff,\n    elapsed_time_diff: elapsed_time_diff,\n    timestamp_monotonic: timestamp_monotonic,\n  })\n}\n\nexport class Test extends Dataclass<Test> {\n  // if it's been this long since the last report in seconds, consider the test status\n  // to be \"waiting\" instead of \"running\"\n  static WAITING_STATUS_DURATION = 120\n\n  public linear_reports: Report[]\n  private _status_counts_cumsum: Map<number, [number, StatusCounts[]]>\n  private _elapsed_time_cumsum: Map<number, [number, number[]]>\n  // when we finished receiving all data for this worker from the websocket. null if\n  // we have not finished receiving data.\n  public load_finished_at: number | null = null\n\n  constructor(\n    public database_key: string | null,\n    public nodeid: string,\n    public rolling_observations: Observation[],\n    public corpus_observations: Observation[],\n    public failures: Map<string, Failure>,\n    public fatal_failure: FatalFailure | null,\n    public reports_by_worker: Map<string, Report[]>,\n    public stability: number | null,\n  ) {\n    super()\n    this.linear_reports = []\n    // TODO we should use an actual LRUCache for memory here, like in python.\n    // https://github.com/isaacs/node-lru-cache looks like a good option\n    this._status_counts_cumsum = new Map()\n    this._elapsed_time_cumsum = new Map()\n    this.load_finished_at = null\n\n    const reports_by_worker_ = this.reports_by_worker\n    this.reports_by_worker = new Map()\n\n    // TODO: use k-way merge for performance?\n\n    // list of (worker_uuid, report) for each report, sorted by report.timestamp\n    const sorted_reports = Array.from(reports_by_worker_.entries())\n      .flatMap(([worker_uuid, reports]) => reports.map(report => [worker_uuid, report]))\n      .sortKey(([_worker_uuid, report]) => (report as Report).timestamp)\n    for (const [worker_uuid, report] of sorted_reports) {\n      this.add_report(worker_uuid as string, report as Report)\n    }\n    this._check_invariants()\n  }\n\n  static fromJson(data: any): Test {\n    return new Test(\n      data.database_key,\n      data.nodeid,\n      // observations will be updated later by another websocket event\n      [],\n      [],\n      new Map(\n        Object.entries(data.failures).map(([key, value]) => [\n          key,\n          Failure.fromJson(value),\n        ]),\n      ),\n      data.fatal_failure,\n      new Map(\n        Object.entries(data.reports_by_worker).map(([key, value]) => [\n          key,\n          (value as any[]).map(Report.fromJson),\n        ]),\n      ),\n      data.stability,\n    )\n  }\n\n  _assert_reports_ordered(reports: Report[]) {\n    for (let i = 0; i < reports.length - 1; i++) {\n      console.assert(\n        reports[i].timestamp_monotonic! <= reports[i + 1].timestamp_monotonic!,\n      )\n    }\n  }\n\n  _check_invariants() {\n    this._assert_reports_ordered(this.linear_reports)\n\n    const linear_status_counts = this.linear_status_counts(null)\n    for (let i = 0; i < linear_status_counts.length - 1; i++) {\n      console.assert(linear_status_counts[i].sum() <= linear_status_counts[i + 1].sum())\n    }\n    const linear_elapsed_time = this.linear_elapsed_time(null)\n    for (let i = 0; i < linear_elapsed_time.length - 1; i++) {\n      console.assert(linear_elapsed_time[i] <= linear_elapsed_time[i + 1])\n    }\n    console.assert(\n      linear_elapsed_time.length === linear_status_counts.length &&\n        linear_status_counts.length === this.linear_reports.length,\n    )\n\n    for (const [_worker_uuid, reports] of this.reports_by_worker.entries()) {\n      this._assert_reports_ordered(reports)\n    }\n  }\n\n  add_report(worker_uuid: string, report: Report) {\n    // This function implements Test.add_report in python. Make sure to keep the\n    // two versions in sync.\n\n    let last_report_worker: Report | null = null\n    let reports_index = 0\n    if (this.reports_by_worker.has(worker_uuid)) {\n      const reports = this.reports_by_worker.get(worker_uuid)!\n      reports_index = bisectRight(reports, report.elapsed_time, r => r.elapsed_time)\n      last_report_worker = reports_index != 0 ? reports[reports_index - 1] : null\n    }\n\n    const linear_report = report_with_diff(report, last_report_worker)\n\n    if (!this.reports_by_worker.has(worker_uuid)) {\n      this.reports_by_worker.set(worker_uuid, [])\n    }\n    this.reports_by_worker.get(worker_uuid)!.splice(reports_index, 0, linear_report)\n\n    if (\n      linear_report.phase !== Phase.REPLAY ||\n      (linear_report.behaviors >= this.behaviors &&\n        linear_report.fingerprints >= this.fingerprints)\n    ) {\n      const index = bisectRight(\n        this.linear_reports,\n        linear_report.timestamp_monotonic!,\n        r => r.timestamp_monotonic,\n      )\n      this.linear_reports.splice(index, 0, linear_report)\n      if (index != this.linear_reports.length - 1) {\n        let next_worker_report = null\n        let i_offset\n        for (\n          i_offset = 0;\n          i_offset < this.linear_reports.length - (index + 1);\n          i_offset++\n        ) {\n          const report_candidate = this.linear_reports[index + 1 + i_offset]\n          if (linear_report.worker_uuid === report_candidate.worker_uuid!) {\n            next_worker_report = report_candidate\n            break\n          }\n        }\n\n        if (next_worker_report) {\n          console.assert(\n            this.linear_reports[index + 1 + i_offset] === next_worker_report,\n          )\n          this.linear_reports[index + 1 + i_offset] = report_with_diff(\n            next_worker_report,\n            linear_report,\n          )\n        }\n\n        for (const cache of [this._status_counts_cumsum, this._elapsed_time_cumsum]) {\n          for (const [key, [start_idx, values]] of cache.entries()) {\n            if (index >= start_idx) {\n              cache.set(key, [start_idx, values.slice(0, index - start_idx) as any[]])\n            }\n          }\n        }\n      }\n    }\n  }\n\n  get normalFailures() {\n    return Array.from(this.failures.entries())\n      .filter(\n        ([origin, failure]) =>\n          !SKIP_EXCEPTIONS.some(exception => origin.includes(`${exception} at`)),\n      )\n      .map(([_, failure]) => failure)\n  }\n\n  get skipFailures() {\n    return Array.from(this.failures.entries())\n      .filter(([origin, failure]) =>\n        SKIP_EXCEPTIONS.some(exception => origin.includes(`${exception} at`)),\n      )\n      .map(([_, failure]) => failure)\n  }\n\n  get status() {\n    if (this.skipFailures.length > 0) {\n      return TestStatus.SKIPPED_DYNAMICALLY\n    }\n    if (this.fatal_failure) {\n      return TestStatus.FAILED_FATALLY\n    }\n    if (this.failures.size > 0) {\n      return TestStatus.FAILED\n    }\n    if (this.linear_reports.length === 0) {\n      return TestStatus.WAITING\n    }\n\n    const latest = this.linear_reports[this.linear_reports.length - 1]\n    const timestamp = new Date().getTime() / 1000\n    if (latest.phase == Phase.SHRINK) {\n      return TestStatus.SHRINKING\n    }\n    if (\n      latest.ninputs === 0 ||\n      latest.timestamp < timestamp - Test.WAITING_STATUS_DURATION\n    ) {\n      return TestStatus.WAITING\n    }\n    return TestStatus.RUNNING\n  }\n\n  get behaviors() {\n    if (this.linear_reports.length === 0) {\n      return 0\n    }\n    return this.linear_reports[this.linear_reports.length - 1].behaviors\n  }\n\n  get fingerprints() {\n    if (this.linear_reports.length === 0) {\n      return 0\n    }\n    return this.linear_reports[this.linear_reports.length - 1].fingerprints\n  }\n\n  get since_new_behavior() {\n    // TODO take linearization into account properly here. I think we want \"linearized\n    // inputs since branch count last increased\". Iterate backwards over linear_status_counts?\n    if (this.linear_reports.length === 0) {\n      return null\n    }\n    return this.linear_reports[this.linear_reports.length - 1].since_new_behavior\n  }\n\n  elapsed_time(since: number | null): number {\n    const elapsed_times = this.linear_elapsed_time(since)\n    if (elapsed_times.length === 0) {\n      return 0.0\n    }\n    return elapsed_times[elapsed_times.length - 1]\n  }\n\n  ninputs(since: number | null): number {\n    const counts = this.linear_status_counts(since)\n    if (counts.length === 0) {\n      return 0\n    }\n    return counts[counts.length - 1].sum()\n  }\n\n  _cumsum<T>(\n    cache: Map<number, [number, T[]]>,\n    attr: keyof Report,\n    add: (a: T, b: T) => T,\n    since: number | null,\n    initial: T,\n  ): T[] {\n    if (since === null) {\n      since = -Infinity\n    }\n\n    if (cache.has(since)) {\n      const [start_idx, cumsum] = cache.get(since)!\n      if (cumsum.length < this.linear_reports.slice(start_idx).length) {\n        // extend cumsum with any new reports\n        let running = cumsum.length > 0 ? cumsum[cumsum.length - 1] : initial\n        for (const report of this.linear_reports.slice(start_idx + cumsum.length)) {\n          running = add(running, report[attr] as T)\n          cumsum.push(running)\n        }\n        cache.set(since, [start_idx, cumsum])\n      }\n      return cumsum\n    }\n\n    const cumsum: T[] = []\n    const start_idx = bisectRight(\n      this.linear_reports,\n      since,\n      r => r.timestamp_monotonic!,\n    )\n    let running = initial\n    for (const report of this.linear_reports.slice(start_idx)) {\n      running = add(running, report[attr] as T)\n      cumsum.push(running)\n    }\n    cache.set(since, [start_idx, cumsum])\n    return cumsum\n  }\n\n  linear_status_counts(since: number | null): StatusCounts[] {\n    return this._cumsum(\n      this._status_counts_cumsum,\n      \"status_counts_diff\",\n      (a, b) => a.add(b),\n      since,\n      new StatusCounts(),\n    )\n  }\n\n  linear_elapsed_time(since: number | null): number[] {\n    return this._cumsum(\n      this._elapsed_time_cumsum,\n      \"elapsed_time_diff\",\n      (a, b) => a + b,\n      since,\n      0.0,\n    )\n  }\n}\n","import React, {\n  createContext,\n  useContext,\n  useEffect,\n  useReducer,\n  useRef,\n  useState,\n} from \"react\"\nimport { ProgressBar } from \"src/components/ProgressBar\"\nimport { useNotification } from \"src/context/NotificationProvider\"\nimport { NOT_PRESENT_STRING, PRESENT_STRING } from \"src/tyche/Tyche\"\nimport { Failure, FatalFailure, Observation, Report } from \"src/types/dashboard\"\nimport { Test } from \"src/types/test\"\n\ninterface DataContextType {\n  tests: Map<string, Test>\n  socket: WebSocket | null\n  doLoadData: (nodeid: string | null) => void\n  testsLoaded: () => boolean\n}\n\nconst DataContext = createContext<DataContextType | null>(null)\n\ninterface DataProviderProps {\n  children: React.ReactNode\n}\n\ninterface LoadingStatus {\n  // the number of tests collected by the dashboard.\n  count_tests: number | null\n  // the number of tests the dashboard has fully loaded from the database so far.\n  count_tests_loaded: number | null\n}\n\nenum DashboardEventType {\n  SET_STATUS = 1,\n  ADD_TESTS = 2,\n  ADD_REPORTS = 3,\n  ADD_OBSERVATIONS = 4,\n  ADD_FAILURES = 5,\n  SET_FAILURES = 6,\n  TEST_LOAD_FINISHED = 7,\n  SET_FATAL_FAILURE = 8,\n}\n\ntype TestsAction =\n  | {\n      type: DashboardEventType.SET_STATUS\n      loading_status: LoadingStatus\n    }\n  | {\n      type: DashboardEventType.ADD_TESTS\n      tests: {\n        database_key: string\n        nodeid: string\n        failures: Map<string, Failure>\n        fatal_failure: FatalFailure | null\n        stability: number | null\n      }[]\n    }\n  | {\n      type: DashboardEventType.ADD_REPORTS\n      nodeid: string\n      worker_uuid: string\n      reports: Report[]\n    }\n  | {\n      type: DashboardEventType.ADD_FAILURES\n      nodeid: string\n      failures: Map<string, Failure>\n    }\n  | {\n      type: DashboardEventType.ADD_OBSERVATIONS\n      nodeid: string\n      observation_type: \"rolling\" | \"corpus\"\n      observations: Observation[]\n    }\n  | {\n      type: DashboardEventType.TEST_LOAD_FINISHED\n      nodeid: string\n    }\n  | {\n      type: DashboardEventType.SET_FATAL_FAILURE\n      nodeid: string\n      fatal_failure: FatalFailure | null\n    }\nfunction prepareObservations(observations: Observation[]) {\n  // compute uniqueness\n  const reprCounts = new Map<string, number>()\n  observations.forEach(obs => {\n    reprCounts.set(obs.representation, (reprCounts.get(obs.representation) || 0) + 1)\n  })\n\n  observations.forEach(observation => {\n    const count = reprCounts.get(observation.representation)!\n    observation.isUnique = count == 1\n    observation.isDuplicate = count > 1\n  })\n\n  // We want tyche to be able to rely on observations having a value for every feature. This makes\n  // things easier for e.g. the sorting logic. To support this, first make a set of all features.\n  // Then, for each observation, if that feature is not present, insert it with value \"Not present\".\n  //\n  // Also, if an observation's feature value is ever \"\", change that to \"Present\". These come from\n  // e.g. ``event(value)``, without an associated payload.\n  const features = new Set<string>()\n  observations.forEach(obs => {\n    obs.features.forEach((_value, feature) => {\n      features.add(feature)\n    })\n  })\n\n  observations.forEach(obs => {\n    features.forEach(feature => {\n      if (!obs.features.has(feature)) {\n        obs.features.set(feature, NOT_PRESENT_STRING)\n      }\n    })\n\n    for (const [feature, value] of obs.features) {\n      if (value === \"\") {\n        obs.features.set(feature, PRESENT_STRING)\n      }\n    }\n  })\n}\n\nfunction testsReducer(\n  state: Map<string, Test>,\n  action: TestsAction,\n): Map<string, Test> {\n  const newState = new Map(state)\n\n  function getOrCreateTest(nodeid: string): Test {\n    if (newState.has(nodeid)) {\n      return newState.get(nodeid)!\n    } else {\n      const test = new Test(null, nodeid, [], [], new Map(), null, new Map(), null)\n      newState.set(test.nodeid, test)\n      return test\n    }\n  }\n\n  switch (action.type) {\n    case DashboardEventType.SET_STATUS: {\n      return state\n    }\n\n    case DashboardEventType.ADD_TESTS: {\n      const { tests } = action\n      for (const {\n        database_key,\n        nodeid,\n        failures,\n        fatal_failure,\n        stability,\n      } of tests) {\n        const test = getOrCreateTest(nodeid)\n        test.database_key = database_key\n        failures.forEach((failure, interesting_origin) => {\n          test.failures.set(interesting_origin, failure)\n        })\n        test.fatal_failure = fatal_failure\n        test.stability = stability\n      }\n      return newState\n    }\n\n    case DashboardEventType.ADD_REPORTS: {\n      const { nodeid, worker_uuid, reports } = action\n      const test = getOrCreateTest(nodeid)\n      for (const report of reports) {\n        test.add_report(worker_uuid, report)\n      }\n      return newState\n    }\n\n    case DashboardEventType.ADD_FAILURES: {\n      const { nodeid, failures } = action\n      const test = getOrCreateTest(nodeid)\n      failures.forEach((failure, interesting_origin) => {\n        test.failures.set(interesting_origin, failure)\n      })\n      return newState\n    }\n\n    case DashboardEventType.ADD_OBSERVATIONS: {\n      const { nodeid, observation_type, observations } = action\n      const test = getOrCreateTest(nodeid)\n      if (observation_type === \"rolling\") {\n        // make sure to create a new ref, not mutate the existing one\n        test.rolling_observations = [...test.rolling_observations, ...observations]\n        // keep only the most recent 300 rolling observations, by run_start\n        //\n        // this is a good candidate for a proper nlogn SortedList\n        test.rolling_observations = test.rolling_observations\n          .sortKey(observation => -observation.run_start)\n          .slice(0, 300)\n        prepareObservations(test.rolling_observations)\n      } else {\n        console.assert(observation_type === \"corpus\")\n        test.corpus_observations = [...test.corpus_observations, ...observations]\n        prepareObservations(test.corpus_observations)\n      }\n      return newState\n    }\n\n    case DashboardEventType.TEST_LOAD_FINISHED: {\n      const { nodeid } = action\n      const test = getOrCreateTest(nodeid)\n      test.load_finished_at = Date.now()\n      return newState\n    }\n\n    case DashboardEventType.SET_FATAL_FAILURE: {\n      const { nodeid, fatal_failure } = action\n      const test = getOrCreateTest(nodeid)\n      test.fatal_failure = fatal_failure\n      return newState\n    }\n\n    default:\n      throw new Error(\"non-exhaustive switch in testsReducer\")\n  }\n}\n\nexport function DataProvider({ children }: DataProviderProps) {\n  const [socket, setSocket] = useState<WebSocket | null>(null)\n  const [tests, dispatch] = useReducer(testsReducer, new Map<string, Test>())\n  const [loadData, setLoadData] = useState(false)\n  const [nodeid, setNodeid] = useState<string | null>(null)\n  const [loadingStatus, setLoadingStatus] = useState<LoadingStatus>({\n    count_tests: null,\n    count_tests_loaded: null,\n  })\n  const { addNotification, updateNotification, dismissNotification } = useNotification()\n  const statusNotification = useRef<number | null>(null)\n\n  const doLoadData = (nodeid: string | null) => {\n    setLoadData(true)\n    setNodeid(nodeid)\n  }\n\n  const testsLoaded = () => {\n    const now = Date.now()\n    return (\n      loadingStatus.count_tests_loaded !== null &&\n      loadingStatus.count_tests !== null &&\n      loadingStatus.count_tests_loaded === loadingStatus.count_tests &&\n      Array.from(tests.values()).every(test => {\n        if (test.load_finished_at === null) {\n          return false\n        }\n        return now - test.load_finished_at > 200\n      })\n    )\n  }\n\n  useEffect(\n    () => {\n      if (!loadData) {\n        return\n      }\n\n      // clear `tests` whenever we navigate to a new page. We want to avoid the following:\n      //\n      // * navigate to page A\n      //   * tests[A] = v1\n      // * navigate to page B\n      //   * tests[B] = v2\n      // * navigate back to page A\n      //   * tests[A] = v1 + v1\n      //\n      // where the data in tests[A] gets doubled because we sent multiple e.g. ADD_REPORTS events,\n      // where the backend re-sent the entire reports list under the assumption this was a fresh\n      // page load, but the frontend simply appends them and duplicates the data.\n      tests.clear()\n      setLoadingStatus({\n        count_tests: null,\n        count_tests_loaded: null,\n      })\n\n      // load data from local dashboard state json files iff the appropriate env var was set\n      // during building.\n      if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n        fetch(new URL(/* @vite-ignore */ \"dashboard_state/tests.json\", import.meta.url))\n          .then(response => response.text())\n          .then(text => JSON.parse(text) as Record<string, any>)\n          .then(data => {\n            Object.entries(data).forEach(([nodeid, testData]) => {\n              dispatch({\n                type: DashboardEventType.ADD_TESTS,\n                tests: [\n                  {\n                    database_key: testData.database_key,\n                    nodeid: nodeid,\n                    failures: testData.failures,\n                    fatal_failure: testData.fatal_failure,\n                    stability: testData.stability,\n                  },\n                ],\n              })\n\n              for (const [worker_uuid, reports] of Object.entries(\n                testData.reports_by_worker,\n              )) {\n                dispatch({\n                  type: DashboardEventType.ADD_REPORTS,\n                  nodeid: nodeid,\n                  worker_uuid: worker_uuid,\n                  reports: (reports as any[]).map(report =>\n                    Report.fromJson(worker_uuid, report),\n                  ),\n                })\n              }\n\n              dispatch({\n                type: DashboardEventType.TEST_LOAD_FINISHED,\n                nodeid: nodeid,\n              })\n            })\n          })\n\n        // json.parse is sync (blocks ui) and expensive. Push it to a background worker to make it async.\n        // We pay a small serialization cost; ~5% by my measurement.\n        const worker = new Worker(new URL(\"./jsonWorker.js\", import.meta.url))\n        fetch(\n          new URL(\n            /* @vite-ignore */ \"dashboard_state/observations.json\",\n            import.meta.url,\n          ),\n        )\n          .then(response => response.text())\n          .then(text => {\n            return new Promise<Record<string, { rolling: any[]; corpus: any[] }>>(\n              resolve => {\n                worker.onmessage = e => resolve(e.data)\n                worker.postMessage(text)\n              },\n            )\n          })\n          .then(data => {\n            for (const [nodeid, test] of Object.entries(data)) {\n              dispatch({\n                type: DashboardEventType.ADD_OBSERVATIONS,\n                nodeid: nodeid,\n                observation_type: \"rolling\",\n                observations: test.rolling.map(Observation.fromJson),\n              })\n              dispatch({\n                type: DashboardEventType.ADD_OBSERVATIONS,\n                nodeid: nodeid,\n                observation_type: \"corpus\",\n                observations: test.corpus.map(Observation.fromJson),\n              })\n            }\n          })\n\n        return () => worker.terminate()\n      }\n\n      const url = new URL(\n        `ws${window.location.protocol === \"https:\" ? \"s\" : \"\"}://${window.location.host}/ws`,\n      )\n      if (nodeid) {\n        url.searchParams.set(\"nodeid\", nodeid)\n      }\n\n      const ws = new WebSocket(url)\n\n      ws.onmessage = event => {\n        const data = JSON.parse(event.data)\n        const type = Number(data.type)\n        const count_tests = Number(data.count_tests)\n        const count_tests_loaded = Number(data.count_tests_loaded)\n\n        switch (type) {\n          case DashboardEventType.SET_STATUS: {\n            const loading_status = {\n              count_tests: count_tests,\n              count_tests_loaded: count_tests_loaded,\n            }\n            setLoadingStatus(loading_status)\n\n            dispatch({\n              type: DashboardEventType.SET_STATUS,\n              loading_status: loading_status,\n            })\n\n            if (count_tests_loaded === count_tests) {\n              if (statusNotification.current !== null) {\n                dismissNotification(statusNotification.current)\n                statusNotification.current = null\n              }\n              break\n            }\n\n            const progressContent = React.createElement(ProgressBar, {\n              current: count_tests_loaded,\n              total: count_tests,\n              message: `Note: dashboard is still starting up (${count_tests_loaded}/${count_tests} tests loaded)`,\n            })\n\n            if (!statusNotification.current) {\n              statusNotification.current = addNotification(progressContent, null)\n            } else {\n              updateNotification(statusNotification.current, progressContent, null)\n            }\n\n            break\n          }\n\n          case DashboardEventType.ADD_TESTS: {\n            dispatch({\n              type: DashboardEventType.ADD_TESTS,\n              tests: data.tests.map((test: any) => ({\n                database_key: test.database_key,\n                nodeid: test.nodeid,\n                failures: new Map(\n                  Object.entries(test.failures).map(([key, value]) => [\n                    key,\n                    Failure.fromJson(value),\n                  ]),\n                ),\n                fatal_failure: test.fatal_failure,\n                stability: test.stability,\n              })),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_REPORTS: {\n            dispatch({\n              type: DashboardEventType.ADD_REPORTS,\n              nodeid: data.nodeid,\n              worker_uuid: data.worker_uuid,\n              reports: (data.reports as any[]).map(report =>\n                Report.fromJson(data.worker_uuid, report),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_OBSERVATIONS: {\n            dispatch({\n              type: DashboardEventType.ADD_OBSERVATIONS,\n              nodeid: data.nodeid,\n              observation_type: data.observation_type,\n              observations: data.observations.map(Observation.fromJson),\n            })\n            break\n          }\n\n          case DashboardEventType.ADD_FAILURES: {\n            dispatch({\n              type: DashboardEventType.ADD_FAILURES,\n              nodeid: data.nodeid,\n              failures: new Map(\n                Object.entries(data.failures).map(([key, value]) => [\n                  key,\n                  Failure.fromJson(value),\n                ]),\n              ),\n            })\n            break\n          }\n\n          case DashboardEventType.TEST_LOAD_FINISHED: {\n            dispatch({\n              type: DashboardEventType.TEST_LOAD_FINISHED,\n              nodeid: data.nodeid,\n            })\n            break\n          }\n\n          default:\n            throw new Error(`Unknown event type: ${data.type}`)\n        }\n      }\n\n      setSocket(ws)\n\n      return () => {\n        ws.close()\n      }\n      // a single DataProvider is created for the entire lifetime of a tab. We want to re-load\n      // the provided data whenever we change the nodeid (e.g. going from overview to a specific\n      // test page) or we go from a page which doesn't want data (because it didn't call useData)\n      // to one that does.\n    },\n    // calls tests.clear, but dont want an infinite loop dependency\n\n    [nodeid, loadData, addNotification, dismissNotification, updateNotification],\n  )\n\n  return (\n    <DataContext.Provider value={{ tests, socket, doLoadData, testsLoaded }}>\n      {children}\n    </DataContext.Provider>\n  )\n}\n\nexport function useData(nodeid: string | null = null) {\n  const context = useContext(DataContext)\n  if (!context) {\n    throw new Error(\"useData must be used within a DataProvider\")\n  }\n\n  useEffect(() => {\n    context.doLoadData(nodeid)\n  }, [nodeid, context])\n\n  return context\n}\n","import {\n  faBars,\n  faBook,\n  faBookOpen,\n  faBox,\n  faCode,\n  faCodeCompare,\n  faUser,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link, Outlet, useLocation } from \"react-router-dom\"\n\nfunction SidebarLink({\n  to,\n  icon,\n  children,\n  isActive,\n}: {\n  to: string\n  icon: React.ReactNode\n  children: React.ReactNode\n  isActive: (pathname: string) => boolean\n}) {\n  const location = useLocation()\n  return (\n    <Link to={to} className={`sidebar__link__text`}>\n      <div\n        className={`sidebar__link ${isActive(location.pathname) ? \"sidebar__link--active\" : \"\"}`}\n      >\n        <span className=\"sidebar__link__icon\">{icon}</span>\n        {children}\n      </div>\n    </Link>\n  )\n}\n\nexport function Layout() {\n  const location = useLocation()\n  const [sidebarOpen, setSidebarOpen] = useState(false)\n  const sidebarRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    function listener(event: MouseEvent) {\n      if (sidebarOpen && sidebarRef.current?.contains(event.target as Node) === false) {\n        setSidebarOpen(false)\n      }\n    }\n\n    document.addEventListener(\"mousedown\", listener)\n    return () => {\n      document.removeEventListener(\"mousedown\", listener)\n    }\n  }, [sidebarOpen])\n\n  useEffect(() => {\n    // close sidebar whenever route changes\n    setSidebarOpen(false)\n  }, [location])\n\n  return (\n    <div className=\"layout\">\n      {!sidebarOpen && (\n        <div className=\"toggle-sidebar\" onClick={() => setSidebarOpen(true)}>\n          <FontAwesomeIcon icon={faBars} size=\"lg\" />\n        </div>\n      )}\n      {/* dim everything when sidebar is open\n         TODO this dims the sidebar itself as well I think, probably don't want\n         to do that*/}\n      {sidebarOpen && <div className=\"opacity-overlay\" />}\n      <div ref={sidebarRef} className={`sidebar ${sidebarOpen ? \"sidebar--open\" : \"\"}`}>\n        <Link to=\"/\" className=\"sidebar__title\">\n          HypoFuzz\n        </Link>\n        <nav className=\"sidebar__nav\">\n          <SidebarLink\n            to=\"/\"\n            isActive={pathname => pathname === \"/\" || pathname.startsWith(\"/tests/\")}\n            icon={<FontAwesomeIcon icon={faCode} />}\n          >\n            Tests\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faCodeCompare} />}\n            to=\"/patches\"\n            isActive={pathname => pathname === \"/patches\"}\n          >\n            Patches\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faBox} />}\n            to=\"/collected\"\n            isActive={pathname => pathname === \"/collected\"}\n          >\n            Collection\n          </SidebarLink>\n          <SidebarLink\n            icon={<FontAwesomeIcon icon={faUser} />}\n            to=\"/workers\"\n            isActive={pathname => pathname === \"/workers\"}\n          >\n            Workers\n          </SidebarLink>\n\n          <div className=\"sidebar__separator\"></div>\n          <a\n            href={`${import.meta.env.BASE_URL.replace(/\\/$/, \"\")}/docs/`}\n            className=\"sidebar__link__text\"\n          >\n            <div className={`sidebar__link`}>\n              <span className=\"sidebar__link__icon\">\n                <FontAwesomeIcon icon={faBookOpen} />\n              </span>\n              Docs\n            </div>\n          </a>\n        </nav>\n      </div>\n      <div className=\"content\">\n        <Outlet />\n      </div>\n    </div>\n  )\n}\n","import { faArrowDown, faArrowUp, faTimes } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport React, { ReactNode, useState } from \"react\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\n\ninterface TableHeader<T> {\n  content: ReactNode\n  sortKey?: (item: T) => any[] | string | number\n  align?: string\n}\n\ninterface TableProps<T> {\n  headers: TableHeader<T>[]\n  data: T[]\n  row: (item: T) => React.ReactNode[]\n  mobileRow?: (item: T) => React.ReactNode\n  getKey?: (item: T) => string | number | undefined\n  filterStrings?: (item: T) => string[]\n  onFilterChange?: (filter: string) => void\n}\n\nenum SortOrder {\n  ASC = 0,\n  DESC = 1,\n}\n\nexport function Table<T>({\n  headers,\n  data,\n  row,\n  mobileRow,\n  getKey,\n  onFilterChange,\n  filterStrings,\n}: TableProps<T>) {\n  const [sortColumn, setSortColumn] = useState<number | null>(null)\n  const [sortDirection, setSortDirection] = useState<SortOrder>(SortOrder.ASC)\n  const [filterString, setFilterString] = useState(\"\")\n  const isMobile = useIsMobile()\n\n  function getDisplayData() {\n    let displayData = data\n\n    if (filterString) {\n      displayData = data.filter(item => {\n        if (filterStrings) {\n          return filterStrings(item).some(checkString =>\n            checkString.toLowerCase().includes(filterString.toLowerCase()),\n          )\n        }\n        return true\n      })\n    }\n\n    if (sortColumn === null) {\n      return displayData\n    }\n\n    const sorted = [...displayData].sortKey(item => headers[sortColumn].sortKey!(item))\n    return sortDirection === SortOrder.ASC ? sorted : sorted.reverse()\n  }\n\n  const handleHeaderClick = (index: number) => {\n    if (!headers[index].sortKey) return\n\n    if (sortColumn === index) {\n      setSortDirection(prev =>\n        prev === SortOrder.ASC ? SortOrder.DESC : SortOrder.ASC,\n      )\n    } else {\n      setSortColumn(index)\n      setSortDirection(SortOrder.ASC)\n    }\n  }\n\n  function doFilterChange(filter: string) {\n    setFilterString(filter)\n    onFilterChange?.(filter)\n  }\n\n  const displayData = getDisplayData()\n\n  return (\n    <div className=\"table\">\n      {/* only show filter box if some rows are filterable */}\n      {filterStrings !== undefined && (\n        <div className=\"table__filter\">\n          <input\n            type=\"text\"\n            placeholder=\"Filter\"\n            value={filterString}\n            onChange={e => doFilterChange(e.target.value)}\n            className=\"table__filter__input\"\n          />\n          {filterString && (\n            <span className=\"table__filter__clear\" onClick={() => doFilterChange(\"\")}>\n              <FontAwesomeIcon icon={faTimes} />\n            </span>\n          )}\n        </div>\n      )}\n      {mobileRow !== undefined && isMobile ? (\n        displayData.map(item => (\n          <div key={getKey ? getKey(item) : undefined}>{mobileRow(item)}</div>\n        ))\n      ) : (\n        <table className=\"table__table\">\n          <thead>\n            <tr>\n              {headers.map((header, index) => (\n                <th\n                  key={index}\n                  onClick={() => handleHeaderClick(index)}\n                  className={header.sortKey ? \"table--sortable\" : \"\"}\n                >\n                  <div\n                    className={`table__header table__header--${header.align ?? \"left\"}`}\n                  >\n                    {header.content}\n                    {header.sortKey && (\n                      <div className=\"table__sort\">\n                        {[SortOrder.ASC, SortOrder.DESC].map(order => (\n                          <div\n                            className={`table__sort__arrow table__sort__arrow--${\n                              order === SortOrder.ASC ? \"asc\" : \"desc\"\n                            } ${\n                              sortColumn === index && sortDirection === order\n                                ? \"table__sort__arrow--active\"\n                                : \"\"\n                            }`}\n                          >\n                            {order === SortOrder.ASC ? (\n                              <FontAwesomeIcon icon={faArrowUp} />\n                            ) : (\n                              <FontAwesomeIcon icon={faArrowDown} />\n                            )}\n                          </div>\n                        ))}\n                      </div>\n                    )}\n                  </div>\n                </th>\n              ))}\n            </tr>\n          </thead>\n          <tbody>\n            {displayData.map(item => {\n              const rowValue = row(item)\n              console.assert(rowValue.length === headers.length)\n              return (\n                <tr key={getKey ? getKey(item) : undefined}>\n                  {rowValue.map((cell, colIndex) => (\n                    <td key={colIndex}>{cell}</td>\n                  ))}\n                </tr>\n              )\n            })}\n          </tbody>\n        </table>\n      )}\n      {filterString && displayData.length < data.length && (\n        <div className=\"table__filter-status\">\n          Showing {displayData.length} of {data.length} rows\n          <span\n            className=\"table__filter-status__clear\"\n            onClick={() => {\n              setFilterString(\"\")\n              onFilterChange?.(\"\")\n            }}\n          >\n            [clear]\n          </span>\n        </div>\n      )}\n    </div>\n  )\n}\n","export interface CollectionResult {\n  database_key: string\n  nodeid: string\n  status: string\n  status_reason?: string\n}\n\nexport async function fetchData<T>(endpoint: string): Promise<T | null> {\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    const response = await fetch(\n      new URL(/* @vite-ignore */ \"dashboard_state/api.json\", import.meta.url),\n    )\n    return await response.json()\n  }\n\n  try {\n    const response = await fetch(`/api/${endpoint}`)\n    return await response.json()\n  } catch (e) {\n    console.error(`Failed to fetch /api/${endpoint}`, e)\n    return null\n  }\n}\n\nexport async function fetchPatches<T>(nodeid: string): Promise<T | null> {\n  const data = await fetchData<T>(`patches/${nodeid}`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.patches?.[nodeid]\n  }\n  return data\n}\n\nexport async function fetchAvailablePatches(): Promise<string[] | null> {\n  const data = await fetchData<string[]>(`available_patches/`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.available_patches\n  }\n  return data\n}\n\nexport async function fetchCollectionStatus(): Promise<CollectionResult[] | null> {\n  const data = await fetchData<CollectionResult[]>(`collection_status/`)\n  if (import.meta.env.VITE_USE_DASHBOARD_STATE === \"1\") {\n    return (data as any)?.collection_status\n  }\n  return data\n}\n","import { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Table } from \"src/components/Table\"\nimport { CollectionResult, fetchCollectionStatus } from \"src/utils/api\"\n\nconst statusOrder = {\n  not_collected: 0,\n  collected: 1,\n}\n\nexport function CollectionStatusPage() {\n  const [collectionStatus, setCollectionStatus] = useState<CollectionResult[] | null>(\n    null,\n  )\n\n  useEffect(() => {\n    fetchCollectionStatus().then(data => {\n      setCollectionStatus(data)\n    })\n  }, [])\n\n  if (collectionStatus === null) {\n    return null\n  }\n\n  if (!collectionStatus.length) {\n    return (\n      <div className=\"card\">\n        <div className=\"card__header\">Test collection</div>\n        No tests collected.\n      </div>\n    )\n  }\n\n  const sortedResults = [...collectionStatus].sortKey(result => [\n    statusOrder[result.status as keyof typeof statusOrder],\n    result.status_reason,\n    result.nodeid,\n  ])\n\n  const headers = [\n    {\n      content: \"Test\",\n      sortKey: (item: CollectionResult) => item.nodeid,\n    },\n    {\n      content: \"Status\",\n      sortKey: (item: CollectionResult) => [\n        statusOrder[item.status as keyof typeof statusOrder],\n        item.status_reason,\n      ],\n      align: \"center\",\n    },\n  ]\n\n  const row = (item: CollectionResult): React.ReactNode[] => {\n    const nodeidRow = (\n      <div style={{ wordBreak: \"break-all\" }}>\n        {/* don't link to a nonexistent page */}\n        {item.status == \"collected\" ? (\n          <Link to={`/tests/${encodeURIComponent(item.nodeid)}`} className=\"test__link\">\n            {item.nodeid}\n          </Link>\n        ) : (\n          item.nodeid\n        )}\n      </div>\n    )\n\n    return [\n      nodeidRow,\n      <div style={{ textAlign: \"center\" }}>\n        {item.status === \"collected\" ? (\n          <div className=\"pill pill__success\">Collected</div>\n        ) : (\n          <div className=\"pill pill__neutral\">\n            Not collected ({item.status_reason!})\n          </div>\n        )}\n      </div>,\n    ]\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Test collection status</div>\n      <Table\n        headers={headers}\n        data={sortedResults}\n        row={row}\n        getKey={item => item.database_key}\n        filterStrings={item => [\n          item.nodeid,\n          item.status === \"collected\"\n            ? \"Collected\"\n            : `Not collected (${item.status_reason})`,\n        ]}\n      />\n    </div>\n  )\n}\n","export function NotFoundPage() {\n  return <h1>Page not found!</h1>\n}\n","/*\nLanguage: Diff\nDescription: Unified and context diff\nAuthor: Vasily Polovnyov <vast@whiteants.net>\nWebsite: https://www.gnu.org/software/diffutils/\nCategory: common\n*/\n\n/** @type LanguageFn */\nfunction diff(hljs) {\n  const regex = hljs.regex;\n  return {\n    name: 'Diff',\n    aliases: [ 'patch' ],\n    contains: [\n      {\n        className: 'meta',\n        relevance: 10,\n        match: regex.either(\n          /^@@ +-\\d+,\\d+ +\\+\\d+,\\d+ +@@/,\n          /^\\*\\*\\* +\\d+,\\d+ +\\*\\*\\*\\*$/,\n          /^--- +\\d+,\\d+ +----$/\n        )\n      },\n      {\n        className: 'comment',\n        variants: [\n          {\n            begin: regex.either(\n              /Index: /,\n              /^index/,\n              /={3,}/,\n              /^-{3}/,\n              /^\\*{3} /,\n              /^\\+{3}/,\n              /^diff --git/\n            ),\n            end: /$/\n          },\n          { match: /^\\*{15}$/ }\n        ]\n      },\n      {\n        className: 'addition',\n        begin: /^\\+/,\n        end: /$/\n      },\n      {\n        className: 'deletion',\n        begin: /^-/,\n        end: /$/\n      },\n      {\n        className: 'addition',\n        begin: /^!/,\n        end: /$/\n      }\n    ]\n  };\n}\n\nexport { diff as default };\n","import \"highlight.js/styles/github.css\"\n\nimport { faCheck, faCopy, faDownload } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport hljs from \"highlight.js/lib/core\"\nimport diff from \"highlight.js/lib/languages/diff\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Toggle } from \"src/components/Toggle\"\nimport { fetchPatches } from \"src/utils/api\"\nimport { reHighlight } from \"src/utils/utils\"\n\nhljs.registerLanguage(\"diff\", diff)\n\nexport function TestPatches({ nodeid }: { nodeid: string }) {\n  const [patches, setPatches] = useState<Record<string, string>>({})\n  const [loading, setLoading] = useState(true)\n  const [patchType, setPatchType] = useState<string | null>(null)\n  const [copySuccess, setCopySuccess] = useState(false)\n  const containerRef = useRef<HTMLDivElement>(null)\n\n  useEffect(() => {\n    fetchPatches<Record<string, string>>(nodeid).then(data => {\n      if (data) {\n        setPatches(data)\n      }\n      setLoading(false)\n    })\n  }, [nodeid])\n\n  useEffect(() => {\n    reHighlight(containerRef, true)\n  }, [patches, patchType])\n\n  if (loading) {\n    return (\n      <div className=\"card\">\n        <p>Loading patches...</p>\n      </div>\n    )\n  }\n\n  if (Object.values(patches).every(patch => patch === null)) {\n    return (\n      <div className=\"card\">\n        <p>No patches for this test</p>\n      </div>\n    )\n  }\n\n  // also defines patch display order by iteration order here\n  const patchNames = new Map([\n    [\"failing\", \"Failing\"],\n    [\"covering\", \"Covering\"],\n  ])\n\n  // get the first patch name which is present in patches\n  const activePatch =\n    patchType ?? Array.from(patchNames.keys()).find(name => patches[name])!\n  const patch = patches[activePatch]\n\n  const handleCopy = async () => {\n    await navigator.clipboard.writeText(patch)\n    setCopySuccess(true)\n    setTimeout(() => {\n      setCopySuccess(false)\n    }, 2000)\n  }\n\n  const handleDownload = () => {\n    const blob = new Blob([patch], { type: \"text/plain\" })\n    const url = URL.createObjectURL(blob)\n    const a = document.createElement(\"a\")\n    a.href = url\n    // drop the filename, use just the test name\n    a.download = `${activePatch}-${nodeid.split(\"::\").pop()}.patch`\n    document.body.appendChild(a)\n    a.click()\n    document.body.removeChild(a)\n    URL.revokeObjectURL(url)\n  }\n\n  return (\n    <div ref={containerRef}>\n      <div\n        style={{\n          paddingTop: \"10px\",\n          paddingBottom: \"10px\",\n          display: \"flex\",\n          fontSize: \"1.05rem\",\n          fontWeight: \"500\",\n        }}\n      >\n        <Toggle\n          value={activePatch}\n          onChange={setPatchType}\n          options={Array.from(patchNames.entries())\n            .filter(([value]) => patches[value])\n            .map(([value, content]) => ({\n              value,\n              content,\n            }))}\n        />\n      </div>\n      <pre className=\"patch__pre\">\n        <div className=\"patch__controls\">\n          <div\n            className={`patch__controls__control ${copySuccess ? \"patch__controls__control--success\" : \"\"}`}\n            onClick={handleCopy}\n            title={\"Copy patch\"}\n          >\n            <FontAwesomeIcon icon={copySuccess ? faCheck : faCopy} />\n          </div>\n          <div\n            className=\"patch__controls__control\"\n            onClick={handleDownload}\n            title=\"Download patch\"\n          >\n            <FontAwesomeIcon icon={faDownload} />\n          </div>\n        </div>\n        <code className=\"language-diff\">{patch}</code>\n      </pre>\n    </div>\n  )\n}\n","import { faArrowRight } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { useEffect, useState } from \"react\"\nimport { Link } from \"react-router-dom\"\nimport { Collapsible } from \"src/components/Collapsible\"\nimport { TestPatches } from \"src/components/TestPatches\"\nimport { fetchAvailablePatches } from \"src/utils/api\"\n\nexport function PatchesPage() {\n  const [nodeids, setNodeids] = useState<string[] | null>(null)\n\n  useEffect(() => {\n    fetchAvailablePatches().then(data => {\n      setNodeids(data)\n    })\n  }, [])\n\n  if (nodeids === null || nodeids.length === 0) {\n    return (\n      <div className=\"card\">\n        <div className=\"card__header\">Patches</div>\n        <p>No tests with patches present.</p>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\" style={{ marginBottom: \"1rem\" }}>\n        Patches\n      </div>\n      {nodeids.map(nodeid => (\n        <Collapsible\n          title={\n            <div style={{ display: \"flex\", alignItems: \"center\" }}>\n              <span>{nodeid}</span>\n              <Link\n                to={`/tests/${encodeURIComponent(nodeid)}`}\n                className=\"patches__test__link\"\n                style={{\n                  marginLeft: \"8px\",\n                }}\n              >\n                View test <FontAwesomeIcon icon={faArrowRight} />\n              </Link>\n            </div>\n          }\n          headerClass=\"patches__test\"\n          defaultState=\"closed\"\n        >\n          <TestPatches nodeid={nodeid} />\n        </Collapsible>\n      ))}\n    </div>\n  )\n}\n","import { ScaleContinuousNumeric, scaleLinear, scaleSymlog } from \"d3-scale\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\ninterface AxisProps {\n  // viewport scale with zoom transformations applied\n  viewportScale: ScaleContinuousNumeric<number, number>\n  // original scale\n  baseScale: ScaleContinuousNumeric<number, number>\n  orientation: \"bottom\" | \"left\"\n  tickCount?: number\n  transform?: string\n  isLogScale?: boolean\n  zoomState: ZoomState\n}\n\ninterface Tick {\n  offset: number\n  name: string\n}\n\nfunction formatTick(value: number): string {\n  if (value >= 1_000_000) {\n    return `${Math.floor(value / 1_000_000)}M`\n  } else if (value >= 1000) {\n    return `${Math.floor(value / 1000)}k`\n  } else if (value > 0) {\n    return value.toLocaleString()\n  } else {\n    return \"0\"\n  }\n}\n\nfunction getTicks({\n  baseScale,\n  viewportScale,\n  tickCount,\n  zoomState,\n  orientation,\n}: {\n  baseScale: ScaleContinuousNumeric<number, number>\n  viewportScale: ScaleContinuousNumeric<number, number>\n  tickCount: number\n  zoomState: ZoomState\n  orientation: \"bottom\" | \"left\"\n}): Tick[] {\n  const range = baseScale.range()\n  let visibleDomain: [number, number]\n\n  if (orientation === \"bottom\") {\n    visibleDomain = [\n      baseScale.invert((range[0] - zoomState.x) / zoomState.scaleX),\n      baseScale.invert((range[1] - zoomState.x) / zoomState.scaleX),\n    ]\n  } else {\n    visibleDomain = [\n      baseScale.invert(range[0] - zoomState.y),\n      baseScale.invert(range[1] - zoomState.y),\n    ]\n  }\n\n  let tickValues = baseScale\n    .domain(visibleDomain)\n    .range(range)\n    .ticks(tickCount)\n    // don't show negative tick values\n    .filter(value => value >= 0)\n\n  return tickValues.map(value => ({\n    offset: viewportScale(value),\n    name: formatTick(value),\n  }))\n}\n\nexport function Axis({\n  baseScale,\n  viewportScale,\n  orientation,\n  tickCount = 5,\n  transform,\n  zoomState,\n}: AxisProps) {\n  const ticks = getTicks({\n    baseScale,\n    viewportScale,\n    tickCount,\n    zoomState,\n    orientation,\n  })\n\n  const isHorizontal = orientation === \"bottom\"\n  const [x1, y1, x2, y2] = isHorizontal\n    ? [0, 0, baseScale.range()[1], 0] // horizontal line\n    : [0, 0, 0, baseScale.range()[0]] // vertical line\n\n  return (\n    <g className={`axis axis--${orientation}`} transform={transform}>\n      {/* Main axis line */}\n      <line\n        className=\"domain\"\n        x1={x1}\n        y1={y1}\n        x2={x2}\n        y2={y2}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      {/* end caps */}\n      <line\n        className=\"domain\"\n        x1={isHorizontal ? x1 : x1}\n        y1={isHorizontal ? y1 : y1}\n        x2={isHorizontal ? x1 : x1 - 6}\n        y2={isHorizontal ? y1 + 6 : y1}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      <line\n        className=\"domain\"\n        x1={isHorizontal ? x2 : x2}\n        y1={isHorizontal ? y2 : y2}\n        x2={isHorizontal ? x2 : x2 - 6}\n        y2={isHorizontal ? y2 + 6 : y2}\n        stroke=\"currentColor\"\n        strokeWidth={1}\n      />\n\n      {/* Tick marks and labels */}\n      {ticks.map((tick, i) => {\n        const tickX = isHorizontal ? tick.offset : 0\n        const tickY = isHorizontal ? 0 : tick.offset\n        const labelX = isHorizontal ? tick.offset : -10\n        const labelY = isHorizontal ? 15 : tick.offset + 4\n\n        return (\n          <g className=\"tick\" key={i}>\n            {/* Tick mark */}\n            <line\n              x1={tickX}\n              y1={tickY}\n              x2={tickX + (isHorizontal ? 0 : -6)}\n              y2={tickY + (isHorizontal ? 6 : 0)}\n              stroke=\"currentColor\"\n              strokeWidth={1}\n            />\n\n            {/* Tick label */}\n            <text\n              x={labelX}\n              y={labelY}\n              textAnchor={isHorizontal ? \"middle\" : \"end\"}\n              fontSize=\"12\"\n              fill=\"currentColor\"\n            >\n              {tick.name}\n            </text>\n          </g>\n        )\n      })}\n    </g>\n  )\n}\n","import { ScaleContinuousNumeric } from \"d3-scale\"\nimport { line as d3_line } from \"d3-shape\"\nimport { navigateOnClick } from \"src/utils/utils\"\n\nimport { GraphLine, GraphReport } from \"./types\"\n\ninterface DataLinesProps {\n  lines: GraphLine[]\n  // viewport scale with zoom applied\n  viewportXScale: ScaleContinuousNumeric<number, number>\n  viewportYScale: ScaleContinuousNumeric<number, number>\n  xValue: (d: GraphReport) => number\n  yValue: (d: GraphReport) => number\n  navigate: (path: string) => void\n}\n\nexport function DataLines({\n  lines,\n  viewportXScale,\n  viewportYScale,\n  xValue,\n  yValue,\n  navigate,\n}: DataLinesProps) {\n  // Calculate path data using D3 with viewport scales (zoom already applied)\n  const lineGenerator = d3_line<GraphReport>()\n    .x(d => viewportXScale(xValue(d)))\n    .y(d => viewportYScale(yValue(d)))\n  return (\n    <g style={{ pointerEvents: \"auto\" }}>\n      {lines.map(line => {\n        const pathData = lineGenerator(line.reports) || \"\"\n\n        return (\n          <path\n            key={`line-${line.url || \"no-url\"}`}\n            d={pathData}\n            fill=\"none\"\n            stroke={line.color}\n            className={`coverage-line ${line.isActive ? \"coverage-line__selected\" : \"\"}`}\n            style={{\n              cursor: line.url ? \"pointer\" : \"default\",\n            }}\n            onClick={event => {\n              if (line.url) {\n                navigateOnClick(event as any, line.url, navigate)\n              }\n            }}\n          />\n        )\n      })}\n    </g>\n  )\n}\n","import { Report, StatusCounts } from \"../../types/dashboard\"\n\nexport class GraphReport {\n  constructor(\n    public nodeid: string,\n    public linear_status_counts: StatusCounts,\n    public linear_elapsed_time: number,\n    public behaviors: number,\n    public fingerprints: number,\n  ) {}\n\n  static fromReport(nodeid: string, report: Report): GraphReport {\n    return new GraphReport(\n      nodeid,\n      report.status_counts,\n      report.elapsed_time,\n      report.behaviors,\n      report.fingerprints,\n    )\n  }\n}\n\nexport interface GraphLine {\n  nodeid: string\n  url: string | null\n  reports: GraphReport[]\n  color: string\n  isActive: boolean\n}\n","import { useEffect, useState } from \"react\"\n\nconst settingCallbacks = new Map<string, Set<(value: any) => void>>()\n\nexport function useSetting<T>(key: string, defaultValue: T): [T, (value: T) => void] {\n  const [value, _setValue] = useState<T>(() => {\n    // note: sessionStorage is per-tab. localStorage is per-browser-session.\n    // we may want to add a param to use one or the other (with a fallback from\n    // session to local storage?)\n    const saved = sessionStorage.getItem(key)\n    if (saved === null) return defaultValue\n    return JSON.parse(saved)\n  })\n\n  useEffect(() => {\n    if (!settingCallbacks.has(key)) {\n      settingCallbacks.set(key, new Set())\n    }\n    settingCallbacks.get(key)!.add(_setValue)\n\n    return () => {\n      settingCallbacks.get(key)!.delete(_setValue)\n    }\n  }, [key])\n\n  function setValue(newValue: T) {\n    sessionStorage.setItem(key, JSON.stringify(newValue))\n    // broadcast settings changes to other listeners. This way if there are two\n    // useSetting call for the same setting key, changes in one get reflected in the other.\n    settingCallbacks.get(key)!.forEach(callback => callback(newValue))\n  }\n\n  return [value, setValue]\n}\n","import { ScaleContinuousNumeric } from \"d3-scale\"\nimport { scaleLinear as d3_scaleLinear, scaleSymlog as d3_scaleSymlog } from \"d3-scale\"\n\nimport { max } from \"../../utils/utils\"\nimport { GraphReport } from \"./types\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\nexport interface ScaleBounds {\n  xMin?: number\n  xMax?: number\n  yMin?: number\n  yMax?: number\n}\n\nconst identityZoomState: ZoomState = { x: 0, y: 0, scaleX: 1 }\n\nfunction getConstrainedTransform({\n  zoomState,\n  bounds,\n  baseX,\n  baseY,\n}: {\n  zoomState: ZoomState\n  bounds: ScaleBounds\n  baseX: ScaleContinuousNumeric<number, number>\n  baseY: ScaleContinuousNumeric<number, number>\n}) {\n  if (!bounds) return zoomState\n\n  let constrained = { ...zoomState }\n\n  // Check horizontal bounds\n  if (bounds.xMin !== undefined || bounds.xMax !== undefined) {\n    const xRange = baseX.range()\n    const rangeStart = xRange[0]\n    const rangeEnd = xRange[1]\n\n    const leftVisibleValue = baseX.invert(\n      (rangeStart - constrained.x) / constrained.scaleX,\n    )\n    const rightVisibleValue = baseX.invert(\n      (rangeEnd - constrained.x) / constrained.scaleX,\n    )\n\n    if (bounds.xMin !== undefined && leftVisibleValue < bounds.xMin) {\n      constrained.x = rangeStart - baseX(bounds.xMin) * constrained.scaleX\n    }\n    if (bounds.xMax !== undefined && rightVisibleValue > bounds.xMax) {\n      constrained.x = rangeEnd - baseX(bounds.xMax) * constrained.scaleX\n    }\n  }\n\n  // Check vertical bounds\n  if (bounds.yMin !== undefined || bounds.yMax !== undefined) {\n    const yRange = baseY.range()\n    const rangeTop = yRange[1]\n    const rangeBottom = yRange[0]\n\n    if (\n      bounds.yMin !== undefined &&\n      baseY.invert(rangeBottom - constrained.y) < bounds.yMin\n    ) {\n      constrained.y = rangeBottom - baseY(bounds.yMin)\n    }\n    if (\n      bounds.yMax !== undefined &&\n      baseY.invert(rangeTop - constrained.y) > bounds.yMax\n    ) {\n      constrained.y = rangeTop - baseY(bounds.yMax)\n    }\n  }\n\n  return constrained\n}\n\nexport function useScales(\n  data: GraphReport[],\n  scaleSetting: string,\n  scaleSettingY: string,\n  axisSettingX: string,\n  axisSettingY: string,\n  width: number,\n  height: number,\n  zoomState: ZoomState = identityZoomState,\n  bounds: ScaleBounds,\n) {\n  const xValue = (report: GraphReport) =>\n    axisSettingX === \"time\"\n      ? report.linear_elapsed_time\n      : report.linear_status_counts.sum()\n\n  const yValue = (report: GraphReport) =>\n    axisSettingY === \"behaviors\" ? report.behaviors : report.fingerprints\n\n  const baseX = (scaleSetting === \"log\" ? d3_scaleSymlog() : d3_scaleLinear())\n    .domain([0, max(data.map(r => xValue(r))) || 1])\n    .range([0, width])\n\n  const baseY = (scaleSettingY === \"log\" ? d3_scaleSymlog() : d3_scaleLinear())\n    .domain([0, max(data.map(r => yValue(r))) || 0])\n    .range([height, 0])\n\n  const constrainedTransform = getConstrainedTransform({\n    zoomState,\n    bounds,\n    baseX,\n    baseY,\n  })\n\n  // Apply horizontal zoom and translation\n  const originalXRange = baseX.range()\n  const viewportX = baseX\n    .copy()\n    .range([\n      originalXRange[0] * constrainedTransform.scaleX + constrainedTransform.x,\n      originalXRange[1] * constrainedTransform.scaleX + constrainedTransform.x,\n    ])\n\n  // Only apply translation to Y scale, not scaling - for horizontal-only zoom\n  const viewportY = baseY\n    .copy()\n    .range([\n      baseY.range()[0] + constrainedTransform.y,\n      baseY.range()[1] + constrainedTransform.y,\n    ])\n\n  return {\n    xValue,\n    yValue,\n    baseX,\n    baseY,\n    viewportX,\n    viewportY,\n    constrainedTransform,\n  }\n}\n","import { interpolate } from \"d3-interpolate\"\nimport { MouseEvent, useEffect, useRef, useState } from \"react\"\n\ninterface ZoomState {\n  x: number\n  y: number\n  scaleX: number\n}\n\ninterface UseZoomOptions {\n  minScale?: number\n  maxScale?: number\n  wheelSensitivity?: number\n  containerRef: React.RefObject<HTMLElement | null>\n  onZoomEnd: () => void\n  onDragEnd: () => void\n}\n\ninterface UseZoomReturn {\n  transform: ZoomState\n  onMouseDown: (event: MouseEvent<HTMLElement>) => void\n  onDoubleClick: (event: MouseEvent<HTMLElement>) => void\n  resetZoom: () => void\n  setTransform: (transform: ZoomState) => void\n}\n\nconst defaultZoomState: ZoomState = { x: 0, y: 0, scaleX: 1 }\n\nexport function useZoom({\n  minScale = 1,\n  maxScale = 50,\n  wheelSensitivity = 0.0013,\n  containerRef,\n  onZoomEnd = () => {},\n  onDragEnd = () => {},\n}: UseZoomOptions): UseZoomReturn {\n  const [transform, setTransformState] = useState<ZoomState>(defaultZoomState)\n  const isDragging = useRef(false)\n  const lastPointer = useRef({ x: 0, y: 0 })\n  const animationRef = useRef<number | null>(null)\n  const isZooming = useRef(false)\n  const wheelEventCount = useRef(0)\n  const wheelTimeoutRef = useRef<number | null>(null)\n\n  const cancelAnimation = () => {\n    if (animationRef.current) {\n      cancelAnimationFrame(animationRef.current)\n      animationRef.current = null\n    }\n  }\n\n  const setTransform = (newTransform: ZoomState) => {\n    cancelAnimation()\n    const constrainedTransform = newTransform\n    setTransformState(constrainedTransform)\n  }\n\n  const resetZoom = () => {\n    cancelAnimation()\n\n    const startTransform = transform\n    const endTransform = defaultZoomState\n    const duration = 500 // milliseconds\n    const startTime = performance.now()\n\n    const interpolateX = interpolate(startTransform.x, endTransform.x)\n    const interpolateY = interpolate(startTransform.y, endTransform.y)\n    const interpolateScaleX = interpolate(startTransform.scaleX, endTransform.scaleX)\n\n    const animate = (currentTime: number) => {\n      const elapsed = currentTime - startTime\n      const progress = Math.min(elapsed / duration, 1)\n\n      // ease-out cubic\n      const eased = 1 - Math.pow(1 - progress, 3)\n\n      const newTransform: ZoomState = {\n        x: interpolateX(eased),\n        y: interpolateY(eased),\n        scaleX: interpolateScaleX(eased),\n      }\n\n      setTransformState(newTransform)\n\n      if (progress < 1) {\n        animationRef.current = requestAnimationFrame(animate)\n      } else {\n        animationRef.current = null\n      }\n    }\n\n    animationRef.current = requestAnimationFrame(animate)\n  }\n\n  useEffect(() => {\n    const container = containerRef.current\n    if (!container) return\n\n    const handleWheel = (event: WheelEvent) => {\n      cancelAnimation()\n\n      const rect = container.getBoundingClientRect()\n      const mouseX = event.clientX - rect.left\n\n      // ignore horizontal swipes\n      if (Math.abs(event.deltaX) > Math.abs(event.deltaY)) {\n        return\n      }\n\n      const scaleFactor = 1 - event.deltaY * wheelSensitivity\n      const newScale = Math.max(\n        minScale,\n        Math.min(maxScale, transform.scaleX * scaleFactor),\n      )\n      const wouldZoom = newScale !== transform.scaleX\n\n      // Prevent page scrolling if we would zoom OR if we're in an active zoom session\n      if (wouldZoom || isZooming.current) {\n        event.preventDefault()\n        event.stopPropagation()\n      } else {\n        // increment counter to indicate wheel activity\n        wheelEventCount.current++\n      }\n      if (wouldZoom) {\n        // Mark that we're in an active zoom session\n        isZooming.current = true\n\n        const scaleRatio = newScale / transform.scaleX\n        const newX = mouseX - (mouseX - transform.x) * scaleRatio\n        // horizontal-only zoom; keep y unchanged\n        const newTransform = {\n          x: newX,\n          y: transform.y,\n          scaleX: newScale,\n        }\n        const constrainedTransform = newTransform\n        setTransformState(constrainedTransform)\n      }\n\n      // Reset wheel event counter and set timeout to detect when wheel events stop\n      wheelEventCount.current = 0\n\n      // Clear any existing timeout\n      if (wheelTimeoutRef.current) {\n        clearTimeout(wheelTimeoutRef.current)\n      }\n\n      // Set a timeout to check if wheel events have stopped\n      wheelTimeoutRef.current = window.setTimeout(() => {\n        // If wheel event counter is still 0, no new wheel events came in\n        if (wheelEventCount.current === 0) {\n          isZooming.current = false\n          onZoomEnd()\n        }\n        wheelTimeoutRef.current = null\n      }, 150)\n    }\n\n    container.addEventListener(\"wheel\", handleWheel, { passive: false })\n\n    return () => {\n      container.removeEventListener(\"wheel\", handleWheel)\n    }\n  }, [transform, minScale, maxScale, wheelSensitivity, cancelAnimation])\n\n  const onMouseDown = (event: MouseEvent<HTMLElement>) => {\n    if (event.button !== 0) return // Only accept left mouse button\n    cancelAnimation()\n\n    isDragging.current = true\n    lastPointer.current = { x: event.clientX, y: event.clientY }\n\n    const handleMouseMove = (e: globalThis.MouseEvent) => {\n      if (!isDragging.current) return\n\n      const deltaX = e.clientX - lastPointer.current.x\n      const deltaY = e.clientY - lastPointer.current.y\n\n      setTransformState(prev => {\n        const newTransform = {\n          x: prev.x + deltaX,\n          y: prev.y + deltaY,\n          scaleX: prev.scaleX,\n        }\n        return newTransform\n      })\n\n      lastPointer.current = { x: e.clientX, y: e.clientY }\n    }\n\n    const handleMouseUp = () => {\n      isDragging.current = false\n      document.removeEventListener(\"mousemove\", handleMouseMove)\n      document.removeEventListener(\"mouseup\", handleMouseUp)\n      onDragEnd()\n    }\n\n    document.addEventListener(\"mousemove\", handleMouseMove)\n    document.addEventListener(\"mouseup\", handleMouseUp)\n  }\n\n  const onDoubleClick = (event: MouseEvent<HTMLElement>) => {\n    event.preventDefault()\n    resetZoom()\n  }\n\n  useEffect(() => {\n    return () => {\n      cancelAnimation()\n      if (wheelTimeoutRef.current) {\n        clearTimeout(wheelTimeoutRef.current)\n      }\n    }\n  }, [cancelAnimation])\n\n  return {\n    transform,\n    onMouseDown,\n    onDoubleClick,\n    resetZoom,\n    setTransform,\n  }\n}\n","import {\n  faCircleDot,\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faUser,\n  faUsers,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { interpolateRgb as d3_interpolateRgb } from \"d3-interpolate\"\nimport { Quadtree, quadtree } from \"d3-quadtree\"\nimport {\n  scaleLinear as d3_scaleLinear,\n  scaleOrdinal as d3_scaleOrdinal,\n} from \"d3-scale\"\nimport {\n  interpolateViridis as d3_interpolateViridis,\n  schemeCategory10 as d3_schemeCategory10,\n} from \"d3-scale-chromatic\"\nimport { select as d3_select } from \"d3-selection\"\nimport { zoomIdentity as d3_zoomIdentity } from \"d3-zoom\"\nimport { Set } from \"immutable\"\nimport { useEffect, useMemo, useRef, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { Axis } from \"src/components/graph/Axis\"\nimport { DataLines } from \"src/components/graph/DataLines\"\nimport { GraphLine, GraphReport } from \"src/components/graph/types\"\nimport { Toggle } from \"src/components/Toggle\"\n// import BoxSelect from \"src/assets/box-select.svg?react\"\nimport { useIsMobile } from \"src/hooks/useIsMobile\"\nimport { useSetting } from \"src/hooks/useSetting\"\nimport { Test } from \"src/types/test\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { max, min, readableNodeid } from \"src/utils/utils\"\n\nconst GRAPH_HEIGHT = 270\nimport { useScales } from \"./useScales\"\nimport { useZoom } from \"./useZoom\"\n\nconst d3 = {\n  zoomIdentity: d3_zoomIdentity,\n  select: d3_select,\n  scaleLinear: d3_scaleLinear,\n  scaleOrdinal: d3_scaleOrdinal,\n  interpolateViridis: d3_interpolateViridis,\n  interpolateRgb: d3_interpolateRgb,\n  schemeCategory10: d3_schemeCategory10,\n}\n\nfunction graphLines(\n  tests: Map<string, Test>,\n  viewSetting: WorkerView,\n  workers_after: number | null,\n  reportsColor: (nodeid: string) => string,\n): GraphLine[] {\n  let lines: GraphLine[] = []\n\n  if (viewSetting === WorkerView.TOGETHER) {\n    lines = Array.from(tests.entries())\n      .sortKey(([nodeid, test]) => nodeid)\n      .map(([nodeid, test]) => ({\n        nodeid: nodeid,\n        url: `/tests/${encodeURIComponent(nodeid)}`,\n        reports: graphReports(test, workers_after),\n        color: reportsColor(nodeid),\n        isActive: false,\n      }))\n  } else if (viewSetting === WorkerView.SEPARATE) {\n    const timestamps: number[] = []\n    for (const test of tests.values()) {\n      for (const workerReports of test.reports_by_worker.values()) {\n        if (workerReports.length > 0) {\n          timestamps.push(workerReports[0].timestamp)\n        }\n      }\n    }\n\n    const minTimestamp = min(timestamps) ?? 0\n    const maxTimestamp = max(timestamps) ?? 0\n\n    function timeColor(timestamp: number) {\n      if (timestamps.length <= 1) {\n        return timeColorScale(0.5) // Use middle color if only one worker\n      }\n      const normalized = (timestamp - minTimestamp) / (maxTimestamp - minTimestamp)\n      return timeColorScale(normalized)\n    }\n\n    for (const [nodeid, test] of tests.entries()) {\n      for (const workerReports of test.reports_by_worker.values()) {\n        if (workerReports.length > 0) {\n          lines.push({\n            nodeid: nodeid,\n            url: `/tests/${encodeURIComponent(nodeid)}`,\n            reports: workerReports.map(report =>\n              GraphReport.fromReport(nodeid, report),\n            ),\n            color: timeColor(workerReports[0].timestamp),\n            isActive: false,\n          })\n        }\n      }\n    }\n  } else if (viewSetting === WorkerView.LATEST) {\n    for (const [nodeid, test] of tests.entries()) {\n      const recentReports = max(\n        Array.from(test.reports_by_worker.values()),\n        reports => reports[0].elapsed_time,\n      )\n\n      if (recentReports) {\n        lines.push({\n          nodeid: nodeid,\n          url: `/tests/${encodeURIComponent(nodeid)}`,\n          reports: recentReports.map(report => GraphReport.fromReport(nodeid, report)),\n          // use the same color as the linearized view\n          color: reportsColor(nodeid),\n          isActive: false,\n        })\n      }\n    }\n  }\n\n  return lines\n}\n\n// lifted from github's \"blame\" color scale for \"time since now\".\n//\n// including the commented-out colors makes the color a bit too extreme.\nconst timeColorScale = d3\n  .scaleLinear<string>()\n  .domain([0, 1])\n  .range([\n    // \"rgb(255, 223, 182)\",\n    \"rgb(255, 198, 128)\",\n    \"rgb(240, 136, 62)\",\n    \"rgb(219, 109, 40)\",\n    \"rgb(189, 86, 29)\",\n    \"rgb(155, 66, 21)\",\n    \"rgb(118, 45, 10)\",\n    \"rgb(90, 30, 2)\",\n    // \"rgb(61, 19, 0)\"\n  ])\n  .interpolate(d3.interpolateRgb)\n\nexport enum WorkerView {\n  TOGETHER = \"linearized\",\n  SEPARATE = \"individual\",\n  LATEST = \"latest\",\n}\n\ninterface Props {\n  tests: Map<string, Test>\n  filterString?: string\n  workers_after?: number | null\n  workerViews?: WorkerView[]\n  workerViewSetting: string\n}\n\nfunction graphReports(test: Test, workers_after: number | null): GraphReport[] {\n  // zip up linear_status_counts, linear_elapsed_time, and linear_reports.\n  const linearStatusCounts = test.linear_status_counts(workers_after)\n  const linearElapsedTime = test.linear_elapsed_time(workers_after)\n  const reports: GraphReport[] = []\n  for (let i = 0; i < linearStatusCounts.length; i++) {\n    const report = test.linear_reports[i]\n    reports.push({\n      nodeid: test.nodeid,\n      linear_status_counts: linearStatusCounts[i],\n      linear_elapsed_time: linearElapsedTime[i],\n      behaviors: report.behaviors,\n      fingerprints: report.fingerprints,\n    })\n  }\n  return reports\n}\n\nfunction LogLinearToggle({\n  value,\n  onChange,\n}: {\n  value: \"log\" | \"linear\"\n  onChange: (value: \"log\" | \"linear\") => void\n}) {\n  return (\n    <Toggle\n      value={value}\n      onChange={onChange}\n      options={[\n        { value: \"log\", content: \"Log\" },\n        { value: \"linear\", content: \"Linear\" },\n      ]}\n    />\n  )\n}\n\nfunction LabelX() {\n  const [scale, setScale] = useSetting<\"log\" | \"linear\">(\"graph_scale_x\", \"log\")\n  const [axis, setAxis] = useSetting<\"time\" | \"inputs\">(\"graph_axis_x\", \"time\")\n  return (\n    <div\n      className=\"coverage-graph__label coverage-graph__label--x\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"0.5rem\",\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <FontAwesomeIcon\n          icon={axis === \"inputs\" ? faHashtag : faClock}\n          style={{ fontSize: \"0.9rem\" }}\n        />\n        {axis === \"inputs\" ? \"Inputs\" : \"Time\"}\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <LogLinearToggle value={scale} onChange={setScale} />\n        <Toggle\n          value={axis}\n          onChange={setAxis}\n          options={[\n            {\n              value: \"inputs\",\n              content: <FontAwesomeIcon icon={faHashtag} />,\n            },\n            {\n              value: \"time\",\n              content: <FontAwesomeIcon icon={faClock} />,\n            },\n          ]}\n        />\n      </div>\n    </div>\n  )\n}\n\nfunction LabelY() {\n  const [scale, setScale] = useSetting<\"log\" | \"linear\">(\"graph_scale_y\", \"linear\")\n  const [axis, setAxis] = useSetting<\"behaviors\" | \"fingerprints\">(\n    \"graph_axis_y\",\n    \"behaviors\",\n  )\n  return (\n    <div\n      className=\"coverage-graph__label coverage-graph__label--y\"\n      style={{\n        display: \"flex\",\n        flexDirection: \"column\",\n        alignItems: \"center\",\n        gap: \"0.5rem\",\n        zIndex: 1,\n      }}\n    >\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <LogLinearToggle value={scale} onChange={setScale} />\n        <Toggle\n          value={axis}\n          onChange={setAxis}\n          options={[\n            {\n              value: \"behaviors\",\n              content: <FontAwesomeIcon icon={faCodeBranch} />,\n            },\n            {\n              value: \"fingerprints\",\n              content: <FontAwesomeIcon icon={faFingerprint} />,\n            },\n          ]}\n        />\n      </div>\n      <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.5rem\" }}>\n        <FontAwesomeIcon\n          icon={axis === \"behaviors\" ? faCodeBranch : faFingerprint}\n          style={{ fontSize: \"0.9rem\" }}\n        />\n        {axis === \"behaviors\" ? \"Behaviors\" : \"Fingerprints\"}\n      </div>\n    </div>\n  )\n}\n\nconst workerToggleContent = {\n  [WorkerView.TOGETHER]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faUser} /> Together\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faUser} />,\n  },\n  [WorkerView.SEPARATE]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faUsers} /> Separate\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faUsers} />,\n  },\n  [WorkerView.LATEST]: {\n    content: (\n      <>\n        <FontAwesomeIcon icon={faCircleDot} /> Latest\n      </>\n    ),\n    mobileContent: <FontAwesomeIcon icon={faCircleDot} />,\n  },\n}\n\nconst GRAPH_MARGIN = {\n  top: 5,\n  right: 5,\n  bottom: 25,\n  left: 40,\n}\n\n// Number of sample points per unit of display length for quadtree line sampling\nconst QUADTREE_SAMPLE_INTERVAL = 10\nconst DISTANCE_THRESHOLD = 10\n\ninterface SampledPoint {\n  x: number\n  y: number\n  line: GraphLine\n}\n\nfunction sampleLinePoints(scales: any, line: GraphLine): SampledPoint[] {\n  // TODO: when we're zoomed in, we have many many more sampled points than when\n  // we're zoomed out (eg 800 vs 40k). this is a very bad performance bug.\n  const points: SampledPoint[] = []\n  const reports = line.reports\n\n  if (reports.length < 2) return points\n\n  // Calculate total display length of the line\n  let totalLength = 0\n  for (let i = 1; i < reports.length; i++) {\n    const x1 = scales.viewportX(scales.xValue(reports[i - 1]))\n    const y1 = scales.viewportY(scales.yValue(reports[i - 1]))\n    const x2 = scales.viewportX(scales.xValue(reports[i]))\n    const y2 = scales.viewportY(scales.yValue(reports[i]))\n\n    const segmentLength = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n    totalLength += segmentLength\n  }\n\n  const numSamples = Math.max(2, Math.floor(totalLength / QUADTREE_SAMPLE_INTERVAL))\n\n  for (let i = 0; i < numSamples; i++) {\n    const t = i / (numSamples - 1)\n    const targetDistance = t * totalLength\n\n    let currentDistance = 0\n    for (let j = 1; j < reports.length; j++) {\n      const x1 = scales.viewportX(scales.xValue(reports[j - 1]))\n      const y1 = scales.viewportY(scales.yValue(reports[j - 1]))\n      const x2 = scales.viewportX(scales.xValue(reports[j]))\n      const y2 = scales.viewportY(scales.yValue(reports[j]))\n\n      const segmentLength = Math.sqrt((x2 - x1) ** 2 + (y2 - y1) ** 2)\n\n      if (\n        currentDistance + segmentLength >= targetDistance ||\n        j === reports.length - 1\n      ) {\n        // interpolate within this segment\n        const segmentT =\n          segmentLength > 0 ? (targetDistance - currentDistance) / segmentLength : 0\n        const x = x1 + (x2 - x1) * segmentT\n        const y = y1 + (y2 - y1) * segmentT\n\n        points.push({ x, y, line })\n        break\n      }\n\n      currentDistance += segmentLength\n    }\n  }\n\n  return points\n}\n\nexport function GraphComponent({\n  tests,\n  filterString = \"\",\n  workers_after = null,\n  viewSetting,\n}: {\n  tests: Map<string, Test>\n  filterString?: string\n  workers_after?: number | null\n  viewSetting: WorkerView\n}) {\n  const containerRef = useRef<HTMLDivElement>(null)\n  const quadtreeRef = useRef<Quadtree<SampledPoint> | null>(null)\n  const [scaleSettingX, setScaleSettingX] = useSetting<\"log\" | \"linear\">(\n    \"graph_scale_x\",\n    \"log\",\n  )\n  const [scaleSettingY, setScaleSettingY] = useSetting<\"log\" | \"linear\">(\n    \"graph_scale_y\",\n    \"linear\",\n  )\n  const [axisSettingX, setAxisSettingX] = useSetting<\"time\" | \"inputs\">(\n    \"graph_axis_x\",\n    \"time\",\n  )\n  const [axisSettingY, setAxisSettingY] = useSetting<\"behaviors\" | \"fingerprints\">(\n    \"graph_axis_y\",\n    \"behaviors\",\n  )\n  const navigate = useNavigate()\n  const isMobile = useIsMobile()\n  const tooltip = useTooltip()\n  const [containerWidth, setContainerWidth] = useState(800)\n  const [activeNodeid, setActiveNodeid] = useState<string | null>(null)\n  const scalesRef = useRef<typeof scales | null>(null)\n\n  // use the unfiltered reports as the domain so colors are stable across filtering.\n  const reportsColor = d3\n    .scaleOrdinal(d3.schemeCategory10)\n    .domain(Array.from(tests.keys()))\n\n  // pretty sure this is a react compiler bug, because this useMemo is necessary to avoid graphLines\n  // being called on every render.\n  const lines = useMemo(\n    () => graphLines(tests, viewSetting, workers_after, reportsColor),\n    [tests, viewSetting, workers_after],\n  )\n  let filteredLines = lines\n  if (filterString) {\n    filteredLines = lines.filter(line =>\n      line.url?.toLowerCase().includes(filterString.toLowerCase()),\n    )\n  }\n\n  let activeLine: GraphLine | null = null\n  filteredLines.forEach(line => {\n    line.isActive = false\n    if (line.nodeid === activeNodeid) {\n      line.isActive = true\n      activeLine = line\n    }\n  })\n\n  useEffect(() => {\n    if (containerRef.current) {\n      const resizeObserver = new ResizeObserver(entries => {\n        for (const entry of entries) {\n          setContainerWidth(entry.contentRect.width)\n        }\n      })\n      resizeObserver.observe(containerRef.current)\n      return () => resizeObserver.disconnect()\n    }\n    return undefined\n  }, [])\n\n  const graphWidth = containerWidth - GRAPH_MARGIN.left - GRAPH_MARGIN.right\n  const graphHeight = GRAPH_HEIGHT - GRAPH_MARGIN.top - GRAPH_MARGIN.bottom\n  const allReports = filteredLines.flatMap(line => line.reports)\n\n  function rebuildQuadtree() {\n    // for each line, we sample points from it proportional to its current display length,\n    // and track them in a quadtree. This lets us find the line closest to the cursor\n    // (up to some sampling error; increase QUADTREE_SAMPLE_INTERVAL to improve this).\n    // Once we have the closest line, it's cheap to find the closest report on that line for\n    // the actual tooltip contents.\n    const sampledPoints = filteredLines.flatMap(line =>\n      sampleLinePoints(scalesRef.current!, line),\n    )\n    quadtreeRef.current = quadtree<SampledPoint>()\n      .x(d => d.x)\n      .y(d => d.y)\n      .addAll(sampledPoints)\n  }\n\n  const zoom = useZoom({\n    minScale: 1,\n    maxScale: 50,\n    containerRef,\n    onZoomEnd: rebuildQuadtree,\n    onDragEnd: rebuildQuadtree,\n  })\n  const scales = useScales(\n    allReports,\n    scaleSettingX,\n    scaleSettingY,\n    axisSettingX,\n    axisSettingY,\n    graphWidth,\n    graphHeight,\n    zoom.transform,\n    { yMin: 0 },\n  )\n\n  // if we don't do this, onDragEnd (but not onZoomEnd?!) refers to the `scales` from the previous\n  // render, and our quadtree updates incorrectly.\n  scalesRef.current = scales\n\n  useEffect(() => {\n    rebuildQuadtree()\n  }, [filteredLines])\n\n  return (\n    <div\n      ref={element => {\n        if (containerRef.current !== element) {\n          containerRef.current = element\n        }\n      }}\n      style={{\n        position: \"relative\",\n        width: \"100%\",\n        height: `${GRAPH_HEIGHT}px`,\n        userSelect: \"none\",\n        cursor: activeLine ? \"pointer\" : \"default\",\n      }}\n      onMouseDown={zoom.onMouseDown}\n      onDoubleClick={zoom.onDoubleClick}\n      onClick={() => {\n        if (activeLine && activeLine.url) {\n          navigate(activeLine.url)\n        }\n      }}\n      onMouseMove={event => {\n        const rect = event.currentTarget.getBoundingClientRect()\n        const mouseX = event.clientX - rect.left - GRAPH_MARGIN.left\n        const mouseY = event.clientY - rect.top - GRAPH_MARGIN.top\n\n        const closestPoint =\n          quadtreeRef.current!.find(mouseX, mouseY, DISTANCE_THRESHOLD) || null\n\n        if (closestPoint) {\n          setActiveNodeid(closestPoint.line.nodeid)\n          const reports = closestPoint.line.reports\n\n          // find the closest actual report on this line. We know the closest sampled point\n          // and therefore the closest line, but not the closest report on that line.\n          let closestReport = reports[0]\n          let minDistance = Infinity\n\n          reports.forEach(report => {\n            const reportX = scales.viewportX(scales.xValue(report))\n            const reportY = scales.viewportY(scales.yValue(report))\n            const distance = Math.sqrt(\n              (mouseX - reportX) ** 2 + (mouseY - reportY) ** 2,\n            )\n\n            if (distance < minDistance) {\n              minDistance = distance\n              closestReport = report\n            }\n          })\n\n          const behaviors_s = closestReport.behaviors === 1 ? \"\" : \"s\"\n          const fingerprints_s = closestReport.fingerprints === 1 ? \"\" : \"s\"\n          const inputs_s = closestReport.linear_status_counts.sum() === 1 ? \"\" : \"s\"\n          const seconds_s = closestReport.linear_elapsed_time === 1 ? \"\" : \"s\"\n\n          const content = `\n            <div style=\"font-weight: bold; margin-bottom: 4px;\">${readableNodeid(closestReport.nodeid)}</div>\n            <div>${closestReport.behaviors.toLocaleString()} behavior${behaviors_s} / ${closestReport.fingerprints.toLocaleString()} fingerprint${fingerprints_s}</div>\n            <div>${closestReport.linear_status_counts.sum().toLocaleString()} input${inputs_s} / ${closestReport.linear_elapsed_time.toFixed(1)} second${seconds_s}</div>\n          `\n\n          tooltip.showTooltip(content, event.clientX, event.clientY, \"coverage-graph\")\n        } else {\n          setActiveNodeid(null)\n          tooltip.hideTooltip(\"coverage-graph\")\n        }\n      }}\n      onMouseLeave={() => {\n        setActiveNodeid(null)\n        tooltip.hideTooltip(\"coverage-graph\")\n      }}\n    >\n      <svg\n        className=\"coverage-graph__svg\"\n        style={{\n          position: \"absolute\",\n          top: 0,\n          left: 0,\n          width: \"100%\",\n          height: `${GRAPH_HEIGHT}px`,\n          pointerEvents: \"none\",\n        }}\n      >\n        <defs>\n          <clipPath id=\"clip-content\">\n            {/* add some padding so the stroke width doesn't get clipped, even though the center\n            of the line would still be inside the clip path */}\n            <rect y={-2} width={graphWidth} height={graphHeight + 4} />\n          </clipPath>\n        </defs>\n\n        <g transform={`translate(${GRAPH_MARGIN.left}, ${GRAPH_MARGIN.top})`}>\n          <g clipPath=\"url(#clip-content)\">\n            <DataLines\n              lines={filteredLines}\n              viewportXScale={scales.viewportX}\n              viewportYScale={scales.viewportY}\n              xValue={scales.xValue}\n              yValue={scales.yValue}\n              navigate={navigate}\n            />\n          </g>\n\n          <Axis\n            baseScale={scales.baseX}\n            viewportScale={scales.viewportX}\n            orientation=\"bottom\"\n            transform={`translate(0, ${scales.baseY.range()[0]})`}\n            isLogScale={scaleSettingX === \"log\"}\n            zoomState={scales.constrainedTransform}\n          />\n\n          <Axis\n            baseScale={scales.baseY}\n            viewportScale={scales.viewportY}\n            orientation=\"left\"\n            isLogScale={scaleSettingY === \"log\"}\n            zoomState={scales.constrainedTransform}\n          />\n        </g>\n      </svg>\n    </div>\n  )\n}\n\nfunction ColorLegend() {\n  const colors = [\n    \"rgb(255, 198, 128)\",\n    \"rgb(240, 136, 62)\",\n    \"rgb(219, 109, 40)\",\n    \"rgb(189, 86, 29)\",\n    \"rgb(155, 66, 21)\",\n    \"rgb(118, 45, 10)\",\n    \"rgb(90, 30, 2)\",\n  ]\n\n  return (\n    <div className=\"coverage-graph__color-legend\">\n      <span>Older</span>\n      <div style={{ display: \"flex\", gap: \"2px\" }}>\n        {colors.map((color, index) => (\n          <div\n            key={index}\n            className=\"coverage-graph__color-legend__square\"\n            style={{ backgroundColor: color }}\n          />\n        ))}\n      </div>\n      <span>Newer</span>\n    </div>\n  )\n}\n\nexport function CoverageGraph({\n  tests,\n  filterString = \"\",\n  workers_after = null,\n  workerViews = [WorkerView.TOGETHER, WorkerView.SEPARATE, WorkerView.LATEST],\n  workerViewSetting,\n}: Props) {\n  let [viewSetting, setWorkerView] = useSetting<WorkerView>(\n    workerViewSetting,\n    WorkerView.TOGETHER,\n  )\n\n  const workers = Set(\n    Array.from(tests.values()).flatMap(test =>\n      Array.from(test.reports_by_worker.values()),\n    ),\n  )\n  const disabled = workers.size == 1\n  // force view setting to be the default WorkerView.TOGETHER if we're disabled, to avoid\n  // confusing people that they can't switch away from the default\n  if (disabled) {\n    viewSetting = WorkerView.TOGETHER\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\" style={{ marginBottom: \"1rem\" }}>\n        Coverage\n      </div>\n      <div\n        style={{\n          display: \"flex\",\n          justifyContent:\n            viewSetting === WorkerView.SEPARATE ? \"space-between\" : \"flex-end\",\n          alignItems: viewSetting === WorkerView.SEPARATE ? \"center\" : \"default\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        {viewSetting === WorkerView.SEPARATE && <ColorLegend />}\n        <span className=\"tooltip\">\n          <Toggle\n            value={viewSetting}\n            onChange={setWorkerView}\n            options={workerViews.map(view => ({\n              value: view,\n              content: workerToggleContent[view].content,\n              mobileContent: workerToggleContent[view].mobileContent,\n            }))}\n            disabled={disabled}\n          />\n          {disabled && (\n            <span className=\"tooltip__text\">\n              Switching worker display mode requires multiple workers\n            </span>\n          )}\n        </span>\n      </div>\n      <div className=\"coverage-graph__container\">\n        <div\n          className=\"coverage-graph__grid\"\n          style={{ marginRight: \"15px\", flex: 1, height: \"auto\" }}\n        >\n          {/* top left */}\n          <LabelY />\n          {/* top right */}\n          <GraphComponent\n            tests={tests}\n            viewSetting={viewSetting}\n            workers_after={workers_after}\n            filterString={filterString}\n          />\n          {/* bottom left */}\n          <div></div>\n          {/* bottom right */}\n          <LabelX />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { TestStatus } from \"src/types/dashboard\"\n\nexport const statusStrings = {\n  [TestStatus.FAILED_FATALLY]: \"Failed fatally\",\n  [TestStatus.FAILED]: \"Failed\",\n  [TestStatus.SHRINKING]: \"Shrinking\",\n  [TestStatus.RUNNING]: \"Running\",\n  [TestStatus.SKIPPED_DYNAMICALLY]: \"Skipped dynamically\",\n  [TestStatus.WAITING]: \"Waiting\",\n}\n\nexport function TestStatusPill({ status }: { status: TestStatus }) {\n  return (\n    <span style={{ textAlign: \"center\" }}>\n      {status === TestStatus.FAILED_FATALLY ? (\n        <span className=\"pill pill__failure\">{statusStrings[status]}</span>\n      ) : status === TestStatus.FAILED ? (\n        <span className=\"pill pill__failure\">{statusStrings[status]}</span>\n      ) : status === TestStatus.SHRINKING ? (\n        <span className=\"pill pill__warning\">{statusStrings[status]}</span>\n      ) : status === TestStatus.RUNNING ? (\n        <span className=\"pill pill__success\">{statusStrings[status]}</span>\n      ) : (\n        <span className=\"pill pill__neutral\">{statusStrings[status]}</span>\n      )}\n    </span>\n  )\n}\n","interface TooltipProps {\n  content: React.ReactNode\n  tooltip: string\n}\n\nexport function Tooltip({ content, tooltip }: TooltipProps) {\n  return (\n    <span className=\"tooltip tooltip--underline\">\n      {content}\n      <div className=\"tooltip__text\">{tooltip}</div>\n    </span>\n  )\n}\n","import { faCheck } from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { ReactNode } from \"react\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { Test } from \"src/types/test\"\n\nexport interface TestStats {\n  inputs: string\n  behaviors: string\n  fingerprints: string\n  executions: string\n  inputsSinceBranch: string\n  timeSpent: string\n  stability: ReactNode\n}\n\nexport function formatTime(t: number): string {\n  const hours = Math.floor(t / 3600)\n  const minutes = Math.floor((t % 3600) / 60)\n  const seconds = Math.floor(t % 60)\n\n  // displays as hh:mm:ss. eg:\n  // 0:53\n  // 6:53\n  // 1:06:53\n  //\n  // only pad minutes to two digits if hours are present\n  return `${hours > 0 ? `${hours}:${minutes.toString().padStart(2, \"0\")}` : minutes}:${seconds.toString().padStart(2, \"0\")}`\n}\n\nexport function inputsPerSecond(test: Test): number | null {\n  const ninputs = test.ninputs(null)\n  const elapsed = test.elapsed_time(null)\n  return elapsed === 0.0 ? null : ninputs / elapsed\n}\n\nfunction formatInputsPerSecond(perSecond: number): string {\n  // toPrecision converts to exponential notation sometimes.\n  // parseFloat gets rid of that.\n  return parseFloat(perSecond.toPrecision(3)).toLocaleString()\n}\n\nfunction formatStability(value: number): string {\n  // we don't have enough confidence for anything beyond the decimal place\n  return (value * 100).toFixed(0)\n}\n\nexport function getTestStats(test: Test): TestStats {\n  if (test.linear_reports.length === 0) {\n    return {\n      inputs: \"—\",\n      behaviors: \"—\",\n      fingerprints: \"—\",\n      executions: \"—\",\n      inputsSinceBranch: \"—\",\n      timeSpent: \"—\",\n      stability: \"—\",\n    }\n  }\n\n  const perSecond = inputsPerSecond(test)\n  return {\n    inputs: test.ninputs(null).toLocaleString(),\n    behaviors: test.behaviors.toLocaleString(),\n    fingerprints: test.fingerprints.toLocaleString(),\n    executions: perSecond === null ? \"—\" : `${formatInputsPerSecond(perSecond)}/s`,\n    inputsSinceBranch: test.since_new_behavior?.toLocaleString() ?? \"—\",\n    timeSpent: formatTime(test.elapsed_time(null)),\n    stability:\n      test.stability === null ? (\n        \"—\"\n      ) : test.stability == 1 ? (\n        <Tooltip\n          content={<FontAwesomeIcon icon={faCheck} />}\n          tooltip={\"100% stability\"}\n        />\n      ) : (\n        `${formatStability(test.stability)}%`\n      ),\n  }\n}\n","import \"highlight.js/styles/github.css\"\n\nimport {\n  faArrowLeft,\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faLocationPinLock,\n  faSeedling,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport hljs from \"highlight.js/lib/core\"\nimport python from \"highlight.js/lib/languages/python\"\nimport { useEffect, useRef, useState } from \"react\"\nimport { Link, useParams } from \"react-router-dom\"\nimport { Collapsible } from \"src/components/Collapsible\"\nimport { CoverageGraph } from \"src/components/graph/CoverageGraph\"\nimport { Table } from \"src/components/Table\"\nimport { TestPatches } from \"src/components/TestPatches\"\nimport { TestStatusPill } from \"src/components/TestStatusPill\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { useData } from \"src/context/DataProvider\"\nimport { Tyche } from \"src/tyche/Tyche\"\nimport { Failure, FatalFailure } from \"src/types/dashboard\"\nimport { Test } from \"src/types/test\"\nimport { fetchAvailablePatches } from \"src/utils/api\"\nimport { getTestStats } from \"src/utils/testStats\"\nimport { reHighlight } from \"src/utils/utils\"\n\nhljs.registerLanguage(\"python\", python)\n\nfunction FailureStatusPill({ failure }: { failure: Failure }) {\n  return (\n    <span style={{ textAlign: \"center\" }}>\n      {failure.state === \"shrunk\" ? (\n        <span className=\"pill pill__neutral\">Fully shrunk</span>\n      ) : failure.state === \"unshrunk\" ? (\n        <span className=\"pill pill__neutral\">Still shrinking...</span>\n      ) : (\n        // this case shouldn't happen\n        <></>\n      )}\n    </span>\n  )\n}\n\nfunction FailureCard({ failure }: { failure: Failure }) {\n  return (\n    <div className=\"card\">\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          gap: \"0.7rem\",\n          marginBottom: \"1rem\",\n        }}\n      >\n        <div className=\"failure__title\">Failure</div>\n        <FailureStatusPill failure={failure} />\n      </div>\n      <div className=\"failure__item\">\n        <div className=\"failure__item__subtitle\">Call</div>\n        <pre>\n          <code className=\"language-python\">\n            {failure.observation.metadata.get(\"reproduction_decorator\") +\n              \"\\n\" +\n              failure.observation.representation}\n          </code>\n        </pre>\n        <div className=\"failure__item__subtitle\">Traceback</div>\n        <pre>\n          <code className=\"language-python\">\n            {failure.observation.metadata.get(\"traceback\")}\n          </code>\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nfunction FatalFailureCard({ failure }: { failure: FatalFailure }) {\n  return (\n    <div className=\"card\">\n      <div className=\"failure__title\">Fatal failure</div>\n      <div className=\"failure__item\">\n        <div className=\"failure__item__subtitle\">Traceback</div>\n        <pre>\n          <code className=\"language-python\" style={{ whiteSpace: \"pre-wrap\" }}>\n            {failure.traceback}\n          </code>\n        </pre>\n      </div>\n    </div>\n  )\n}\n\nexport function TestPage() {\n  const { nodeid } = useParams<{ nodeid: string }>()\n  const { tests } = useData(nodeid)\n  const containerRef = useRef<HTMLDivElement>(null)\n  const [nodeidsWithPatches, setNodeidsWithPatches] = useState<string[] | null>(null)\n\n  useEffect(() => {\n    fetchAvailablePatches().then(data => {\n      setNodeidsWithPatches(data)\n    })\n  }, [])\n\n  const existing = tests.get(nodeid!)\n  // make a new object each time we rerender, or the component will never update.\n  //\n  // I feel like this should be fixed at a more basic level by creating a new Test each\n  // time in DataProvider's getOrCreateTest, but that didn't work. I'm misunderstanding\n  // something in react renders.\n  const test = existing\n    ? new Test(\n        existing.database_key,\n        existing.nodeid,\n        existing.rolling_observations,\n        existing.corpus_observations,\n        existing.failures,\n        existing.fatal_failure,\n        existing.reports_by_worker,\n        existing.stability,\n      )\n    : null\n\n  useEffect(() => {\n    if (test) {\n      reHighlight(containerRef)\n    }\n  }, [test])\n\n  if (!nodeid || !test) {\n    return <div>Test not found</div>\n  }\n\n  const stats = getTestStats(test)\n\n  const headers = [\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faHashtag} />\n            </div>\n          }\n          tooltip=\"Number of inputs\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faCodeBranch} />\n            </div>\n          }\n          tooltip=\"Number of behaviors (typically branches) found\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faFingerprint} />\n            </div>\n          }\n          tooltip=\"Number of fingerprints (sets of behaviors) found\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faTachometerAlt} />\n            </div>\n          }\n          tooltip=\"Inputs per second\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faSeedling} />\n            </div>\n          }\n          tooltip=\"Number of inputs since a new behavior\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faClock} />\n            </div>\n          }\n          tooltip=\"Total time spent running\"\n        />\n      ),\n    },\n    {\n      content: (\n        <Tooltip\n          content={\n            <div className=\"table__header__icon\">\n              <FontAwesomeIcon icon={faLocationPinLock} />\n            </div>\n          }\n          tooltip=\"Coverage stability (percentage of inputs with deterministic coverage when replayed)\"\n        />\n      ),\n    },\n  ]\n\n  return (\n    <div ref={containerRef}>\n      <Link to=\"/\" className=\"back-link\">\n        <FontAwesomeIcon icon={faArrowLeft} /> All tests\n      </Link>\n      <div className=\"card\">\n        <div style={{ display: \"flex\", alignItems: \"center\", gap: \"0.7rem\" }}>\n          <span\n            style={{\n              wordBreak: \"break-all\",\n              fontSize: \"1.5rem\",\n              fontWeight: \"bold\",\n            }}\n          >\n            {nodeid}\n          </span>\n          <TestStatusPill status={test.status} />\n        </div>\n        <div style={{ paddingTop: \"1rem\", paddingBottom: \"1rem\" }}>\n          <Table\n            headers={headers}\n            data={[stats]}\n            row={item => [\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>{item.inputs}</div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.behaviors}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.fingerprints}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.executions}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.inputsSinceBranch}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.timeSpent}\n              </div>,\n              <div style={{ fontVariantNumeric: \"tabular-nums\" }}>\n                {item.stability}\n              </div>,\n            ]}\n          />\n        </div>\n      </div>\n      <CoverageGraph\n        tests={new Map([[nodeid, test]])}\n        workerViewSetting=\"graph_worker_view_test\"\n      />\n      {test.normalFailures.map(failure => (\n        <FailureCard failure={failure} />\n      ))}\n      {test.fatal_failure && <FatalFailureCard failure={test.fatal_failure} />}\n      <Tyche test={test} />\n      {nodeidsWithPatches?.includes(nodeid) && (\n        <div className=\"card\">\n          <Collapsible title=\"Patches\" defaultState=\"closed\" headerClass=\"card__header\">\n            <TestPatches nodeid={nodeid} />\n          </Collapsible>\n        </div>\n      )}\n    </div>\n  )\n}\n","import { IconDefinition } from \"@fortawesome/fontawesome-svg-core\"\nimport {\n  faClock,\n  faCodeBranch,\n  faFingerprint,\n  faHashtag,\n  faLocationPinLock,\n  faSeedling,\n  faTachometerAlt,\n} from \"@fortawesome/free-solid-svg-icons\"\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\"\nimport { Link } from \"react-router-dom\"\nimport { Table } from \"src/components/Table\"\nimport { statusStrings, TestStatusPill } from \"src/components/TestStatusPill\"\nimport { Tooltip } from \"src/components/Tooltip\"\nimport { Test } from \"src/types/test\"\nimport { getTestStats, inputsPerSecond } from \"src/utils/testStats\"\n\nfunction Icon({ icon, tooltip }: { icon: IconDefinition; tooltip: string }) {\n  return (\n    <Tooltip\n      content={\n        <div className=\"table__header__icon\">\n          <FontAwesomeIcon icon={icon} />\n        </div>\n      }\n      tooltip={tooltip}\n    />\n  )\n}\n\nfunction InlineStatistic({\n  icon,\n  value,\n}: {\n  icon: React.ReactNode\n  value: React.ReactNode\n}) {\n  return (\n    <div className=\"table__inline-statistic\">\n      {icon}\n      <span className=\"table__inline-statistic__value\">{value}</span>\n    </div>\n  )\n}\n\ninterface Props {\n  tests: Map<string, Test>\n  onFilterChange?: (filter: string) => void\n}\n\nexport function TestTable({ tests, onFilterChange }: Props) {\n  const sortedTests = Array.from(tests)\n    .sortKey(([nodeid, test]) => {\n      const ninputs = test.ninputs(null)\n      return [test.status, ninputs != null ? -ninputs : -1, nodeid]\n    })\n    .map(([nodeid, test]) => test)\n\n  const iconInputs = <Icon icon={faHashtag} tooltip=\"Number of inputs\" />\n  const iconBehaviors = (\n    <Icon\n      icon={faCodeBranch}\n      tooltip=\"Number of behaviors (typically branches) found\"\n    />\n  )\n  const iconFingerprints = (\n    <Icon\n      icon={faFingerprint}\n      tooltip=\"Number of fingerprints (sets of behaviors) found\"\n    />\n  )\n  const iconExecutions = <Icon icon={faTachometerAlt} tooltip=\"Inputs per second\" />\n  const iconSinceNewBranch = (\n    <Icon icon={faSeedling} tooltip=\"Number of inputs since a new behavior\" />\n  )\n  const iconTimeSpent = <Icon icon={faClock} tooltip=\"Total time spent running\" />\n  const iconStability = (\n    <Icon\n      icon={faLocationPinLock}\n      tooltip=\"Coverage stability (percentage of inputs with deterministic coverage when replayed)\"\n    />\n  )\n\n  const headers = [\n    {\n      content: \"Test\",\n      sortKey: (test: Test) => test.nodeid,\n    },\n    {\n      content: \"Status\",\n      sortKey: (test: Test) => test.status,\n      align: \"center\",\n    },\n    {\n      content: iconInputs,\n      align: \"right\",\n      sortKey: (test: Test) => test.ninputs(null),\n    },\n    {\n      content: iconBehaviors,\n      align: \"right\",\n      sortKey: (test: Test) => test.behaviors,\n    },\n    {\n      content: iconFingerprints,\n      align: \"right\",\n      sortKey: (test: Test) => test.fingerprints,\n    },\n    {\n      content: iconExecutions,\n      align: \"right\",\n      sortKey: (test: Test) => inputsPerSecond(test) ?? -1,\n    },\n    {\n      content: iconSinceNewBranch,\n      align: \"right\",\n      sortKey: (test: Test) => test.since_new_behavior ?? 0,\n    },\n    {\n      content: iconTimeSpent,\n      align: \"right\",\n      sortKey: (test: Test) => test.elapsed_time(null),\n    },\n    {\n      content: iconStability,\n      align: \"right\",\n      sortKey: (test: Test) => test.stability ?? 0,\n    },\n  ]\n\n  const row = (test: Test): React.ReactNode[] => {\n    const stats = getTestStats(test)\n\n    return [\n      <Link\n        to={`/tests/${encodeURIComponent(test.nodeid)}`}\n        className=\"test__link\"\n        style={{ wordBreak: \"break-all\" }}\n      >\n        {test.nodeid}\n      </Link>,\n      <div style={{ textAlign: \"center\" }}>\n        <TestStatusPill status={test.status} />\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.inputs}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.behaviors}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.fingerprints}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.executions}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.inputsSinceBranch}\n      </div>,\n      <div style={{ textAlign: \"right\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.timeSpent}\n      </div>,\n      <div style={{ textAlign: \"center\", fontVariantNumeric: \"tabular-nums\" }}>\n        {stats.stability}\n      </div>,\n    ]\n  }\n\n  function mobileRow(test: Test) {\n    const stats = getTestStats(test)\n\n    return (\n      <div className=\"table__mobile-row\">\n        <div className=\"table__mobile-row__header\">\n          <Link\n            to={`/tests/${encodeURIComponent(test.nodeid)}`}\n            className=\"test__link\"\n            style={{ wordBreak: \"break-all\" }}\n          >\n            {test.nodeid}\n          </Link>\n          <TestStatusPill status={test.status} />\n        </div>\n        <div className=\"table__mobile-row__statistics\">\n          <InlineStatistic icon={iconInputs} value={stats.inputs} />\n          <InlineStatistic icon={iconBehaviors} value={stats.behaviors} />\n          <InlineStatistic icon={iconExecutions} value={stats.executions} />\n          <InlineStatistic icon={iconSinceNewBranch} value={stats.inputsSinceBranch} />\n          <InlineStatistic icon={iconTimeSpent} value={stats.timeSpent} />\n          <InlineStatistic icon={iconStability} value={stats.stability} />\n        </div>\n      </div>\n    )\n  }\n\n  function filterStrings(test: Test) {\n    return [test.nodeid, statusStrings[test.status]]\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Tests</div>\n      <Table\n        headers={headers}\n        data={sortedTests}\n        row={row}\n        mobileRow={mobileRow}\n        // `test` is not guaranteed to have a databse_key set (if e.g.\n        // ADD_REPORTS arrives before ADD_TESTS). Fall back to the default array\n        // index key if it's not set yet.\n        getKey={test => test.database_key ?? undefined}\n        filterStrings={filterStrings}\n        onFilterChange={onFilterChange}\n      />\n    </div>\n  )\n}\n","import { useState } from \"react\"\nimport { CoverageGraph, WorkerView } from \"src/components/graph/CoverageGraph\"\nimport { TestTable } from \"src/components/TestTable\"\nimport { useData } from \"src/context/DataProvider\"\n\nexport function TestsPage() {\n  const { tests } = useData()\n  const [filterString, setFilterString] = useState(\"\")\n\n  return (\n    <div className=\"dashboard\">\n      <CoverageGraph\n        tests={tests}\n        filterString={filterString}\n        workerViews={[WorkerView.TOGETHER, WorkerView.LATEST]}\n        workerViewSetting=\"graph_worker_view_tests\"\n      />\n      <TestTable tests={tests} onFilterChange={setFilterString} />\n    </div>\n  )\n}\n","import { useEffect, useRef, useState } from \"react\"\n\ninterface RangeSliderProps {\n  min: number\n  max: number\n  value: [number, number]\n  onChange: (value: [number, number]) => void\n  step?: number\n}\n\nexport function RangeSlider({ min, max, value, onChange, step = 1 }: RangeSliderProps) {\n  const [dragging, setDragging] = useState<\"min\" | \"max\" | null>(null)\n  const sliderRef = useRef<HTMLDivElement>(null)\n  console.assert(min <= max, `min: ${min} max: ${max}`)\n\n  const [minValue, maxValue] = value\n  const range = max - min\n\n  const minPercent = range === 0 ? 0 : ((minValue - min) / range) * 100\n  const maxPercent = range === 0 ? 100 : ((maxValue - min) / range) * 100\n\n  // ensure that if both are overlapped on the very left (right) edge, the thumb\n  // with room to move right (left) is on top\n  const zIndexMin = minPercent < 50 ? 1 : 2\n  const zIndexMax = maxPercent < 50 ? 2 : 1\n\n  const getValueFromPosition = (clientX: number): number => {\n    if (!sliderRef.current) return min\n\n    const rect = sliderRef.current.getBoundingClientRect()\n    const percent = Math.max(\n      0,\n      Math.min(100, ((clientX - rect.left) / rect.width) * 100),\n    )\n    const rawValue = min + (percent / 100) * range\n\n    // Snap to step\n    const steppedValue = Math.round(rawValue / step) * step\n    return Math.max(min, Math.min(max, steppedValue))\n  }\n\n  const handleMouseDown = (thumb: \"min\" | \"max\") => (event: React.MouseEvent) => {\n    event.preventDefault()\n    setDragging(thumb)\n  }\n\n  const handleMouseMove = (event: MouseEvent) => {\n    if (!dragging) return\n\n    const newValue = getValueFromPosition(event.clientX)\n\n    if (dragging === \"min\") {\n      onChange([Math.min(newValue, maxValue), maxValue])\n    } else {\n      onChange([minValue, Math.max(newValue, minValue)])\n    }\n  }\n\n  const handleMouseUp = () => {\n    setDragging(null)\n  }\n\n  const handleTrackMouseDown = (event: React.MouseEvent) => {\n    if (dragging) return\n\n    const newValue = getValueFromPosition(event.clientX)\n    const minDistance = Math.abs(newValue - minValue)\n    const maxDistance = Math.abs(newValue - maxValue)\n\n    if (minDistance < maxDistance) {\n      onChange([Math.min(newValue, maxValue), maxValue])\n      setDragging(\"min\")\n    } else {\n      onChange([minValue, Math.max(newValue, minValue)])\n      setDragging(\"max\")\n    }\n  }\n\n  useEffect(() => {\n    if (dragging) {\n      document.addEventListener(\"mousemove\", handleMouseMove)\n      document.addEventListener(\"mouseup\", handleMouseUp)\n      return () => {\n        document.removeEventListener(\"mousemove\", handleMouseMove)\n        document.removeEventListener(\"mouseup\", handleMouseUp)\n      }\n    }\n    return () => {}\n  }, [dragging, handleMouseMove, handleMouseUp])\n\n  return (\n    <div className=\"range-slider\">\n      <div className=\"range-slider__container\">\n        <div\n          ref={sliderRef}\n          className=\"range-slider__track\"\n          onMouseDown={handleTrackMouseDown}\n        >\n          <div\n            className=\"range-slider__range\"\n            style={{\n              left: `${minPercent}%`,\n              width: `${maxPercent - minPercent}%`,\n            }}\n          />\n          <div\n            className={`range-slider__thumb range-slider__thumb--min`}\n            style={{\n              left: `${minPercent}%`,\n              zIndex: zIndexMin,\n            }}\n            onMouseDown={handleMouseDown(\"min\")}\n          />\n          <div\n            className={`range-slider__thumb range-slider__thumb--max`}\n            style={{\n              left: `${maxPercent}%`,\n              zIndex: zIndexMax,\n            }}\n            onMouseDown={handleMouseDown(\"max\")}\n          />\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { OrderedSet } from \"immutable\"\nimport React, { useEffect, useState } from \"react\"\nimport { useNavigate } from \"react-router-dom\"\nimport { RangeSlider } from \"src/components/RangeSlider\"\nimport { useData } from \"src/context/DataProvider\"\nimport { formatTime } from \"src/utils/testStats\"\nimport { useTooltip } from \"src/utils/tooltip\"\nimport { navigateOnClick, readableNodeid } from \"src/utils/utils\"\n\ninterface Segment {\n  nodeid: string\n  start: number\n  end: number\n}\n\ninterface WorkerReport {\n  timestamp_monotonic: number\n  nodeid: string\n}\n\nclass Worker {\n  constructor(\n    public uuid: string,\n    public segments: Segment[],\n  ) {}\n\n  visibleSegments(range: [number, number]): Segment[] {\n    return this.segments.filter(\n      segment => segment.end >= range[0] && segment.start <= range[1],\n    )\n  }\n}\n\ninterface TimePeriod {\n  label: string\n  // duration in seconds\n  duration: number | null\n}\n\nconst TIME_PERIODS: TimePeriod[] = [\n  { label: \"Latest\", duration: null },\n  { label: \"1 hour\", duration: 1 * 60 * 60 },\n  { label: \"1 day\", duration: 24 * 60 * 60 },\n  { label: \"7 days\", duration: 7 * 24 * 60 * 60 },\n  { label: \"1 month\", duration: 30 * 24 * 60 * 60 },\n  { label: \"3 months\", duration: 90 * 24 * 60 * 60 },\n]\n\nfunction formatTimestamp(timestamp: number): string {\n  const date = new Date(timestamp * 1000)\n  return date.toLocaleString()\n}\n\n// tolerance for a region, in seconds\nconst REGION_TOLERANCE = 5 * 60\n\nfunction segmentRegions(segments: Segment[]): [number, number][] {\n  // returns a list of [start, end] regions, where a region is defined as the largest\n  // interval where there is no timestamp without an active segment.\n  // so in\n  //\n  // ```\n  //  [--]          [-------]\n  //   [---]  [-]     [------]\n  // [----]   [--]\n  // ```\n  // there are 3 regions.\n\n  // We iterate over the egments in order of start time. We track the latest seen end time.\n  // If we ever see a segment with a later start time than the current end time, that means\n  // there must have been empty space between them, which marks a new region.\n\n  // assert segments are sorted by segment.start\n  console.assert(\n    segments.every(\n      (segment, index) => index === 0 || segment.start >= segments[index - 1].start,\n    ),\n  )\n\n  if (segments.length == 0) {\n    return []\n  }\n\n  let regions: [number, number][] = []\n  let regionStart = segments[0].start\n  let latestEnd = segments[0].end\n  for (const segment of segments) {\n    if (segment.start > latestEnd + REGION_TOLERANCE) {\n      // this marks a new region\n      regions.push([regionStart, latestEnd])\n      regionStart = segment.start\n    }\n\n    latestEnd = Math.max(latestEnd, segment.end)\n  }\n\n  // finalize the current region\n  regions.push([regionStart, latestEnd])\n  return regions\n}\n\nfunction nodeColor(nodeid: string): string {\n  let hash = 0\n  for (let i = 0; i < nodeid.length; i++) {\n    hash = ((hash << 5) - hash + nodeid.charCodeAt(i)) & 0xffffffff\n  }\n\n  const hue = Math.abs(hash) % 360\n  const saturation = 45 + (Math.abs(hash >> 8) % 30) // 45-75%\n  const lightness = 45 + (Math.abs(hash >> 16) % 20) // 45-65%\n\n  return `hsl(${hue}, ${saturation}%, ${lightness}%)`\n}\n\nfunction DetailsItem({ label, value }: { label: string; value: React.ReactNode }) {\n  return (\n    <div className=\"workers__worker__details__item\">\n      <span className=\"workers__worker__details__label\">{label}</span>\n      <span className=\"workers__worker__details__value\">{value}</span>\n    </div>\n  )\n}\n\nconst WorkerBar = ({\n  worker,\n  range,\n  expandedWorkers,\n  onWorkerClick,\n  segmentStyle,\n  navigate,\n  showTooltip,\n  hideTooltip,\n  moveTooltip,\n}: {\n  worker: Worker\n  range: [number, number]\n  expandedWorkers: Set<string>\n  onWorkerClick: (uuid: string) => void\n  segmentStyle: (segment: Segment) => React.CSSProperties\n  navigate: ReturnType<typeof useNavigate>\n  showTooltip: (text: string, x: number, y: number, id: string) => void\n  hideTooltip: (id: string) => void\n  moveTooltip: (x: number, y: number, id: string) => void\n}) => {\n  return (\n    <div\n      key={worker.uuid}\n      className={`workers__worker${expandedWorkers.has(worker.uuid) ? \" workers__worker--expanded\" : \"\"}`}\n      onClick={() => onWorkerClick(worker.uuid)}\n      // these extra onMouseLeave calls shouldn't be necessary, but I've had trouble\n      // with the workers__timeline__segment mouse leave handler not firing consistently\n      onMouseLeave={() => hideTooltip(\"workers\")}\n    >\n      <div className=\"workers__worker__bar\" onMouseLeave={() => hideTooltip(\"workers\")}>\n        {worker.visibleSegments(range).map((segment, index) => (\n          <div\n            key={index}\n            className=\"workers__timeline__segment\"\n            style={segmentStyle(segment)}\n            onClick={event => {\n              navigateOnClick(\n                event,\n                `/tests/${encodeURIComponent(segment.nodeid)}`,\n                navigate,\n              )\n              // prevent the worker click handler from firing (which would distractingly\n              // expand the worker details for this worker during navigation)\n              event.stopPropagation()\n            }}\n            onMouseEnter={event =>\n              showTooltip(\n                readableNodeid(segment.nodeid),\n                event.clientX,\n                event.clientY,\n                \"workers\",\n              )\n            }\n            onMouseLeave={() => hideTooltip(\"workers\")}\n            onMouseMove={event => moveTooltip(event.clientX, event.clientY, \"workers\")}\n          />\n        ))}\n      </div>\n      {expandedWorkers.has(worker.uuid) && <WorkerDetails worker={worker} />}\n    </div>\n  )\n}\n\nconst WorkerDetails = ({ worker }: { worker: Worker }) => {\n  return (\n    <div className=\"workers__worker__details\">\n      <div className=\"workers__worker__details__grid\">\n        <DetailsItem label=\"Worker UUID\" value={worker.uuid} />\n        <DetailsItem\n          label=\"Lifetime\"\n          value={formatTime(\n            worker.segments[worker.segments.length - 1].end - worker.segments[0].start,\n          )}\n        />\n        <DetailsItem\n          label=\"Started\"\n          value={formatTimestamp(worker.segments[0].start)}\n        />\n        <DetailsItem\n          label=\"Last seen\"\n          value={formatTimestamp(worker.segments[worker.segments.length - 1].end)}\n        />\n      </div>\n    </div>\n  )\n}\n\nexport function WorkersPage() {\n  const { tests } = useData()\n  const navigate = useNavigate()\n  const { showTooltip, hideTooltip, moveTooltip } = useTooltip()\n  const [expandedWorkers, setExpandedWorkers] = useState<Set<string>>(new Set())\n  const [selectedPeriod, setSelectedPeriod] = useState<TimePeriod>(TIME_PERIODS[0])\n  const [userRange, setUserRange] = useState<[number, number] | null>(null)\n\n  const workerUuids = OrderedSet(\n    Array.from(tests.values())\n      .map(test => Array.from(test.reports_by_worker.keys()))\n      .flat()\n      .sortKey(uuid => uuid),\n  )\n\n  const workerReports = new Map<string, WorkerReport[]>()\n  workerUuids.forEach(uuid => {\n    const allReports: WorkerReport[] = []\n    workerReports.set(uuid, allReports)\n    Array.from(tests.values()).forEach(test => {\n      if (!test.reports_by_worker.has(uuid)) {\n        return\n      }\n\n      const reports = test.reports_by_worker.get(uuid)!\n      allReports.push(\n        ...reports.map(report => ({\n          timestamp_monotonic: report.timestamp_monotonic!,\n          nodeid: test.nodeid,\n        })),\n      )\n    })\n\n    allReports.sortKey(report => report.timestamp_monotonic)\n  })\n\n  let minTimestamp: number = Infinity\n  let maxTimestamp: number = -Infinity\n\n  let workers: Worker[] = []\n  workerUuids.forEach(uuid => {\n    const reports = workerReports.get(uuid)!\n    const segments: Segment[] = []\n    let currentSegment: Segment | null = null\n\n    reports.forEach((report, index) => {\n      minTimestamp = Math.min(minTimestamp, report.timestamp_monotonic)\n      maxTimestamp = Math.max(maxTimestamp, report.timestamp_monotonic)\n\n      if (!currentSegment || currentSegment.nodeid !== report.nodeid) {\n        // flush the current segment\n        if (currentSegment) {\n          segments.push(currentSegment)\n        }\n        currentSegment = {\n          nodeid: report.nodeid,\n          start: report.timestamp_monotonic,\n          end: report.timestamp_monotonic,\n        }\n      } else {\n        // extend the current segment\n        currentSegment.end = report.timestamp_monotonic\n      }\n\n      // if this is the last report, flush the segment\n      if (index === reports.length - 1 && currentSegment) {\n        segments.push(currentSegment)\n      }\n    })\n\n    workers.push(new Worker(uuid, segments))\n  })\n\n  workers.sortKey(worker => worker.segments[0].start)\n  const segments = workers\n    .flatMap(worker => worker.segments)\n    .sortKey(segment => segment.start)\n  const regions = segmentRegions(segments)\n\n  const span = maxTimestamp - minTimestamp\n  // find the first time period which is larger than the span of the workers.\n  // that time period is available, but anything after is not.\n  const firstLargerPeriod = TIME_PERIODS.findIndex(\n    period => period.duration !== null && period.duration >= span,\n  )\n\n  function getSliderRange(): [number, number] {\n    if (selectedPeriod.duration === null) {\n      const latestRegion = regions[regions.length - 1]\n      // the range is just the last region, unless there are no segments, in which case\n      // we use the min/max timestamp\n      return regions.length > 0\n        ? [latestRegion[0], latestRegion[1]]\n        : [minTimestamp, maxTimestamp]\n    }\n\n    const range: [number, number] = [\n      Math.max(minTimestamp, maxTimestamp - selectedPeriod.duration!),\n      maxTimestamp,\n    ]\n\n    // trim the slider range to remove any time at the beginning or end when there\n    // are no active workers\n    let trimmedMin: number | null = null\n    let trimmedMax: number | null = null\n    for (const worker of workers) {\n      const visibleSegments = worker.visibleSegments(range)\n      if (visibleSegments.length === 0) {\n        continue\n      }\n\n      if (trimmedMin === null || visibleSegments[0].start < trimmedMin) {\n        trimmedMin = visibleSegments[0].start\n      }\n\n      if (\n        trimmedMax === null ||\n        visibleSegments[visibleSegments.length - 1].end > trimmedMax\n      ) {\n        trimmedMax = visibleSegments[visibleSegments.length - 1].end\n      }\n    }\n\n    return [trimmedMin ?? range[0], trimmedMax ?? range[1]]\n  }\n  const sliderRange = getSliderRange()\n  const visibleRange = userRange ?? sliderRange\n\n  useEffect(() => {\n    setUserRange(null)\n  }, [selectedPeriod])\n\n  const [visibleMin, visibleMax] = visibleRange\n  const visibleDuration = visibleMax - visibleMin\n\n  const segmentStyle = (segment: Segment) => {\n    let left: number\n    let width: number\n    if (visibleDuration === 0) {\n      left = 0\n      width = 100\n    } else {\n      left = ((segment.start - visibleMin) / visibleDuration) * 100\n      width = ((segment.end - segment.start) / visibleDuration) * 100\n    }\n\n    // TODO we should compute a min in pixels, not percentage.\n    width = Math.max(width, 0.1)\n\n    return {\n      left: `${left}%`,\n      width: `${width}%`,\n      backgroundColor: nodeColor(segment.nodeid),\n    }\n  }\n\n  const onWorkerClick = (uuid: string) => {\n    setExpandedWorkers(prev => {\n      const newSet = new Set(prev)\n      if (newSet.has(uuid)) {\n        newSet.delete(uuid)\n      } else {\n        newSet.add(uuid)\n      }\n      return newSet\n    })\n  }\n\n  return (\n    <div className=\"card\">\n      <div className=\"card__header\">Workers </div>\n      <div className=\"card__body\">\n        <div className=\"card__text\">\n          <div className=\"card__text__paragraph\">\n            This page shows the history of your workers, and what tests they have been\n            fuzzing.\n          </div>\n          <div className=\"card__text__paragraph\">\n            Roughly speaking, \"one worker\" = \"one CPU core\".\n          </div>\n        </div>\n        <div className=\"workers\">\n          <div className=\"workers__controls\">\n            <div className=\"workers__durations\">\n              {TIME_PERIODS.map((period, index) => {\n                const available = index <= firstLargerPeriod\n                return (\n                  <div\n                    key={index}\n                    className={`workers__durations__button ${\n                      selectedPeriod.label === period.label\n                        ? \"workers__durations__button--active\"\n                        : \"\"\n                    } ${!available ? \"workers__durations__button--disabled\" : \"\"}`}\n                    onClick={() => {\n                      if (!available) {\n                        return\n                      }\n                      setSelectedPeriod(period)\n                      // reset the range when clicking on a period, even if it's the same period. This gives a\n                      // nice \"reset button\" ux to users.\n                      setUserRange(null)\n                    }}\n                  >\n                    {period.label}\n                  </div>\n                )\n              })}\n            </div>\n            <RangeSlider\n              min={sliderRange[0]}\n              max={sliderRange[1]}\n              value={visibleRange}\n              onChange={newRange => setUserRange(newRange)}\n              step={(sliderRange[1] - sliderRange[0]) / 1000}\n            />\n          </div>\n          <div className=\"workers__timeline-header\">\n            <span className=\"workers__timeline-header__label\">\n              {formatTimestamp(visibleMin)}\n            </span>\n            <span className=\"workers__timeline-header__label\">\n              {formatTimestamp(visibleMax)}\n            </span>\n          </div>\n          {workers.map(\n            worker =>\n              worker.visibleSegments(visibleRange).length > 0 && (\n                <WorkerBar\n                  key={worker.uuid}\n                  worker={worker}\n                  range={visibleRange}\n                  expandedWorkers={expandedWorkers}\n                  onWorkerClick={onWorkerClick}\n                  segmentStyle={segmentStyle}\n                  navigate={navigate}\n                  showTooltip={showTooltip}\n                  hideTooltip={hideTooltip}\n                  moveTooltip={moveTooltip}\n                />\n              ),\n          )}\n        </div>\n      </div>\n    </div>\n  )\n}\n","import { BrowserRouter, HashRouter, Route, Routes } from \"react-router-dom\"\nimport { DataProvider } from \"src/context/DataProvider\"\nimport { NotificationProvider } from \"src/context/NotificationProvider\"\nimport { Layout } from \"src/Layout\"\nimport { CollectionStatusPage } from \"src/pages/CollectionStatus\"\nimport { NotFoundPage } from \"src/pages/NotFound\"\nimport { PatchesPage } from \"src/pages/Patches\"\nimport { TestPage } from \"src/pages/Test\"\nimport { TestsPage } from \"src/pages/Tests\"\nimport { WorkersPage } from \"src/pages/Workers\"\nimport { TooltipProvider } from \"src/utils/tooltip\"\n\nexport function App() {\n  const Router =\n    import.meta.env.VITE_ROUTER_TYPE === \"hash\" ? HashRouter : BrowserRouter\n\n  return (\n    <Router>\n      <NotificationProvider>\n        <DataProvider>\n          <TooltipProvider>\n            <Routes>\n              <Route element={<Layout />}>\n                <Route path=\"/\" element={<TestsPage />} />\n                <Route path=\"/patches\" element={<PatchesPage />} />\n                <Route path=\"/collected\" element={<CollectionStatusPage />} />\n                <Route path=\"/workers\" element={<WorkersPage />} />\n                <Route path=\"/tests/:nodeid\" element={<TestPage />} />\n                <Route path=\"*\" element={<NotFoundPage />} />\n              </Route>\n            </Routes>\n          </TooltipProvider>\n        </DataProvider>\n      </NotificationProvider>\n    </Router>\n  )\n}\n","import \"src/styles/styles.scss\"\n// ensure our array prototype definitions get loaded\nimport \"src/utils/prototypes\"\n\nimport React from \"react\"\nimport ReactDOM from \"react-dom/client\"\nimport { App } from \"src/App\"\n\nReactDOM.createRoot(document.getElementById(\"app\")!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)\n"],"names":["REACT_ELEMENT_TYPE","REACT_FRAGMENT_TYPE","jsxProd","type","config","maybeKey","key","propName","reactJsxRuntime_production","jsxRuntimeModule","require$$0","Array","prototype","sortKey","sort","a","b","keyA","keyB","isArray","i","Math","min","length","ReactSharedInternals","reactCompilerRuntime_production","size","compilerRuntimeModule","Notification","t0","$","_c","message","onDismiss","isVisible","shouldRender","setShouldRender","useState","t1","t2","timer","setTimeout","clearTimeout","useEffect","t3","t4","jsx","t5","e","stopPropagation","t6","Symbol","for","FontAwesomeIcon","faXmark","t7","t8","jsxs","NotificationContext","createContext","NotificationProvider","children","notifications","setNotifications","Map","timers","useRef","idCounter","id","current","get","delete","prev","filter","n","dismissNotification","duration","id_0","notification","prev_0","set","addNotification","id_1","message_0","duration_0","map","timer_0","updateNotification","notification_1","index","top","t9","useNotification","context","useContext","Error","useIsMobile","isMobile","setIsMobile","checkIfMobile","window","matchMedia","matches","addEventListener","removeEventListener","Toggle","value","onChange","options","disabled","undefined","assert","Set","_temp","option","otherValue","find","o_0","o","mobileContent","content","String","Filter","constructor","name","valueName","predicate","extraData","createdAt","Date","now","FilterContext","FilterProvider","filtersByObsType","setFiltersByKey","observationCategory","setObservationCategory","filters","newFilters","newMap","setFilters","newFilters_0","filteredFilters","f","removeFilter","useFilters","TooltipContext","TooltipPortal","state","visible","x","y","position","left","display","pointerEvents","zIndex","__html","createPortal","document","body","TooltipProvider","location","useLocation","owner","tooltipState","setTooltipState","pathname","showTooltip","owner_0","hideTooltip","x_0","y_0","owner_1","prev_1","moveTooltip","contextValue","useTooltip","sum","values","start","from","reduce","total","val","reHighlight","containerRef","force","querySelectorAll","forEach","element","removeAttribute","hljs","highlightElement","max","array","maxElement","maxValue","minValue","bisectRight","arr","low","high","mid","measureContainer","getMeasureContainer","createElement","style","cssText","appendChild","measureText","text","className","container","textContent","rect","getBoundingClientRect","width","height","navigateOnClick","event","url","navigate","metaKey","ctrlKey","resolvedUrl","origin","open","readableNodeid","nodeid","split","pop","d3","select","d3_select","scaleLinear","d3_scaleLinear","scaleOrdinal","d3_scaleOrdinal","scaleBand","d3_scaleBand","axisBottom","d3_axisBottom","axisLeft","d3_axisLeft","Feature","getValue","observation","features","UserFeature","isSystem","SystemFeature","HORIZONTAL_BAR_FEATURE_CUTOFF","SELECTION_STROKE_WIDTH","NominalChart","feature","observations","parentRef","svgRef","nominalFilters","selectedValues","getSelectedValues","raw","filtered","_temp2","filteredObservations","newSelection","equals","first","_temp3","join","nominalFilters_0","push","some","obs","onValueClick","distinctRawValues","data","value_2","entries","_temp4","selectAll","remove","clientWidth","svg","attr","append","showTooltipHandler","d","label","count","clientX","clientY","margin","right","bottom","innerWidth","innerHeight","domain","range","colorScale","has","PRESENT_STRING","NOT_PRESENT_STRING","TYCHE_COLOR","PRIMARY","ACCENT","ACCENT2","ACCENT3","ACCENT4","g","xAccumulator","barHeight","count_0","value_4","barWidth","isSelected","on","event_0","call","tickFormat","_temp6","margin_0","innerWidth_0","innerHeight_0","keys","padding","g_0","enter","value_5","count_1","bandwidth","t10","count_2","event_2","t11","value_6","event_3","d_1","t12","value_7","t13","value_8","t14","count_3","t15","count_4","ticks","_temp7","faGear","d_2","round","Number","toString","d_0","_temp5","feature_0","SUCCESS","ERROR","value_3","value_0","obs_0","status","Collapsible","title","defaultState","onStateChange","headerClass","contentClass","setState","newState","toggleState","faCaretDown","faCaretRight","TycheSection","STABILITY_FEATURE_KEY","Features","T0","bb0","featureNames","startsWith","add","feature_1","stability","Filters","allFilters","flat","filter_0","python","regex","IDENT_RE","RESERVED_WORDS","KEYWORDS","PROMPT","SUBST","LITERAL_BRACKET","STRING","digitpart","pointfloat","lookahead","NUMBER","COMMENT_TYPE","PARAMS","Pagination","currentPage","pageCount","onPageChange","getPageNumbers","pageNumbers","page","handlePageClick","handlePrevious","handleNext","faArrowLeftLong","page_0","isCurrentPage","faArrowRightLong","_","registerLanguage","perPage","Representation","observationType","observationsDivRef","setPage","rawRepresentations","repr","representation","ceil","representations","slice","requestAnimationFrame","justifyContent","marginBottom","marginTop","rep_0","MAX_MOSAIC_WIDTH","MosaicChart","verticalAxis","horizontalAxis","cssStyle","row","column","getSelectedCells","mosaicFilters","selectedCells","cells","rowTotals","fill","columnTotals","grandTotal","j","widthPercent","verticalPredicate","horizontalPredicate","visibleRows","visibleCols","onCellClick","rowIndex","colIndex","cell","List","colIdx","rowIdx","filterName","remainingCells","canonicalNames","axes","rowIndex_0","colIndex_2","axis","every","subtract","col","toArray","cell_2","rowHeaderWidth","columnHeaderHeight","rowTotalWidth","minCellWidth","minCellHeight","totalHeight","rowHeights","columnHeaderPositions","cellContainerWidth","rowIndex_6","rowCells","adjustedWidths","totalAdjustedWidth","maxWidth","marginLeft","marginRight","isFirst","isLast","transform","textAlign","rowDisplayIndex","cursor","colIndex_8","tooltipContent","minWidth","minHeight","Samples","cellStyle","backgroundColor","WARNING","opacity","obs_2","isDuplicate","obs_1","isUnique","ACCENT5","TycheInner","test","corpus_observations","rolling_observations","rawObservations","observation_0","paddingTop","paddingBottom","fontSize","fontWeight","Fragment","run_start","Tyche","SKIP_EXCEPTIONS","Dataclass","withProperties","props","Object","assign","create","Failure","fromJson","Observation","StatusCounts","counts","Status","statuses","newStatuses","newStatusCounts","Phase","GENERATE","REPLAY","DISTILL","SHRINK","FAILED","Report","elapsed_time","timestamp","status_counts","behaviors","fingerprints","since_new_behavior","phase","worker_uuid","status_counts_diff","elapsed_time_diff","timestamp_monotonic","ninputs","status_reason","arguments_","how_generated","timing","metadata","property","arguments","TestStatus","FAILED_FATALLY","SHRINKING","RUNNING","SKIPPED_DYNAMICALLY","WAITING","report_with_diff","report","last_worker_report","last_status_counts","last_elapsed_time","console","Test","database_key","failures","fatal_failure","reports_by_worker","linear_reports","_status_counts_cumsum","_elapsed_time_cumsum","load_finished_at","reports_by_worker_","sorted_reports","flatMap","reports","_worker_uuid","add_report","_check_invariants","_assert_reports_ordered","linear_status_counts","linear_elapsed_time","last_report_worker","reports_index","r","linear_report","splice","next_worker_report","i_offset","report_candidate","cache","start_idx","normalFailures","failure","exception","includes","skipFailures","latest","getTime","WAITING_STATUS_DURATION","since","elapsed_times","_cumsum","initial","cumsum","running","__publicField","_Test","DataContext","prepareObservations","reprCounts","_value","testsReducer","action","getOrCreateTest","DashboardEventType","tests","interesting_origin","observation_type","DataProvider","socket","setSocket","dispatch","useReducer","loadData","setLoadData","setNodeid","count_tests","count_tests_loaded","loadingStatus","setLoadingStatus","nodeid_0","doLoadData","testsLoaded","clear","fetch","then","nodeid_1","testData","worker","Worker","text_0","Promise","resolve","onmessage","postMessage","data_0","nodeid_2","test_0","rolling","corpus","terminate","response_0","response","JSON","parse","useData","SidebarLink","to","icon","isActive","Link","Layout","sidebarOpen","setSidebarOpen","sidebarRef","listener","contains","target","faBars","faCode","faCodeCompare","faBox","faUser","import","replace","faBookOpen","Outlet","t16","pathname_2","pathname_1","pathname_0","Table","headers","mobileRow","getKey","onFilterChange","filterStrings","sortColumn","setSortColumn","sortDirection","setSortDirection","SortOrder","filterString","setFilterString","displayData","item","checkString","toLowerCase","sorted","reverse","getDisplayData","handleHeaderClick","doFilterChange","displayData_0","faTimes","item_1","header","index_0","align","order","faArrowUp","faArrowDown","item_2","rowValue","fetchData","endpoint","URL","json","fetchPatches","patches","fetchAvailablePatches","available_patches","fetchCollectionStatus","collection_status","statusOrder","not_collected","collected","CollectionStatusPage","collectionStatus","setCollectionStatus","sortedResults","item_3","wordBreak","encodeURIComponent","item_0","result","NotFoundPage","diff","TestPatches","setPatches","loading","setLoading","patchType","setPatchType","copySuccess","setCopySuccess","handleCopy","handleDownload","patch_0","patchNames","activePatch","navigator","clipboard","writeText","patch","blob","Blob","createObjectURL","href","download","click","removeChild","revokeObjectURL","faCheck","faCopy","t17","t18","faDownload","t19","t20","t21","t22","t23","PatchesPage","nodeids","setNodeids","alignItems","faArrowRight","formatTick","floor","toLocaleString","getTicks","baseScale","viewportScale","tickCount","zoomState","orientation","visibleDomain","invert","scaleX","offset","Axis","isHorizontal","x1","y1","x2","y2","tick","tickX","tickY","labelX","labelY","DataLines","lines","viewportXScale","viewportYScale","xValue","yValue","lineGenerator","d3_line","line","pathData","color","GraphReport","fromReport","settingCallbacks","useSetting","defaultValue","saved","sessionStorage","getItem","_setValue","newValue","setItem","stringify","callback","setValue","identityZoomState","getConstrainedTransform","bounds","baseX","baseY","constrained","xMin","xMax","xRange","rangeStart","rangeEnd","leftVisibleValue","rightVisibleValue","yMin","yMax","yRange","rangeTop","rangeBottom","useScales","scaleSetting","scaleSettingY","axisSettingX","axisSettingY","d3_scaleSymlog","constrainedTransform","originalXRange","viewportX","copy","viewportY","defaultZoomState","useZoom","minScale","maxScale","wheelSensitivity","onZoomEnd","onDragEnd","setTransformState","isDragging","lastPointer","animationRef","isZooming","wheelEventCount","wheelTimeoutRef","cancelAnimationFrame","cancelAnimation","newTransform","setTransform","startTransform","startTime","performance","interpolateX","interpolate","interpolateY","interpolateScaleX","animate","currentTime","elapsed","progress","eased","pow","newTransform_0","resetZoom","handleWheel","mouseX","abs","deltaX","deltaY","scaleFactor","newScale","wouldZoom","preventDefault","scaleRatio","constrainedTransform_0","passive","button","handleMouseMove","handleMouseUp","onMouseDown","event_1","onDoubleClick","GRAPH_HEIGHT","zoomIdentity","d3_zoomIdentity","interpolateViridis","d3_interpolateViridis","interpolateRgb","d3_interpolateRgb","schemeCategory10","d3_schemeCategory10","graphLines","viewSetting","workers_after","reportsColor","WorkerView","graphReports","timeColor","timestamps","timeColorScale","normalized","minTimestamp","maxTimestamp","workerReports","recentReports","TOGETHER","SEPARATE","LATEST","linearStatusCounts","linearElapsedTime","LogLinearToggle","LabelX","scale","setScale","setAxis","flexDirection","gap","faHashtag","faClock","LabelY","faCodeBranch","faFingerprint","workerToggleContent","faUsers","faCircleDot","GRAPH_MARGIN","QUADTREE_SAMPLE_INTERVAL","DISTANCE_THRESHOLD","sampleLinePoints","scales","points","totalLength","segmentLength","sqrt","numSamples","targetDistance","currentDistance","segmentT","GraphComponent","quadtreeRef","scaleSettingX","setScaleSettingX","setScaleSettingY","setAxisSettingX","setAxisSettingY","useNavigate","tooltip","containerWidth","setContainerWidth","activeNodeid","setActiveNodeid","scalesRef","useMemo","filteredLines","activeLine","line_0","resizeObserver","ResizeObserver","entry","contentRect","observe","disconnect","graphWidth","graphHeight","allReports","rebuildQuadtree","sampledPoints","quadtree","addAll","zoom","userSelect","currentTarget","mouseY","closestPoint","closestReport","minDistance","Infinity","reportX","reportY","distance","behaviors_s","fingerprints_s","inputs_s","seconds_s","toFixed","ColorLegend","colors","CoverageGraph","workerViews","workerViewSetting","setWorkerView","flex","view","statusStrings","TestStatusPill","Tooltip","formatTime","t","hours","minutes","seconds","padStart","inputsPerSecond","formatInputsPerSecond","perSecond","parseFloat","toPrecision","formatStability","getTestStats","inputs","executions","inputsSinceBranch","timeSpent","FailureStatusPill","FailureCard","FatalFailureCard","whiteSpace","traceback","TestPage","useParams","nodeidsWithPatches","setNodeidsWithPatches","existing","stats","faTachometerAlt","faSeedling","faLocationPinLock","faArrowLeft","t24","t25","t26","t27","t28","fontVariantNumeric","Icon","InlineStatistic","TestTable","sortedTests","iconInputs","iconBehaviors","iconFingerprints","iconExecutions","iconSinceNewBranch","iconTimeSpent","iconStability","_temp8","_temp9","_temp0","_temp1","_temp10","test_11","stats_0","test_12","_temp11","test_13","test_10","test_9","test_8","test_7","test_6","test_5","test_4","test_3","test_2","test_1","TestsPage","RangeSlider","step","dragging","setDragging","sliderRef","minPercent","maxPercent","zIndexMin","zIndexMax","percent","rawValue","steppedValue","getValueFromPosition","thumb","handleMouseDown","newValue_0","maxDistance","handleTrackMouseDown","Worker$1","uuid","segments","visibleSegments","segment","end","TIME_PERIODS","formatTimestamp","REGION_TOLERANCE","segmentRegions","regions","regionStart","latestEnd","nodeColor","hash","charCodeAt","hue","saturation","lightness","DetailsItem","WorkerBar","expandedWorkers","onWorkerClick","segmentStyle","WorkerDetails","WorkersPage","setExpandedWorkers","selectedPeriod","setSelectedPeriod","userRange","setUserRange","workerUuids","OrderedSet","uuid_0","workers","uuid_1","reports_0","currentSegment","report_1","segments_0","span","period","firstLargerPeriod","findIndex","sliderRange","latestRegion","trimmedMin","trimmedMax","worker_1","visibleRange","visibleMin","visibleMax","visibleDuration","segment_0","uuid_2","newSet","period_0","available","newRange","worker_0","report_0","App","Router","HashRouter","Route","Routes","ReactDOM","createRoot","getElementById","render","React"],"mappings":"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ACA,QACA,WACA,MACA,cACA,UACA,UACA,UACA,OACA,MACA,SACA,YACA,OACA,OACA,SACA,QACA,SACA,YACA,UACA,UACA,UACA,OACA,OACA,MACA,KACA,QACA,MACA,aACA,aACA,OACA,MACA,OACA,SACA,MACA,MACA,aACA,MACA,OACA,SACA,MACA,OACA,MACA,MACA,QACA,WACA,QACA,OACA,WACA,QACA,MACA,UACA,QACA,SACA,eACA,MACA,MACA,QACA,QACA,OACA,OACA,KACD,EAkCC,QAhCe,CACf,YACA,WACA,QACA,OACA,iBACA,MACD,EA0BC,KArBY,CACZ,MACA,WACA,YACA,OACA,OACA,UACA,UACA,WACA,WACA,MACA,QACA,OACA,OACD,CAQA,EAEKE,EAAS,CACb,UAAW,OACX,MAAO,gBACR,EAEKC,EAAQ,CACZ,UAAW,QACX,MAAO,KACP,IAAK,KACL,SAAUF,EACV,QAAS,GACV,EAEKG,EAAkB,CACtB,MAAO,OACP,UAAW,CACZ,EAEKC,EAAS,CACb,UAAW,SACX,SAAU,CAAE5M,EAAK,gBAAkB,EACnC,SAAU,CACR,CACE,MAAO,yCACP,IAAK,MACL,SAAU,CACRA,EAAK,iBACLyM,CACD,EACD,UAAW,EACZ,EACD,CACE,MAAO,yCACP,IAAK,MACL,SAAU,CACRzM,EAAK,iBACLyM,CACD,EACD,UAAW,EACZ,EACD,CACE,MAAO,8BACP,IAAK,MACL,SAAU,CACRzM,EAAK,iBACLyM,EACAE,EACAD,CACV,CACO,EACD,CACE,MAAO,8BACP,IAAK,MACL,SAAU,CACR1M,EAAK,iBACLyM,EACAE,EACAD,CACV,CACO,EACD,CACE,MAAO,eACP,IAAK,IACL,UAAW,EACZ,EACD,CACE,MAAO,eACP,IAAK,IACL,UAAW,EACZ,EACD,CACE,MAAO,4BACP,IAAK,GACN,EACD,CACE,MAAO,4BACP,IAAK,GACN,EACD,CACE,MAAO,4BACP,IAAK,IACL,SAAU,CACR1M,EAAK,iBACL2M,EACAD,CACV,CACO,EACD,CACE,MAAO,4BACP,IAAK,IACL,SAAU,C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","x_google_ignoreList":[0,1,3,4,17,31]}