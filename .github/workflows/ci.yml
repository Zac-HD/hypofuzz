name: HypoFuzz CI/CD

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  check:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Set up Node 20
      uses: actions/setup-node@v4
      with:
        node-version: '20'
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools tox
        npm ci --prefix src/hypofuzz/frontend
    - name: Run checks
      run: |
        python -m tox --recreate -e check
        git diff --exit-code
        npm run format:check --prefix src/hypofuzz/frontend

  docs:
    # whitelist preview build authors as an extra layer of security. We don't expect this to matter in practice,
    # since the GITHUB_TOKEN in PRs from forks don't get the write permission, so they can't commit to the gh-pages
    # branch.
    if: >
      github.repository == 'Zac-HD/hypofuzz' && (
        github.ref == 'refs/heads/master' ||
        (
          github.event_name == 'pull_request' && (
            github.event.pull_request.user.login == 'tybug' ||
            github.event.pull_request.user.login == 'Zac-HD'
          )
        )
      )
    permissions:
      # required to push to gh-pages branch
      contents: write
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip setuptools tox
        npm ci --prefix src/hypofuzz/frontend
    - name: Set $BASE envvar
      run: |
        if [[ "${{ github.event_name }}" == "pull_request" ]]; then
          echo "BASE=/preview-${{ github.event.pull_request.number }}" >> $GITHUB_ENV
        else
          echo "BASE=/" >> $GITHUB_ENV
        fi
    - name: Build docs
      run: |
        if [[ "${BASE}" != "/" ]]; then
          cp -r docs/ $RUNNER_TEMP
          mkdir -p docs/${BASE}
          cp -r $RUNNER_TEMP/docs/* docs/${BASE}
          rm -rf $RUNNER_TEMP/docs
        fi

        HYPOFUZZ_DOCS_OUTPUT_DIR=docs/${BASE}/docs python -m tox --recreate -e docs
        # avoid committing this large (~2mb) and unnecessary dir to git
        rm -rf docs/${BASE}/docs/.doctrees
        VITE_ROUTER_TYPE=hash npm run build --prefix src/hypofuzz/frontend -- --base=${BASE%/}/example-dashboard

        rm -rf docs/${BASE}/example-dashboard
        mkdir -p docs/${BASE}/example-dashboard
        cp -r src/hypofuzz/frontend/dist/* docs/${BASE}/example-dashboard
        cp docs-src/dashboard_state.json docs/${BASE}/example-dashboard/assets/dashboard_state.json
    - name: Commit website update
      run: |
        mkdir $RUNNER_TEMP/hypofuzz_site
        cp -r docs/${BASE}/* $RUNNER_TEMP/hypofuzz_site
        git reset --hard && git clean -xfd

        git fetch --all
        git switch -c gh-pages origin/gh-pages

        # avoid wiping preview directories on master
        if [[ "${BASE}" = "/" ]]; then
          find docs/${BASE} -mindepth 1 -maxdepth 1 -not -name "preview-*" -exec rm -rf {} +
        fi
        mkdir -p docs/${BASE}
        cp -r $RUNNER_TEMP/hypofuzz_site/* docs/${BASE}
        touch docs/.nojekyll
        git add --force docs/${BASE}

        git config --local user.email "action@github.com"
        git config --local user.name "GitHub Action"
        git commit -m "build docs (base=${BASE})" --allow-empty
        git push

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.9", "3.10", "3.11", "3.12", "3.13"]
        toxenv: ["test", "pytest7"]
      fail-fast: false
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install dependencies
      run: python -m pip install --upgrade pip setuptools tox
    - name: Run tests
      run: python -m tox --recreate -e ${{ matrix.toxenv }}

  release:
    runs-on: ubuntu-latest
    needs: [check, docs, test]
    if: github.repository == 'Zac-HD/hypofuzz' &&  github.ref == 'refs/heads/master'
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python 3.11
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install tools
      run: python -m pip install --upgrade pip setuptools wheel twine build
    - name: Upload new release
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
      run: |
        python -m build
        twine upload --skip-existing dist/*
