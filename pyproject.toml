[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "hypofuzz"
# see [tool.setuptools.dynamic]
dynamic = ["version"]
description = "Adaptive fuzzing for property-based tests"
readme = "README.md"
# https://github.com/pypa/packaging-problems/issues/870#issuecomment-2628078056
# license = "AGPL-3.0"
requires-python = ">=3.9"
authors = [
    {name = "Zac Hatfield-Dodds", email = "zac@hypofuzz.com"}
]
keywords = ["python", "testing", "fuzzing", "property-based-testing"]

dependencies = [
    "black>=23.3.0",
    "coverage>=5.2.1",
    "hypothesis[cli,watchdog]>=6.127.2",
    "libcst>=1.0.0", # for hypothesis.extra._patching
    "psutil>=3.0.0",
    "pytest>=6.0.1",
    "starlette",
    "trio",
    "hypercorn",
]

classifiers = [
    "Development Status :: 3 - Alpha",
    "Framework :: Hypothesis",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: GNU Affero General Public License v3",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Programming Language :: Python :: 3.13",
    "Topic :: Software Development :: Testing",
    "Typing :: Typed",
]

[project.urls]
documentation = "https://hypofuzz.com/docs/"
changelog = "https://hypofuzz.com/docs/changelog.html"


[project.optional-dependencies]
pytrace = [
    "pycrunch-trace>=0.1.6",
]

[project.entry-points.hypothesis]
"_" = "hypofuzz.entrypoint"

[tool.setuptools.package-data]
hypofuzz = [
    # including /dist, for bdist. ideally we wouldn't include /dist in sdist because we epxect
    # that to be build from source anyway, but I think such a rule requires MANIFEST.in.
    "frontend/**/*",
]

[tool.setuptools.exclude-package-data]
hypofuzz = [
    "frontend/node_modules/**/*"
]

[tool.setuptools.dynamic]
version = {attr = "hypofuzz.__version__"}

[tool.setuptools.cmdclass]
"build_py" = "hypofuzz.build.HypofuzzBuildPy"
"editable_wheel" = "hypofuzz.build.HypofuzzEditableWheel"

[tool.ruff.lint]
select = [
    "ASYNC",  # flake8-async
    "B",      # flake8-bugbear
    "C4",     # flake8-comprehensions
    "COM",    # flake8-commas
    "DJ",     # flake8-django
    "E",      # pycodestyle
    "F",      # Pyflakes
    "FBT",    # flake8-boolean-trap
    "FLY",    # flynt
    "G",      # flake8-logging-format
    "INT",    # flake8-gettext
    "ISC",    # flake8-implicit-str-concat
    "NPY",    # NumPy-specific rules
    "PD",     # pandas-vet
    "PIE",    # flake8-pie
    "PLE",    # Pylint errors
    "PT",     # flake8-pytest-style
    "RET504", # flake8-return
    "RSE",    # flake8-raise
    "SIM",    # flake8-simplify
    "T10",    # flake8-debugger
    "TID",    # flake8-tidy-imports
    "UP",     # pyupgrade
    "W",      # pycodestyle
    "YTT",    # flake8-2020
    "RUF",    # Ruff-specific rules
]
ignore = [
    "B008",
    "B018",
    "C408",
    "COM812",
    "DJ007",
    "DJ008",
    "E721",
    "E731",
    "E741",
    "FBT003",
    "PD011",
    "PD901",
    "PIE790",  # See https://github.com/astral-sh/ruff/issues/10538
    "PT001",
    "PT003",
    "PT006",
    "PT007",
    "PT009",
    "PT011",
    "PT012",
    "PT013",
    "PT017",
    "PT019",
    "PT023",
    "PT027",
    "RUF017",
    "SIM102",
    "SIM105",
    "SIM108",
    "SIM114",
    "SIM117",
    "SIM300",
    "UP031",
    "UP037",
]

[tool.mypy]
python_version = "3.10"
platform = "linux"
allow_redefinition = true
disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
follow_imports = "silent"
ignore_missing_imports = true
implicit_reexport = false
warn_no_return = true
warn_return_any = true
warn_unused_ignores = true
warn_unused_configs = true
warn_redundant_casts = true
